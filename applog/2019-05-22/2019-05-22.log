2019-05-22 08:56:36 -Starting BootdoApplication on PC-201905091110 with PID 15164 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-22 08:56:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-22 08:56:36 -The following profiles are active: dev
2019-05-22 08:56:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 08:56:37 CST 2019]; root of context hierarchy
2019-05-22 08:56:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-22 08:56:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 08:56:52 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 08:56:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 08:56:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 08:56:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 08:56:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-22 08:56:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-22 08:56:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 08:56:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 08:56:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 08:56:55 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 08:56:57 -Tomcat initialized with port(s): 8081 (http)
2019-05-22 08:56:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-22 08:56:57 -Starting service [Tomcat]
2019-05-22 08:56:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-22 08:56:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-22 08:56:57 -Initializing Spring embedded WebApplicationContext
2019-05-22 08:56:57 -Root WebApplicationContext: initialization completed in 20570 ms
2019-05-22 08:56:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-22 08:56:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-22 08:56:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-22 08:56:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-22 08:56:58 -Filter xssFilter was not registered (disabled)
2019-05-22 08:56:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-22 08:56:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-22 08:56:58 -Servlet statViewServlet mapped to [/druid/*]
2019-05-22 08:56:58 -Servlet dispatcherServlet mapped to [/]
2019-05-22 08:57:06 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 08:56:37 CST 2019]; root of context hierarchy
2019-05-22 08:57:07 -Using default implementation for ThreadExecutor
2019-05-22 08:57:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-22 08:57:07 -Quartz Scheduler v.2.2.1 created.
2019-05-22 08:57:07 -RAMJobStore initialized.
2019-05-22 08:57:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-22 08:57:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-22 08:57:07 -Quartz scheduler version: 2.2.1
2019-05-22 08:57:07 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@8077c97
2019-05-22 08:57:09 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-22 08:57:09 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-22 08:57:13 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-22 08:57:14 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 08:57:14 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-22 08:57:14 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 08:57:14 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-22 08:57:14 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-22 08:57:14 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 08:57:14 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-22 08:57:14 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-22 08:57:14 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 08:57:14 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-22 08:57:14 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 08:57:14 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 08:57:14 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-22 08:57:14 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 08:57:14 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-22 08:57:14 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 08:57:14 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-22 08:57:14 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 08:57:14 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-22 08:57:14 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 08:57:14 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-22 08:57:14 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 08:57:14 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-22 08:57:14 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-22 08:57:14 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-22 08:57:14 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-22 08:57:14 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-22 08:57:14 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-22 08:57:14 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-22 08:57:14 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-22 08:57:14 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-22 08:57:14 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-22 08:57:14 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-22 08:57:14 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-22 08:57:14 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-22 08:57:14 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-22 08:57:14 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 08:57:14 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-22 08:57:14 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 08:57:14 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-22 08:57:14 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-22 08:57:14 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-22 08:57:14 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-22 08:57:14 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-22 08:57:14 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-22 08:57:14 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-22 08:57:14 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-22 08:57:14 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-22 08:57:14 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-22 08:57:14 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-22 08:57:14 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-22 08:57:14 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-22 08:57:14 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 08:57:14 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-22 08:57:14 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-22 08:57:14 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-22 08:57:14 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-22 08:57:14 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-22 08:57:14 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-22 08:57:14 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-22 08:57:14 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-22 08:57:14 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-22 08:57:14 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-22 08:57:14 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-22 08:57:14 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-22 08:57:14 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-22 08:57:14 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 08:57:14 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-22 08:57:14 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-22 08:57:14 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 08:57:14 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 08:57:14 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-22 08:57:14 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 08:57:14 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-22 08:57:14 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-22 08:57:14 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 08:57:14 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 08:57:14 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 08:57:14 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-22 08:57:14 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-22 08:57:14 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-22 08:57:14 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-22 08:57:14 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-22 08:57:14 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-22 08:57:14 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 08:57:14 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-22 08:57:14 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-22 08:57:14 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-22 08:57:14 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-22 08:57:14 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-22 08:57:14 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-22 08:57:14 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-22 08:57:14 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-22 08:57:14 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-22 08:57:14 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-22 08:57:14 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-22 08:57:14 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-22 08:57:14 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-22 08:57:14 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-22 08:57:14 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-22 08:57:14 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-22 08:57:14 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-22 08:57:14 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-22 08:57:14 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-22 08:57:14 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 08:57:14 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-22 08:57:14 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-22 08:57:14 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-22 08:57:14 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-22 08:57:14 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-22 08:57:14 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-22 08:57:14 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-22 08:57:14 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-22 08:57:14 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-22 08:57:14 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-22 08:57:14 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-22 08:57:14 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-22 08:57:14 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-22 08:57:14 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-22 08:57:14 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-22 08:57:14 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-22 08:57:14 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-22 08:57:14 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 08:57:14 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-22 08:57:14 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 08:57:14 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 08:57:14 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-22 08:57:14 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-22 08:57:14 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-22 08:57:14 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-22 08:57:14 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-22 08:57:14 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-22 08:57:14 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 08:57:14 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-22 08:57:14 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-22 08:57:14 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-22 08:57:14 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 08:57:14 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 08:57:14 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 08:57:14 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-22 08:57:14 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 08:57:14 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 08:57:14 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-22 08:57:14 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 08:57:14 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-22 08:57:14 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 08:57:14 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-22 08:57:14 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-22 08:57:14 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-22 08:57:15 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-22 08:57:15 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-22 08:57:15 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-22 08:57:16 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 08:57:16 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 08:56:37 CST 2019]; root of context hierarchy
2019-05-22 08:57:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 08:57:16 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 08:57:16 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 08:57:17 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-22 08:57:17 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-22 08:57:20 -Registering beans for JMX exposure on startup
2019-05-22 08:57:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-22 08:57:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-22 08:57:20 -Starting beans in phase 2147483647
2019-05-22 08:57:20 -Context refreshed
2019-05-22 08:57:20 -Found 1 custom documentation plugin(s)
2019-05-22 08:57:20 -Scanning for api listing references
2019-05-22 08:57:21 -Generating unique operation named: getCountDUsingPOST_1
2019-05-22 08:57:21 -Generating unique operation named: removeUsingPOST_1
2019-05-22 08:57:21 -Generating unique operation named: addUsingGET_1
2019-05-22 08:57:21 -Generating unique operation named: editUsingGET_1
2019-05-22 08:57:21 -Generating unique operation named: listUsingGET_1
2019-05-22 08:57:21 -Generating unique operation named: removeUsingPOST_2
2019-05-22 08:57:21 -Generating unique operation named: removeUsingPOST_3
2019-05-22 08:57:21 -Generating unique operation named: saveUsingPOST_1
2019-05-22 08:57:21 -Generating unique operation named: updateUsingGET_1
2019-05-22 08:57:21 -Generating unique operation named: updateUsingHEAD_1
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPOST_1
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPUT_1
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPATCH_1
2019-05-22 08:57:21 -Generating unique operation named: updateUsingDELETE_1
2019-05-22 08:57:21 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-22 08:57:21 -Generating unique operation named: updateUsingTRACE_1
2019-05-22 08:57:21 -Generating unique operation named: addUsingGET_2
2019-05-22 08:57:21 -Generating unique operation named: editUsingGET_2
2019-05-22 08:57:21 -Generating unique operation named: listUsingGET_2
2019-05-22 08:57:21 -Generating unique operation named: removeUsingPOST_4
2019-05-22 08:57:21 -Generating unique operation named: removeUsingPOST_5
2019-05-22 08:57:21 -Generating unique operation named: saveUsingPOST_2
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPOST_2
2019-05-22 08:57:21 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-22 08:57:21 -Generating unique operation named: addUsingGET_3
2019-05-22 08:57:21 -Generating unique operation named: editUsingGET_3
2019-05-22 08:57:21 -Generating unique operation named: listUsingGET_3
2019-05-22 08:57:21 -Generating unique operation named: removeUsingPOST_6
2019-05-22 08:57:21 -Generating unique operation named: removeUsingPOST_7
2019-05-22 08:57:21 -Generating unique operation named: saveUsingPOST_3
2019-05-22 08:57:21 -Generating unique operation named: updateUsingGET_2
2019-05-22 08:57:21 -Generating unique operation named: updateUsingHEAD_2
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPOST_3
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPUT_2
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPATCH_2
2019-05-22 08:57:21 -Generating unique operation named: updateUsingDELETE_2
2019-05-22 08:57:21 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-22 08:57:21 -Generating unique operation named: updateUsingTRACE_2
2019-05-22 08:57:21 -Generating unique operation named: addUsingGET_4
2019-05-22 08:57:21 -Generating unique operation named: editUsingGET_4
2019-05-22 08:57:21 -Generating unique operation named: listUsingGET_4
2019-05-22 08:57:21 -Generating unique operation named: removeUsingPOST_8
2019-05-22 08:57:21 -Generating unique operation named: removeUsingPOST_9
2019-05-22 08:57:21 -Generating unique operation named: saveUsingPOST_4
2019-05-22 08:57:21 -Generating unique operation named: updateUsingGET_3
2019-05-22 08:57:21 -Generating unique operation named: updateUsingHEAD_3
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPOST_4
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPUT_3
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPATCH_3
2019-05-22 08:57:21 -Generating unique operation named: updateUsingDELETE_3
2019-05-22 08:57:21 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-22 08:57:21 -Generating unique operation named: updateUsingTRACE_3
2019-05-22 08:57:21 -Generating unique operation named: ElecUsingGET_1
2019-05-22 08:57:21 -Generating unique operation named: addUsingGET_5
2019-05-22 08:57:21 -Generating unique operation named: editUsingGET_5
2019-05-22 08:57:21 -Generating unique operation named: listUsingGET_5
2019-05-22 08:57:21 -Generating unique operation named: removeUsingPOST_10
2019-05-22 08:57:21 -Generating unique operation named: removeUsingPOST_11
2019-05-22 08:57:21 -Generating unique operation named: saveUsingPOST_5
2019-05-22 08:57:21 -Generating unique operation named: updateUsingGET_4
2019-05-22 08:57:21 -Generating unique operation named: updateUsingHEAD_4
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPOST_5
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPUT_4
2019-05-22 08:57:21 -Generating unique operation named: updateUsingPATCH_4
2019-05-22 08:57:22 -Generating unique operation named: updateUsingDELETE_4
2019-05-22 08:57:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-22 08:57:22 -Generating unique operation named: updateUsingTRACE_4
2019-05-22 08:57:22 -Generating unique operation named: editUsingGET_6
2019-05-22 08:57:22 -Generating unique operation named: listUsingGET_6
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPOST_6
2019-05-22 08:57:22 -Generating unique operation named: addUsingGET_6
2019-05-22 08:57:22 -Generating unique operation named: editUsingGET_7
2019-05-22 08:57:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-22 08:57:22 -Generating unique operation named: listUsingGET_7
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_12
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_13
2019-05-22 08:57:22 -Generating unique operation named: saveUsingPOST_6
2019-05-22 08:57:22 -Generating unique operation named: updateUsingGET_5
2019-05-22 08:57:22 -Generating unique operation named: updateUsingHEAD_5
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPOST_7
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPUT_5
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPATCH_5
2019-05-22 08:57:22 -Generating unique operation named: updateUsingDELETE_5
2019-05-22 08:57:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-22 08:57:22 -Generating unique operation named: updateUsingTRACE_5
2019-05-22 08:57:22 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-22 08:57:22 -Generating unique operation named: addUsingGET_7
2019-05-22 08:57:22 -Generating unique operation named: editUsingGET_8
2019-05-22 08:57:22 -Generating unique operation named: listUsingGET_8
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_14
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_15
2019-05-22 08:57:22 -Generating unique operation named: saveUsingPOST_7
2019-05-22 08:57:22 -Generating unique operation named: updateUsingGET_6
2019-05-22 08:57:22 -Generating unique operation named: updateUsingHEAD_6
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPOST_8
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPUT_6
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPATCH_6
2019-05-22 08:57:22 -Generating unique operation named: updateUsingDELETE_6
2019-05-22 08:57:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-22 08:57:22 -Generating unique operation named: updateUsingTRACE_6
2019-05-22 08:57:22 -Generating unique operation named: addUsingGET_8
2019-05-22 08:57:22 -Generating unique operation named: editUsingGET_9
2019-05-22 08:57:22 -Generating unique operation named: listUsingGET_9
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_16
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_17
2019-05-22 08:57:22 -Generating unique operation named: saveUsingPOST_8
2019-05-22 08:57:22 -Generating unique operation named: updateUsingGET_7
2019-05-22 08:57:22 -Generating unique operation named: updateUsingHEAD_7
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPOST_9
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPUT_7
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPATCH_7
2019-05-22 08:57:22 -Generating unique operation named: updateUsingDELETE_7
2019-05-22 08:57:22 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-22 08:57:22 -Generating unique operation named: updateUsingTRACE_7
2019-05-22 08:57:22 -Generating unique operation named: addUsingGET_9
2019-05-22 08:57:22 -Generating unique operation named: editUsingGET_10
2019-05-22 08:57:22 -Generating unique operation named: infoUsingGET_1
2019-05-22 08:57:22 -Generating unique operation named: infoUsingHEAD_1
2019-05-22 08:57:22 -Generating unique operation named: infoUsingPOST_1
2019-05-22 08:57:22 -Generating unique operation named: infoUsingPUT_1
2019-05-22 08:57:22 -Generating unique operation named: infoUsingPATCH_1
2019-05-22 08:57:22 -Generating unique operation named: infoUsingDELETE_1
2019-05-22 08:57:22 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-22 08:57:22 -Generating unique operation named: infoUsingTRACE_1
2019-05-22 08:57:22 -Generating unique operation named: listUsingGET_10
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_18
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_19
2019-05-22 08:57:22 -Generating unique operation named: saveUsingPOST_9
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPOST_10
2019-05-22 08:57:22 -Generating unique operation named: listUsingGET_11
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_20
2019-05-22 08:57:22 -Generating unique operation named: welcomeUsingGET_1
2019-05-22 08:57:22 -Generating unique operation named: addUsingGET_10
2019-05-22 08:57:22 -Generating unique operation named: editUsingGET_11
2019-05-22 08:57:22 -Generating unique operation named: listUsingGET_12
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_21
2019-05-22 08:57:22 -Generating unique operation named: saveUsingPOST_10
2019-05-22 08:57:22 -Generating unique operation named: treeUsingGET_1
2019-05-22 08:57:22 -Generating unique operation named: treeUsingGET_2
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPOST_11
2019-05-22 08:57:22 -Generating unique operation named: editUsingGET_12
2019-05-22 08:57:22 -Generating unique operation named: addUsingGET_11
2019-05-22 08:57:22 -Generating unique operation named: editUsingGET_13
2019-05-22 08:57:22 -Generating unique operation named: listUsingGET_13
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_22
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_23
2019-05-22 08:57:22 -Generating unique operation named: saveUsingPOST_11
2019-05-22 08:57:22 -Generating unique operation named: updateUsingGET_8
2019-05-22 08:57:22 -Generating unique operation named: updateUsingHEAD_8
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPOST_12
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPUT_8
2019-05-22 08:57:22 -Generating unique operation named: updateUsingPATCH_8
2019-05-22 08:57:22 -Generating unique operation named: updateUsingDELETE_8
2019-05-22 08:57:22 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-22 08:57:22 -Generating unique operation named: updateUsingTRACE_8
2019-05-22 08:57:22 -Generating unique operation named: addUsingGET_12
2019-05-22 08:57:22 -Generating unique operation named: editUsingGET_14
2019-05-22 08:57:22 -Generating unique operation named: listUsingGET_14
2019-05-22 08:57:22 -Generating unique operation named: removeUsingPOST_24
2019-05-22 08:57:23 -Generating unique operation named: removeUsingPOST_25
2019-05-22 08:57:23 -Generating unique operation named: saveUsingPOST_12
2019-05-22 08:57:23 -Generating unique operation named: updateUsingGET_9
2019-05-22 08:57:23 -Generating unique operation named: updateUsingHEAD_9
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPOST_13
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPUT_9
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPATCH_9
2019-05-22 08:57:23 -Generating unique operation named: updateUsingDELETE_9
2019-05-22 08:57:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-22 08:57:23 -Generating unique operation named: updateUsingTRACE_9
2019-05-22 08:57:23 -Generating unique operation named: addUsingGET_13
2019-05-22 08:57:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-22 08:57:23 -Generating unique operation named: editUsingGET_15
2019-05-22 08:57:23 -Generating unique operation named: listUsingGET_15
2019-05-22 08:57:23 -Generating unique operation named: saveUsingPOST_13
2019-05-22 08:57:23 -Generating unique operation named: saveUsingPOST_14
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPOST_14
2019-05-22 08:57:23 -Generating unique operation named: listUsingGET_16
2019-05-22 08:57:23 -Generating unique operation named: listUsingHEAD_1
2019-05-22 08:57:23 -Generating unique operation named: listUsingPOST_1
2019-05-22 08:57:23 -Generating unique operation named: listUsingPUT_1
2019-05-22 08:57:23 -Generating unique operation named: listUsingPATCH_1
2019-05-22 08:57:23 -Generating unique operation named: listUsingDELETE_1
2019-05-22 08:57:23 -Generating unique operation named: listUsingOPTIONS_1
2019-05-22 08:57:23 -Generating unique operation named: listUsingTRACE_1
2019-05-22 08:57:23 -Generating unique operation named: countDDUsingGET_1
2019-05-22 08:57:23 -Generating unique operation named: exportDDUsingGET_1
2019-05-22 08:57:23 -Generating unique operation named: addUsingGET_14
2019-05-22 08:57:23 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-22 08:57:23 -Generating unique operation named: editUsingGET_16
2019-05-22 08:57:23 -Generating unique operation named: listUsingGET_17
2019-05-22 08:57:23 -Generating unique operation named: removeUsingPOST_26
2019-05-22 08:57:23 -Generating unique operation named: saveUsingPOST_15
2019-05-22 08:57:23 -Generating unique operation named: treeUsingGET_3
2019-05-22 08:57:23 -Generating unique operation named: treeViewUsingGET_1
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPOST_15
2019-05-22 08:57:23 -Generating unique operation named: addUsingGET_15
2019-05-22 08:57:23 -Generating unique operation named: editUsingGET_17
2019-05-22 08:57:23 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-22 08:57:23 -Generating unique operation named: listUsingGET_18
2019-05-22 08:57:23 -Generating unique operation named: removeUsingPOST_27
2019-05-22 08:57:23 -Generating unique operation named: removeUsingPOST_28
2019-05-22 08:57:23 -Generating unique operation named: saveUsingPOST_16
2019-05-22 08:57:23 -Generating unique operation named: updateUsingGET_10
2019-05-22 08:57:23 -Generating unique operation named: updateUsingHEAD_10
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPOST_16
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPUT_10
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPATCH_10
2019-05-22 08:57:23 -Generating unique operation named: updateUsingDELETE_10
2019-05-22 08:57:23 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-22 08:57:23 -Generating unique operation named: updateUsingTRACE_10
2019-05-22 08:57:23 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-22 08:57:23 -Generating unique operation named: addUsingGET_16
2019-05-22 08:57:23 -Generating unique operation named: editUsingGET_18
2019-05-22 08:57:23 -Generating unique operation named: listUsingGET_19
2019-05-22 08:57:23 -Generating unique operation named: removeUsingPOST_29
2019-05-22 08:57:23 -Generating unique operation named: removeUsingPOST_30
2019-05-22 08:57:23 -Generating unique operation named: saveUsingPOST_17
2019-05-22 08:57:23 -Generating unique operation named: updateUsingGET_11
2019-05-22 08:57:23 -Generating unique operation named: updateUsingHEAD_11
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPOST_17
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPUT_11
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPATCH_11
2019-05-22 08:57:23 -Generating unique operation named: updateUsingDELETE_11
2019-05-22 08:57:23 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-22 08:57:23 -Generating unique operation named: updateUsingTRACE_11
2019-05-22 08:57:23 -Generating unique operation named: addUsingGET_17
2019-05-22 08:57:23 -Generating unique operation named: editUsingGET_19
2019-05-22 08:57:23 -Generating unique operation named: listUsingGET_20
2019-05-22 08:57:23 -Generating unique operation named: removeUsingPOST_31
2019-05-22 08:57:23 -Generating unique operation named: removeUsingPOST_32
2019-05-22 08:57:23 -Generating unique operation named: saveUsingPOST_18
2019-05-22 08:57:23 -Generating unique operation named: updateUsingGET_12
2019-05-22 08:57:23 -Generating unique operation named: updateUsingHEAD_12
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPOST_18
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPUT_12
2019-05-22 08:57:23 -Generating unique operation named: updateUsingPATCH_12
2019-05-22 08:57:23 -Generating unique operation named: updateUsingDELETE_12
2019-05-22 08:57:23 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-22 08:57:23 -Generating unique operation named: updateUsingTRACE_12
2019-05-22 08:57:23 -Starting Quartz Scheduler now
2019-05-22 08:57:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-22 08:57:23 -Starting...
2019-05-22 08:57:23 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-22 08:57:23 -Started.
2019-05-22 08:57:23 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-22 08:57:24 -Using a shared selector for servlet write/read
2019-05-22 08:57:24 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-22 08:57:24 -Started BootdoApplication in 52.487 seconds (JVM running for 57.809)
2019-05-22 08:57:24 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-22 08:57:25 -==> Parameters: 
2019-05-22 08:57:25 -<==      Total: 1
2019-05-22 08:58:15 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-22 08:58:35 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-22 08:58:35 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-22 08:58:35 -FrameworkServlet 'dispatcherServlet': initialization completed in 187 ms
2019-05-22 08:58:35 -Enabling session validation scheduler...
2019-05-22 08:58:36 -请求地址 : http://localhost:8081/login;JSESSIONID=9273ca43-fc59-40b2-9664-0b392a67bfc5
2019-05-22 08:58:36 -HTTP METHOD : GET
2019-05-22 08:58:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 08:58:36 -参数 : [{}]
2019-05-22 08:58:36 -耗时 : 4
2019-05-22 08:58:36 -返回值 : login
2019-05-22 08:58:40 -请求地址 : http://localhost:8081/getVerify
2019-05-22 08:58:40 -HTTP METHOD : GET
2019-05-22 08:58:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 08:58:40 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7ed3fb32, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3bd17a8c]
2019-05-22 08:58:54 -8645
2019-05-22 08:58:56 -耗时 : 16102
2019-05-22 08:58:56 -返回值 : null
2019-05-22 09:00:35 -请求地址 : http://localhost:8081/login
2019-05-22 09:00:35 -HTTP METHOD : POST
2019-05-22 09:00:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 09:00:35 -参数 : [admin, 111111, 8645, org.apache.shiro.web.servlet.ShiroHttpServletRequest@33f7ae53]
2019-05-22 09:00:35 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 09:00:35 -==> Parameters: admin(String)
2019-05-22 09:00:36 -<==      Total: 1
2019-05-22 09:00:36 -耗时 : 900
2019-05-22 09:00:36 -返回值 : {msg=操作成功, code=0}
2019-05-22 09:00:36 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-22 09:00:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 09:00:36 -==> Parameters: 1(Long), admin(String), 登录(String), 900(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 09:00:36.677(Timestamp)
2019-05-22 09:00:37 -请求地址 : http://localhost:8081/index
2019-05-22 09:00:37 -HTTP METHOD : GET
2019-05-22 09:00:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 09:00:37 -参数 : [{}]
2019-05-22 09:00:37 -<==    Updates: 1
2019-05-22 09:00:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 09:00:37 -==> Parameters: 1(Long)
2019-05-22 09:00:38 -<==      Total: 49
2019-05-22 09:00:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 09:00:38 -==> Parameters: 138(Long)
2019-05-22 09:00:38 -<==      Total: 1
2019-05-22 09:00:38 -耗时 : 1143
2019-05-22 09:00:38 -返回值 : index_v1
2019-05-22 09:00:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 09:00:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1143(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 09:00:38.392(Timestamp)
2019-05-22 09:00:38 -<==    Updates: 1
2019-05-22 09:00:39 -请求地址 : http://localhost:8081/main
2019-05-22 09:00:39 -HTTP METHOD : GET
2019-05-22 09:00:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 09:00:39 -参数 : []
2019-05-22 09:00:39 -耗时 : 1
2019-05-22 09:00:39 -返回值 : main
2019-05-22 09:00:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 09:00:41 -HTTP METHOD : GET
2019-05-22 09:00:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 09:00:41 -参数 : []
2019-05-22 09:00:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 09:00:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 09:00:41 -请求地址 : http://localhost:8081/main
2019-05-22 09:00:41 -HTTP METHOD : GET
2019-05-22 09:00:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 09:00:41 -参数 : []
2019-05-22 09:00:41 -耗时 : 0
2019-05-22 09:00:41 -返回值 : main
2019-05-22 09:00:42 -<==      Total: 0
2019-05-22 09:00:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 09:00:42 -==> Parameters: 1(Long), 0(String)
2019-05-22 09:00:42 -<==      Total: 1
2019-05-22 09:00:42 -耗时 : 347
2019-05-22 09:00:42 -返回值 : com.bootdo.common.utils.PageUtils@1a9287e7
2019-05-22 09:00:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 09:00:49 -==> Parameters: 1(Long)
2019-05-22 09:00:50 -<==      Total: 93
2019-05-22 09:00:50 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-22 09:00:50 -HTTP METHOD : GET
2019-05-22 09:00:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-22 09:00:50 -参数 : []
2019-05-22 09:00:50 -耗时 : 0
2019-05-22 09:00:50 -返回值 : /moneyList/moneyList
2019-05-22 09:01:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:01:06 -HTTP METHOD : GET
2019-05-22 09:01:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:01:06 -参数 : []
2019-05-22 09:01:06 -耗时 : 0
2019-05-22 09:01:06 -返回值 : system/dept/deptTree
2019-05-22 09:01:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:01:06 -HTTP METHOD : GET
2019-05-22 09:01:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:01:06 -参数 : []
2019-05-22 09:01:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:01:06 -==> Parameters: 
2019-05-22 09:01:06 -<==      Total: 3
2019-05-22 09:01:06 -耗时 : 80
2019-05-22 09:01:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:01:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-22 09:01:10 -HTTP METHOD : POST
2019-05-22 09:01:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-22 09:01:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1990bb0c]
2019-05-22 09:01:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-22 09:01:10 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-22 09:01:11 -<==      Total: 3
2019-05-22 09:01:11 -耗时 : 624
2019-05-22 09:01:11 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@48443a09, com.bootdo.moneyList.damain.MoneyListDO@b1ec5b0, com.bootdo.moneyList.damain.MoneyListDO@521ea8c9]
2019-05-22 09:01:21 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-22 09:01:21 -HTTP METHOD : POST
2019-05-22 09:01:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-22 09:01:21 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@44197ba1]
2019-05-22 09:01:21 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-22 09:01:21 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-22 09:01:21 -<==      Total: 3
2019-05-22 09:01:21 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-22 09:01:21 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-22 09:01:21 -<==      Total: 0
2019-05-22 09:01:21 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-22 09:01:21 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-22 09:01:21 -<==      Total: 1
2019-05-22 09:01:21 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-22 09:01:21 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-22 09:01:21 -<==      Total: 1
2019-05-22 09:01:21 -==>  Preparing: update water set water_sum = water_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-22 09:01:21 -==> Parameters: 1(String), A(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-22 09:01:21 -<==    Updates: 1
2019-05-22 09:01:21 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 09:01:21 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-22 09:01:21.178(Timestamp), 2019-03(String), 1(Long), 2019-05-22 09:01:21.178(Timestamp), 1(Long), null
2019-05-22 09:01:21 -<==    Updates: 1
2019-05-22 09:01:21 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 09:01:21 -==> Parameters: 1-0001(String), 姜海龙(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), -74.00(BigDecimal), null, 6.30(BigDecimal), null, 22.00(BigDecimal), 1(BigDecimal), 0(String), null, null, 2019-03(String), 1(Long), 2019-05-22 09:01:21.194(Timestamp), 1(Long), null
2019-05-22 09:01:21 -<==    Updates: 1
2019-05-22 09:01:21 -耗时 : 475
2019-05-22 09:01:21 -返回值 : 2
2019-05-22 09:01:22 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-22 09:01:22 -HTTP METHOD : POST
2019-05-22 09:01:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-22 09:01:22 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@769e9ef4]
2019-05-22 09:01:22 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-22 09:01:22 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-22 09:01:22 -<==      Total: 3
2019-05-22 09:01:22 -耗时 : 6
2019-05-22 09:01:22 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2320fe12, com.bootdo.moneyList.damain.MoneyListDO@21cbadbc, com.bootdo.moneyList.damain.MoneyListDO@6f075f12]
2019-05-22 09:01:41 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-22 09:01:41 -HTTP METHOD : GET
2019-05-22 09:01:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-22 09:01:41 -参数 : []
2019-05-22 09:01:41 -耗时 : 1
2019-05-22 09:01:41 -返回值 : /moneyLog/elecLog/elecLog
2019-05-22 09:01:41 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 09:01:41 -HTTP METHOD : GET
2019-05-22 09:01:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:01:41 -参数 : [elecType]
2019-05-22 09:01:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:01:41 -HTTP METHOD : GET
2019-05-22 09:01:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:01:41 -参数 : [userType]
2019-05-22 09:01:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:01:41 -==> Parameters: userType(String)
2019-05-22 09:01:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:01:41 -==> Parameters: elecType(String)
2019-05-22 09:01:41 -<==      Total: 4
2019-05-22 09:01:41 -耗时 : 58
2019-05-22 09:01:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:01:41 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:01:41 -HTTP METHOD : GET
2019-05-22 09:01:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:01:41 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 09:01:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 09:01:41 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:01:41 -<==      Total: 11
2019-05-22 09:01:41 -耗时 : 111
2019-05-22 09:01:41 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:01:41 -<==      Total: 10
2019-05-22 09:01:41 -==>  Preparing: select count(*) from elec_log 
2019-05-22 09:01:41 -==> Parameters: 
2019-05-22 09:01:41 -<==      Total: 1
2019-05-22 09:01:41 -耗时 : 116
2019-05-22 09:01:41 -返回值 : com.bootdo.common.utils.PageUtils@2611a497
2019-05-22 09:01:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:01:50 -HTTP METHOD : GET
2019-05-22 09:01:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:01:50 -参数 : []
2019-05-22 09:01:50 -耗时 : 2
2019-05-22 09:01:50 -返回值 : system/dept/deptTree
2019-05-22 09:01:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:01:51 -HTTP METHOD : GET
2019-05-22 09:01:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:01:51 -参数 : []
2019-05-22 09:01:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:01:51 -==> Parameters: 
2019-05-22 09:01:51 -<==      Total: 3
2019-05-22 09:01:51 -耗时 : 3
2019-05-22 09:01:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:01:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:01:54 -HTTP METHOD : GET
2019-05-22 09:01:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:01:54 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:01:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-05-22 09:01:54 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-05-22 09:01:54 -<==      Total: 10
2019-05-22 09:01:54 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-05-22 09:01:54 -==> Parameters: 2(String)
2019-05-22 09:01:54 -<==      Total: 1
2019-05-22 09:01:54 -耗时 : 61
2019-05-22 09:01:54 -返回值 : com.bootdo.common.utils.PageUtils@3fb4d2a9
2019-05-22 09:01:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:01:55 -HTTP METHOD : GET
2019-05-22 09:01:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:01:55 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:01:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-05-22 09:01:55 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-05-22 09:01:55 -<==      Total: 10
2019-05-22 09:01:55 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-05-22 09:01:55 -==> Parameters: 2(String)
2019-05-22 09:01:55 -<==      Total: 1
2019-05-22 09:01:55 -耗时 : 9
2019-05-22 09:01:55 -返回值 : com.bootdo.common.utils.PageUtils@6bc34616
2019-05-22 09:01:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:01:55 -HTTP METHOD : GET
2019-05-22 09:01:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:01:55 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:01:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-05-22 09:01:55 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-05-22 09:01:55 -<==      Total: 10
2019-05-22 09:01:55 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-05-22 09:01:55 -==> Parameters: 2(String)
2019-05-22 09:01:55 -<==      Total: 1
2019-05-22 09:01:55 -耗时 : 11
2019-05-22 09:01:55 -返回值 : com.bootdo.common.utils.PageUtils@6396abf2
2019-05-22 09:02:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:02:01 -HTTP METHOD : GET
2019-05-22 09:02:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:02:01 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:02:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:01 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:01 -<==      Total: 10
2019-05-22 09:02:01 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-05-22 09:02:01 -==> Parameters: 2(String)
2019-05-22 09:02:01 -<==      Total: 1
2019-05-22 09:02:01 -耗时 : 11
2019-05-22 09:02:01 -返回值 : com.bootdo.common.utils.PageUtils@899f3ce
2019-05-22 09:02:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:02:02 -HTTP METHOD : GET
2019-05-22 09:02:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:02:02 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:02:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:02 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:02 -<==      Total: 10
2019-05-22 09:02:02 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-05-22 09:02:02 -==> Parameters: 2(String)
2019-05-22 09:02:02 -<==      Total: 1
2019-05-22 09:02:02 -耗时 : 17
2019-05-22 09:02:02 -返回值 : com.bootdo.common.utils.PageUtils@45ba385a
2019-05-22 09:02:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:02:02 -HTTP METHOD : GET
2019-05-22 09:02:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:02:02 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:02:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:02 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:02 -<==      Total: 10
2019-05-22 09:02:02 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-05-22 09:02:02 -==> Parameters: 2(String)
2019-05-22 09:02:02 -<==      Total: 1
2019-05-22 09:02:02 -耗时 : 9
2019-05-22 09:02:02 -返回值 : com.bootdo.common.utils.PageUtils@10774ad
2019-05-22 09:02:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-22 09:02:05 -HTTP METHOD : GET
2019-05-22 09:02:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-22 09:02:05 -参数 : []
2019-05-22 09:02:05 -耗时 : 0
2019-05-22 09:02:05 -返回值 : /moneyLog/heatLog/heatLog
2019-05-22 09:02:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:02:05 -HTTP METHOD : GET
2019-05-22 09:02:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:02:05 -参数 : [userType]
2019-05-22 09:02:05 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-22 09:02:05 -HTTP METHOD : GET
2019-05-22 09:02:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:02:05 -参数 : [heatType]
2019-05-22 09:02:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:02:05 -==> Parameters: heatType(String)
2019-05-22 09:02:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:02:05 -==> Parameters: userType(String)
2019-05-22 09:02:05 -<==      Total: 4
2019-05-22 09:02:05 -耗时 : 7
2019-05-22 09:02:05 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:02:05 -<==      Total: 4
2019-05-22 09:02:05 -耗时 : 20
2019-05-22 09:02:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:02:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-22 09:02:05 -HTTP METHOD : GET
2019-05-22 09:02:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-22 09:02:05 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-22 09:02:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-22 09:02:05 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:02:06 -<==      Total: 10
2019-05-22 09:02:06 -==>  Preparing: select count(*) from heat_log 
2019-05-22 09:02:06 -==> Parameters: 
2019-05-22 09:02:06 -<==      Total: 1
2019-05-22 09:02:06 -耗时 : 125
2019-05-22 09:02:06 -返回值 : com.bootdo.common.utils.PageUtils@dd07b92
2019-05-22 09:02:12 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-22 09:02:12 -HTTP METHOD : GET
2019-05-22 09:02:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-22 09:02:12 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=2019-03-08}]
2019-05-22 09:02:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? order by id asc limit ?, ? 
2019-05-22 09:02:12 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-05-22 09:02:12 -<==      Total: 3
2019-05-22 09:02:12 -==>  Preparing: select count(*) from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? 
2019-05-22 09:02:12 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-05-22 09:02:12 -<==      Total: 1
2019-05-22 09:02:12 -耗时 : 162
2019-05-22 09:02:12 -返回值 : com.bootdo.common.utils.PageUtils@2f394dbc
2019-05-22 09:02:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-22 09:02:14 -HTTP METHOD : GET
2019-05-22 09:02:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-22 09:02:14 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=2019-03-08}]
2019-05-22 09:02:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? order by id asc limit ?, ? 
2019-05-22 09:02:14 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-05-22 09:02:14 -<==      Total: 3
2019-05-22 09:02:14 -==>  Preparing: select count(*) from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? 
2019-05-22 09:02:14 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-05-22 09:02:14 -<==      Total: 1
2019-05-22 09:02:14 -耗时 : 36
2019-05-22 09:02:14 -返回值 : com.bootdo.common.utils.PageUtils@3f60d154
2019-05-22 09:02:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:02:20 -HTTP METHOD : GET
2019-05-22 09:02:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:02:20 -参数 : []
2019-05-22 09:02:20 -耗时 : 0
2019-05-22 09:02:20 -返回值 : system/dept/deptTree
2019-05-22 09:02:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:02:20 -HTTP METHOD : GET
2019-05-22 09:02:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:02:20 -参数 : []
2019-05-22 09:02:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:02:20 -==> Parameters: 
2019-05-22 09:02:20 -<==      Total: 3
2019-05-22 09:02:20 -耗时 : 3
2019-05-22 09:02:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:02:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-22 09:02:21 -HTTP METHOD : GET
2019-05-22 09:02:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-22 09:02:21 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=2, userId=, heatDate=2019-03-08}]
2019-05-22 09:02:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:21 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:21 -<==      Total: 2
2019-05-22 09:02:21 -==>  Preparing: select count(*) from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-22 09:02:21 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String)
2019-05-22 09:02:21 -<==      Total: 1
2019-05-22 09:02:21 -耗时 : 12
2019-05-22 09:02:21 -返回值 : com.bootdo.common.utils.PageUtils@1eb07d6f
2019-05-22 09:02:24 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-22 09:02:24 -HTTP METHOD : GET
2019-05-22 09:02:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-22 09:02:24 -参数 : []
2019-05-22 09:02:24 -耗时 : 1
2019-05-22 09:02:24 -返回值 : /moneyLog/waterLog/waterLog
2019-05-22 09:02:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:02:24 -HTTP METHOD : GET
2019-05-22 09:02:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:02:24 -参数 : [userType]
2019-05-22 09:02:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:02:24 -==> Parameters: userType(String)
2019-05-22 09:02:24 -<==      Total: 4
2019-05-22 09:02:24 -耗时 : 7
2019-05-22 09:02:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:02:24 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 09:02:24 -HTTP METHOD : GET
2019-05-22 09:02:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:02:24 -参数 : [waterType]
2019-05-22 09:02:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:02:24 -==> Parameters: waterType(String)
2019-05-22 09:02:24 -<==      Total: 4
2019-05-22 09:02:24 -耗时 : 4
2019-05-22 09:02:24 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:02:24 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:02:24 -HTTP METHOD : GET
2019-05-22 09:02:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:02:24 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-22 09:02:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-22 09:02:24 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:02:24 -<==      Total: 10
2019-05-22 09:02:24 -==>  Preparing: select count(*) from water_log 
2019-05-22 09:02:24 -==> Parameters: 
2019-05-22 09:02:24 -<==      Total: 1
2019-05-22 09:02:24 -耗时 : 79
2019-05-22 09:02:24 -返回值 : com.bootdo.common.utils.PageUtils@3ee8f9b0
2019-05-22 09:02:31 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:02:31 -HTTP METHOD : GET
2019-05-22 09:02:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:02:31 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=2019-03-08}]
2019-05-22 09:02:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-05-22 09:02:31 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-05-22 09:02:31 -<==      Total: 3
2019-05-22 09:02:31 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? 
2019-05-22 09:02:31 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-05-22 09:02:31 -<==      Total: 1
2019-05-22 09:02:31 -耗时 : 11
2019-05-22 09:02:31 -返回值 : com.bootdo.common.utils.PageUtils@29059dea
2019-05-22 09:02:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:02:32 -HTTP METHOD : GET
2019-05-22 09:02:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:02:32 -参数 : []
2019-05-22 09:02:32 -耗时 : 0
2019-05-22 09:02:32 -返回值 : system/dept/deptTree
2019-05-22 09:02:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:02:33 -HTTP METHOD : GET
2019-05-22 09:02:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:02:33 -参数 : []
2019-05-22 09:02:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:02:33 -==> Parameters: 
2019-05-22 09:02:33 -<==      Total: 3
2019-05-22 09:02:33 -耗时 : 2
2019-05-22 09:02:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:02:34 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:02:34 -HTTP METHOD : GET
2019-05-22 09:02:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:02:34 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, waterDate=2019-03-08}]
2019-05-22 09:02:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:34 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:34 -<==      Total: 3
2019-05-22 09:02:34 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-22 09:02:34 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String)
2019-05-22 09:02:34 -<==      Total: 1
2019-05-22 09:02:34 -耗时 : 16
2019-05-22 09:02:34 -返回值 : com.bootdo.common.utils.PageUtils@169a3766
2019-05-22 09:02:37 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:02:37 -HTTP METHOD : GET
2019-05-22 09:02:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:02:37 -参数 : [{limit=10, offset=0, userType=C, waterType=, userOrg=2, userId=, waterDate=2019-03-08, type=C}]
2019-05-22 09:02:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:37 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), C(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:37 -<==      Total: 0
2019-05-22 09:02:37 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-05-22 09:02:37 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), C(String), 2(String)
2019-05-22 09:02:37 -<==      Total: 1
2019-05-22 09:02:37 -耗时 : 13
2019-05-22 09:02:37 -返回值 : com.bootdo.common.utils.PageUtils@21447198
2019-05-22 09:02:40 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:02:40 -HTTP METHOD : GET
2019-05-22 09:02:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:02:40 -参数 : [{limit=10, offset=0, userType=D, waterType=, userOrg=2, userId=, waterDate=2019-03-08, type=D}]
2019-05-22 09:02:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:40 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), D(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:40 -<==      Total: 0
2019-05-22 09:02:40 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-05-22 09:02:40 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), D(String), 2(String)
2019-05-22 09:02:40 -<==      Total: 1
2019-05-22 09:02:40 -耗时 : 11
2019-05-22 09:02:40 -返回值 : com.bootdo.common.utils.PageUtils@1a7b06ec
2019-05-22 09:02:41 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:02:41 -HTTP METHOD : GET
2019-05-22 09:02:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:02:41 -参数 : [{limit=10, offset=0, userType=B, waterType=, userOrg=2, userId=, waterDate=2019-03-08, type=B}]
2019-05-22 09:02:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:41 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:41 -<==      Total: 1
2019-05-22 09:02:41 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-05-22 09:02:41 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 2(String)
2019-05-22 09:02:41 -<==      Total: 1
2019-05-22 09:02:41 -耗时 : 25
2019-05-22 09:02:41 -返回值 : com.bootdo.common.utils.PageUtils@705ad55f
2019-05-22 09:02:44 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:02:44 -HTTP METHOD : GET
2019-05-22 09:02:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:02:44 -参数 : [{limit=10, offset=0, userType=B, waterType=1, userOrg=2, userId=, waterDate=2019-03-08, type=1}]
2019-05-22 09:02:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and water_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:44 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 1(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:44 -<==      Total: 0
2019-05-22 09:02:44 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and water_type = ? and user_org = ? 
2019-05-22 09:02:44 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 1(String), 2(String)
2019-05-22 09:02:44 -<==      Total: 1
2019-05-22 09:02:44 -耗时 : 16
2019-05-22 09:02:44 -返回值 : com.bootdo.common.utils.PageUtils@5cf1d1bf
2019-05-22 09:02:45 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:02:45 -HTTP METHOD : GET
2019-05-22 09:02:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:02:45 -参数 : [{limit=10, offset=0, userType=B, waterType=2, userOrg=2, userId=, waterDate=2019-03-08, type=2}]
2019-05-22 09:02:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and water_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:45 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 2(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:45 -<==      Total: 1
2019-05-22 09:02:45 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and water_type = ? and user_org = ? 
2019-05-22 09:02:45 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 2(String), 2(String)
2019-05-22 09:02:45 -<==      Total: 1
2019-05-22 09:02:45 -耗时 : 19
2019-05-22 09:02:45 -返回值 : com.bootdo.common.utils.PageUtils@58f0070b
2019-05-22 09:02:47 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:02:47 -HTTP METHOD : GET
2019-05-22 09:02:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:02:47 -参数 : [{limit=10, offset=0, userType=B, waterType=1, userOrg=2, userId=, waterDate=2019-03-08, type=1}]
2019-05-22 09:02:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and water_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:47 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 1(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:47 -<==      Total: 0
2019-05-22 09:02:47 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and water_type = ? and user_org = ? 
2019-05-22 09:02:47 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 1(String), 2(String)
2019-05-22 09:02:47 -<==      Total: 1
2019-05-22 09:02:47 -耗时 : 6
2019-05-22 09:02:47 -返回值 : com.bootdo.common.utils.PageUtils@3542f83d
2019-05-22 09:02:49 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:02:49 -HTTP METHOD : GET
2019-05-22 09:02:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:02:49 -参数 : [{limit=10, offset=0, userType=B, waterType=3, userOrg=2, userId=, waterDate=2019-03-08, type=3}]
2019-05-22 09:02:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and water_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:49 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 3(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:49 -<==      Total: 0
2019-05-22 09:02:49 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and water_type = ? and user_org = ? 
2019-05-22 09:02:49 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 3(String), 2(String)
2019-05-22 09:02:49 -<==      Total: 1
2019-05-22 09:02:49 -耗时 : 12
2019-05-22 09:02:49 -返回值 : com.bootdo.common.utils.PageUtils@62ffe841
2019-05-22 09:02:50 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:02:50 -HTTP METHOD : GET
2019-05-22 09:02:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:02:50 -参数 : [{limit=10, offset=0, userType=B, waterType=2, userOrg=2, userId=, waterDate=2019-03-08, type=2}]
2019-05-22 09:02:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and water_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:50 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 2(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:50 -<==      Total: 1
2019-05-22 09:02:50 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and water_type = ? and user_org = ? 
2019-05-22 09:02:50 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 2(String), 2(String)
2019-05-22 09:02:50 -<==      Total: 1
2019-05-22 09:02:50 -耗时 : 13
2019-05-22 09:02:50 -返回值 : com.bootdo.common.utils.PageUtils@2e18db58
2019-05-22 09:02:52 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:02:52 -HTTP METHOD : GET
2019-05-22 09:02:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:02:52 -参数 : [{limit=10, offset=0, userType=B, waterType=2, userOrg=2, userId=, waterDate=2019-03-08}]
2019-05-22 09:02:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and water_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:02:52 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 2(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:02:52 -<==      Total: 1
2019-05-22 09:02:52 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and water_type = ? and user_org = ? 
2019-05-22 09:02:52 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), B(String), 2(String), 2(String)
2019-05-22 09:02:52 -<==      Total: 1
2019-05-22 09:02:52 -耗时 : 7
2019-05-22 09:02:52 -返回值 : com.bootdo.common.utils.PageUtils@18412ec4
2019-05-22 09:02:55 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-22 09:02:55 -HTTP METHOD : GET
2019-05-22 09:02:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-22 09:02:55 -参数 : []
2019-05-22 09:02:55 -耗时 : 1
2019-05-22 09:02:55 -返回值 : /moneyLog/elecLog/elecLog
2019-05-22 09:02:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:02:56 -HTTP METHOD : GET
2019-05-22 09:02:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:02:56 -参数 : [userType]
2019-05-22 09:02:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:02:56 -==> Parameters: userType(String)
2019-05-22 09:02:56 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 09:02:56 -HTTP METHOD : GET
2019-05-22 09:02:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:02:56 -参数 : [elecType]
2019-05-22 09:02:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:02:56 -<==      Total: 4
2019-05-22 09:02:56 -==> Parameters: elecType(String)
2019-05-22 09:02:56 -耗时 : 5
2019-05-22 09:02:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:02:56 -<==      Total: 11
2019-05-22 09:02:56 -耗时 : 7
2019-05-22 09:02:56 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:02:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:02:56 -HTTP METHOD : GET
2019-05-22 09:02:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:02:56 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 09:02:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 09:02:56 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:02:56 -<==      Total: 10
2019-05-22 09:02:56 -==>  Preparing: select count(*) from elec_log 
2019-05-22 09:02:56 -==> Parameters: 
2019-05-22 09:02:56 -<==      Total: 1
2019-05-22 09:02:56 -耗时 : 7
2019-05-22 09:02:56 -返回值 : com.bootdo.common.utils.PageUtils@27a6e268
2019-05-22 09:03:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:03:02 -HTTP METHOD : GET
2019-05-22 09:03:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:03:02 -参数 : []
2019-05-22 09:03:02 -耗时 : 1
2019-05-22 09:03:02 -返回值 : system/dept/deptTree
2019-05-22 09:03:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:03:03 -HTTP METHOD : GET
2019-05-22 09:03:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:03:03 -参数 : []
2019-05-22 09:03:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:03:03 -==> Parameters: 
2019-05-22 09:03:03 -<==      Total: 3
2019-05-22 09:03:03 -耗时 : 3
2019-05-22 09:03:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:03:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:03:04 -HTTP METHOD : GET
2019-05-22 09:03:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:03:04 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:03:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-05-22 09:03:04 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-05-22 09:03:04 -<==      Total: 10
2019-05-22 09:03:04 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-05-22 09:03:04 -==> Parameters: 2(String)
2019-05-22 09:03:04 -<==      Total: 1
2019-05-22 09:03:04 -耗时 : 11
2019-05-22 09:03:04 -返回值 : com.bootdo.common.utils.PageUtils@77688287
2019-05-22 09:03:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:03:05 -HTTP METHOD : GET
2019-05-22 09:03:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:03:05 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:03:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-05-22 09:03:05 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-05-22 09:03:05 -<==      Total: 10
2019-05-22 09:03:05 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-05-22 09:03:05 -==> Parameters: 2(String)
2019-05-22 09:03:05 -<==      Total: 1
2019-05-22 09:03:05 -耗时 : 7
2019-05-22 09:03:05 -返回值 : com.bootdo.common.utils.PageUtils@450186ee
2019-05-22 09:03:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:03:06 -HTTP METHOD : GET
2019-05-22 09:03:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:03:06 -参数 : []
2019-05-22 09:03:06 -耗时 : 0
2019-05-22 09:03:06 -返回值 : system/dept/deptTree
2019-05-22 09:03:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:03:06 -HTTP METHOD : GET
2019-05-22 09:03:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:03:06 -参数 : []
2019-05-22 09:03:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:03:06 -==> Parameters: 
2019-05-22 09:03:06 -<==      Total: 3
2019-05-22 09:03:06 -耗时 : 8
2019-05-22 09:03:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:03:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:03:08 -HTTP METHOD : GET
2019-05-22 09:03:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:03:08 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=1, userId=, elecDate=2019-03-19}]
2019-05-22 09:03:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-05-22 09:03:08 -==> Parameters: 1(String), 0(Integer), 10(Integer)
2019-05-22 09:03:08 -<==      Total: 0
2019-05-22 09:03:08 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-05-22 09:03:08 -==> Parameters: 1(String)
2019-05-22 09:03:08 -<==      Total: 1
2019-05-22 09:03:08 -耗时 : 7
2019-05-22 09:03:08 -返回值 : com.bootdo.common.utils.PageUtils@2c7a7f9a
2019-05-22 09:03:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:03:08 -HTTP METHOD : GET
2019-05-22 09:03:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:03:08 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=1, userId=, elecDate=2019-03-19}]
2019-05-22 09:03:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-05-22 09:03:08 -==> Parameters: 1(String), 0(Integer), 10(Integer)
2019-05-22 09:03:08 -<==      Total: 0
2019-05-22 09:03:08 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-05-22 09:03:08 -==> Parameters: 1(String)
2019-05-22 09:03:08 -<==      Total: 1
2019-05-22 09:03:08 -耗时 : 7
2019-05-22 09:03:08 -返回值 : com.bootdo.common.utils.PageUtils@10a960ea
2019-05-22 09:07:18 -Starting BootdoApplication on PC-201905091110 with PID 12420 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-22 09:07:18 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-22 09:07:18 -The following profiles are active: dev
2019-05-22 09:07:18 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e3967ea: startup date [Wed May 22 09:07:18 CST 2019]; root of context hierarchy
2019-05-22 09:07:24 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-22 09:07:26 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8f957530] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:07:26 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$81eea3d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:07:27 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:07:28 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:07:28 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:07:28 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-22 09:07:28 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-22 09:07:28 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:07:28 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:07:28 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:07:28 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:07:29 -Tomcat initialized with port(s): 8081 (http)
2019-05-22 09:07:29 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-22 09:07:29 -Starting service [Tomcat]
2019-05-22 09:07:29 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-22 09:07:29 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-22 09:07:30 -Initializing Spring embedded WebApplicationContext
2019-05-22 09:07:30 -Root WebApplicationContext: initialization completed in 11532 ms
2019-05-22 09:07:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-22 09:07:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-22 09:07:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-22 09:07:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-22 09:07:30 -Filter xssFilter was not registered (disabled)
2019-05-22 09:07:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-22 09:07:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-22 09:07:30 -Servlet statViewServlet mapped to [/druid/*]
2019-05-22 09:07:30 -Servlet dispatcherServlet mapped to [/]
2019-05-22 09:07:33 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 66; columnNumber: 4; The end-tag for element type "include" must end with a '>' delimiter.
2019-05-22 09:07:33 -Stopping service [Tomcat]
2019-05-22 09:07:34 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-05-22 09:07:34 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 66; columnNumber: 4; The end-tag for element type "include" must end with a '>' delimiter.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 66; columnNumber: 4; The end-tag for element type "include" must end with a '>' delimiter.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 66; columnNumber: 4; The end-tag for element type "include" must end with a '>' delimiter.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 66; columnNumber: 4; The end-tag for element type "include" must end with a '>' delimiter.
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 66; columnNumber: 4; The end-tag for element type "include" must end with a '>' delimiter.
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 66; columnNumber: 4; The end-tag for element type "include" must end with a '>' delimiter.
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c269c660.CGLIB$sqlSessionFactory$0(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c269c660$$FastClassBySpringCGLIB$$af6de28d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c269c660.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 66; columnNumber: 4; The end-tag for element type "include" must end with a '>' delimiter.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:125)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:78)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:519)
	... 69 common frames omitted
Caused by: org.xml.sax.SAXParseException: The end-tag for element type "include" must end with a '>' delimiter.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanEndElement(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 72 common frames omitted
2019-05-22 09:09:40 -Starting BootdoApplication on PC-201905091110 with PID 728 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-22 09:09:40 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-22 09:09:40 -The following profiles are active: dev
2019-05-22 09:09:40 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 09:09:40 CST 2019]; root of context hierarchy
2019-05-22 09:09:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-22 09:09:45 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:09:45 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:09:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:09:47 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:09:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:09:47 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-22 09:09:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-22 09:09:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:09:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:09:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:09:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:09:48 -Tomcat initialized with port(s): 8081 (http)
2019-05-22 09:09:48 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-22 09:09:48 -Starting service [Tomcat]
2019-05-22 09:09:48 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-22 09:09:48 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-22 09:09:48 -Initializing Spring embedded WebApplicationContext
2019-05-22 09:09:48 -Root WebApplicationContext: initialization completed in 7906 ms
2019-05-22 09:09:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-22 09:09:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-22 09:09:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-22 09:09:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-22 09:09:49 -Filter xssFilter was not registered (disabled)
2019-05-22 09:09:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-22 09:09:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-22 09:09:49 -Servlet statViewServlet mapped to [/druid/*]
2019-05-22 09:09:49 -Servlet dispatcherServlet mapped to [/]
2019-05-22 09:09:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 09:09:40 CST 2019]; root of context hierarchy
2019-05-22 09:09:54 -Using default implementation for ThreadExecutor
2019-05-22 09:09:54 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-22 09:09:54 -Quartz Scheduler v.2.2.1 created.
2019-05-22 09:09:54 -RAMJobStore initialized.
2019-05-22 09:09:54 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-22 09:09:54 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-22 09:09:54 -Quartz scheduler version: 2.2.1
2019-05-22 09:09:54 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5d5d3a5c
2019-05-22 09:09:55 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-22 09:09:55 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-22 09:09:58 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:09:58 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-22 09:09:58 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:09:58 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-22 09:09:58 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-22 09:09:58 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-22 09:09:58 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:09:58 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-22 09:09:58 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:09:58 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-22 09:09:58 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-22 09:09:58 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:09:58 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-22 09:09:58 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 09:09:58 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 09:09:58 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-22 09:09:58 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:09:58 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-22 09:09:58 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:09:58 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-22 09:09:58 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 09:09:58 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-22 09:09:58 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 09:09:58 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-22 09:09:58 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-22 09:09:58 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-22 09:09:58 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-22 09:09:58 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-22 09:09:58 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-22 09:09:58 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-22 09:09:58 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-22 09:09:58 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-22 09:09:58 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-22 09:09:58 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-22 09:09:58 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-22 09:09:58 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-22 09:09:58 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-22 09:09:58 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 09:09:58 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-22 09:09:58 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 09:09:58 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-22 09:09:58 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-22 09:09:58 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-22 09:09:58 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-22 09:09:58 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-22 09:09:58 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-22 09:09:58 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-22 09:09:58 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-22 09:09:58 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-22 09:09:58 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-22 09:09:58 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-22 09:09:58 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-22 09:09:58 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-22 09:09:58 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 09:09:58 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-22 09:09:58 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-22 09:09:58 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-22 09:09:58 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-22 09:09:58 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-22 09:09:58 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-22 09:09:58 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-22 09:09:58 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-22 09:09:58 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-22 09:09:58 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-22 09:09:58 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-22 09:09:58 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-22 09:09:58 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-22 09:09:58 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-22 09:09:58 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 09:09:58 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-22 09:09:58 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 09:09:58 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 09:09:58 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-22 09:09:58 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-22 09:09:58 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 09:09:58 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-22 09:09:58 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-22 09:09:58 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 09:09:58 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 09:09:58 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-22 09:09:58 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-22 09:09:58 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-22 09:09:58 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-22 09:09:58 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-22 09:09:58 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-22 09:09:58 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 09:09:58 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-22 09:09:58 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-22 09:09:58 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-22 09:09:58 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-22 09:09:58 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-22 09:09:58 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-22 09:09:58 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-22 09:09:58 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-22 09:09:58 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-22 09:09:58 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-22 09:09:58 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-22 09:09:58 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-22 09:09:58 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-22 09:09:58 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-22 09:09:58 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-22 09:09:58 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-22 09:09:58 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-22 09:09:58 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-22 09:09:58 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-22 09:09:58 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 09:09:58 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-22 09:09:58 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-22 09:09:58 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-22 09:09:58 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-22 09:09:58 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-22 09:09:58 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-22 09:09:58 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-22 09:09:58 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-22 09:09:58 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-22 09:09:58 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-22 09:09:58 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-22 09:09:58 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-22 09:09:58 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-22 09:09:58 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-22 09:09:58 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-22 09:09:58 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-22 09:09:58 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-22 09:09:58 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 09:09:58 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 09:09:58 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 09:09:58 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-22 09:09:58 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-22 09:09:58 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-22 09:09:58 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-22 09:09:58 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-22 09:09:58 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-22 09:09:58 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 09:09:58 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-22 09:09:58 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-22 09:09:58 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-22 09:09:58 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 09:09:58 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:09:58 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 09:09:58 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-22 09:09:58 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:09:58 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:09:58 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-22 09:09:58 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 09:09:58 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-22 09:09:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 09:09:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-22 09:09:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-22 09:09:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-22 09:09:59 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-22 09:09:59 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-22 09:09:59 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-22 09:09:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 09:10:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 09:09:40 CST 2019]; root of context hierarchy
2019-05-22 09:10:00 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 09:10:00 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 09:10:00 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 09:10:00 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-22 09:10:00 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-22 09:10:02 -Registering beans for JMX exposure on startup
2019-05-22 09:10:02 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-22 09:10:02 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-22 09:10:02 -Starting beans in phase 2147483647
2019-05-22 09:10:02 -Context refreshed
2019-05-22 09:10:02 -Found 1 custom documentation plugin(s)
2019-05-22 09:10:02 -Scanning for api listing references
2019-05-22 09:10:03 -Generating unique operation named: getCountDUsingPOST_1
2019-05-22 09:10:03 -Generating unique operation named: removeUsingPOST_1
2019-05-22 09:10:03 -Generating unique operation named: addUsingGET_1
2019-05-22 09:10:03 -Generating unique operation named: editUsingGET_1
2019-05-22 09:10:03 -Generating unique operation named: listUsingGET_1
2019-05-22 09:10:03 -Generating unique operation named: removeUsingPOST_2
2019-05-22 09:10:03 -Generating unique operation named: removeUsingPOST_3
2019-05-22 09:10:03 -Generating unique operation named: saveUsingPOST_1
2019-05-22 09:10:03 -Generating unique operation named: updateUsingGET_1
2019-05-22 09:10:03 -Generating unique operation named: updateUsingHEAD_1
2019-05-22 09:10:03 -Generating unique operation named: updateUsingPOST_1
2019-05-22 09:10:03 -Generating unique operation named: updateUsingPUT_1
2019-05-22 09:10:03 -Generating unique operation named: updateUsingPATCH_1
2019-05-22 09:10:03 -Generating unique operation named: updateUsingDELETE_1
2019-05-22 09:10:03 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-22 09:10:03 -Generating unique operation named: updateUsingTRACE_1
2019-05-22 09:10:03 -Generating unique operation named: addUsingGET_2
2019-05-22 09:10:03 -Generating unique operation named: editUsingGET_2
2019-05-22 09:10:03 -Generating unique operation named: listUsingGET_2
2019-05-22 09:10:03 -Generating unique operation named: removeUsingPOST_4
2019-05-22 09:10:03 -Generating unique operation named: removeUsingPOST_5
2019-05-22 09:10:03 -Generating unique operation named: saveUsingPOST_2
2019-05-22 09:10:03 -Generating unique operation named: updateUsingPOST_2
2019-05-22 09:10:03 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-22 09:10:03 -Generating unique operation named: addUsingGET_3
2019-05-22 09:10:03 -Generating unique operation named: editUsingGET_3
2019-05-22 09:10:04 -Generating unique operation named: listUsingGET_3
2019-05-22 09:10:04 -Generating unique operation named: removeUsingPOST_6
2019-05-22 09:10:04 -Generating unique operation named: removeUsingPOST_7
2019-05-22 09:10:04 -Generating unique operation named: saveUsingPOST_3
2019-05-22 09:10:04 -Generating unique operation named: updateUsingGET_2
2019-05-22 09:10:04 -Generating unique operation named: updateUsingHEAD_2
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPOST_3
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPUT_2
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPATCH_2
2019-05-22 09:10:04 -Generating unique operation named: updateUsingDELETE_2
2019-05-22 09:10:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-22 09:10:04 -Generating unique operation named: updateUsingTRACE_2
2019-05-22 09:10:04 -Generating unique operation named: addUsingGET_4
2019-05-22 09:10:04 -Generating unique operation named: editUsingGET_4
2019-05-22 09:10:04 -Generating unique operation named: listUsingGET_4
2019-05-22 09:10:04 -Generating unique operation named: removeUsingPOST_8
2019-05-22 09:10:04 -Generating unique operation named: removeUsingPOST_9
2019-05-22 09:10:04 -Generating unique operation named: saveUsingPOST_4
2019-05-22 09:10:04 -Generating unique operation named: updateUsingGET_3
2019-05-22 09:10:04 -Generating unique operation named: updateUsingHEAD_3
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPOST_4
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPUT_3
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPATCH_3
2019-05-22 09:10:04 -Generating unique operation named: updateUsingDELETE_3
2019-05-22 09:10:04 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-22 09:10:04 -Generating unique operation named: updateUsingTRACE_3
2019-05-22 09:10:04 -Generating unique operation named: ElecUsingGET_1
2019-05-22 09:10:04 -Generating unique operation named: addUsingGET_5
2019-05-22 09:10:04 -Generating unique operation named: editUsingGET_5
2019-05-22 09:10:04 -Generating unique operation named: listUsingGET_5
2019-05-22 09:10:04 -Generating unique operation named: removeUsingPOST_10
2019-05-22 09:10:04 -Generating unique operation named: removeUsingPOST_11
2019-05-22 09:10:04 -Generating unique operation named: saveUsingPOST_5
2019-05-22 09:10:04 -Generating unique operation named: updateUsingGET_4
2019-05-22 09:10:04 -Generating unique operation named: updateUsingHEAD_4
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPOST_5
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPUT_4
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPATCH_4
2019-05-22 09:10:04 -Generating unique operation named: updateUsingDELETE_4
2019-05-22 09:10:04 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-22 09:10:04 -Generating unique operation named: updateUsingTRACE_4
2019-05-22 09:10:04 -Generating unique operation named: editUsingGET_6
2019-05-22 09:10:04 -Generating unique operation named: listUsingGET_6
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPOST_6
2019-05-22 09:10:04 -Generating unique operation named: addUsingGET_6
2019-05-22 09:10:04 -Generating unique operation named: editUsingGET_7
2019-05-22 09:10:04 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-22 09:10:04 -Generating unique operation named: listUsingGET_7
2019-05-22 09:10:04 -Generating unique operation named: removeUsingPOST_12
2019-05-22 09:10:04 -Generating unique operation named: removeUsingPOST_13
2019-05-22 09:10:04 -Generating unique operation named: saveUsingPOST_6
2019-05-22 09:10:04 -Generating unique operation named: updateUsingGET_5
2019-05-22 09:10:04 -Generating unique operation named: updateUsingHEAD_5
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPOST_7
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPUT_5
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPATCH_5
2019-05-22 09:10:04 -Generating unique operation named: updateUsingDELETE_5
2019-05-22 09:10:04 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-22 09:10:04 -Generating unique operation named: updateUsingTRACE_5
2019-05-22 09:10:04 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-22 09:10:04 -Generating unique operation named: addUsingGET_7
2019-05-22 09:10:04 -Generating unique operation named: editUsingGET_8
2019-05-22 09:10:04 -Generating unique operation named: listUsingGET_8
2019-05-22 09:10:04 -Generating unique operation named: removeUsingPOST_14
2019-05-22 09:10:04 -Generating unique operation named: removeUsingPOST_15
2019-05-22 09:10:04 -Generating unique operation named: saveUsingPOST_7
2019-05-22 09:10:04 -Generating unique operation named: updateUsingGET_6
2019-05-22 09:10:04 -Generating unique operation named: updateUsingHEAD_6
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPOST_8
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPUT_6
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPATCH_6
2019-05-22 09:10:04 -Generating unique operation named: updateUsingDELETE_6
2019-05-22 09:10:04 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-22 09:10:04 -Generating unique operation named: updateUsingTRACE_6
2019-05-22 09:10:04 -Generating unique operation named: addUsingGET_8
2019-05-22 09:10:04 -Generating unique operation named: editUsingGET_9
2019-05-22 09:10:04 -Generating unique operation named: listUsingGET_9
2019-05-22 09:10:04 -Generating unique operation named: removeUsingPOST_16
2019-05-22 09:10:04 -Generating unique operation named: removeUsingPOST_17
2019-05-22 09:10:04 -Generating unique operation named: saveUsingPOST_8
2019-05-22 09:10:04 -Generating unique operation named: updateUsingGET_7
2019-05-22 09:10:04 -Generating unique operation named: updateUsingHEAD_7
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPOST_9
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPUT_7
2019-05-22 09:10:04 -Generating unique operation named: updateUsingPATCH_7
2019-05-22 09:10:04 -Generating unique operation named: updateUsingDELETE_7
2019-05-22 09:10:04 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-22 09:10:04 -Generating unique operation named: updateUsingTRACE_7
2019-05-22 09:10:05 -Generating unique operation named: addUsingGET_9
2019-05-22 09:10:05 -Generating unique operation named: editUsingGET_10
2019-05-22 09:10:05 -Generating unique operation named: infoUsingGET_1
2019-05-22 09:10:05 -Generating unique operation named: infoUsingHEAD_1
2019-05-22 09:10:05 -Generating unique operation named: infoUsingPOST_1
2019-05-22 09:10:05 -Generating unique operation named: infoUsingPUT_1
2019-05-22 09:10:05 -Generating unique operation named: infoUsingPATCH_1
2019-05-22 09:10:05 -Generating unique operation named: infoUsingDELETE_1
2019-05-22 09:10:05 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-22 09:10:05 -Generating unique operation named: infoUsingTRACE_1
2019-05-22 09:10:05 -Generating unique operation named: listUsingGET_10
2019-05-22 09:10:05 -Generating unique operation named: removeUsingPOST_18
2019-05-22 09:10:05 -Generating unique operation named: removeUsingPOST_19
2019-05-22 09:10:05 -Generating unique operation named: saveUsingPOST_9
2019-05-22 09:10:05 -Generating unique operation named: updateUsingPOST_10
2019-05-22 09:10:05 -Generating unique operation named: listUsingGET_11
2019-05-22 09:10:05 -Generating unique operation named: removeUsingPOST_20
2019-05-22 09:10:05 -Generating unique operation named: welcomeUsingGET_1
2019-05-22 09:10:05 -Generating unique operation named: addUsingGET_10
2019-05-22 09:10:05 -Generating unique operation named: editUsingGET_11
2019-05-22 09:10:05 -Generating unique operation named: listUsingGET_12
2019-05-22 09:10:05 -Generating unique operation named: removeUsingPOST_21
2019-05-22 09:10:05 -Generating unique operation named: saveUsingPOST_10
2019-05-22 09:10:05 -Generating unique operation named: treeUsingGET_1
2019-05-22 09:10:05 -Generating unique operation named: treeUsingGET_2
2019-05-22 09:10:05 -Generating unique operation named: updateUsingPOST_11
2019-05-22 09:10:05 -Generating unique operation named: editUsingGET_12
2019-05-22 09:10:05 -Generating unique operation named: addUsingGET_11
2019-05-22 09:10:05 -Generating unique operation named: editUsingGET_13
2019-05-22 09:10:05 -Generating unique operation named: listUsingGET_13
2019-05-22 09:10:05 -Generating unique operation named: removeUsingPOST_22
2019-05-22 09:10:05 -Generating unique operation named: removeUsingPOST_23
2019-05-22 09:10:05 -Generating unique operation named: saveUsingPOST_11
2019-05-22 09:10:05 -Generating unique operation named: updateUsingGET_8
2019-05-22 09:10:05 -Generating unique operation named: updateUsingHEAD_8
2019-05-22 09:10:05 -Generating unique operation named: updateUsingPOST_12
2019-05-22 09:10:05 -Generating unique operation named: updateUsingPUT_8
2019-05-22 09:10:05 -Generating unique operation named: updateUsingPATCH_8
2019-05-22 09:10:05 -Generating unique operation named: updateUsingDELETE_8
2019-05-22 09:10:05 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-22 09:10:05 -Generating unique operation named: updateUsingTRACE_8
2019-05-22 09:10:05 -Generating unique operation named: addUsingGET_12
2019-05-22 09:10:05 -Generating unique operation named: editUsingGET_14
2019-05-22 09:10:05 -Generating unique operation named: listUsingGET_14
2019-05-22 09:10:05 -Generating unique operation named: removeUsingPOST_24
2019-05-22 09:10:05 -Generating unique operation named: removeUsingPOST_25
2019-05-22 09:10:05 -Generating unique operation named: saveUsingPOST_12
2019-05-22 09:10:05 -Generating unique operation named: updateUsingGET_9
2019-05-22 09:10:05 -Generating unique operation named: updateUsingHEAD_9
2019-05-22 09:10:05 -Generating unique operation named: updateUsingPOST_13
2019-05-22 09:10:05 -Generating unique operation named: updateUsingPUT_9
2019-05-22 09:10:05 -Generating unique operation named: updateUsingPATCH_9
2019-05-22 09:10:05 -Generating unique operation named: updateUsingDELETE_9
2019-05-22 09:10:05 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-22 09:10:05 -Generating unique operation named: updateUsingTRACE_9
2019-05-22 09:10:05 -Generating unique operation named: addUsingGET_13
2019-05-22 09:10:05 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-22 09:10:05 -Generating unique operation named: editUsingGET_15
2019-05-22 09:10:05 -Generating unique operation named: listUsingGET_15
2019-05-22 09:10:05 -Generating unique operation named: saveUsingPOST_13
2019-05-22 09:10:05 -Generating unique operation named: saveUsingPOST_14
2019-05-22 09:10:05 -Generating unique operation named: updateUsingPOST_14
2019-05-22 09:10:05 -Generating unique operation named: listUsingGET_16
2019-05-22 09:10:05 -Generating unique operation named: listUsingHEAD_1
2019-05-22 09:10:05 -Generating unique operation named: listUsingPOST_1
2019-05-22 09:10:05 -Generating unique operation named: listUsingPUT_1
2019-05-22 09:10:05 -Generating unique operation named: listUsingPATCH_1
2019-05-22 09:10:05 -Generating unique operation named: listUsingDELETE_1
2019-05-22 09:10:05 -Generating unique operation named: listUsingOPTIONS_1
2019-05-22 09:10:05 -Generating unique operation named: listUsingTRACE_1
2019-05-22 09:10:05 -Generating unique operation named: countDDUsingGET_1
2019-05-22 09:10:05 -Generating unique operation named: exportDDUsingGET_1
2019-05-22 09:10:05 -Generating unique operation named: addUsingGET_14
2019-05-22 09:10:06 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-22 09:10:06 -Generating unique operation named: editUsingGET_16
2019-05-22 09:10:06 -Generating unique operation named: listUsingGET_17
2019-05-22 09:10:06 -Generating unique operation named: removeUsingPOST_26
2019-05-22 09:10:06 -Generating unique operation named: saveUsingPOST_15
2019-05-22 09:10:06 -Generating unique operation named: treeUsingGET_3
2019-05-22 09:10:06 -Generating unique operation named: treeViewUsingGET_1
2019-05-22 09:10:06 -Generating unique operation named: updateUsingPOST_15
2019-05-22 09:10:06 -Generating unique operation named: addUsingGET_15
2019-05-22 09:10:06 -Generating unique operation named: editUsingGET_17
2019-05-22 09:10:06 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-22 09:10:06 -Generating unique operation named: listUsingGET_18
2019-05-22 09:10:06 -Generating unique operation named: removeUsingPOST_27
2019-05-22 09:10:06 -Generating unique operation named: removeUsingPOST_28
2019-05-22 09:10:06 -Generating unique operation named: saveUsingPOST_16
2019-05-22 09:10:06 -Generating unique operation named: updateUsingGET_10
2019-05-22 09:10:06 -Generating unique operation named: updateUsingHEAD_10
2019-05-22 09:10:06 -Generating unique operation named: updateUsingPOST_16
2019-05-22 09:10:06 -Generating unique operation named: updateUsingPUT_10
2019-05-22 09:10:06 -Generating unique operation named: updateUsingPATCH_10
2019-05-22 09:10:06 -Generating unique operation named: updateUsingDELETE_10
2019-05-22 09:10:06 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-22 09:10:06 -Generating unique operation named: updateUsingTRACE_10
2019-05-22 09:10:06 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-22 09:10:06 -Generating unique operation named: addUsingGET_16
2019-05-22 09:10:06 -Generating unique operation named: editUsingGET_18
2019-05-22 09:10:06 -Generating unique operation named: listUsingGET_19
2019-05-22 09:10:06 -Generating unique operation named: removeUsingPOST_29
2019-05-22 09:10:06 -Generating unique operation named: removeUsingPOST_30
2019-05-22 09:10:06 -Generating unique operation named: saveUsingPOST_17
2019-05-22 09:10:06 -Generating unique operation named: updateUsingGET_11
2019-05-22 09:10:06 -Generating unique operation named: updateUsingHEAD_11
2019-05-22 09:10:06 -Generating unique operation named: updateUsingPOST_17
2019-05-22 09:10:06 -Generating unique operation named: updateUsingPUT_11
2019-05-22 09:10:06 -Generating unique operation named: updateUsingPATCH_11
2019-05-22 09:10:06 -Generating unique operation named: updateUsingDELETE_11
2019-05-22 09:10:06 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-22 09:10:06 -Generating unique operation named: updateUsingTRACE_11
2019-05-22 09:10:06 -Generating unique operation named: addUsingGET_17
2019-05-22 09:10:06 -Generating unique operation named: editUsingGET_19
2019-05-22 09:10:06 -Generating unique operation named: listUsingGET_20
2019-05-22 09:10:06 -Generating unique operation named: removeUsingPOST_31
2019-05-22 09:10:06 -Generating unique operation named: removeUsingPOST_32
2019-05-22 09:10:06 -Generating unique operation named: saveUsingPOST_18
2019-05-22 09:10:06 -Generating unique operation named: updateUsingGET_12
2019-05-22 09:10:06 -Generating unique operation named: updateUsingHEAD_12
2019-05-22 09:10:06 -Generating unique operation named: updateUsingPOST_18
2019-05-22 09:10:06 -Generating unique operation named: updateUsingPUT_12
2019-05-22 09:10:06 -Generating unique operation named: updateUsingPATCH_12
2019-05-22 09:10:06 -Generating unique operation named: updateUsingDELETE_12
2019-05-22 09:10:06 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-22 09:10:06 -Generating unique operation named: updateUsingTRACE_12
2019-05-22 09:10:06 -Starting Quartz Scheduler now
2019-05-22 09:10:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-22 09:10:06 -Starting...
2019-05-22 09:10:06 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-22 09:10:06 -Started.
2019-05-22 09:10:06 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-22 09:10:06 -Using a shared selector for servlet write/read
2019-05-22 09:10:06 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-22 09:10:06 -Started BootdoApplication in 27.136 seconds (JVM running for 27.956)
2019-05-22 09:10:06 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-22 09:10:07 -==> Parameters: 
2019-05-22 09:10:07 -<==      Total: 1
2019-05-22 09:10:48 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-22 09:10:48 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-22 09:10:49 -FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2019-05-22 09:10:49 -Enabling session validation scheduler...
2019-05-22 09:10:49 -请求地址 : http://localhost:8081/login;JSESSIONID=fb0f5a03-2cdf-496a-8fce-0b522e6dc68f
2019-05-22 09:10:49 -HTTP METHOD : GET
2019-05-22 09:10:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 09:10:49 -参数 : [{}]
2019-05-22 09:10:49 -耗时 : 7
2019-05-22 09:10:49 -返回值 : login
2019-05-22 09:10:50 -请求地址 : http://localhost:8081/getVerify
2019-05-22 09:10:50 -HTTP METHOD : GET
2019-05-22 09:10:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 09:10:50 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@150eee81, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1bc91250]
2019-05-22 09:10:59 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-22 09:11:01 -7311
2019-05-22 09:11:02 -耗时 : 12181
2019-05-22 09:11:02 -返回值 : null
2019-05-22 09:11:02 -请求地址 : http://localhost:8081/login
2019-05-22 09:11:02 -HTTP METHOD : GET
2019-05-22 09:11:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 09:11:02 -参数 : [{}]
2019-05-22 09:11:02 -耗时 : 0
2019-05-22 09:11:02 -返回值 : login
2019-05-22 09:11:13 -请求地址 : http://localhost:8081/login
2019-05-22 09:11:13 -HTTP METHOD : POST
2019-05-22 09:11:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 09:11:13 -参数 : [admin, 111111, 7311, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4289e81c]
2019-05-22 09:11:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 09:11:13 -==> Parameters: admin(String)
2019-05-22 09:11:13 -<==      Total: 1
2019-05-22 09:11:13 -耗时 : 329
2019-05-22 09:11:13 -返回值 : {msg=操作成功, code=0}
2019-05-22 09:11:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-22 09:11:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 09:11:14 -==> Parameters: 1(Long), admin(String), 登录(String), 329(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 09:11:14.087(Timestamp)
2019-05-22 09:11:14 -请求地址 : http://localhost:8081/index
2019-05-22 09:11:14 -HTTP METHOD : GET
2019-05-22 09:11:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 09:11:14 -参数 : [{}]
2019-05-22 09:11:14 -<==    Updates: 1
2019-05-22 09:11:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 09:11:14 -==> Parameters: 1(Long)
2019-05-22 09:11:15 -<==      Total: 49
2019-05-22 09:11:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 09:11:15 -==> Parameters: 138(Long)
2019-05-22 09:11:15 -<==      Total: 1
2019-05-22 09:11:15 -耗时 : 802
2019-05-22 09:11:15 -返回值 : index_v1
2019-05-22 09:11:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 09:11:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 802(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 09:11:15.251(Timestamp)
2019-05-22 09:11:15 -请求地址 : http://localhost:8081/main
2019-05-22 09:11:15 -HTTP METHOD : GET
2019-05-22 09:11:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 09:11:15 -参数 : []
2019-05-22 09:11:15 -耗时 : 0
2019-05-22 09:11:15 -返回值 : main
2019-05-22 09:11:15 -<==    Updates: 1
2019-05-22 09:11:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 09:11:15 -HTTP METHOD : GET
2019-05-22 09:11:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 09:11:15 -参数 : []
2019-05-22 09:11:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 09:11:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 09:11:15 -<==      Total: 0
2019-05-22 09:11:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 09:11:15 -==> Parameters: 1(Long), 0(String)
2019-05-22 09:11:15 -<==      Total: 1
2019-05-22 09:11:15 -耗时 : 83
2019-05-22 09:11:15 -返回值 : com.bootdo.common.utils.PageUtils@2c63e9ac
2019-05-22 09:11:15 -请求地址 : http://localhost:8081/main
2019-05-22 09:11:15 -HTTP METHOD : GET
2019-05-22 09:11:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 09:11:15 -参数 : []
2019-05-22 09:11:15 -耗时 : 0
2019-05-22 09:11:15 -返回值 : main
2019-05-22 09:11:23 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 09:11:23 -==> Parameters: 1(Long)
2019-05-22 09:11:23 -<==      Total: 93
2019-05-22 09:11:23 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-22 09:11:23 -HTTP METHOD : GET
2019-05-22 09:11:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-22 09:11:23 -参数 : []
2019-05-22 09:11:23 -耗时 : 0
2019-05-22 09:11:23 -返回值 : /moneyLog/elecLog/elecLog
2019-05-22 09:11:24 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 09:11:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:11:24 -HTTP METHOD : GET
2019-05-22 09:11:24 -HTTP METHOD : GET
2019-05-22 09:11:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:11:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:11:24 -参数 : [elecType]
2019-05-22 09:11:24 -参数 : [userType]
2019-05-22 09:11:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:11:24 -==> Parameters: userType(String)
2019-05-22 09:11:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:11:24 -==> Parameters: elecType(String)
2019-05-22 09:11:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:11:24 -HTTP METHOD : GET
2019-05-22 09:11:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:11:24 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 09:11:24 -<==      Total: 11
2019-05-22 09:11:24 -耗时 : 102
2019-05-22 09:11:24 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:11:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 09:11:24 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:11:24 -<==      Total: 4
2019-05-22 09:11:24 -耗时 : 145
2019-05-22 09:11:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:11:24 -<==      Total: 10
2019-05-22 09:11:24 -==>  Preparing: select count(*) from elec_log 
2019-05-22 09:11:24 -==> Parameters: 
2019-05-22 09:11:24 -<==      Total: 1
2019-05-22 09:11:24 -耗时 : 89
2019-05-22 09:11:24 -返回值 : com.bootdo.common.utils.PageUtils@2d405303
2019-05-22 09:11:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:11:35 -HTTP METHOD : GET
2019-05-22 09:11:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:11:35 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-05-22 09:11:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-05-22 09:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-05-22 09:11:35 -<==      Total: 4
2019-05-22 09:11:35 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-05-22 09:11:35 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-05-22 09:11:35 -<==      Total: 1
2019-05-22 09:11:35 -耗时 : 82
2019-05-22 09:11:35 -返回值 : com.bootdo.common.utils.PageUtils@29c21ee6
2019-05-22 09:11:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:11:37 -HTTP METHOD : GET
2019-05-22 09:11:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:11:37 -参数 : []
2019-05-22 09:11:37 -耗时 : 0
2019-05-22 09:11:37 -返回值 : system/dept/deptTree
2019-05-22 09:11:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:11:37 -HTTP METHOD : GET
2019-05-22 09:11:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:11:37 -参数 : []
2019-05-22 09:11:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:11:37 -==> Parameters: 
2019-05-22 09:11:37 -<==      Total: 3
2019-05-22 09:11:37 -耗时 : 21
2019-05-22 09:11:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:11:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:11:39 -HTTP METHOD : GET
2019-05-22 09:11:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:11:39 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:11:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:11:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:11:39 -<==      Total: 2
2019-05-22 09:11:39 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-22 09:11:39 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-22 09:11:39 -<==      Total: 1
2019-05-22 09:11:39 -耗时 : 21
2019-05-22 09:11:39 -返回值 : com.bootdo.common.utils.PageUtils@48b7c6c5
2019-05-22 09:11:42 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:11:42 -HTTP METHOD : GET
2019-05-22 09:11:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:11:42 -参数 : [{limit=10, offset=0, userType=B, elecType=, userOrg=2, userId=, elecDate=2019-03-19, type=B}]
2019-05-22 09:11:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:11:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), B(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:11:42 -<==      Total: 0
2019-05-22 09:11:42 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-05-22 09:11:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), B(String), 2(String)
2019-05-22 09:11:42 -<==      Total: 1
2019-05-22 09:11:42 -耗时 : 130
2019-05-22 09:11:42 -返回值 : com.bootdo.common.utils.PageUtils@32c557cb
2019-05-22 09:11:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:11:43 -HTTP METHOD : GET
2019-05-22 09:11:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:11:43 -参数 : [{limit=10, offset=0, userType=B, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:11:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:11:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), B(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:11:43 -<==      Total: 0
2019-05-22 09:11:43 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-05-22 09:11:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), B(String), 2(String)
2019-05-22 09:11:43 -<==      Total: 1
2019-05-22 09:11:43 -耗时 : 8
2019-05-22 09:11:43 -返回值 : com.bootdo.common.utils.PageUtils@13641ef9
2019-05-22 09:11:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:11:44 -HTTP METHOD : GET
2019-05-22 09:11:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:11:44 -参数 : [{limit=10, offset=0, userType=A, elecType=, userOrg=2, userId=, elecDate=2019-03-19, type=A}]
2019-05-22 09:11:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:11:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:11:44 -<==      Total: 1
2019-05-22 09:11:44 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-05-22 09:11:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String)
2019-05-22 09:11:44 -<==      Total: 1
2019-05-22 09:11:44 -耗时 : 19
2019-05-22 09:11:44 -返回值 : com.bootdo.common.utils.PageUtils@528a9235
2019-05-22 09:11:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:11:48 -HTTP METHOD : GET
2019-05-22 09:11:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:11:48 -参数 : [{limit=10, offset=0, userType=A, elecType=5, userOrg=2, userId=, elecDate=2019-03-19, type=5}]
2019-05-22 09:11:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and elec_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:11:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 5(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:11:48 -<==      Total: 0
2019-05-22 09:11:48 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and elec_type = ? and user_org = ? 
2019-05-22 09:11:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 5(String), 2(String)
2019-05-22 09:11:48 -<==      Total: 1
2019-05-22 09:11:48 -耗时 : 21
2019-05-22 09:11:48 -返回值 : com.bootdo.common.utils.PageUtils@3b9ef796
2019-05-22 09:11:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:11:52 -HTTP METHOD : GET
2019-05-22 09:11:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:11:52 -参数 : [{limit=10, offset=0, userType=A, elecType=1, userOrg=2, userId=, elecDate=2019-03-19, type=1}]
2019-05-22 09:11:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and elec_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:11:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 1(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:11:52 -<==      Total: 0
2019-05-22 09:11:52 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and elec_type = ? and user_org = ? 
2019-05-22 09:11:52 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 1(String), 2(String)
2019-05-22 09:11:52 -<==      Total: 1
2019-05-22 09:11:52 -耗时 : 10
2019-05-22 09:11:52 -返回值 : com.bootdo.common.utils.PageUtils@1d08f53b
2019-05-22 09:11:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:11:53 -HTTP METHOD : GET
2019-05-22 09:11:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:11:53 -参数 : [{limit=10, offset=0, userType=A, elecType=2, userOrg=2, userId=, elecDate=2019-03-19, type=2}]
2019-05-22 09:11:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and elec_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:11:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:11:53 -<==      Total: 1
2019-05-22 09:11:53 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and elec_type = ? and user_org = ? 
2019-05-22 09:11:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String), 2(String)
2019-05-22 09:11:53 -<==      Total: 1
2019-05-22 09:11:53 -耗时 : 8
2019-05-22 09:11:53 -返回值 : com.bootdo.common.utils.PageUtils@49d42f9e
2019-05-22 09:12:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:12:02 -HTTP METHOD : GET
2019-05-22 09:12:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:12:02 -参数 : [{limit=10, offset=0, userType=A, elecType=2, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:12:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and elec_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:12:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:12:02 -<==      Total: 1
2019-05-22 09:12:02 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and elec_type = ? and user_org = ? 
2019-05-22 09:12:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), A(String), 2(String), 2(String)
2019-05-22 09:12:02 -<==      Total: 1
2019-05-22 09:12:02 -耗时 : 10
2019-05-22 09:12:02 -返回值 : com.bootdo.common.utils.PageUtils@52e95df3
2019-05-22 09:12:05 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-22 09:12:05 -HTTP METHOD : GET
2019-05-22 09:12:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-22 09:12:05 -参数 : []
2019-05-22 09:12:05 -耗时 : 0
2019-05-22 09:12:05 -返回值 : /moneyLog/elecLog/elecLog
2019-05-22 09:12:05 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 09:12:05 -HTTP METHOD : GET
2019-05-22 09:12:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:12:05 -参数 : [elecType]
2019-05-22 09:12:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:12:05 -==> Parameters: elecType(String)
2019-05-22 09:12:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:12:05 -HTTP METHOD : GET
2019-05-22 09:12:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:12:05 -参数 : [userType]
2019-05-22 09:12:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:12:05 -==> Parameters: userType(String)
2019-05-22 09:12:05 -<==      Total: 11
2019-05-22 09:12:05 -耗时 : 9
2019-05-22 09:12:05 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:12:05 -<==      Total: 4
2019-05-22 09:12:05 -耗时 : 16
2019-05-22 09:12:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:12:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:12:05 -HTTP METHOD : GET
2019-05-22 09:12:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:12:05 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 09:12:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 09:12:05 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:12:05 -<==      Total: 10
2019-05-22 09:12:05 -==>  Preparing: select count(*) from elec_log 
2019-05-22 09:12:05 -==> Parameters: 
2019-05-22 09:12:05 -<==      Total: 1
2019-05-22 09:12:05 -耗时 : 75
2019-05-22 09:12:05 -返回值 : com.bootdo.common.utils.PageUtils@32513392
2019-05-22 09:12:07 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-22 09:12:07 -HTTP METHOD : GET
2019-05-22 09:12:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-22 09:12:07 -参数 : []
2019-05-22 09:12:07 -耗时 : 0
2019-05-22 09:12:07 -返回值 : /moneyLog/elecLog/elecLog
2019-05-22 09:12:07 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 09:12:07 -HTTP METHOD : GET
2019-05-22 09:12:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:12:07 -参数 : [elecType]
2019-05-22 09:12:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:12:07 -==> Parameters: elecType(String)
2019-05-22 09:12:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:12:07 -HTTP METHOD : GET
2019-05-22 09:12:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:12:07 -参数 : [userType]
2019-05-22 09:12:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:12:07 -<==      Total: 11
2019-05-22 09:12:07 -耗时 : 7
2019-05-22 09:12:07 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:12:07 -==> Parameters: userType(String)
2019-05-22 09:12:07 -<==      Total: 4
2019-05-22 09:12:07 -耗时 : 16
2019-05-22 09:12:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:12:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:12:07 -HTTP METHOD : GET
2019-05-22 09:12:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:12:07 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 09:12:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 09:12:07 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:12:07 -<==      Total: 10
2019-05-22 09:12:07 -==>  Preparing: select count(*) from elec_log 
2019-05-22 09:12:07 -==> Parameters: 
2019-05-22 09:12:07 -<==      Total: 1
2019-05-22 09:12:07 -耗时 : 12
2019-05-22 09:12:07 -返回值 : com.bootdo.common.utils.PageUtils@43c0834f
2019-05-22 09:12:20 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/7
2019-05-22 09:12:20 -HTTP METHOD : GET
2019-05-22 09:12:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-05-22 09:12:20 -参数 : [7, {}]
2019-05-22 09:12:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-05-22 09:12:20 -==> Parameters: 7(Long)
2019-05-22 09:12:20 -<==      Total: 1
2019-05-22 09:12:20 -耗时 : 32
2019-05-22 09:12:20 -返回值 : moneyLog/elecLog/edit
2019-05-22 09:12:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:12:20 -HTTP METHOD : GET
2019-05-22 09:12:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:12:20 -参数 : [userType]
2019-05-22 09:12:20 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 09:12:20 -HTTP METHOD : GET
2019-05-22 09:12:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:12:20 -参数 : [elecType]
2019-05-22 09:12:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:12:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:12:20 -==> Parameters: elecType(String)
2019-05-22 09:12:20 -==> Parameters: userType(String)
2019-05-22 09:12:20 -<==      Total: 11
2019-05-22 09:12:20 -耗时 : 8
2019-05-22 09:12:20 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:12:20 -<==      Total: 4
2019-05-22 09:12:20 -耗时 : 10
2019-05-22 09:12:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:12:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/update
2019-05-22 09:12:40 -HTTP METHOD : POST
2019-05-22 09:12:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.update
2019-05-22 09:12:40 -参数 : [{id=7, userId=5-8888, userName=阿瑟东, TuserType=A, userType=A, userOrg=2, userOrgName=五九, TelecType=7, elecType=7, elecMoney=80.00, createTime=2019-03, elecDate=2019-03-27 18:15:03, remark=}, com.bootdo.moneyLog.domain.ElecLogDO@66fc2839]
2019-05-22 09:12:40 -==>  Preparing: update elec_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `elec_type` = ?, `elec_money` = ?, `elec_date` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-22 09:12:40 -==> Parameters: 5-8888(String), 阿瑟东(String), A(String), 2(String), 7(String), 80.00(BigDecimal), 2019-03-27 18:15:03.0(Timestamp), 2019-03(String), 2019-05-22 09:12:40.707(Timestamp), 1(Long), (String), 7(Long)
2019-05-22 09:12:40 -<==    Updates: 1
2019-05-22 09:12:40 -耗时 : 128
2019-05-22 09:12:40 -返回值 : {msg=操作成功, code=0}
2019-05-22 09:12:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:12:40 -HTTP METHOD : GET
2019-05-22 09:12:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:12:40 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 09:12:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 09:12:40 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:12:40 -<==      Total: 10
2019-05-22 09:12:40 -==>  Preparing: select count(*) from elec_log 
2019-05-22 09:12:40 -==> Parameters: 
2019-05-22 09:12:40 -<==      Total: 1
2019-05-22 09:12:40 -耗时 : 13
2019-05-22 09:12:40 -返回值 : com.bootdo.common.utils.PageUtils@1a5c0e9c
2019-05-22 09:12:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-05-22 09:12:52 -HTTP METHOD : GET
2019-05-22 09:12:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-05-22 09:12:52 -参数 : []
2019-05-22 09:12:52 -耗时 : 1
2019-05-22 09:12:52 -返回值 : moneyLog/elecLog/add
2019-05-22 09:12:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:12:52 -HTTP METHOD : GET
2019-05-22 09:12:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:12:52 -参数 : [userType]
2019-05-22 09:12:52 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 09:12:52 -HTTP METHOD : GET
2019-05-22 09:12:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:12:52 -参数 : [elecType]
2019-05-22 09:12:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:12:52 -==> Parameters: userType(String)
2019-05-22 09:12:52 -<==      Total: 4
2019-05-22 09:12:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:12:52 -耗时 : 5
2019-05-22 09:12:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:12:52 -==> Parameters: elecType(String)
2019-05-22 09:12:52 -<==      Total: 11
2019-05-22 09:12:52 -耗时 : 10
2019-05-22 09:12:52 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:13:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:13:34 -HTTP METHOD : GET
2019-05-22 09:13:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:13:34 -参数 : []
2019-05-22 09:13:34 -耗时 : 0
2019-05-22 09:13:34 -返回值 : system/dept/deptTree
2019-05-22 09:13:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:13:34 -HTTP METHOD : GET
2019-05-22 09:13:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:13:34 -参数 : []
2019-05-22 09:13:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:13:34 -==> Parameters: 
2019-05-22 09:13:34 -<==      Total: 3
2019-05-22 09:13:34 -耗时 : 15
2019-05-22 09:13:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:14:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/save
2019-05-22 09:14:00 -HTTP METHOD : POST
2019-05-22 09:14:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.save
2019-05-22 09:14:00 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@4d7201df]
2019-05-22 09:14:00 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 09:14:00 -==> Parameters: 7-1234(String), 你带饭(String), A(String), 2(String), 1(String), 90(BigDecimal), 2020-03-19 00:33:00.0(Timestamp), 2019-03(String), 1(Long), 2019-05-22 09:14:00.993(Timestamp), 1(Long), (String)
2019-05-22 09:14:01 -<==    Updates: 1
2019-05-22 09:14:01 -耗时 : 111
2019-05-22 09:14:01 -返回值 : {msg=操作成功, code=0}
2019-05-22 09:14:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:14:01 -HTTP METHOD : GET
2019-05-22 09:14:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:14:01 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 09:14:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 09:14:01 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:14:01 -<==      Total: 10
2019-05-22 09:14:01 -==>  Preparing: select count(*) from elec_log 
2019-05-22 09:14:01 -==> Parameters: 
2019-05-22 09:14:01 -<==      Total: 1
2019-05-22 09:14:01 -耗时 : 9
2019-05-22 09:14:01 -返回值 : com.bootdo.common.utils.PageUtils@c843fad
2019-05-22 09:14:10 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:14:10 -HTTP METHOD : GET
2019-05-22 09:14:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:14:10 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-05-22 09:14:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-05-22 09:14:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-05-22 09:14:10 -<==      Total: 4
2019-05-22 09:14:10 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-05-22 09:14:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-05-22 09:14:10 -<==      Total: 1
2019-05-22 09:14:10 -耗时 : 10
2019-05-22 09:14:10 -返回值 : com.bootdo.common.utils.PageUtils@4066684a
2019-05-22 09:14:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:14:21 -HTTP METHOD : GET
2019-05-22 09:14:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:14:21 -参数 : []
2019-05-22 09:14:21 -耗时 : 1
2019-05-22 09:14:21 -返回值 : system/dept/deptTree
2019-05-22 09:14:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:14:21 -HTTP METHOD : GET
2019-05-22 09:14:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:14:21 -参数 : []
2019-05-22 09:14:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:14:21 -==> Parameters: 
2019-05-22 09:14:21 -<==      Total: 3
2019-05-22 09:14:21 -耗时 : 5
2019-05-22 09:14:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:14:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:14:24 -HTTP METHOD : GET
2019-05-22 09:14:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:14:24 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:14:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:14:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:14:24 -<==      Total: 2
2019-05-22 09:14:24 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-22 09:14:24 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-22 09:14:24 -<==      Total: 1
2019-05-22 09:14:24 -耗时 : 10
2019-05-22 09:14:24 -返回值 : com.bootdo.common.utils.PageUtils@41a686bd
2019-05-22 09:14:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:14:27 -HTTP METHOD : GET
2019-05-22 09:14:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:14:27 -参数 : []
2019-05-22 09:14:27 -耗时 : 0
2019-05-22 09:14:27 -返回值 : system/dept/deptTree
2019-05-22 09:14:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:14:28 -HTTP METHOD : GET
2019-05-22 09:14:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:14:28 -参数 : []
2019-05-22 09:14:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:14:28 -==> Parameters: 
2019-05-22 09:14:28 -<==      Total: 3
2019-05-22 09:14:28 -耗时 : 3
2019-05-22 09:14:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:14:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:14:40 -HTTP METHOD : GET
2019-05-22 09:14:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:14:40 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=7-1234, elecDate=2019-03-19}]
2019-05-22 09:14:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? and user_id = ? order by id asc limit ?, ? 
2019-05-22 09:14:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 7-1234(String), 0(Integer), 10(Integer)
2019-05-22 09:14:40 -<==      Total: 0
2019-05-22 09:14:40 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? and user_id = ? 
2019-05-22 09:14:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 7-1234(String)
2019-05-22 09:14:40 -<==      Total: 1
2019-05-22 09:14:40 -耗时 : 12
2019-05-22 09:14:40 -返回值 : com.bootdo.common.utils.PageUtils@315173bf
2019-05-22 09:14:41 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:14:41 -HTTP METHOD : GET
2019-05-22 09:14:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:14:41 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=7-1234, elecDate=2019-03-19}]
2019-05-22 09:14:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? and user_id = ? order by id asc limit ?, ? 
2019-05-22 09:14:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 7-1234(String), 0(Integer), 10(Integer)
2019-05-22 09:14:41 -<==      Total: 0
2019-05-22 09:14:41 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? and user_id = ? 
2019-05-22 09:14:41 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 7-1234(String)
2019-05-22 09:14:41 -<==      Total: 1
2019-05-22 09:14:41 -耗时 : 7
2019-05-22 09:14:41 -返回值 : com.bootdo.common.utils.PageUtils@6cfdc92d
2019-05-22 09:14:42 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:14:42 -HTTP METHOD : GET
2019-05-22 09:14:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:14:42 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=7-1234, elecDate=2019-03-19}]
2019-05-22 09:14:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? and user_id = ? order by id asc limit ?, ? 
2019-05-22 09:14:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 7-1234(String), 0(Integer), 10(Integer)
2019-05-22 09:14:42 -<==      Total: 0
2019-05-22 09:14:42 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? and user_id = ? 
2019-05-22 09:14:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 7-1234(String)
2019-05-22 09:14:42 -<==      Total: 1
2019-05-22 09:14:42 -耗时 : 6
2019-05-22 09:14:42 -返回值 : com.bootdo.common.utils.PageUtils@7364dda4
2019-05-22 09:16:39 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-22 09:16:39 -HTTP METHOD : GET
2019-05-22 09:16:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-22 09:16:39 -参数 : []
2019-05-22 09:16:39 -耗时 : 7
2019-05-22 09:16:39 -返回值 : /moneyLog/heatLog/heatLog
2019-05-22 09:16:39 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-22 09:16:39 -HTTP METHOD : GET
2019-05-22 09:16:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:16:39 -参数 : [heatType]
2019-05-22 09:16:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:16:39 -HTTP METHOD : GET
2019-05-22 09:16:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:16:39 -参数 : [userType]
2019-05-22 09:16:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:16:39 -==> Parameters: heatType(String)
2019-05-22 09:16:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:16:39 -==> Parameters: userType(String)
2019-05-22 09:16:39 -<==      Total: 4
2019-05-22 09:16:39 -耗时 : 7
2019-05-22 09:16:39 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:16:39 -<==      Total: 4
2019-05-22 09:16:39 -耗时 : 9
2019-05-22 09:16:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:16:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-22 09:16:39 -HTTP METHOD : GET
2019-05-22 09:16:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-22 09:16:39 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-22 09:16:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-22 09:16:39 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:16:39 -<==      Total: 10
2019-05-22 09:16:39 -==>  Preparing: select count(*) from heat_log 
2019-05-22 09:16:39 -==> Parameters: 
2019-05-22 09:16:39 -<==      Total: 1
2019-05-22 09:16:39 -耗时 : 121
2019-05-22 09:16:39 -返回值 : com.bootdo.common.utils.PageUtils@3898c633
2019-05-22 09:16:42 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-22 09:16:42 -HTTP METHOD : GET
2019-05-22 09:16:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-22 09:16:42 -参数 : []
2019-05-22 09:16:42 -耗时 : 1
2019-05-22 09:16:42 -返回值 : /moneyLog/waterLog/waterLog
2019-05-22 09:16:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:16:42 -HTTP METHOD : GET
2019-05-22 09:16:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:16:42 -参数 : [userType]
2019-05-22 09:16:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:16:42 -==> Parameters: userType(String)
2019-05-22 09:16:42 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 09:16:42 -HTTP METHOD : GET
2019-05-22 09:16:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:16:42 -参数 : [waterType]
2019-05-22 09:16:42 -<==      Total: 4
2019-05-22 09:16:42 -耗时 : 5
2019-05-22 09:16:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:16:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:16:42 -==> Parameters: waterType(String)
2019-05-22 09:16:42 -<==      Total: 4
2019-05-22 09:16:42 -耗时 : 6
2019-05-22 09:16:42 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:16:42 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:16:42 -HTTP METHOD : GET
2019-05-22 09:16:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:16:42 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-22 09:16:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-22 09:16:42 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:16:42 -<==      Total: 10
2019-05-22 09:16:42 -==>  Preparing: select count(*) from water_log 
2019-05-22 09:16:42 -==> Parameters: 
2019-05-22 09:16:42 -<==      Total: 1
2019-05-22 09:16:42 -耗时 : 93
2019-05-22 09:16:42 -返回值 : com.bootdo.common.utils.PageUtils@6e3311eb
2019-05-22 09:16:51 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:16:51 -HTTP METHOD : GET
2019-05-22 09:16:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:16:51 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=2019-05-20}]
2019-05-22 09:16:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-05-22 09:16:51 -==> Parameters: 2019-05-20 00:00:00(String), 2019-05-20 23:59:59(String), 0(Integer), 10(Integer)
2019-05-22 09:16:51 -<==      Total: 10
2019-05-22 09:16:51 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? 
2019-05-22 09:16:51 -==> Parameters: 2019-05-20 00:00:00(String), 2019-05-20 23:59:59(String)
2019-05-22 09:16:51 -<==      Total: 1
2019-05-22 09:16:51 -耗时 : 20
2019-05-22 09:16:51 -返回值 : com.bootdo.common.utils.PageUtils@bf36793
2019-05-22 09:17:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-05-22 09:17:04 -HTTP METHOD : GET
2019-05-22 09:17:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-05-22 09:17:04 -参数 : []
2019-05-22 09:17:04 -耗时 : 1
2019-05-22 09:17:04 -返回值 : moneyLog/waterLog/add
2019-05-22 09:17:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:17:04 -HTTP METHOD : GET
2019-05-22 09:17:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:17:04 -参数 : [userType]
2019-05-22 09:17:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:17:04 -==> Parameters: userType(String)
2019-05-22 09:17:04 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 09:17:04 -HTTP METHOD : GET
2019-05-22 09:17:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:17:04 -参数 : [waterType]
2019-05-22 09:17:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:17:04 -==> Parameters: waterType(String)
2019-05-22 09:17:04 -<==      Total: 4
2019-05-22 09:17:04 -<==      Total: 4
2019-05-22 09:17:04 -耗时 : 5
2019-05-22 09:17:04 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:17:04 -耗时 : 11
2019-05-22 09:17:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:17:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:17:17 -HTTP METHOD : GET
2019-05-22 09:17:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:17:17 -参数 : []
2019-05-22 09:17:17 -耗时 : 0
2019-05-22 09:17:17 -返回值 : system/dept/deptTree
2019-05-22 09:17:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:17:17 -HTTP METHOD : GET
2019-05-22 09:17:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:17:17 -参数 : []
2019-05-22 09:17:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:17:17 -==> Parameters: 
2019-05-22 09:17:17 -<==      Total: 3
2019-05-22 09:17:17 -耗时 : 3
2019-05-22 09:17:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:17:59 -请求地址 : http://localhost:8081/moneyLog/waterLog/save
2019-05-22 09:17:59 -HTTP METHOD : POST
2019-05-22 09:17:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.save
2019-05-22 09:17:59 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@17cf3a1a]
2019-05-22 09:17:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 09:17:59 -==> Parameters: 7-1234(String), 骨灰级(String), A(String), 2(String), 1(String), 80(BigDecimal), 2019-05-22 00:00:00.0(Timestamp), 2019-03(String), 1(Long), 2019-05-22 09:17:59.286(Timestamp), 1(Long), (String)
2019-05-22 09:17:59 -<==    Updates: 1
2019-05-22 09:17:59 -耗时 : 218
2019-05-22 09:17:59 -返回值 : {msg=操作成功, code=0}
2019-05-22 09:17:59 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:17:59 -HTTP METHOD : GET
2019-05-22 09:17:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:17:59 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=2019-05-20}]
2019-05-22 09:17:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-05-22 09:17:59 -==> Parameters: 2019-05-20 00:00:00(String), 2019-05-20 23:59:59(String), 0(Integer), 10(Integer)
2019-05-22 09:17:59 -<==      Total: 10
2019-05-22 09:17:59 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? 
2019-05-22 09:17:59 -==> Parameters: 2019-05-20 00:00:00(String), 2019-05-20 23:59:59(String)
2019-05-22 09:17:59 -<==      Total: 1
2019-05-22 09:17:59 -耗时 : 53
2019-05-22 09:17:59 -返回值 : com.bootdo.common.utils.PageUtils@153030f4
2019-05-22 09:18:05 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:18:05 -HTTP METHOD : GET
2019-05-22 09:18:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:18:05 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=2019-05-20}]
2019-05-22 09:18:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-05-22 09:18:05 -==> Parameters: 2019-05-20 00:00:00(String), 2019-05-20 23:59:59(String), 0(Integer), 10(Integer)
2019-05-22 09:18:05 -<==      Total: 10
2019-05-22 09:18:05 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? 
2019-05-22 09:18:05 -==> Parameters: 2019-05-20 00:00:00(String), 2019-05-20 23:59:59(String)
2019-05-22 09:18:05 -<==      Total: 1
2019-05-22 09:18:05 -耗时 : 11
2019-05-22 09:18:05 -返回值 : com.bootdo.common.utils.PageUtils@31728c14
2019-05-22 09:18:11 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:18:11 -HTTP METHOD : GET
2019-05-22 09:18:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:18:11 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-22 09:18:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-22 09:18:11 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:18:11 -<==      Total: 10
2019-05-22 09:18:11 -==>  Preparing: select count(*) from water_log 
2019-05-22 09:18:11 -==> Parameters: 
2019-05-22 09:18:11 -<==      Total: 1
2019-05-22 09:18:11 -耗时 : 10
2019-05-22 09:18:11 -返回值 : com.bootdo.common.utils.PageUtils@296cbf7d
2019-05-22 09:18:13 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:18:13 -HTTP METHOD : GET
2019-05-22 09:18:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:18:13 -参数 : [{limit=10, offset=10, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-22 09:18:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-22 09:18:13 -==> Parameters: 10(Integer), 10(Integer)
2019-05-22 09:18:13 -<==      Total: 10
2019-05-22 09:18:13 -==>  Preparing: select count(*) from water_log 
2019-05-22 09:18:13 -==> Parameters: 
2019-05-22 09:18:13 -<==      Total: 1
2019-05-22 09:18:13 -耗时 : 17
2019-05-22 09:18:13 -返回值 : com.bootdo.common.utils.PageUtils@1813c6d0
2019-05-22 09:18:21 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/21
2019-05-22 09:18:21 -HTTP METHOD : GET
2019-05-22 09:18:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-05-22 09:18:21 -参数 : [21, {}]
2019-05-22 09:18:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-05-22 09:18:21 -==> Parameters: 21(Long)
2019-05-22 09:18:21 -<==      Total: 1
2019-05-22 09:18:21 -耗时 : 7
2019-05-22 09:18:21 -返回值 : moneyLog/waterLog/edit
2019-05-22 09:18:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:18:21 -HTTP METHOD : GET
2019-05-22 09:18:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:18:21 -参数 : [userType]
2019-05-22 09:18:21 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 09:18:21 -HTTP METHOD : GET
2019-05-22 09:18:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:18:21 -参数 : [waterType]
2019-05-22 09:18:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:18:21 -==> Parameters: waterType(String)
2019-05-22 09:18:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:18:21 -==> Parameters: userType(String)
2019-05-22 09:18:21 -<==      Total: 4
2019-05-22 09:18:21 -耗时 : 4
2019-05-22 09:18:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:18:21 -<==      Total: 4
2019-05-22 09:18:21 -耗时 : 8
2019-05-22 09:18:21 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:18:32 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-22 09:18:32 -HTTP METHOD : GET
2019-05-22 09:18:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-22 09:18:32 -参数 : []
2019-05-22 09:18:32 -耗时 : 1
2019-05-22 09:18:32 -返回值 : /moneyLog/heatLog/heatLog
2019-05-22 09:18:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:18:32 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-22 09:18:32 -HTTP METHOD : GET
2019-05-22 09:18:32 -HTTP METHOD : GET
2019-05-22 09:18:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:18:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:18:32 -参数 : [userType]
2019-05-22 09:18:32 -参数 : [heatType]
2019-05-22 09:18:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:18:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:18:32 -==> Parameters: userType(String)
2019-05-22 09:18:32 -==> Parameters: heatType(String)
2019-05-22 09:18:32 -<==      Total: 4
2019-05-22 09:18:32 -耗时 : 5
2019-05-22 09:18:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:18:32 -<==      Total: 4
2019-05-22 09:18:32 -耗时 : 13
2019-05-22 09:18:32 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:18:32 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-22 09:18:32 -HTTP METHOD : GET
2019-05-22 09:18:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-22 09:18:32 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-22 09:18:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-22 09:18:32 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:18:32 -<==      Total: 10
2019-05-22 09:18:32 -==>  Preparing: select count(*) from heat_log 
2019-05-22 09:18:32 -==> Parameters: 
2019-05-22 09:18:32 -<==      Total: 1
2019-05-22 09:18:32 -耗时 : 17
2019-05-22 09:18:32 -返回值 : com.bootdo.common.utils.PageUtils@2516f9cb
2019-05-22 09:18:34 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-22 09:18:34 -HTTP METHOD : GET
2019-05-22 09:18:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-22 09:18:34 -参数 : []
2019-05-22 09:18:34 -耗时 : 0
2019-05-22 09:18:34 -返回值 : /moneyLog/elecLog/elecLog
2019-05-22 09:18:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:18:34 -HTTP METHOD : GET
2019-05-22 09:18:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:18:34 -参数 : [userType]
2019-05-22 09:18:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:18:34 -==> Parameters: userType(String)
2019-05-22 09:18:34 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 09:18:34 -HTTP METHOD : GET
2019-05-22 09:18:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:18:34 -参数 : [elecType]
2019-05-22 09:18:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:18:34 -==> Parameters: elecType(String)
2019-05-22 09:18:34 -<==      Total: 4
2019-05-22 09:18:34 -耗时 : 5
2019-05-22 09:18:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:18:34 -<==      Total: 11
2019-05-22 09:18:34 -耗时 : 9
2019-05-22 09:18:34 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:18:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:18:34 -HTTP METHOD : GET
2019-05-22 09:18:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:18:34 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 09:18:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 09:18:34 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:18:34 -<==      Total: 10
2019-05-22 09:18:34 -==>  Preparing: select count(*) from elec_log 
2019-05-22 09:18:34 -==> Parameters: 
2019-05-22 09:18:34 -<==      Total: 1
2019-05-22 09:18:34 -耗时 : 12
2019-05-22 09:18:34 -返回值 : com.bootdo.common.utils.PageUtils@6a1423b2
2019-05-22 09:18:38 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:18:38 -HTTP METHOD : GET
2019-05-22 09:18:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:18:38 -参数 : [{limit=10, offset=20, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 09:18:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 09:18:38 -==> Parameters: 20(Integer), 10(Integer)
2019-05-22 09:18:38 -<==      Total: 5
2019-05-22 09:18:38 -==>  Preparing: select count(*) from elec_log 
2019-05-22 09:18:38 -==> Parameters: 
2019-05-22 09:18:38 -<==      Total: 1
2019-05-22 09:18:38 -耗时 : 12
2019-05-22 09:18:38 -返回值 : com.bootdo.common.utils.PageUtils@685825de
2019-05-22 09:19:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:19:04 -HTTP METHOD : GET
2019-05-22 09:19:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:19:04 -参数 : [{limit=10, offset=20, userType=, elecType=, userOrg=, userId=, elecDate=2020-03-19}]
2019-05-22 09:19:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-05-22 09:19:04 -==> Parameters: 2020-03-19 00:00:00(String), 2020-03-19 23:59:59(String), 20(Integer), 10(Integer)
2019-05-22 09:19:04 -<==      Total: 0
2019-05-22 09:19:04 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-05-22 09:19:04 -==> Parameters: 2020-03-19 00:00:00(String), 2020-03-19 23:59:59(String)
2019-05-22 09:19:04 -<==      Total: 1
2019-05-22 09:19:04 -耗时 : 6
2019-05-22 09:19:04 -返回值 : com.bootdo.common.utils.PageUtils@17b6a6ed
2019-05-22 09:19:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:19:05 -HTTP METHOD : GET
2019-05-22 09:19:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:19:05 -参数 : []
2019-05-22 09:19:05 -耗时 : 0
2019-05-22 09:19:05 -返回值 : system/dept/deptTree
2019-05-22 09:19:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:19:06 -HTTP METHOD : GET
2019-05-22 09:19:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:19:06 -参数 : []
2019-05-22 09:19:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:19:06 -==> Parameters: 
2019-05-22 09:19:06 -<==      Total: 3
2019-05-22 09:19:06 -耗时 : 7
2019-05-22 09:19:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:19:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:19:08 -HTTP METHOD : GET
2019-05-22 09:19:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:19:08 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2020-03-19}]
2019-05-22 09:19:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:19:08 -==> Parameters: 2020-03-19 00:00:00(String), 2020-03-19 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:19:08 -<==      Total: 1
2019-05-22 09:19:08 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-22 09:19:08 -==> Parameters: 2020-03-19 00:00:00(String), 2020-03-19 23:59:59(String), 2(String)
2019-05-22 09:19:08 -<==      Total: 1
2019-05-22 09:19:08 -耗时 : 5
2019-05-22 09:19:08 -返回值 : com.bootdo.common.utils.PageUtils@3067cf8a
2019-05-22 09:19:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/remove
2019-05-22 09:19:21 -HTTP METHOD : POST
2019-05-22 09:19:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.remove
2019-05-22 09:19:21 -参数 : [25]
2019-05-22 09:19:21 -==>  Preparing: delete from elec_log where id = ? 
2019-05-22 09:19:21 -==> Parameters: 25(Long)
2019-05-22 09:19:21 -<==    Updates: 1
2019-05-22 09:19:21 -耗时 : 208
2019-05-22 09:19:21 -返回值 : {msg=操作成功, code=0}
2019-05-22 09:19:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:19:21 -HTTP METHOD : GET
2019-05-22 09:19:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:19:21 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2020-03-19}]
2019-05-22 09:19:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:19:21 -==> Parameters: 2020-03-19 00:00:00(String), 2020-03-19 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:19:21 -<==      Total: 0
2019-05-22 09:19:21 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-22 09:19:21 -==> Parameters: 2020-03-19 00:00:00(String), 2020-03-19 23:59:59(String), 2(String)
2019-05-22 09:19:21 -<==      Total: 1
2019-05-22 09:19:21 -耗时 : 5
2019-05-22 09:19:21 -返回值 : com.bootdo.common.utils.PageUtils@5fe3ed3
2019-05-22 09:19:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-22 09:19:31 -HTTP METHOD : GET
2019-05-22 09:19:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-22 09:19:31 -参数 : []
2019-05-22 09:19:31 -耗时 : 1
2019-05-22 09:19:31 -返回值 : /moneyLog/heatLog/heatLog
2019-05-22 09:19:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:19:31 -HTTP METHOD : GET
2019-05-22 09:19:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:19:31 -参数 : [userType]
2019-05-22 09:19:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:19:31 -==> Parameters: userType(String)
2019-05-22 09:19:31 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-22 09:19:31 -HTTP METHOD : GET
2019-05-22 09:19:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:19:31 -参数 : [heatType]
2019-05-22 09:19:31 -<==      Total: 4
2019-05-22 09:19:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:19:31 -==> Parameters: heatType(String)
2019-05-22 09:19:31 -耗时 : 3
2019-05-22 09:19:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:19:31 -<==      Total: 4
2019-05-22 09:19:31 -耗时 : 4
2019-05-22 09:19:31 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:19:31 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-22 09:19:31 -HTTP METHOD : GET
2019-05-22 09:19:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-22 09:19:31 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-22 09:19:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-22 09:19:31 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:19:31 -<==      Total: 10
2019-05-22 09:19:31 -==>  Preparing: select count(*) from heat_log 
2019-05-22 09:19:31 -==> Parameters: 
2019-05-22 09:19:31 -<==      Total: 1
2019-05-22 09:19:31 -耗时 : 6
2019-05-22 09:19:31 -返回值 : com.bootdo.common.utils.PageUtils@3ff7a7fb
2019-05-22 09:19:32 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-22 09:19:32 -HTTP METHOD : GET
2019-05-22 09:19:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-22 09:19:32 -参数 : []
2019-05-22 09:19:32 -耗时 : 0
2019-05-22 09:19:32 -返回值 : /moneyLog/waterLog/waterLog
2019-05-22 09:19:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:19:32 -HTTP METHOD : GET
2019-05-22 09:19:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:19:32 -参数 : [userType]
2019-05-22 09:19:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:19:32 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 09:19:32 -HTTP METHOD : GET
2019-05-22 09:19:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:19:32 -参数 : [waterType]
2019-05-22 09:19:32 -==> Parameters: userType(String)
2019-05-22 09:19:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:19:32 -==> Parameters: waterType(String)
2019-05-22 09:19:32 -<==      Total: 4
2019-05-22 09:19:32 -<==      Total: 4
2019-05-22 09:19:32 -耗时 : 4
2019-05-22 09:19:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:19:32 -耗时 : 3
2019-05-22 09:19:32 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:19:32 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:19:32 -HTTP METHOD : GET
2019-05-22 09:19:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:19:32 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-22 09:19:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-22 09:19:32 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:19:32 -<==      Total: 10
2019-05-22 09:19:32 -==>  Preparing: select count(*) from water_log 
2019-05-22 09:19:32 -==> Parameters: 
2019-05-22 09:19:32 -<==      Total: 1
2019-05-22 09:19:32 -耗时 : 10
2019-05-22 09:19:32 -返回值 : com.bootdo.common.utils.PageUtils@5cac537a
2019-05-22 09:19:45 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:19:45 -HTTP METHOD : GET
2019-05-22 09:19:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:19:45 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=2019-03-08}]
2019-05-22 09:19:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-05-22 09:19:45 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-05-22 09:19:45 -<==      Total: 3
2019-05-22 09:19:45 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? 
2019-05-22 09:19:45 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-05-22 09:19:45 -<==      Total: 1
2019-05-22 09:19:45 -耗时 : 6
2019-05-22 09:19:45 -返回值 : com.bootdo.common.utils.PageUtils@3d19a54c
2019-05-22 09:19:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:19:50 -HTTP METHOD : GET
2019-05-22 09:19:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:19:50 -参数 : []
2019-05-22 09:19:50 -耗时 : 0
2019-05-22 09:19:50 -返回值 : system/dept/deptTree
2019-05-22 09:19:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:19:50 -HTTP METHOD : GET
2019-05-22 09:19:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:19:50 -参数 : []
2019-05-22 09:19:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:19:50 -==> Parameters: 
2019-05-22 09:19:50 -<==      Total: 3
2019-05-22 09:19:50 -耗时 : 5
2019-05-22 09:19:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:19:53 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:19:53 -HTTP METHOD : GET
2019-05-22 09:19:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:19:53 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, waterDate=2019-03-08}]
2019-05-22 09:19:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:19:53 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:19:53 -<==      Total: 3
2019-05-22 09:19:53 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-22 09:19:53 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String)
2019-05-22 09:19:53 -<==      Total: 1
2019-05-22 09:19:53 -耗时 : 11
2019-05-22 09:19:53 -返回值 : com.bootdo.common.utils.PageUtils@278030d9
2019-05-22 09:19:54 -请求地址 : http://localhost:8081/moneyLog/waterLog/exprotWaterLog
2019-05-22 09:19:54 -HTTP METHOD : GET
2019-05-22 09:19:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog
2019-05-22 09:19:54 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@29ac4ed7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3c890f79, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2849c4b9]
2019-05-22 09:19:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-22 09:19:54 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String)
2019-05-22 09:19:54 -<==      Total: 3
2019-05-22 09:19:55 -耗时 : 943
2019-05-22 09:19:55 -返回值 : null
2019-05-22 09:27:24 -请求地址 : http://localhost:8081/index
2019-05-22 09:27:24 -HTTP METHOD : GET
2019-05-22 09:27:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 09:27:24 -参数 : [{}]
2019-05-22 09:27:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 09:27:24 -==> Parameters: 1(Long)
2019-05-22 09:27:24 -<==      Total: 49
2019-05-22 09:27:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 09:27:24 -==> Parameters: 138(Long)
2019-05-22 09:27:24 -<==      Total: 1
2019-05-22 09:27:24 -耗时 : 52
2019-05-22 09:27:24 -返回值 : index_v1
2019-05-22 09:27:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 09:27:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 53(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 09:27:24.181(Timestamp)
2019-05-22 09:27:24 -<==    Updates: 1
2019-05-22 09:27:24 -请求地址 : http://localhost:8081/main
2019-05-22 09:27:24 -HTTP METHOD : GET
2019-05-22 09:27:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 09:27:24 -参数 : []
2019-05-22 09:27:24 -耗时 : 0
2019-05-22 09:27:24 -返回值 : main
2019-05-22 09:27:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 09:27:24 -HTTP METHOD : GET
2019-05-22 09:27:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 09:27:24 -参数 : []
2019-05-22 09:27:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 09:27:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 09:27:24 -<==      Total: 0
2019-05-22 09:27:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 09:27:24 -==> Parameters: 1(Long), 0(String)
2019-05-22 09:27:24 -<==      Total: 1
2019-05-22 09:27:24 -耗时 : 10
2019-05-22 09:27:24 -返回值 : com.bootdo.common.utils.PageUtils@20bf900c
2019-05-22 09:27:24 -请求地址 : http://localhost:8081/main
2019-05-22 09:27:24 -HTTP METHOD : GET
2019-05-22 09:27:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 09:27:24 -参数 : []
2019-05-22 09:27:24 -耗时 : 0
2019-05-22 09:27:24 -返回值 : main
2019-05-22 09:27:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 09:27:26 -==> Parameters: 1(Long)
2019-05-22 09:27:26 -<==      Total: 93
2019-05-22 09:27:26 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-22 09:27:26 -HTTP METHOD : GET
2019-05-22 09:27:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-22 09:27:26 -参数 : []
2019-05-22 09:27:26 -耗时 : 0
2019-05-22 09:27:26 -返回值 : /moneyLog/elecLog/elecLog
2019-05-22 09:27:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:27:26 -HTTP METHOD : GET
2019-05-22 09:27:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:27:26 -参数 : [userType]
2019-05-22 09:27:26 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 09:27:26 -HTTP METHOD : GET
2019-05-22 09:27:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:27:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:27:26 -参数 : [elecType]
2019-05-22 09:27:26 -==> Parameters: userType(String)
2019-05-22 09:27:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:27:26 -==> Parameters: elecType(String)
2019-05-22 09:27:26 -<==      Total: 4
2019-05-22 09:27:26 -耗时 : 5
2019-05-22 09:27:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:27:26 -<==      Total: 11
2019-05-22 09:27:26 -耗时 : 5
2019-05-22 09:27:26 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:27:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:27:26 -HTTP METHOD : GET
2019-05-22 09:27:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:27:26 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 09:27:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 09:27:26 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:27:26 -<==      Total: 10
2019-05-22 09:27:26 -==>  Preparing: select count(*) from elec_log 
2019-05-22 09:27:26 -==> Parameters: 
2019-05-22 09:27:26 -<==      Total: 1
2019-05-22 09:27:26 -耗时 : 8
2019-05-22 09:27:26 -返回值 : com.bootdo.common.utils.PageUtils@42994c00
2019-05-22 09:27:27 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-22 09:27:27 -HTTP METHOD : GET
2019-05-22 09:27:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-22 09:27:27 -参数 : []
2019-05-22 09:27:27 -耗时 : 0
2019-05-22 09:27:27 -返回值 : /moneyLog/waterLog/waterLog
2019-05-22 09:27:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:27:27 -HTTP METHOD : GET
2019-05-22 09:27:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:27:27 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 09:27:27 -HTTP METHOD : GET
2019-05-22 09:27:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:27:27 -参数 : [waterType]
2019-05-22 09:27:27 -参数 : [userType]
2019-05-22 09:27:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:27:27 -==> Parameters: userType(String)
2019-05-22 09:27:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:27:27 -==> Parameters: waterType(String)
2019-05-22 09:27:27 -<==      Total: 4
2019-05-22 09:27:27 -<==      Total: 4
2019-05-22 09:27:27 -耗时 : 7
2019-05-22 09:27:27 -耗时 : 7
2019-05-22 09:27:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:27:27 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:27:27 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:27:27 -HTTP METHOD : GET
2019-05-22 09:27:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:27:27 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-22 09:27:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-22 09:27:27 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:27:27 -<==      Total: 10
2019-05-22 09:27:27 -==>  Preparing: select count(*) from water_log 
2019-05-22 09:27:27 -==> Parameters: 
2019-05-22 09:27:27 -<==      Total: 1
2019-05-22 09:27:27 -耗时 : 8
2019-05-22 09:27:27 -返回值 : com.bootdo.common.utils.PageUtils@bccd816
2019-05-22 09:27:34 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 09:27:34 -HTTP METHOD : GET
2019-05-22 09:27:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 09:27:34 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=2019-03-08}]
2019-05-22 09:27:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-05-22 09:27:34 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-05-22 09:27:34 -<==      Total: 3
2019-05-22 09:27:34 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? 
2019-05-22 09:27:34 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-05-22 09:27:34 -<==      Total: 1
2019-05-22 09:27:34 -耗时 : 8
2019-05-22 09:27:34 -返回值 : com.bootdo.common.utils.PageUtils@1c932b45
2019-05-22 09:27:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:27:36 -HTTP METHOD : GET
2019-05-22 09:27:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:27:36 -参数 : []
2019-05-22 09:27:36 -耗时 : 1
2019-05-22 09:27:36 -返回值 : system/dept/deptTree
2019-05-22 09:27:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:27:37 -HTTP METHOD : GET
2019-05-22 09:27:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:27:37 -参数 : []
2019-05-22 09:27:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:27:37 -==> Parameters: 
2019-05-22 09:27:37 -<==      Total: 3
2019-05-22 09:27:37 -耗时 : 3
2019-05-22 09:27:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:27:38 -请求地址 : http://localhost:8081/moneyLog/waterLog/exprotWaterLog
2019-05-22 09:27:38 -HTTP METHOD : GET
2019-05-22 09:27:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog
2019-05-22 09:27:38 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@6c19b83d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@685b3771, org.apache.shiro.web.servlet.ShiroHttpServletRequest@710f4652]
2019-05-22 09:27:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-22 09:27:38 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String)
2019-05-22 09:27:38 -<==      Total: 3
2019-05-22 09:27:38 -耗时 : 15
2019-05-22 09:27:38 -返回值 : null
2019-05-22 09:27:58 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-22 09:35:55 -Starting BootdoApplication on PC-201905091110 with PID 37268 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-22 09:35:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-22 09:35:55 -The following profiles are active: dev
2019-05-22 09:35:56 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Wed May 22 09:35:56 CST 2019]; root of context hierarchy
2019-05-22 09:35:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-22 09:36:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e01c8274] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:36:02 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d275b11b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:36:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:36:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:36:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:36:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-22 09:36:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-22 09:36:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:36:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:36:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:36:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:36:05 -Tomcat initialized with port(s): 8081 (http)
2019-05-22 09:36:05 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-22 09:36:05 -Starting service [Tomcat]
2019-05-22 09:36:05 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-22 09:36:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-22 09:36:06 -Initializing Spring embedded WebApplicationContext
2019-05-22 09:36:06 -Root WebApplicationContext: initialization completed in 10532 ms
2019-05-22 09:36:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-22 09:36:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-22 09:36:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-22 09:36:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-22 09:36:07 -Filter xssFilter was not registered (disabled)
2019-05-22 09:36:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-22 09:36:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-22 09:36:07 -Servlet statViewServlet mapped to [/druid/*]
2019-05-22 09:36:07 -Servlet dispatcherServlet mapped to [/]
2019-05-22 09:36:12 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Wed May 22 09:35:56 CST 2019]; root of context hierarchy
2019-05-22 09:36:13 -Using default implementation for ThreadExecutor
2019-05-22 09:36:13 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-22 09:36:13 -Quartz Scheduler v.2.2.1 created.
2019-05-22 09:36:13 -RAMJobStore initialized.
2019-05-22 09:36:13 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-22 09:36:13 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-22 09:36:13 -Quartz scheduler version: 2.2.1
2019-05-22 09:36:13 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7e18ced7
2019-05-22 09:36:13 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-22 09:36:13 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-22 09:36:16 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:16 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-22 09:36:16 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:36:16 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-22 09:36:16 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:36:16 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:16 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-22 09:36:16 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-22 09:36:16 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:16 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:36:16 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-22 09:36:16 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:16 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:16 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:36:16 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-22 09:36:16 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:36:16 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:16 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-22 09:36:16 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 09:36:16 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-22 09:36:16 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:16 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 09:36:16 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-22 09:36:16 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:16 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:36:16 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-22 09:36:16 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:16 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:36:16 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-22 09:36:16 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:16 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 09:36:16 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-22 09:36:16 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:16 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 09:36:16 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-22 09:36:16 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:16 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-22 09:36:16 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-22 09:36:16 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-22 09:36:16 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-22 09:36:16 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:16 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-22 09:36:16 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-22 09:36:16 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-22 09:36:16 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-22 09:36:16 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:16 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-22 09:36:16 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-22 09:36:16 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-22 09:36:16 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-22 09:36:16 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-22 09:36:16 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:16 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-22 09:36:16 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-22 09:36:16 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-22 09:36:16 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:16 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-22 09:36:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-22 09:36:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 09:36:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-22 09:36:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-22 09:36:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 09:36:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-22 09:36:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-22 09:36:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-22 09:36:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-22 09:36:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-22 09:36:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-22 09:36:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-22 09:36:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-22 09:36:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-22 09:36:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-22 09:36:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-22 09:36:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-22 09:36:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-22 09:36:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 09:36:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-22 09:36:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-22 09:36:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-22 09:36:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-22 09:36:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-22 09:36:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-22 09:36:17 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-22 09:36:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-22 09:36:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-22 09:36:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-22 09:36:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-22 09:36:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-22 09:36:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-22 09:36:17 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 09:36:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-22 09:36:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-22 09:36:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 09:36:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 09:36:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-22 09:36:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 09:36:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-22 09:36:17 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-22 09:36:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-22 09:36:17 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 09:36:17 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 09:36:17 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 09:36:17 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-22 09:36:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-22 09:36:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-22 09:36:17 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-22 09:36:17 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-22 09:36:17 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-22 09:36:17 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 09:36:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-22 09:36:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-22 09:36:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-22 09:36:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-22 09:36:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-22 09:36:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-22 09:36:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-22 09:36:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-22 09:36:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-22 09:36:17 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-22 09:36:17 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-22 09:36:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-22 09:36:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-22 09:36:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-22 09:36:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-22 09:36:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-22 09:36:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-22 09:36:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-22 09:36:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-22 09:36:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 09:36:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-22 09:36:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-22 09:36:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-22 09:36:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-22 09:36:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-22 09:36:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-22 09:36:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-22 09:36:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-22 09:36:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-22 09:36:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-22 09:36:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-22 09:36:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-22 09:36:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-22 09:36:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-22 09:36:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-22 09:36:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-22 09:36:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 09:36:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-22 09:36:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 09:36:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 09:36:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-22 09:36:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-22 09:36:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-22 09:36:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-22 09:36:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-22 09:36:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-22 09:36:17 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 09:36:17 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-22 09:36:17 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-22 09:36:17 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-22 09:36:17 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 09:36:17 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:36:17 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 09:36:17 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-22 09:36:17 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:36:17 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-22 09:36:17 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 09:36:17 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:36:17 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-22 09:36:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 09:36:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-22 09:36:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-22 09:36:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-22 09:36:17 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-22 09:36:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-22 09:36:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-22 09:36:18 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 09:36:18 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Wed May 22 09:35:56 CST 2019]; root of context hierarchy
2019-05-22 09:36:19 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 09:36:19 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 09:36:19 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 09:36:19 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-22 09:36:19 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-22 09:36:21 -Registering beans for JMX exposure on startup
2019-05-22 09:36:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-22 09:36:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-22 09:36:21 -Starting beans in phase 2147483647
2019-05-22 09:36:21 -Context refreshed
2019-05-22 09:36:23 -Found 1 custom documentation plugin(s)
2019-05-22 09:36:23 -Scanning for api listing references
2019-05-22 09:36:23 -Generating unique operation named: getCountDUsingPOST_1
2019-05-22 09:36:23 -Generating unique operation named: removeUsingPOST_1
2019-05-22 09:36:24 -Generating unique operation named: addUsingGET_1
2019-05-22 09:36:24 -Generating unique operation named: editUsingGET_1
2019-05-22 09:36:24 -Generating unique operation named: listUsingGET_1
2019-05-22 09:36:24 -Generating unique operation named: removeUsingPOST_2
2019-05-22 09:36:24 -Generating unique operation named: removeUsingPOST_3
2019-05-22 09:36:24 -Generating unique operation named: saveUsingPOST_1
2019-05-22 09:36:24 -Generating unique operation named: updateUsingGET_1
2019-05-22 09:36:24 -Generating unique operation named: updateUsingHEAD_1
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPOST_1
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPUT_1
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPATCH_1
2019-05-22 09:36:24 -Generating unique operation named: updateUsingDELETE_1
2019-05-22 09:36:24 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-22 09:36:24 -Generating unique operation named: updateUsingTRACE_1
2019-05-22 09:36:24 -Generating unique operation named: addUsingGET_2
2019-05-22 09:36:24 -Generating unique operation named: editUsingGET_2
2019-05-22 09:36:24 -Generating unique operation named: listUsingGET_2
2019-05-22 09:36:24 -Generating unique operation named: removeUsingPOST_4
2019-05-22 09:36:24 -Generating unique operation named: removeUsingPOST_5
2019-05-22 09:36:24 -Generating unique operation named: saveUsingPOST_2
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPOST_2
2019-05-22 09:36:24 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-22 09:36:24 -Generating unique operation named: addUsingGET_3
2019-05-22 09:36:24 -Generating unique operation named: editUsingGET_3
2019-05-22 09:36:24 -Generating unique operation named: listUsingGET_3
2019-05-22 09:36:24 -Generating unique operation named: removeUsingPOST_6
2019-05-22 09:36:24 -Generating unique operation named: removeUsingPOST_7
2019-05-22 09:36:24 -Generating unique operation named: saveUsingPOST_3
2019-05-22 09:36:24 -Generating unique operation named: updateUsingGET_2
2019-05-22 09:36:24 -Generating unique operation named: updateUsingHEAD_2
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPOST_3
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPUT_2
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPATCH_2
2019-05-22 09:36:24 -Generating unique operation named: updateUsingDELETE_2
2019-05-22 09:36:24 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-22 09:36:24 -Generating unique operation named: updateUsingTRACE_2
2019-05-22 09:36:24 -Generating unique operation named: addUsingGET_4
2019-05-22 09:36:24 -Generating unique operation named: editUsingGET_4
2019-05-22 09:36:24 -Generating unique operation named: listUsingGET_4
2019-05-22 09:36:24 -Generating unique operation named: removeUsingPOST_8
2019-05-22 09:36:24 -Generating unique operation named: removeUsingPOST_9
2019-05-22 09:36:24 -Generating unique operation named: saveUsingPOST_4
2019-05-22 09:36:24 -Generating unique operation named: updateUsingGET_3
2019-05-22 09:36:24 -Generating unique operation named: updateUsingHEAD_3
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPOST_4
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPUT_3
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPATCH_3
2019-05-22 09:36:24 -Generating unique operation named: updateUsingDELETE_3
2019-05-22 09:36:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-22 09:36:24 -Generating unique operation named: updateUsingTRACE_3
2019-05-22 09:36:24 -Generating unique operation named: ElecUsingGET_1
2019-05-22 09:36:24 -Generating unique operation named: addUsingGET_5
2019-05-22 09:36:24 -Generating unique operation named: editUsingGET_5
2019-05-22 09:36:24 -Generating unique operation named: listUsingGET_5
2019-05-22 09:36:24 -Generating unique operation named: removeUsingPOST_10
2019-05-22 09:36:24 -Generating unique operation named: removeUsingPOST_11
2019-05-22 09:36:24 -Generating unique operation named: saveUsingPOST_5
2019-05-22 09:36:24 -Generating unique operation named: updateUsingGET_4
2019-05-22 09:36:24 -Generating unique operation named: updateUsingHEAD_4
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPOST_5
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPUT_4
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPATCH_4
2019-05-22 09:36:24 -Generating unique operation named: updateUsingDELETE_4
2019-05-22 09:36:24 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-22 09:36:24 -Generating unique operation named: updateUsingTRACE_4
2019-05-22 09:36:24 -Generating unique operation named: editUsingGET_6
2019-05-22 09:36:24 -Generating unique operation named: listUsingGET_6
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPOST_6
2019-05-22 09:36:24 -Generating unique operation named: addUsingGET_6
2019-05-22 09:36:24 -Generating unique operation named: editUsingGET_7
2019-05-22 09:36:24 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-22 09:36:24 -Generating unique operation named: listUsingGET_7
2019-05-22 09:36:24 -Generating unique operation named: removeUsingPOST_12
2019-05-22 09:36:24 -Generating unique operation named: removeUsingPOST_13
2019-05-22 09:36:24 -Generating unique operation named: saveUsingPOST_6
2019-05-22 09:36:24 -Generating unique operation named: updateUsingGET_5
2019-05-22 09:36:24 -Generating unique operation named: updateUsingHEAD_5
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPOST_7
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPUT_5
2019-05-22 09:36:24 -Generating unique operation named: updateUsingPATCH_5
2019-05-22 09:36:24 -Generating unique operation named: updateUsingDELETE_5
2019-05-22 09:36:25 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-22 09:36:25 -Generating unique operation named: updateUsingTRACE_5
2019-05-22 09:36:25 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-22 09:36:25 -Generating unique operation named: addUsingGET_7
2019-05-22 09:36:25 -Generating unique operation named: editUsingGET_8
2019-05-22 09:36:25 -Generating unique operation named: listUsingGET_8
2019-05-22 09:36:25 -Generating unique operation named: removeUsingPOST_14
2019-05-22 09:36:25 -Generating unique operation named: removeUsingPOST_15
2019-05-22 09:36:25 -Generating unique operation named: saveUsingPOST_7
2019-05-22 09:36:25 -Generating unique operation named: updateUsingGET_6
2019-05-22 09:36:25 -Generating unique operation named: updateUsingHEAD_6
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPOST_8
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPUT_6
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPATCH_6
2019-05-22 09:36:25 -Generating unique operation named: updateUsingDELETE_6
2019-05-22 09:36:25 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-22 09:36:25 -Generating unique operation named: updateUsingTRACE_6
2019-05-22 09:36:25 -Generating unique operation named: addUsingGET_8
2019-05-22 09:36:25 -Generating unique operation named: editUsingGET_9
2019-05-22 09:36:25 -Generating unique operation named: listUsingGET_9
2019-05-22 09:36:25 -Generating unique operation named: removeUsingPOST_16
2019-05-22 09:36:25 -Generating unique operation named: removeUsingPOST_17
2019-05-22 09:36:25 -Generating unique operation named: saveUsingPOST_8
2019-05-22 09:36:25 -Generating unique operation named: updateUsingGET_7
2019-05-22 09:36:25 -Generating unique operation named: updateUsingHEAD_7
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPOST_9
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPUT_7
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPATCH_7
2019-05-22 09:36:25 -Generating unique operation named: updateUsingDELETE_7
2019-05-22 09:36:25 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-22 09:36:25 -Generating unique operation named: updateUsingTRACE_7
2019-05-22 09:36:25 -Generating unique operation named: addUsingGET_9
2019-05-22 09:36:25 -Generating unique operation named: editUsingGET_10
2019-05-22 09:36:25 -Generating unique operation named: infoUsingGET_1
2019-05-22 09:36:25 -Generating unique operation named: infoUsingHEAD_1
2019-05-22 09:36:25 -Generating unique operation named: infoUsingPOST_1
2019-05-22 09:36:25 -Generating unique operation named: infoUsingPUT_1
2019-05-22 09:36:25 -Generating unique operation named: infoUsingPATCH_1
2019-05-22 09:36:25 -Generating unique operation named: infoUsingDELETE_1
2019-05-22 09:36:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-22 09:36:25 -Generating unique operation named: infoUsingTRACE_1
2019-05-22 09:36:25 -Generating unique operation named: listUsingGET_10
2019-05-22 09:36:25 -Generating unique operation named: removeUsingPOST_18
2019-05-22 09:36:25 -Generating unique operation named: removeUsingPOST_19
2019-05-22 09:36:25 -Generating unique operation named: saveUsingPOST_9
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPOST_10
2019-05-22 09:36:25 -Generating unique operation named: listUsingGET_11
2019-05-22 09:36:25 -Generating unique operation named: removeUsingPOST_20
2019-05-22 09:36:25 -Generating unique operation named: welcomeUsingGET_1
2019-05-22 09:36:25 -Generating unique operation named: addUsingGET_10
2019-05-22 09:36:25 -Generating unique operation named: editUsingGET_11
2019-05-22 09:36:25 -Generating unique operation named: listUsingGET_12
2019-05-22 09:36:25 -Generating unique operation named: removeUsingPOST_21
2019-05-22 09:36:25 -Generating unique operation named: saveUsingPOST_10
2019-05-22 09:36:25 -Generating unique operation named: treeUsingGET_1
2019-05-22 09:36:25 -Generating unique operation named: treeUsingGET_2
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPOST_11
2019-05-22 09:36:25 -Generating unique operation named: editUsingGET_12
2019-05-22 09:36:25 -Generating unique operation named: addUsingGET_11
2019-05-22 09:36:25 -Generating unique operation named: editUsingGET_13
2019-05-22 09:36:25 -Generating unique operation named: listUsingGET_13
2019-05-22 09:36:25 -Generating unique operation named: removeUsingPOST_22
2019-05-22 09:36:25 -Generating unique operation named: removeUsingPOST_23
2019-05-22 09:36:25 -Generating unique operation named: saveUsingPOST_11
2019-05-22 09:36:25 -Generating unique operation named: updateUsingGET_8
2019-05-22 09:36:25 -Generating unique operation named: updateUsingHEAD_8
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPOST_12
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPUT_8
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPATCH_8
2019-05-22 09:36:25 -Generating unique operation named: updateUsingDELETE_8
2019-05-22 09:36:25 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-22 09:36:25 -Generating unique operation named: updateUsingTRACE_8
2019-05-22 09:36:25 -Generating unique operation named: addUsingGET_12
2019-05-22 09:36:25 -Generating unique operation named: editUsingGET_14
2019-05-22 09:36:25 -Generating unique operation named: listUsingGET_14
2019-05-22 09:36:25 -Generating unique operation named: removeUsingPOST_24
2019-05-22 09:36:25 -Generating unique operation named: removeUsingPOST_25
2019-05-22 09:36:25 -Generating unique operation named: saveUsingPOST_12
2019-05-22 09:36:25 -Generating unique operation named: updateUsingGET_9
2019-05-22 09:36:25 -Generating unique operation named: updateUsingHEAD_9
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPOST_13
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPUT_9
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPATCH_9
2019-05-22 09:36:25 -Generating unique operation named: updateUsingDELETE_9
2019-05-22 09:36:25 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-22 09:36:25 -Generating unique operation named: updateUsingTRACE_9
2019-05-22 09:36:25 -Generating unique operation named: addUsingGET_13
2019-05-22 09:36:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-22 09:36:25 -Generating unique operation named: editUsingGET_15
2019-05-22 09:36:25 -Generating unique operation named: listUsingGET_15
2019-05-22 09:36:25 -Generating unique operation named: saveUsingPOST_13
2019-05-22 09:36:25 -Generating unique operation named: saveUsingPOST_14
2019-05-22 09:36:25 -Generating unique operation named: updateUsingPOST_14
2019-05-22 09:36:26 -Generating unique operation named: listUsingGET_16
2019-05-22 09:36:26 -Generating unique operation named: listUsingHEAD_1
2019-05-22 09:36:26 -Generating unique operation named: listUsingPOST_1
2019-05-22 09:36:26 -Generating unique operation named: listUsingPUT_1
2019-05-22 09:36:26 -Generating unique operation named: listUsingPATCH_1
2019-05-22 09:36:26 -Generating unique operation named: listUsingDELETE_1
2019-05-22 09:36:26 -Generating unique operation named: listUsingOPTIONS_1
2019-05-22 09:36:26 -Generating unique operation named: listUsingTRACE_1
2019-05-22 09:36:26 -Generating unique operation named: countDDUsingGET_1
2019-05-22 09:36:26 -Generating unique operation named: exportDDUsingGET_1
2019-05-22 09:36:26 -Generating unique operation named: addUsingGET_14
2019-05-22 09:36:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-22 09:36:26 -Generating unique operation named: editUsingGET_16
2019-05-22 09:36:26 -Generating unique operation named: listUsingGET_17
2019-05-22 09:36:26 -Generating unique operation named: removeUsingPOST_26
2019-05-22 09:36:26 -Generating unique operation named: saveUsingPOST_15
2019-05-22 09:36:26 -Generating unique operation named: treeUsingGET_3
2019-05-22 09:36:26 -Generating unique operation named: treeViewUsingGET_1
2019-05-22 09:36:26 -Generating unique operation named: updateUsingPOST_15
2019-05-22 09:36:26 -Generating unique operation named: addUsingGET_15
2019-05-22 09:36:26 -Generating unique operation named: editUsingGET_17
2019-05-22 09:36:26 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-22 09:36:26 -Generating unique operation named: listUsingGET_18
2019-05-22 09:36:26 -Generating unique operation named: removeUsingPOST_27
2019-05-22 09:36:26 -Generating unique operation named: removeUsingPOST_28
2019-05-22 09:36:26 -Generating unique operation named: saveUsingPOST_16
2019-05-22 09:36:26 -Generating unique operation named: updateUsingGET_10
2019-05-22 09:36:26 -Generating unique operation named: updateUsingHEAD_10
2019-05-22 09:36:26 -Generating unique operation named: updateUsingPOST_16
2019-05-22 09:36:26 -Generating unique operation named: updateUsingPUT_10
2019-05-22 09:36:26 -Generating unique operation named: updateUsingPATCH_10
2019-05-22 09:36:26 -Generating unique operation named: updateUsingDELETE_10
2019-05-22 09:36:26 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-22 09:36:26 -Generating unique operation named: updateUsingTRACE_10
2019-05-22 09:36:26 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-22 09:36:26 -Generating unique operation named: addUsingGET_16
2019-05-22 09:36:26 -Generating unique operation named: editUsingGET_18
2019-05-22 09:36:26 -Generating unique operation named: listUsingGET_19
2019-05-22 09:36:26 -Generating unique operation named: removeUsingPOST_29
2019-05-22 09:36:26 -Generating unique operation named: removeUsingPOST_30
2019-05-22 09:36:26 -Generating unique operation named: saveUsingPOST_17
2019-05-22 09:36:26 -Generating unique operation named: updateUsingGET_11
2019-05-22 09:36:26 -Generating unique operation named: updateUsingHEAD_11
2019-05-22 09:36:26 -Generating unique operation named: updateUsingPOST_17
2019-05-22 09:36:26 -Generating unique operation named: updateUsingPUT_11
2019-05-22 09:36:26 -Generating unique operation named: updateUsingPATCH_11
2019-05-22 09:36:26 -Generating unique operation named: updateUsingDELETE_11
2019-05-22 09:36:26 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-22 09:36:26 -Generating unique operation named: updateUsingTRACE_11
2019-05-22 09:36:26 -Generating unique operation named: addUsingGET_17
2019-05-22 09:36:26 -Generating unique operation named: editUsingGET_19
2019-05-22 09:36:26 -Generating unique operation named: listUsingGET_20
2019-05-22 09:36:26 -Generating unique operation named: removeUsingPOST_31
2019-05-22 09:36:26 -Generating unique operation named: removeUsingPOST_32
2019-05-22 09:36:26 -Generating unique operation named: saveUsingPOST_18
2019-05-22 09:36:26 -Generating unique operation named: updateUsingGET_12
2019-05-22 09:36:26 -Generating unique operation named: updateUsingHEAD_12
2019-05-22 09:36:26 -Generating unique operation named: updateUsingPOST_18
2019-05-22 09:36:26 -Generating unique operation named: updateUsingPUT_12
2019-05-22 09:36:26 -Generating unique operation named: updateUsingPATCH_12
2019-05-22 09:36:26 -Generating unique operation named: updateUsingDELETE_12
2019-05-22 09:36:26 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-22 09:36:26 -Generating unique operation named: updateUsingTRACE_12
2019-05-22 09:36:26 -Starting Quartz Scheduler now
2019-05-22 09:36:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-22 09:36:26 -Starting...
2019-05-22 09:36:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-22 09:36:26 -Started.
2019-05-22 09:36:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-22 09:36:26 -Using a shared selector for servlet write/read
2019-05-22 09:36:26 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-22 09:36:26 -Started BootdoApplication in 31.862 seconds (JVM running for 32.624)
2019-05-22 09:36:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-22 09:36:27 -==> Parameters: 
2019-05-22 09:36:27 -<==      Total: 1
2019-05-22 09:37:18 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-22 09:51:36 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-22 09:51:36 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-22 09:51:36 -FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2019-05-22 09:51:36 -Enabling session validation scheduler...
2019-05-22 09:51:36 -请求地址 : http://localhost:8081/login;JSESSIONID=c4404a5f-4de4-44c7-a373-f94cfdd18982
2019-05-22 09:51:36 -HTTP METHOD : GET
2019-05-22 09:51:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 09:51:36 -参数 : [{}]
2019-05-22 09:51:36 -耗时 : 8
2019-05-22 09:51:36 -返回值 : login
2019-05-22 09:51:37 -请求地址 : http://localhost:8081/getVerify
2019-05-22 09:51:37 -HTTP METHOD : GET
2019-05-22 09:51:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 09:51:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@229c3aac, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c5bc08f]
2019-05-22 09:51:42 -5594
2019-05-22 09:51:43 -耗时 : 5639
2019-05-22 09:51:43 -返回值 : null
2019-05-22 09:51:49 -请求地址 : http://localhost:8081/login
2019-05-22 09:51:49 -HTTP METHOD : POST
2019-05-22 09:51:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 09:51:49 -参数 : [admin, 111111, 5594, org.apache.shiro.web.servlet.ShiroHttpServletRequest@63862f85]
2019-05-22 09:51:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 09:51:49 -==> Parameters: admin(String)
2019-05-22 09:51:49 -<==      Total: 1
2019-05-22 09:51:49 -耗时 : 242
2019-05-22 09:51:49 -返回值 : {msg=操作成功, code=0}
2019-05-22 09:51:49 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-22 09:51:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 09:51:49 -==> Parameters: 1(Long), admin(String), 登录(String), 243(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 09:51:49.548(Timestamp)
2019-05-22 09:51:49 -请求地址 : http://localhost:8081/index
2019-05-22 09:51:49 -HTTP METHOD : GET
2019-05-22 09:51:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 09:51:49 -参数 : [{}]
2019-05-22 09:51:49 -<==    Updates: 1
2019-05-22 09:51:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 09:51:50 -==> Parameters: 1(Long)
2019-05-22 09:51:50 -<==      Total: 49
2019-05-22 09:51:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 09:51:50 -==> Parameters: 138(Long)
2019-05-22 09:51:50 -<==      Total: 1
2019-05-22 09:51:50 -耗时 : 685
2019-05-22 09:51:50 -返回值 : index_v1
2019-05-22 09:51:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 09:51:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 685(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 09:51:50.553(Timestamp)
2019-05-22 09:51:50 -<==    Updates: 1
2019-05-22 09:51:51 -请求地址 : http://localhost:8081/main
2019-05-22 09:51:51 -HTTP METHOD : GET
2019-05-22 09:51:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 09:51:51 -参数 : []
2019-05-22 09:51:51 -耗时 : 0
2019-05-22 09:51:51 -返回值 : main
2019-05-22 09:51:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 09:51:51 -HTTP METHOD : GET
2019-05-22 09:51:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 09:51:51 -参数 : []
2019-05-22 09:51:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 09:51:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 09:51:51 -请求地址 : http://localhost:8081/main
2019-05-22 09:51:51 -HTTP METHOD : GET
2019-05-22 09:51:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 09:51:51 -参数 : []
2019-05-22 09:51:51 -耗时 : 0
2019-05-22 09:51:51 -返回值 : main
2019-05-22 09:51:51 -<==      Total: 0
2019-05-22 09:51:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 09:51:51 -==> Parameters: 1(Long), 0(String)
2019-05-22 09:51:51 -<==      Total: 1
2019-05-22 09:51:51 -耗时 : 183
2019-05-22 09:51:51 -返回值 : com.bootdo.common.utils.PageUtils@2c63e9ac
2019-05-22 09:51:58 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 09:51:58 -==> Parameters: 1(Long)
2019-05-22 09:51:58 -<==      Total: 93
2019-05-22 09:51:58 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-22 09:51:58 -HTTP METHOD : GET
2019-05-22 09:51:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-22 09:51:58 -参数 : []
2019-05-22 09:51:58 -耗时 : 0
2019-05-22 09:51:58 -返回值 : /moneyLog/elecLog/elecLog
2019-05-22 09:51:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 09:51:58 -HTTP METHOD : GET
2019-05-22 09:51:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:51:58 -参数 : [userType]
2019-05-22 09:51:58 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 09:51:58 -HTTP METHOD : GET
2019-05-22 09:51:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 09:51:58 -参数 : [elecType]
2019-05-22 09:51:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:51:58 -==> Parameters: userType(String)
2019-05-22 09:51:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 09:51:58 -==> Parameters: elecType(String)
2019-05-22 09:51:58 -<==      Total: 4
2019-05-22 09:51:58 -耗时 : 66
2019-05-22 09:51:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:51:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:51:58 -HTTP METHOD : GET
2019-05-22 09:51:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:51:58 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 09:51:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 09:51:58 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 09:51:58 -<==      Total: 11
2019-05-22 09:51:58 -耗时 : 156
2019-05-22 09:51:58 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 09:51:59 -<==      Total: 10
2019-05-22 09:51:59 -==>  Preparing: select count(*) from elec_log 
2019-05-22 09:51:59 -==> Parameters: 
2019-05-22 09:51:59 -<==      Total: 1
2019-05-22 09:51:59 -耗时 : 138
2019-05-22 09:51:59 -返回值 : com.bootdo.common.utils.PageUtils@c8f008d
2019-05-22 09:52:08 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 09:52:08 -HTTP METHOD : GET
2019-05-22 09:52:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 09:52:08 -参数 : []
2019-05-22 09:52:08 -耗时 : 0
2019-05-22 09:52:08 -返回值 : system/dept/deptTree
2019-05-22 09:52:08 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 09:52:08 -HTTP METHOD : GET
2019-05-22 09:52:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 09:52:08 -参数 : []
2019-05-22 09:52:08 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 09:52:08 -==> Parameters: 
2019-05-22 09:52:08 -<==      Total: 3
2019-05-22 09:52:08 -耗时 : 24
2019-05-22 09:52:08 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 09:52:10 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:52:10 -HTTP METHOD : GET
2019-05-22 09:52:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:52:10 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:52:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:52:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:52:10 -<==      Total: 2
2019-05-22 09:52:10 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-22 09:52:10 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-22 09:52:10 -<==      Total: 1
2019-05-22 09:52:10 -耗时 : 25
2019-05-22 09:52:10 -返回值 : com.bootdo.common.utils.PageUtils@743dea6f
2019-05-22 09:52:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 09:52:12 -HTTP METHOD : GET
2019-05-22 09:52:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 09:52:12 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 09:52:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 09:52:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 09:52:12 -<==      Total: 2
2019-05-22 09:52:12 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-22 09:52:12 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-22 09:52:12 -<==      Total: 1
2019-05-22 09:52:12 -耗时 : 11
2019-05-22 09:52:12 -返回值 : com.bootdo.common.utils.PageUtils@778681de
2019-05-22 09:52:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-05-22 09:52:14 -HTTP METHOD : GET
2019-05-22 09:52:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-05-22 09:52:14 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6216cfa7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3584979c, org.apache.shiro.web.servlet.ShiroHttpServletRequest@267453c5]
2019-05-22 09:52:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-22 09:52:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-22 09:52:14 -<==      Total: 2
2019-05-22 09:52:15 -耗时 : 796
2019-05-22 09:52:15 -返回值 : null
2019-05-22 09:58:31 -Starting BootdoApplication on PC-201905091110 with PID 29616 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-22 09:58:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-22 09:58:31 -The following profiles are active: dev
2019-05-22 09:58:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 09:58:31 CST 2019]; root of context hierarchy
2019-05-22 09:58:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-22 09:58:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb3b3035] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:58:37 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ad945edc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:58:39 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:58:39 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:58:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:58:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-22 09:58:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-22 09:58:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:58:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:58:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:58:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 09:58:41 -Tomcat initialized with port(s): 8081 (http)
2019-05-22 09:58:41 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-22 09:58:41 -Starting service [Tomcat]
2019-05-22 09:58:41 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-22 09:58:41 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-22 09:58:41 -Initializing Spring embedded WebApplicationContext
2019-05-22 09:58:41 -Root WebApplicationContext: initialization completed in 10611 ms
2019-05-22 09:58:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-22 09:58:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-22 09:58:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-22 09:58:42 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-22 09:58:42 -Filter xssFilter was not registered (disabled)
2019-05-22 09:58:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-22 09:58:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-22 09:58:42 -Servlet statViewServlet mapped to [/druid/*]
2019-05-22 09:58:42 -Servlet dispatcherServlet mapped to [/]
2019-05-22 09:58:48 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 09:58:31 CST 2019]; root of context hierarchy
2019-05-22 09:58:49 -Using default implementation for ThreadExecutor
2019-05-22 09:58:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-22 09:58:49 -Quartz Scheduler v.2.2.1 created.
2019-05-22 09:58:49 -RAMJobStore initialized.
2019-05-22 09:58:49 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-22 09:58:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-22 09:58:49 -Quartz scheduler version: 2.2.1
2019-05-22 09:58:49 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@50a7c72b
2019-05-22 09:58:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-22 09:58:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-22 09:58:53 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-22 09:58:53 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:58:53 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-22 09:58:53 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:58:53 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-22 09:58:53 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-22 09:58:53 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-22 09:58:53 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:58:53 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-22 09:58:53 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:58:53 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:58:53 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-22 09:58:53 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 09:58:53 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-22 09:58:53 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 09:58:53 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-22 09:58:53 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:58:53 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-22 09:58:53 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-22 09:58:53 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 09:58:53 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-22 09:58:53 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 09:58:53 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-22 09:58:53 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 09:58:53 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-22 09:58:53 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-22 09:58:53 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-22 09:58:53 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-22 09:58:53 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-22 09:58:53 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-22 09:58:53 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-22 09:58:53 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-22 09:58:53 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-22 09:58:53 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-22 09:58:53 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-22 09:58:53 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-22 09:58:53 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-22 09:58:53 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 09:58:53 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-22 09:58:53 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 09:58:53 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-22 09:58:53 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-22 09:58:53 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-22 09:58:53 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-22 09:58:53 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-22 09:58:53 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-22 09:58:53 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-22 09:58:53 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-22 09:58:53 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-22 09:58:53 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-22 09:58:53 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-22 09:58:53 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-22 09:58:53 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-22 09:58:53 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-22 09:58:53 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 09:58:53 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-22 09:58:53 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-22 09:58:53 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-22 09:58:53 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-22 09:58:53 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-22 09:58:53 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-22 09:58:53 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-22 09:58:53 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-22 09:58:53 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-22 09:58:53 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-22 09:58:53 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-22 09:58:53 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-22 09:58:53 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-22 09:58:53 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 09:58:53 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-22 09:58:53 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 09:58:53 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 09:58:53 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-22 09:58:53 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-22 09:58:53 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-22 09:58:53 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 09:58:53 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-22 09:58:53 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 09:58:53 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 09:58:53 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-22 09:58:53 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-22 09:58:53 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-22 09:58:53 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-22 09:58:53 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-22 09:58:53 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-22 09:58:53 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 09:58:53 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-22 09:58:53 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-22 09:58:53 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-22 09:58:53 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-22 09:58:53 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-22 09:58:53 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-22 09:58:53 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-22 09:58:53 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-22 09:58:53 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-22 09:58:53 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-22 09:58:53 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-22 09:58:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-22 09:58:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-22 09:58:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-22 09:58:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-22 09:58:53 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-22 09:58:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-22 09:58:53 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-22 09:58:53 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-22 09:58:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 09:58:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-22 09:58:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-22 09:58:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-22 09:58:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-22 09:58:53 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-22 09:58:53 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-22 09:58:53 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-22 09:58:53 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-22 09:58:53 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-22 09:58:53 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-22 09:58:53 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-22 09:58:53 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-22 09:58:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-22 09:58:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-22 09:58:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-22 09:58:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-22 09:58:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 09:58:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 09:58:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-22 09:58:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 09:58:53 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-22 09:58:53 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-22 09:58:53 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-22 09:58:53 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-22 09:58:53 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-22 09:58:53 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 09:58:53 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-22 09:58:53 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-22 09:58:53 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-22 09:58:53 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-22 09:58:53 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 09:58:53 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 09:58:53 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 09:58:53 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 09:58:53 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-22 09:58:53 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-22 09:58:53 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 09:58:53 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-22 09:58:53 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 09:58:53 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 09:58:53 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-22 09:58:53 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-22 09:58:53 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-22 09:58:54 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-22 09:58:54 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-22 09:58:54 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-22 09:58:55 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 09:58:55 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 09:58:31 CST 2019]; root of context hierarchy
2019-05-22 09:58:55 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 09:58:55 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 09:58:55 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 09:58:55 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-22 09:58:55 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-22 09:58:58 -Registering beans for JMX exposure on startup
2019-05-22 09:58:58 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-22 09:58:58 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-22 09:58:58 -Starting beans in phase 2147483647
2019-05-22 09:58:58 -Context refreshed
2019-05-22 09:58:58 -Found 1 custom documentation plugin(s)
2019-05-22 09:58:58 -Scanning for api listing references
2019-05-22 09:58:59 -Generating unique operation named: getCountDUsingPOST_1
2019-05-22 09:58:59 -Generating unique operation named: removeUsingPOST_1
2019-05-22 09:58:59 -Generating unique operation named: addUsingGET_1
2019-05-22 09:58:59 -Generating unique operation named: editUsingGET_1
2019-05-22 09:58:59 -Generating unique operation named: listUsingGET_1
2019-05-22 09:58:59 -Generating unique operation named: removeUsingPOST_2
2019-05-22 09:58:59 -Generating unique operation named: removeUsingPOST_3
2019-05-22 09:58:59 -Generating unique operation named: saveUsingPOST_1
2019-05-22 09:58:59 -Generating unique operation named: updateUsingGET_1
2019-05-22 09:58:59 -Generating unique operation named: updateUsingHEAD_1
2019-05-22 09:58:59 -Generating unique operation named: updateUsingPOST_1
2019-05-22 09:58:59 -Generating unique operation named: updateUsingPUT_1
2019-05-22 09:58:59 -Generating unique operation named: updateUsingPATCH_1
2019-05-22 09:58:59 -Generating unique operation named: updateUsingDELETE_1
2019-05-22 09:58:59 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-22 09:58:59 -Generating unique operation named: updateUsingTRACE_1
2019-05-22 09:58:59 -Generating unique operation named: addUsingGET_2
2019-05-22 09:58:59 -Generating unique operation named: editUsingGET_2
2019-05-22 09:58:59 -Generating unique operation named: listUsingGET_2
2019-05-22 09:58:59 -Generating unique operation named: removeUsingPOST_4
2019-05-22 09:58:59 -Generating unique operation named: removeUsingPOST_5
2019-05-22 09:58:59 -Generating unique operation named: saveUsingPOST_2
2019-05-22 09:58:59 -Generating unique operation named: updateUsingPOST_2
2019-05-22 09:58:59 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-22 09:58:59 -Generating unique operation named: addUsingGET_3
2019-05-22 09:58:59 -Generating unique operation named: editUsingGET_3
2019-05-22 09:58:59 -Generating unique operation named: listUsingGET_3
2019-05-22 09:58:59 -Generating unique operation named: removeUsingPOST_6
2019-05-22 09:58:59 -Generating unique operation named: removeUsingPOST_7
2019-05-22 09:58:59 -Generating unique operation named: saveUsingPOST_3
2019-05-22 09:58:59 -Generating unique operation named: updateUsingGET_2
2019-05-22 09:58:59 -Generating unique operation named: updateUsingHEAD_2
2019-05-22 09:58:59 -Generating unique operation named: updateUsingPOST_3
2019-05-22 09:58:59 -Generating unique operation named: updateUsingPUT_2
2019-05-22 09:58:59 -Generating unique operation named: updateUsingPATCH_2
2019-05-22 09:58:59 -Generating unique operation named: updateUsingDELETE_2
2019-05-22 09:58:59 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-22 09:58:59 -Generating unique operation named: updateUsingTRACE_2
2019-05-22 09:58:59 -Generating unique operation named: addUsingGET_4
2019-05-22 09:58:59 -Generating unique operation named: editUsingGET_4
2019-05-22 09:58:59 -Generating unique operation named: listUsingGET_4
2019-05-22 09:58:59 -Generating unique operation named: removeUsingPOST_8
2019-05-22 09:58:59 -Generating unique operation named: removeUsingPOST_9
2019-05-22 09:58:59 -Generating unique operation named: saveUsingPOST_4
2019-05-22 09:58:59 -Generating unique operation named: updateUsingGET_3
2019-05-22 09:58:59 -Generating unique operation named: updateUsingHEAD_3
2019-05-22 09:58:59 -Generating unique operation named: updateUsingPOST_4
2019-05-22 09:58:59 -Generating unique operation named: updateUsingPUT_3
2019-05-22 09:58:59 -Generating unique operation named: updateUsingPATCH_3
2019-05-22 09:58:59 -Generating unique operation named: updateUsingDELETE_3
2019-05-22 09:58:59 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-22 09:58:59 -Generating unique operation named: updateUsingTRACE_3
2019-05-22 09:58:59 -Generating unique operation named: ElecUsingGET_1
2019-05-22 09:59:00 -Generating unique operation named: addUsingGET_5
2019-05-22 09:59:00 -Generating unique operation named: editUsingGET_5
2019-05-22 09:59:00 -Generating unique operation named: listUsingGET_5
2019-05-22 09:59:00 -Generating unique operation named: removeUsingPOST_10
2019-05-22 09:59:00 -Generating unique operation named: removeUsingPOST_11
2019-05-22 09:59:00 -Generating unique operation named: saveUsingPOST_5
2019-05-22 09:59:00 -Generating unique operation named: updateUsingGET_4
2019-05-22 09:59:00 -Generating unique operation named: updateUsingHEAD_4
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPOST_5
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPUT_4
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPATCH_4
2019-05-22 09:59:00 -Generating unique operation named: updateUsingDELETE_4
2019-05-22 09:59:00 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-22 09:59:00 -Generating unique operation named: updateUsingTRACE_4
2019-05-22 09:59:00 -Generating unique operation named: editUsingGET_6
2019-05-22 09:59:00 -Generating unique operation named: listUsingGET_6
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPOST_6
2019-05-22 09:59:00 -Generating unique operation named: addUsingGET_6
2019-05-22 09:59:00 -Generating unique operation named: editUsingGET_7
2019-05-22 09:59:00 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-22 09:59:00 -Generating unique operation named: listUsingGET_7
2019-05-22 09:59:00 -Generating unique operation named: removeUsingPOST_12
2019-05-22 09:59:00 -Generating unique operation named: removeUsingPOST_13
2019-05-22 09:59:00 -Generating unique operation named: saveUsingPOST_6
2019-05-22 09:59:00 -Generating unique operation named: updateUsingGET_5
2019-05-22 09:59:00 -Generating unique operation named: updateUsingHEAD_5
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPOST_7
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPUT_5
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPATCH_5
2019-05-22 09:59:00 -Generating unique operation named: updateUsingDELETE_5
2019-05-22 09:59:00 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-22 09:59:00 -Generating unique operation named: updateUsingTRACE_5
2019-05-22 09:59:00 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-22 09:59:00 -Generating unique operation named: addUsingGET_7
2019-05-22 09:59:00 -Generating unique operation named: editUsingGET_8
2019-05-22 09:59:00 -Generating unique operation named: listUsingGET_8
2019-05-22 09:59:00 -Generating unique operation named: removeUsingPOST_14
2019-05-22 09:59:00 -Generating unique operation named: removeUsingPOST_15
2019-05-22 09:59:00 -Generating unique operation named: saveUsingPOST_7
2019-05-22 09:59:00 -Generating unique operation named: updateUsingGET_6
2019-05-22 09:59:00 -Generating unique operation named: updateUsingHEAD_6
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPOST_8
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPUT_6
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPATCH_6
2019-05-22 09:59:00 -Generating unique operation named: updateUsingDELETE_6
2019-05-22 09:59:00 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-22 09:59:00 -Generating unique operation named: updateUsingTRACE_6
2019-05-22 09:59:00 -Generating unique operation named: addUsingGET_8
2019-05-22 09:59:00 -Generating unique operation named: editUsingGET_9
2019-05-22 09:59:00 -Generating unique operation named: listUsingGET_9
2019-05-22 09:59:00 -Generating unique operation named: removeUsingPOST_16
2019-05-22 09:59:00 -Generating unique operation named: removeUsingPOST_17
2019-05-22 09:59:00 -Generating unique operation named: saveUsingPOST_8
2019-05-22 09:59:00 -Generating unique operation named: updateUsingGET_7
2019-05-22 09:59:00 -Generating unique operation named: updateUsingHEAD_7
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPOST_9
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPUT_7
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPATCH_7
2019-05-22 09:59:00 -Generating unique operation named: updateUsingDELETE_7
2019-05-22 09:59:00 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-22 09:59:00 -Generating unique operation named: updateUsingTRACE_7
2019-05-22 09:59:00 -Generating unique operation named: addUsingGET_9
2019-05-22 09:59:00 -Generating unique operation named: editUsingGET_10
2019-05-22 09:59:00 -Generating unique operation named: infoUsingGET_1
2019-05-22 09:59:00 -Generating unique operation named: infoUsingHEAD_1
2019-05-22 09:59:00 -Generating unique operation named: infoUsingPOST_1
2019-05-22 09:59:00 -Generating unique operation named: infoUsingPUT_1
2019-05-22 09:59:00 -Generating unique operation named: infoUsingPATCH_1
2019-05-22 09:59:00 -Generating unique operation named: infoUsingDELETE_1
2019-05-22 09:59:00 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-22 09:59:00 -Generating unique operation named: infoUsingTRACE_1
2019-05-22 09:59:00 -Generating unique operation named: listUsingGET_10
2019-05-22 09:59:00 -Generating unique operation named: removeUsingPOST_18
2019-05-22 09:59:00 -Generating unique operation named: removeUsingPOST_19
2019-05-22 09:59:00 -Generating unique operation named: saveUsingPOST_9
2019-05-22 09:59:00 -Generating unique operation named: updateUsingPOST_10
2019-05-22 09:59:00 -Generating unique operation named: listUsingGET_11
2019-05-22 09:59:01 -Generating unique operation named: removeUsingPOST_20
2019-05-22 09:59:01 -Generating unique operation named: welcomeUsingGET_1
2019-05-22 09:59:01 -Generating unique operation named: addUsingGET_10
2019-05-22 09:59:01 -Generating unique operation named: editUsingGET_11
2019-05-22 09:59:01 -Generating unique operation named: listUsingGET_12
2019-05-22 09:59:01 -Generating unique operation named: removeUsingPOST_21
2019-05-22 09:59:01 -Generating unique operation named: saveUsingPOST_10
2019-05-22 09:59:01 -Generating unique operation named: treeUsingGET_1
2019-05-22 09:59:01 -Generating unique operation named: treeUsingGET_2
2019-05-22 09:59:01 -Generating unique operation named: updateUsingPOST_11
2019-05-22 09:59:01 -Generating unique operation named: editUsingGET_12
2019-05-22 09:59:01 -Generating unique operation named: addUsingGET_11
2019-05-22 09:59:01 -Generating unique operation named: editUsingGET_13
2019-05-22 09:59:01 -Generating unique operation named: listUsingGET_13
2019-05-22 09:59:01 -Generating unique operation named: removeUsingPOST_22
2019-05-22 09:59:01 -Generating unique operation named: removeUsingPOST_23
2019-05-22 09:59:01 -Generating unique operation named: saveUsingPOST_11
2019-05-22 09:59:01 -Generating unique operation named: updateUsingGET_8
2019-05-22 09:59:01 -Generating unique operation named: updateUsingHEAD_8
2019-05-22 09:59:01 -Generating unique operation named: updateUsingPOST_12
2019-05-22 09:59:01 -Generating unique operation named: updateUsingPUT_8
2019-05-22 09:59:01 -Generating unique operation named: updateUsingPATCH_8
2019-05-22 09:59:01 -Generating unique operation named: updateUsingDELETE_8
2019-05-22 09:59:01 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-22 09:59:01 -Generating unique operation named: updateUsingTRACE_8
2019-05-22 09:59:01 -Generating unique operation named: addUsingGET_12
2019-05-22 09:59:01 -Generating unique operation named: editUsingGET_14
2019-05-22 09:59:01 -Generating unique operation named: listUsingGET_14
2019-05-22 09:59:01 -Generating unique operation named: removeUsingPOST_24
2019-05-22 09:59:01 -Generating unique operation named: removeUsingPOST_25
2019-05-22 09:59:01 -Generating unique operation named: saveUsingPOST_12
2019-05-22 09:59:01 -Generating unique operation named: updateUsingGET_9
2019-05-22 09:59:01 -Generating unique operation named: updateUsingHEAD_9
2019-05-22 09:59:01 -Generating unique operation named: updateUsingPOST_13
2019-05-22 09:59:01 -Generating unique operation named: updateUsingPUT_9
2019-05-22 09:59:01 -Generating unique operation named: updateUsingPATCH_9
2019-05-22 09:59:01 -Generating unique operation named: updateUsingDELETE_9
2019-05-22 09:59:01 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-22 09:59:01 -Generating unique operation named: updateUsingTRACE_9
2019-05-22 09:59:01 -Generating unique operation named: addUsingGET_13
2019-05-22 09:59:01 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-22 09:59:01 -Generating unique operation named: editUsingGET_15
2019-05-22 09:59:01 -Generating unique operation named: listUsingGET_15
2019-05-22 09:59:01 -Generating unique operation named: saveUsingPOST_13
2019-05-22 09:59:01 -Generating unique operation named: saveUsingPOST_14
2019-05-22 09:59:01 -Generating unique operation named: updateUsingPOST_14
2019-05-22 09:59:02 -Generating unique operation named: listUsingGET_16
2019-05-22 09:59:02 -Generating unique operation named: listUsingHEAD_1
2019-05-22 09:59:02 -Generating unique operation named: listUsingPOST_1
2019-05-22 09:59:02 -Generating unique operation named: listUsingPUT_1
2019-05-22 09:59:02 -Generating unique operation named: listUsingPATCH_1
2019-05-22 09:59:02 -Generating unique operation named: listUsingDELETE_1
2019-05-22 09:59:02 -Generating unique operation named: listUsingOPTIONS_1
2019-05-22 09:59:02 -Generating unique operation named: listUsingTRACE_1
2019-05-22 09:59:02 -Generating unique operation named: countDDUsingGET_1
2019-05-22 09:59:02 -Generating unique operation named: exportDDUsingGET_1
2019-05-22 09:59:02 -Generating unique operation named: addUsingGET_14
2019-05-22 09:59:02 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-22 09:59:02 -Generating unique operation named: editUsingGET_16
2019-05-22 09:59:02 -Generating unique operation named: listUsingGET_17
2019-05-22 09:59:02 -Generating unique operation named: removeUsingPOST_26
2019-05-22 09:59:02 -Generating unique operation named: saveUsingPOST_15
2019-05-22 09:59:02 -Generating unique operation named: treeUsingGET_3
2019-05-22 09:59:02 -Generating unique operation named: treeViewUsingGET_1
2019-05-22 09:59:02 -Generating unique operation named: updateUsingPOST_15
2019-05-22 09:59:02 -Generating unique operation named: addUsingGET_15
2019-05-22 09:59:02 -Generating unique operation named: editUsingGET_17
2019-05-22 09:59:02 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-22 09:59:02 -Generating unique operation named: listUsingGET_18
2019-05-22 09:59:02 -Generating unique operation named: removeUsingPOST_27
2019-05-22 09:59:02 -Generating unique operation named: removeUsingPOST_28
2019-05-22 09:59:02 -Generating unique operation named: saveUsingPOST_16
2019-05-22 09:59:02 -Generating unique operation named: updateUsingGET_10
2019-05-22 09:59:02 -Generating unique operation named: updateUsingHEAD_10
2019-05-22 09:59:02 -Generating unique operation named: updateUsingPOST_16
2019-05-22 09:59:02 -Generating unique operation named: updateUsingPUT_10
2019-05-22 09:59:02 -Generating unique operation named: updateUsingPATCH_10
2019-05-22 09:59:02 -Generating unique operation named: updateUsingDELETE_10
2019-05-22 09:59:02 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-22 09:59:02 -Generating unique operation named: updateUsingTRACE_10
2019-05-22 09:59:02 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-22 09:59:02 -Generating unique operation named: addUsingGET_16
2019-05-22 09:59:02 -Generating unique operation named: editUsingGET_18
2019-05-22 09:59:02 -Generating unique operation named: listUsingGET_19
2019-05-22 09:59:02 -Generating unique operation named: removeUsingPOST_29
2019-05-22 09:59:02 -Generating unique operation named: removeUsingPOST_30
2019-05-22 09:59:02 -Generating unique operation named: saveUsingPOST_17
2019-05-22 09:59:02 -Generating unique operation named: updateUsingGET_11
2019-05-22 09:59:02 -Generating unique operation named: updateUsingHEAD_11
2019-05-22 09:59:02 -Generating unique operation named: updateUsingPOST_17
2019-05-22 09:59:02 -Generating unique operation named: updateUsingPUT_11
2019-05-22 09:59:02 -Generating unique operation named: updateUsingPATCH_11
2019-05-22 09:59:02 -Generating unique operation named: updateUsingDELETE_11
2019-05-22 09:59:02 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-22 09:59:02 -Generating unique operation named: updateUsingTRACE_11
2019-05-22 09:59:02 -Generating unique operation named: addUsingGET_17
2019-05-22 09:59:02 -Generating unique operation named: editUsingGET_19
2019-05-22 09:59:02 -Generating unique operation named: listUsingGET_20
2019-05-22 09:59:02 -Generating unique operation named: removeUsingPOST_31
2019-05-22 09:59:02 -Generating unique operation named: removeUsingPOST_32
2019-05-22 09:59:02 -Generating unique operation named: saveUsingPOST_18
2019-05-22 09:59:02 -Generating unique operation named: updateUsingGET_12
2019-05-22 09:59:02 -Generating unique operation named: updateUsingHEAD_12
2019-05-22 09:59:02 -Generating unique operation named: updateUsingPOST_18
2019-05-22 09:59:02 -Generating unique operation named: updateUsingPUT_12
2019-05-22 09:59:02 -Generating unique operation named: updateUsingPATCH_12
2019-05-22 09:59:02 -Generating unique operation named: updateUsingDELETE_12
2019-05-22 09:59:02 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-22 09:59:02 -Generating unique operation named: updateUsingTRACE_12
2019-05-22 09:59:02 -Starting Quartz Scheduler now
2019-05-22 09:59:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-22 09:59:02 -Starting...
2019-05-22 09:59:02 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-22 09:59:02 -Started.
2019-05-22 09:59:02 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-22 09:59:02 -Using a shared selector for servlet write/read
2019-05-22 09:59:02 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-22 09:59:02 -Started BootdoApplication in 32.924 seconds (JVM running for 33.898)
2019-05-22 09:59:03 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-22 09:59:03 -==> Parameters: 
2019-05-22 09:59:03 -<==      Total: 1
2019-05-22 09:59:54 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-22 10:00:08 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-22 10:00:08 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-22 10:00:08 -FrameworkServlet 'dispatcherServlet': initialization completed in 107 ms
2019-05-22 10:00:08 -Enabling session validation scheduler...
2019-05-22 10:00:09 -请求地址 : http://localhost:8081/login;JSESSIONID=ba2e5dec-e8f5-4d22-9628-6018a231bc3f
2019-05-22 10:00:09 -HTTP METHOD : GET
2019-05-22 10:00:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 10:00:09 -参数 : [{}]
2019-05-22 10:00:09 -耗时 : 7
2019-05-22 10:00:09 -返回值 : login
2019-05-22 10:00:10 -请求地址 : http://localhost:8081/getVerify
2019-05-22 10:00:10 -HTTP METHOD : GET
2019-05-22 10:00:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 10:00:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@10917fa2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1e5683c0]
2019-05-22 10:00:10 -0151
2019-05-22 10:00:10 -耗时 : 437
2019-05-22 10:00:10 -返回值 : null
2019-05-22 10:00:14 -请求地址 : http://localhost:8081/login
2019-05-22 10:00:14 -HTTP METHOD : POST
2019-05-22 10:00:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 10:00:14 -参数 : [admin, 111111, 0151, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5fe10640]
2019-05-22 10:00:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 10:00:14 -==> Parameters: admin(String)
2019-05-22 10:00:15 -<==      Total: 1
2019-05-22 10:00:15 -耗时 : 324
2019-05-22 10:00:15 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:00:15 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-22 10:00:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:00:15 -==> Parameters: 1(Long), admin(String), 登录(String), 324(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 10:00:15.14(Timestamp)
2019-05-22 10:00:15 -请求地址 : http://localhost:8081/index
2019-05-22 10:00:15 -HTTP METHOD : GET
2019-05-22 10:00:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 10:00:15 -参数 : [{}]
2019-05-22 10:00:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 10:00:15 -==> Parameters: 1(Long)
2019-05-22 10:00:15 -<==    Updates: 1
2019-05-22 10:00:15 -<==      Total: 49
2019-05-22 10:00:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 10:00:15 -==> Parameters: 138(Long)
2019-05-22 10:00:15 -<==      Total: 1
2019-05-22 10:00:15 -耗时 : 397
2019-05-22 10:00:15 -返回值 : index_v1
2019-05-22 10:00:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:00:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 397(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 10:00:15.679(Timestamp)
2019-05-22 10:00:15 -<==    Updates: 1
2019-05-22 10:00:15 -请求地址 : http://localhost:8081/main
2019-05-22 10:00:15 -HTTP METHOD : GET
2019-05-22 10:00:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:00:15 -参数 : []
2019-05-22 10:00:15 -耗时 : 1
2019-05-22 10:00:15 -返回值 : main
2019-05-22 10:00:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 10:00:15 -HTTP METHOD : GET
2019-05-22 10:00:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 10:00:15 -参数 : []
2019-05-22 10:00:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 10:00:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 10:00:16 -<==      Total: 0
2019-05-22 10:00:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 10:00:16 -==> Parameters: 1(Long), 0(String)
2019-05-22 10:00:16 -<==      Total: 1
2019-05-22 10:00:16 -耗时 : 70
2019-05-22 10:00:16 -返回值 : com.bootdo.common.utils.PageUtils@1f90b1be
2019-05-22 10:00:16 -请求地址 : http://localhost:8081/main
2019-05-22 10:00:16 -HTTP METHOD : GET
2019-05-22 10:00:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:00:16 -参数 : []
2019-05-22 10:00:16 -耗时 : 0
2019-05-22 10:00:16 -返回值 : main
2019-05-22 10:00:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 10:00:54 -==> Parameters: 1(Long)
2019-05-22 10:00:54 -<==      Total: 93
2019-05-22 10:00:54 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-22 10:00:54 -HTTP METHOD : GET
2019-05-22 10:00:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-22 10:00:54 -参数 : []
2019-05-22 10:00:54 -耗时 : 0
2019-05-22 10:00:54 -返回值 : /moneyLog/elecLog/elecLog
2019-05-22 10:00:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:00:55 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:00:55 -HTTP METHOD : GET
2019-05-22 10:00:55 -HTTP METHOD : GET
2019-05-22 10:00:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:00:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:00:55 -参数 : [userType]
2019-05-22 10:00:55 -参数 : [elecType]
2019-05-22 10:00:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:00:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:00:55 -==> Parameters: userType(String)
2019-05-22 10:00:55 -==> Parameters: elecType(String)
2019-05-22 10:00:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 10:00:55 -HTTP METHOD : GET
2019-05-22 10:00:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 10:00:55 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 10:00:55 -<==      Total: 4
2019-05-22 10:00:55 -耗时 : 198
2019-05-22 10:00:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 10:00:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:00:55 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:00:55 -<==      Total: 11
2019-05-22 10:00:55 -耗时 : 226
2019-05-22 10:00:55 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:00:55 -<==      Total: 10
2019-05-22 10:00:55 -==>  Preparing: select count(*) from elec_log 
2019-05-22 10:00:55 -==> Parameters: 
2019-05-22 10:00:55 -<==      Total: 1
2019-05-22 10:00:55 -耗时 : 266
2019-05-22 10:00:55 -返回值 : com.bootdo.common.utils.PageUtils@591910fd
2019-05-22 10:01:01 -请求地址 : http://localhost:8081/index
2019-05-22 10:01:01 -HTTP METHOD : GET
2019-05-22 10:01:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 10:01:01 -参数 : [{}]
2019-05-22 10:01:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 10:01:01 -==> Parameters: 1(Long)
2019-05-22 10:01:01 -<==      Total: 49
2019-05-22 10:01:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 10:01:01 -==> Parameters: 138(Long)
2019-05-22 10:01:01 -<==      Total: 1
2019-05-22 10:01:01 -耗时 : 38
2019-05-22 10:01:01 -返回值 : index_v1
2019-05-22 10:01:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:01:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 10:01:01.909(Timestamp)
2019-05-22 10:01:02 -请求地址 : http://localhost:8081/main
2019-05-22 10:01:02 -HTTP METHOD : GET
2019-05-22 10:01:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:01:02 -参数 : []
2019-05-22 10:01:02 -耗时 : 0
2019-05-22 10:01:02 -返回值 : main
2019-05-22 10:01:02 -<==    Updates: 1
2019-05-22 10:01:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 10:01:02 -HTTP METHOD : GET
2019-05-22 10:01:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 10:01:02 -参数 : []
2019-05-22 10:01:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 10:01:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 10:01:02 -<==      Total: 0
2019-05-22 10:01:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 10:01:02 -==> Parameters: 1(Long), 0(String)
2019-05-22 10:01:02 -<==      Total: 1
2019-05-22 10:01:02 -耗时 : 6
2019-05-22 10:01:02 -返回值 : com.bootdo.common.utils.PageUtils@d4935fb
2019-05-22 10:01:02 -请求地址 : http://localhost:8081/main
2019-05-22 10:01:02 -HTTP METHOD : GET
2019-05-22 10:01:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:01:02 -参数 : []
2019-05-22 10:01:02 -耗时 : 1
2019-05-22 10:01:02 -返回值 : main
2019-05-22 10:01:09 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-22 10:01:09 -HTTP METHOD : GET
2019-05-22 10:01:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-22 10:01:09 -参数 : []
2019-05-22 10:01:09 -耗时 : 1
2019-05-22 10:01:09 -返回值 : /moneyLog/elecLog/elecLog
2019-05-22 10:01:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:01:09 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:01:09 -HTTP METHOD : GET
2019-05-22 10:01:09 -HTTP METHOD : GET
2019-05-22 10:01:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:01:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:01:09 -参数 : [userType]
2019-05-22 10:01:09 -参数 : [elecType]
2019-05-22 10:01:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:01:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:01:09 -==> Parameters: elecType(String)
2019-05-22 10:01:09 -==> Parameters: userType(String)
2019-05-22 10:01:09 -<==      Total: 4
2019-05-22 10:01:09 -耗时 : 14
2019-05-22 10:01:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:01:09 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 10:01:09 -HTTP METHOD : GET
2019-05-22 10:01:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 10:01:09 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 10:01:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 10:01:09 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:01:09 -<==      Total: 10
2019-05-22 10:01:09 -==>  Preparing: select count(*) from elec_log 
2019-05-22 10:01:09 -==> Parameters: 
2019-05-22 10:01:09 -<==      Total: 1
2019-05-22 10:01:09 -耗时 : 19
2019-05-22 10:01:09 -返回值 : com.bootdo.common.utils.PageUtils@476674bc
2019-05-22 10:01:09 -<==      Total: 11
2019-05-22 10:01:09 -耗时 : 105
2019-05-22 10:01:09 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:01:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:01:23 -HTTP METHOD : GET
2019-05-22 10:01:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:01:23 -参数 : []
2019-05-22 10:01:23 -耗时 : 0
2019-05-22 10:01:23 -返回值 : system/dept/deptTree
2019-05-22 10:01:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:01:23 -HTTP METHOD : GET
2019-05-22 10:01:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:01:23 -参数 : []
2019-05-22 10:01:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:01:23 -==> Parameters: 
2019-05-22 10:01:23 -<==      Total: 3
2019-05-22 10:01:23 -耗时 : 19
2019-05-22 10:01:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:01:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 10:01:26 -HTTP METHOD : GET
2019-05-22 10:01:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 10:01:26 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, elecDate=2019-03-19}]
2019-05-22 10:01:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:01:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:01:26 -<==      Total: 2
2019-05-22 10:01:26 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-22 10:01:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-22 10:01:26 -<==      Total: 1
2019-05-22 10:01:26 -耗时 : 87
2019-05-22 10:01:26 -返回值 : com.bootdo.common.utils.PageUtils@719f6cec
2019-05-22 10:01:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-05-22 10:01:28 -HTTP METHOD : GET
2019-05-22 10:01:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-05-22 10:01:28 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4553e72, org.apache.shiro.web.servlet.ShiroHttpServletResponse@24959872, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1d6aca81]
2019-05-22 10:01:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-22 10:01:28 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-22 10:01:28 -<==      Total: 2
2019-05-22 10:01:28 -耗时 : 555
2019-05-22 10:01:28 -返回值 : null
2019-05-22 10:02:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-22 10:02:18 -HTTP METHOD : GET
2019-05-22 10:02:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-22 10:02:18 -参数 : []
2019-05-22 10:02:18 -耗时 : 1
2019-05-22 10:02:18 -返回值 : /moneyLog/heatLog/heatLog
2019-05-22 10:02:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:02:19 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-22 10:02:19 -HTTP METHOD : GET
2019-05-22 10:02:19 -HTTP METHOD : GET
2019-05-22 10:02:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:02:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:02:19 -参数 : [heatType]
2019-05-22 10:02:19 -参数 : [userType]
2019-05-22 10:02:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:02:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:02:19 -==> Parameters: userType(String)
2019-05-22 10:02:19 -==> Parameters: heatType(String)
2019-05-22 10:02:19 -<==      Total: 4
2019-05-22 10:02:19 -耗时 : 6
2019-05-22 10:02:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:02:19 -<==      Total: 4
2019-05-22 10:02:19 -耗时 : 18
2019-05-22 10:02:19 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:02:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-22 10:02:19 -HTTP METHOD : GET
2019-05-22 10:02:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-22 10:02:19 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-22 10:02:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-22 10:02:19 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:02:19 -<==      Total: 10
2019-05-22 10:02:19 -==>  Preparing: select count(*) from heat_log 
2019-05-22 10:02:19 -==> Parameters: 
2019-05-22 10:02:19 -<==      Total: 1
2019-05-22 10:02:19 -耗时 : 38
2019-05-22 10:02:19 -返回值 : com.bootdo.common.utils.PageUtils@3d69e1fd
2019-05-22 10:02:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-22 10:02:27 -HTTP METHOD : GET
2019-05-22 10:02:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-22 10:02:27 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=2019-03-19}]
2019-05-22 10:02:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? order by id asc limit ?, ? 
2019-05-22 10:02:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-05-22 10:02:27 -<==      Total: 1
2019-05-22 10:02:27 -==>  Preparing: select count(*) from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? 
2019-05-22 10:02:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-05-22 10:02:27 -<==      Total: 1
2019-05-22 10:02:27 -耗时 : 12
2019-05-22 10:02:27 -返回值 : com.bootdo.common.utils.PageUtils@450c557d
2019-05-22 10:02:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:02:30 -HTTP METHOD : GET
2019-05-22 10:02:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:02:30 -参数 : []
2019-05-22 10:02:30 -耗时 : 0
2019-05-22 10:02:30 -返回值 : system/dept/deptTree
2019-05-22 10:02:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:02:31 -HTTP METHOD : GET
2019-05-22 10:02:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:02:31 -参数 : []
2019-05-22 10:02:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:02:31 -==> Parameters: 
2019-05-22 10:02:31 -<==      Total: 3
2019-05-22 10:02:31 -耗时 : 4
2019-05-22 10:02:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:02:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:02:33 -HTTP METHOD : GET
2019-05-22 10:02:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:02:33 -参数 : []
2019-05-22 10:02:33 -耗时 : 0
2019-05-22 10:02:33 -返回值 : system/dept/deptTree
2019-05-22 10:02:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:02:33 -HTTP METHOD : GET
2019-05-22 10:02:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:02:33 -参数 : []
2019-05-22 10:02:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:02:33 -==> Parameters: 
2019-05-22 10:02:33 -<==      Total: 3
2019-05-22 10:02:33 -耗时 : 4
2019-05-22 10:02:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:02:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:02:35 -HTTP METHOD : GET
2019-05-22 10:02:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:02:35 -参数 : []
2019-05-22 10:02:35 -耗时 : 0
2019-05-22 10:02:35 -返回值 : system/dept/deptTree
2019-05-22 10:02:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:02:35 -HTTP METHOD : GET
2019-05-22 10:02:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:02:35 -参数 : []
2019-05-22 10:02:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:02:35 -==> Parameters: 
2019-05-22 10:02:35 -<==      Total: 3
2019-05-22 10:02:35 -耗时 : 5
2019-05-22 10:02:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:02:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:02:37 -HTTP METHOD : GET
2019-05-22 10:02:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:02:37 -参数 : []
2019-05-22 10:02:37 -耗时 : 0
2019-05-22 10:02:37 -返回值 : system/dept/deptTree
2019-05-22 10:02:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:02:37 -HTTP METHOD : GET
2019-05-22 10:02:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:02:37 -参数 : []
2019-05-22 10:02:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:02:37 -==> Parameters: 
2019-05-22 10:02:37 -<==      Total: 3
2019-05-22 10:02:37 -耗时 : 7
2019-05-22 10:02:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:03:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:03:35 -HTTP METHOD : GET
2019-05-22 10:03:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:03:35 -参数 : []
2019-05-22 10:03:35 -耗时 : 0
2019-05-22 10:03:35 -返回值 : system/dept/deptTree
2019-05-22 10:03:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:03:35 -HTTP METHOD : GET
2019-05-22 10:03:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:03:35 -参数 : []
2019-05-22 10:03:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:03:35 -==> Parameters: 
2019-05-22 10:03:35 -<==      Total: 3
2019-05-22 10:03:35 -耗时 : 6
2019-05-22 10:03:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:03:38 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-22 10:03:38 -HTTP METHOD : GET
2019-05-22 10:03:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-22 10:03:38 -参数 : []
2019-05-22 10:03:38 -耗时 : 0
2019-05-22 10:03:38 -返回值 : /moneyLog/waterLog/waterLog
2019-05-22 10:03:38 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 10:03:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:03:38 -HTTP METHOD : GET
2019-05-22 10:03:38 -HTTP METHOD : GET
2019-05-22 10:03:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:03:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:03:38 -参数 : [waterType]
2019-05-22 10:03:38 -参数 : [userType]
2019-05-22 10:03:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:03:38 -==> Parameters: waterType(String)
2019-05-22 10:03:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:03:38 -==> Parameters: userType(String)
2019-05-22 10:03:38 -<==      Total: 4
2019-05-22 10:03:38 -<==      Total: 4
2019-05-22 10:03:38 -耗时 : 5
2019-05-22 10:03:38 -耗时 : 5
2019-05-22 10:03:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:03:38 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:03:38 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 10:03:38 -HTTP METHOD : GET
2019-05-22 10:03:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 10:03:38 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-22 10:03:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-22 10:03:38 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:03:38 -<==      Total: 10
2019-05-22 10:03:38 -==>  Preparing: select count(*) from water_log 
2019-05-22 10:03:38 -==> Parameters: 
2019-05-22 10:03:38 -<==      Total: 1
2019-05-22 10:03:38 -耗时 : 34
2019-05-22 10:03:38 -返回值 : com.bootdo.common.utils.PageUtils@2451b383
2019-05-22 10:03:39 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-22 10:03:39 -HTTP METHOD : GET
2019-05-22 10:03:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-22 10:03:39 -参数 : []
2019-05-22 10:03:39 -耗时 : 0
2019-05-22 10:03:39 -返回值 : /moneyLog/heatLog/heatLog
2019-05-22 10:03:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:03:39 -HTTP METHOD : GET
2019-05-22 10:03:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:03:39 -参数 : [userType]
2019-05-22 10:03:39 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-22 10:03:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:03:39 -HTTP METHOD : GET
2019-05-22 10:03:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:03:39 -参数 : [heatType]
2019-05-22 10:03:39 -==> Parameters: userType(String)
2019-05-22 10:03:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:03:39 -==> Parameters: heatType(String)
2019-05-22 10:03:39 -<==      Total: 4
2019-05-22 10:03:39 -耗时 : 5
2019-05-22 10:03:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:03:39 -<==      Total: 4
2019-05-22 10:03:39 -耗时 : 9
2019-05-22 10:03:39 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:03:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-22 10:03:39 -HTTP METHOD : GET
2019-05-22 10:03:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-22 10:03:39 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-22 10:03:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-22 10:03:39 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:03:39 -<==      Total: 10
2019-05-22 10:03:39 -==>  Preparing: select count(*) from heat_log 
2019-05-22 10:03:39 -==> Parameters: 
2019-05-22 10:03:39 -<==      Total: 1
2019-05-22 10:03:39 -耗时 : 70
2019-05-22 10:03:39 -返回值 : com.bootdo.common.utils.PageUtils@17309427
2019-05-22 10:03:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:03:47 -HTTP METHOD : GET
2019-05-22 10:03:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:03:47 -参数 : []
2019-05-22 10:03:47 -耗时 : 0
2019-05-22 10:03:47 -返回值 : system/dept/deptTree
2019-05-22 10:03:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:03:48 -HTTP METHOD : GET
2019-05-22 10:03:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:03:48 -参数 : []
2019-05-22 10:03:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:03:48 -==> Parameters: 
2019-05-22 10:03:48 -<==      Total: 3
2019-05-22 10:03:48 -耗时 : 4
2019-05-22 10:03:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:03:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-22 10:03:49 -HTTP METHOD : GET
2019-05-22 10:03:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-22 10:03:49 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=2, userId=, heatDate=2019-03-08}]
2019-05-22 10:03:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:03:49 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:03:49 -<==      Total: 2
2019-05-22 10:03:49 -==>  Preparing: select count(*) from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-22 10:03:49 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String)
2019-05-22 10:03:49 -<==      Total: 1
2019-05-22 10:03:49 -耗时 : 11
2019-05-22 10:03:49 -返回值 : com.bootdo.common.utils.PageUtils@69b4ef2b
2019-05-22 10:03:51 -请求地址 : http://localhost:8081/moneyLog/heatLog/exprotHeatLog
2019-05-22 10:03:51 -HTTP METHOD : GET
2019-05-22 10:03:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog
2019-05-22 10:03:51 -参数 : [com.bootdo.moneyLog.vo.HeatLogVo@111b9e9a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@426d5c7b, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6c46cb23]
2019-05-22 10:03:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-22 10:03:51 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String)
2019-05-22 10:03:51 -<==      Total: 2
2019-05-22 10:03:51 -耗时 : 18
2019-05-22 10:03:51 -返回值 : null
2019-05-22 10:04:12 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-22 10:04:12 -HTTP METHOD : GET
2019-05-22 10:04:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-22 10:04:12 -参数 : []
2019-05-22 10:04:12 -耗时 : 0
2019-05-22 10:04:12 -返回值 : /moneyLog/waterLog/waterLog
2019-05-22 10:04:12 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 10:04:12 -HTTP METHOD : GET
2019-05-22 10:04:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:04:12 -参数 : [waterType]
2019-05-22 10:04:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:04:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:04:12 -==> Parameters: waterType(String)
2019-05-22 10:04:12 -HTTP METHOD : GET
2019-05-22 10:04:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:04:12 -参数 : [userType]
2019-05-22 10:04:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:04:12 -==> Parameters: userType(String)
2019-05-22 10:04:12 -<==      Total: 4
2019-05-22 10:04:12 -耗时 : 4
2019-05-22 10:04:12 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:04:12 -<==      Total: 4
2019-05-22 10:04:12 -耗时 : 4
2019-05-22 10:04:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:04:12 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 10:04:12 -HTTP METHOD : GET
2019-05-22 10:04:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 10:04:12 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-22 10:04:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-22 10:04:12 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:04:12 -<==      Total: 10
2019-05-22 10:04:12 -==>  Preparing: select count(*) from water_log 
2019-05-22 10:04:12 -==> Parameters: 
2019-05-22 10:04:12 -<==      Total: 1
2019-05-22 10:04:12 -耗时 : 22
2019-05-22 10:04:12 -返回值 : com.bootdo.common.utils.PageUtils@1822cda2
2019-05-22 10:04:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:04:19 -HTTP METHOD : GET
2019-05-22 10:04:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:04:19 -参数 : []
2019-05-22 10:04:19 -耗时 : 1
2019-05-22 10:04:19 -返回值 : system/dept/deptTree
2019-05-22 10:04:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:04:19 -HTTP METHOD : GET
2019-05-22 10:04:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:04:19 -参数 : []
2019-05-22 10:04:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:04:19 -==> Parameters: 
2019-05-22 10:04:19 -<==      Total: 3
2019-05-22 10:04:19 -耗时 : 3
2019-05-22 10:04:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:04:21 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 10:04:21 -HTTP METHOD : GET
2019-05-22 10:04:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 10:04:21 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, waterDate=2019-03-08}]
2019-05-22 10:04:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:04:21 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:04:21 -<==      Total: 3
2019-05-22 10:04:21 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-22 10:04:21 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String)
2019-05-22 10:04:21 -<==      Total: 1
2019-05-22 10:04:21 -耗时 : 10
2019-05-22 10:04:21 -返回值 : com.bootdo.common.utils.PageUtils@7311a525
2019-05-22 10:04:23 -请求地址 : http://localhost:8081/moneyLog/waterLog/exprotWaterLog
2019-05-22 10:04:23 -HTTP METHOD : GET
2019-05-22 10:04:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog
2019-05-22 10:04:23 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@6640a490, org.apache.shiro.web.servlet.ShiroHttpServletResponse@43c0834f, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2d8e2a32]
2019-05-22 10:04:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-22 10:04:23 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 2(String)
2019-05-22 10:04:23 -<==      Total: 3
2019-05-22 10:04:23 -耗时 : 23
2019-05-22 10:04:23 -返回值 : null
2019-05-22 10:04:51 -请求地址 : http://localhost:8081/elec/elec
2019-05-22 10:04:51 -HTTP METHOD : GET
2019-05-22 10:04:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-22 10:04:51 -参数 : []
2019-05-22 10:04:51 -耗时 : 1
2019-05-22 10:04:51 -返回值 : elec/elec/elec
2019-05-22 10:04:52 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:04:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:04:52 -HTTP METHOD : GET
2019-05-22 10:04:52 -HTTP METHOD : GET
2019-05-22 10:04:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:04:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:04:52 -参数 : [elecType]
2019-05-22 10:04:52 -参数 : [userType]
2019-05-22 10:04:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:04:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:04:52 -==> Parameters: elecType(String)
2019-05-22 10:04:52 -==> Parameters: userType(String)
2019-05-22 10:04:52 -<==      Total: 4
2019-05-22 10:04:52 -耗时 : 4
2019-05-22 10:04:52 -<==      Total: 11
2019-05-22 10:04:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:04:52 -耗时 : 4
2019-05-22 10:04:52 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:04:52 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:04:52 -HTTP METHOD : GET
2019-05-22 10:04:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:04:52 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1142e9db]
2019-05-22 10:04:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-05-22 10:04:52 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:04:52 -{conn-10003, pstmt-20033} execute error. select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec
	 
    	  	  
	      		     	
	      		     	  	
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'wx' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor189.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy105.list(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.list(ElecServiceImpl.java:30)
	at com.bootdo.elec.controller.ElecController.list(ElecController.java:57)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$1d121cac.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-22 10:04:52 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-05-22 10:04:52 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-05-22 10:04:52 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'wx' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec                                                                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'wx' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'wx' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'wx' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec                                                                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'wx' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'wx' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy105.list(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.list(ElecServiceImpl.java:30)
	at com.bootdo.elec.controller.ElecController.list(ElecController.java:57)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$1d121cac.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'wx' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor189.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-05-22 10:04:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:04:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'wx' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec                                                                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'wx' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'wx' in 'field list'(String), null, 2019-05-22 10:04:52.521(Timestamp)
2019-05-22 10:04:52 -<==    Updates: 1
2019-05-22 10:07:31 -Starting BootdoApplication on PC-201905091110 with PID 28024 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-22 10:07:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-22 10:07:31 -The following profiles are active: dev
2019-05-22 10:07:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 10:07:31 CST 2019]; root of context hierarchy
2019-05-22 10:07:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-22 10:07:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ea1f1c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:07:45 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$dc784b07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:07:47 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:07:49 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:07:49 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:07:49 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-22 10:07:49 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-22 10:07:49 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:07:49 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:07:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:07:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:07:50 -Tomcat initialized with port(s): 8081 (http)
2019-05-22 10:07:50 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-22 10:07:51 -Starting service [Tomcat]
2019-05-22 10:07:51 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-22 10:07:51 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-22 10:07:51 -Initializing Spring embedded WebApplicationContext
2019-05-22 10:07:51 -Root WebApplicationContext: initialization completed in 19916 ms
2019-05-22 10:07:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-22 10:07:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-22 10:07:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-22 10:07:52 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-22 10:07:52 -Filter xssFilter was not registered (disabled)
2019-05-22 10:07:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-22 10:07:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-22 10:07:52 -Servlet statViewServlet mapped to [/druid/*]
2019-05-22 10:07:52 -Servlet dispatcherServlet mapped to [/]
2019-05-22 10:07:56 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 10:07:31 CST 2019]; root of context hierarchy
2019-05-22 10:07:57 -Using default implementation for ThreadExecutor
2019-05-22 10:07:57 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-22 10:07:57 -Quartz Scheduler v.2.2.1 created.
2019-05-22 10:07:57 -RAMJobStore initialized.
2019-05-22 10:07:57 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-22 10:07:57 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-22 10:07:57 -Quartz scheduler version: 2.2.1
2019-05-22 10:07:57 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@d108406
2019-05-22 10:07:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-22 10:07:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-22 10:08:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-22 10:08:01 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:08:01 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-22 10:08:01 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:08:01 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-22 10:08:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-22 10:08:01 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:08:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-22 10:08:01 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-22 10:08:01 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:08:01 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-22 10:08:01 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:08:01 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 10:08:01 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-22 10:08:01 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 10:08:01 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-22 10:08:01 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-22 10:08:01 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:08:01 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:08:01 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-22 10:08:01 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 10:08:01 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-22 10:08:01 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 10:08:01 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-22 10:08:01 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-22 10:08:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-22 10:08:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-22 10:08:01 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-22 10:08:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-22 10:08:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-22 10:08:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-22 10:08:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-22 10:08:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-22 10:08:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-22 10:08:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-22 10:08:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-22 10:08:01 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-22 10:08:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-22 10:08:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-22 10:08:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-22 10:08:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-22 10:08:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-22 10:08:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 10:08:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-22 10:08:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-22 10:08:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 10:08:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-22 10:08:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-22 10:08:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-22 10:08:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-22 10:08:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-22 10:08:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-22 10:08:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-22 10:08:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-22 10:08:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-22 10:08:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-22 10:08:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-22 10:08:01 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-22 10:08:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-22 10:08:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-22 10:08:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-22 10:08:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-22 10:08:01 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-22 10:08:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-22 10:08:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-22 10:08:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-22 10:08:01 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 10:08:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-22 10:08:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-22 10:08:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-22 10:08:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-22 10:08:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-22 10:08:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-22 10:08:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-22 10:08:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-22 10:08:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-22 10:08:01 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-22 10:08:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-22 10:08:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-22 10:08:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-22 10:08:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-22 10:08:02 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-22 10:08:02 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 10:08:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-22 10:08:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-22 10:08:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-22 10:08:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 10:08:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 10:08:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-22 10:08:02 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-22 10:08:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-22 10:08:02 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 10:08:02 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:02 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 10:08:02 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 10:08:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-22 10:08:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-22 10:08:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-22 10:08:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-22 10:08:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-22 10:08:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-22 10:08:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-22 10:08:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-22 10:08:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-22 10:08:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 10:08:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-22 10:08:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-22 10:08:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-22 10:08:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-22 10:08:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-22 10:08:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-22 10:08:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-22 10:08:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-22 10:08:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-22 10:08:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-22 10:08:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-22 10:08:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-22 10:08:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-22 10:08:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:02 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-22 10:08:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-22 10:08:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-22 10:08:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-22 10:08:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-22 10:08:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-22 10:08:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-22 10:08:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-22 10:08:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-22 10:08:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-22 10:08:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 10:08:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-22 10:08:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-22 10:08:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-22 10:08:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-22 10:08:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-22 10:08:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-22 10:08:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-22 10:08:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-22 10:08:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-22 10:08:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-22 10:08:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-22 10:08:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-22 10:08:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-22 10:08:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-22 10:08:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-22 10:08:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-22 10:08:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-22 10:08:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-22 10:08:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-22 10:08:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-22 10:08:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 10:08:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-22 10:08:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-22 10:08:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 10:08:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 10:08:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 10:08:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-22 10:08:03 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-22 10:08:03 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-22 10:08:03 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-22 10:08:03 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-22 10:08:03 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-22 10:08:03 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:03 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-22 10:08:03 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:03 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:03 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-22 10:08:03 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 10:08:03 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:03 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-22 10:08:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-22 10:08:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-22 10:08:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-22 10:08:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 10:08:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:08:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 10:08:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:08:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-22 10:08:03 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 10:08:03 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-22 10:08:03 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:08:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-22 10:08:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 10:08:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-22 10:08:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-22 10:08:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-22 10:08:04 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-22 10:08:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-22 10:08:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-22 10:08:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 10:08:05 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 10:07:31 CST 2019]; root of context hierarchy
2019-05-22 10:08:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 10:08:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 10:08:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 10:08:05 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-22 10:08:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-22 10:08:08 -Registering beans for JMX exposure on startup
2019-05-22 10:08:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-22 10:08:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-22 10:08:08 -Starting beans in phase 2147483647
2019-05-22 10:08:08 -Context refreshed
2019-05-22 10:08:08 -Found 1 custom documentation plugin(s)
2019-05-22 10:08:08 -Scanning for api listing references
2019-05-22 10:08:08 -Generating unique operation named: getCountDUsingPOST_1
2019-05-22 10:08:08 -Generating unique operation named: removeUsingPOST_1
2019-05-22 10:08:08 -Generating unique operation named: addUsingGET_1
2019-05-22 10:08:08 -Generating unique operation named: editUsingGET_1
2019-05-22 10:08:08 -Generating unique operation named: listUsingGET_1
2019-05-22 10:08:09 -Generating unique operation named: removeUsingPOST_2
2019-05-22 10:08:09 -Generating unique operation named: removeUsingPOST_3
2019-05-22 10:08:09 -Generating unique operation named: saveUsingPOST_1
2019-05-22 10:08:09 -Generating unique operation named: updateUsingGET_1
2019-05-22 10:08:09 -Generating unique operation named: updateUsingHEAD_1
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPOST_1
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPUT_1
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPATCH_1
2019-05-22 10:08:09 -Generating unique operation named: updateUsingDELETE_1
2019-05-22 10:08:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-22 10:08:09 -Generating unique operation named: updateUsingTRACE_1
2019-05-22 10:08:09 -Generating unique operation named: addUsingGET_2
2019-05-22 10:08:09 -Generating unique operation named: editUsingGET_2
2019-05-22 10:08:09 -Generating unique operation named: listUsingGET_2
2019-05-22 10:08:09 -Generating unique operation named: removeUsingPOST_4
2019-05-22 10:08:09 -Generating unique operation named: removeUsingPOST_5
2019-05-22 10:08:09 -Generating unique operation named: saveUsingPOST_2
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPOST_2
2019-05-22 10:08:09 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-22 10:08:09 -Generating unique operation named: addUsingGET_3
2019-05-22 10:08:09 -Generating unique operation named: editUsingGET_3
2019-05-22 10:08:09 -Generating unique operation named: listUsingGET_3
2019-05-22 10:08:09 -Generating unique operation named: removeUsingPOST_6
2019-05-22 10:08:09 -Generating unique operation named: removeUsingPOST_7
2019-05-22 10:08:09 -Generating unique operation named: saveUsingPOST_3
2019-05-22 10:08:09 -Generating unique operation named: updateUsingGET_2
2019-05-22 10:08:09 -Generating unique operation named: updateUsingHEAD_2
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPOST_3
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPUT_2
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPATCH_2
2019-05-22 10:08:09 -Generating unique operation named: updateUsingDELETE_2
2019-05-22 10:08:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-22 10:08:09 -Generating unique operation named: updateUsingTRACE_2
2019-05-22 10:08:09 -Generating unique operation named: addUsingGET_4
2019-05-22 10:08:09 -Generating unique operation named: editUsingGET_4
2019-05-22 10:08:09 -Generating unique operation named: listUsingGET_4
2019-05-22 10:08:09 -Generating unique operation named: removeUsingPOST_8
2019-05-22 10:08:09 -Generating unique operation named: removeUsingPOST_9
2019-05-22 10:08:09 -Generating unique operation named: saveUsingPOST_4
2019-05-22 10:08:09 -Generating unique operation named: updateUsingGET_3
2019-05-22 10:08:09 -Generating unique operation named: updateUsingHEAD_3
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPOST_4
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPUT_3
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPATCH_3
2019-05-22 10:08:09 -Generating unique operation named: updateUsingDELETE_3
2019-05-22 10:08:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-22 10:08:09 -Generating unique operation named: updateUsingTRACE_3
2019-05-22 10:08:09 -Generating unique operation named: ElecUsingGET_1
2019-05-22 10:08:09 -Generating unique operation named: addUsingGET_5
2019-05-22 10:08:09 -Generating unique operation named: editUsingGET_5
2019-05-22 10:08:09 -Generating unique operation named: listUsingGET_5
2019-05-22 10:08:09 -Generating unique operation named: removeUsingPOST_10
2019-05-22 10:08:09 -Generating unique operation named: removeUsingPOST_11
2019-05-22 10:08:09 -Generating unique operation named: saveUsingPOST_5
2019-05-22 10:08:09 -Generating unique operation named: updateUsingGET_4
2019-05-22 10:08:09 -Generating unique operation named: updateUsingHEAD_4
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPOST_5
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPUT_4
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPATCH_4
2019-05-22 10:08:09 -Generating unique operation named: updateUsingDELETE_4
2019-05-22 10:08:09 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-22 10:08:09 -Generating unique operation named: updateUsingTRACE_4
2019-05-22 10:08:09 -Generating unique operation named: editUsingGET_6
2019-05-22 10:08:09 -Generating unique operation named: listUsingGET_6
2019-05-22 10:08:09 -Generating unique operation named: updateUsingPOST_6
2019-05-22 10:08:09 -Generating unique operation named: addUsingGET_6
2019-05-22 10:08:09 -Generating unique operation named: editUsingGET_7
2019-05-22 10:08:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-22 10:08:10 -Generating unique operation named: listUsingGET_7
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_12
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_13
2019-05-22 10:08:10 -Generating unique operation named: saveUsingPOST_6
2019-05-22 10:08:10 -Generating unique operation named: updateUsingGET_5
2019-05-22 10:08:10 -Generating unique operation named: updateUsingHEAD_5
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPOST_7
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPUT_5
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPATCH_5
2019-05-22 10:08:10 -Generating unique operation named: updateUsingDELETE_5
2019-05-22 10:08:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-22 10:08:10 -Generating unique operation named: updateUsingTRACE_5
2019-05-22 10:08:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-22 10:08:10 -Generating unique operation named: addUsingGET_7
2019-05-22 10:08:10 -Generating unique operation named: editUsingGET_8
2019-05-22 10:08:10 -Generating unique operation named: listUsingGET_8
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_14
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_15
2019-05-22 10:08:10 -Generating unique operation named: saveUsingPOST_7
2019-05-22 10:08:10 -Generating unique operation named: updateUsingGET_6
2019-05-22 10:08:10 -Generating unique operation named: updateUsingHEAD_6
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPOST_8
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPUT_6
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPATCH_6
2019-05-22 10:08:10 -Generating unique operation named: updateUsingDELETE_6
2019-05-22 10:08:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-22 10:08:10 -Generating unique operation named: updateUsingTRACE_6
2019-05-22 10:08:10 -Generating unique operation named: addUsingGET_8
2019-05-22 10:08:10 -Generating unique operation named: editUsingGET_9
2019-05-22 10:08:10 -Generating unique operation named: listUsingGET_9
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_16
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_17
2019-05-22 10:08:10 -Generating unique operation named: saveUsingPOST_8
2019-05-22 10:08:10 -Generating unique operation named: updateUsingGET_7
2019-05-22 10:08:10 -Generating unique operation named: updateUsingHEAD_7
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPOST_9
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPUT_7
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPATCH_7
2019-05-22 10:08:10 -Generating unique operation named: updateUsingDELETE_7
2019-05-22 10:08:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-22 10:08:10 -Generating unique operation named: updateUsingTRACE_7
2019-05-22 10:08:10 -Generating unique operation named: addUsingGET_9
2019-05-22 10:08:10 -Generating unique operation named: editUsingGET_10
2019-05-22 10:08:10 -Generating unique operation named: infoUsingGET_1
2019-05-22 10:08:10 -Generating unique operation named: infoUsingHEAD_1
2019-05-22 10:08:10 -Generating unique operation named: infoUsingPOST_1
2019-05-22 10:08:10 -Generating unique operation named: infoUsingPUT_1
2019-05-22 10:08:10 -Generating unique operation named: infoUsingPATCH_1
2019-05-22 10:08:10 -Generating unique operation named: infoUsingDELETE_1
2019-05-22 10:08:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-22 10:08:10 -Generating unique operation named: infoUsingTRACE_1
2019-05-22 10:08:10 -Generating unique operation named: listUsingGET_10
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_18
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_19
2019-05-22 10:08:10 -Generating unique operation named: saveUsingPOST_9
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPOST_10
2019-05-22 10:08:10 -Generating unique operation named: listUsingGET_11
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_20
2019-05-22 10:08:10 -Generating unique operation named: welcomeUsingGET_1
2019-05-22 10:08:10 -Generating unique operation named: addUsingGET_10
2019-05-22 10:08:10 -Generating unique operation named: editUsingGET_11
2019-05-22 10:08:10 -Generating unique operation named: listUsingGET_12
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_21
2019-05-22 10:08:10 -Generating unique operation named: saveUsingPOST_10
2019-05-22 10:08:10 -Generating unique operation named: treeUsingGET_1
2019-05-22 10:08:10 -Generating unique operation named: treeUsingGET_2
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPOST_11
2019-05-22 10:08:10 -Generating unique operation named: editUsingGET_12
2019-05-22 10:08:10 -Generating unique operation named: addUsingGET_11
2019-05-22 10:08:10 -Generating unique operation named: editUsingGET_13
2019-05-22 10:08:10 -Generating unique operation named: listUsingGET_13
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_22
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_23
2019-05-22 10:08:10 -Generating unique operation named: saveUsingPOST_11
2019-05-22 10:08:10 -Generating unique operation named: updateUsingGET_8
2019-05-22 10:08:10 -Generating unique operation named: updateUsingHEAD_8
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPOST_12
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPUT_8
2019-05-22 10:08:10 -Generating unique operation named: updateUsingPATCH_8
2019-05-22 10:08:10 -Generating unique operation named: updateUsingDELETE_8
2019-05-22 10:08:10 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-22 10:08:10 -Generating unique operation named: updateUsingTRACE_8
2019-05-22 10:08:10 -Generating unique operation named: addUsingGET_12
2019-05-22 10:08:10 -Generating unique operation named: editUsingGET_14
2019-05-22 10:08:10 -Generating unique operation named: listUsingGET_14
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_24
2019-05-22 10:08:10 -Generating unique operation named: removeUsingPOST_25
2019-05-22 10:08:10 -Generating unique operation named: saveUsingPOST_12
2019-05-22 10:08:10 -Generating unique operation named: updateUsingGET_9
2019-05-22 10:08:11 -Generating unique operation named: updateUsingHEAD_9
2019-05-22 10:08:11 -Generating unique operation named: updateUsingPOST_13
2019-05-22 10:08:11 -Generating unique operation named: updateUsingPUT_9
2019-05-22 10:08:11 -Generating unique operation named: updateUsingPATCH_9
2019-05-22 10:08:11 -Generating unique operation named: updateUsingDELETE_9
2019-05-22 10:08:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-22 10:08:11 -Generating unique operation named: updateUsingTRACE_9
2019-05-22 10:08:11 -Generating unique operation named: addUsingGET_13
2019-05-22 10:08:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-22 10:08:11 -Generating unique operation named: editUsingGET_15
2019-05-22 10:08:11 -Generating unique operation named: listUsingGET_15
2019-05-22 10:08:11 -Generating unique operation named: saveUsingPOST_13
2019-05-22 10:08:11 -Generating unique operation named: saveUsingPOST_14
2019-05-22 10:08:11 -Generating unique operation named: updateUsingPOST_14
2019-05-22 10:08:11 -Generating unique operation named: listUsingGET_16
2019-05-22 10:08:11 -Generating unique operation named: listUsingHEAD_1
2019-05-22 10:08:11 -Generating unique operation named: listUsingPOST_1
2019-05-22 10:08:11 -Generating unique operation named: listUsingPUT_1
2019-05-22 10:08:11 -Generating unique operation named: listUsingPATCH_1
2019-05-22 10:08:11 -Generating unique operation named: listUsingDELETE_1
2019-05-22 10:08:11 -Generating unique operation named: listUsingOPTIONS_1
2019-05-22 10:08:11 -Generating unique operation named: listUsingTRACE_1
2019-05-22 10:08:11 -Generating unique operation named: countDDUsingGET_1
2019-05-22 10:08:11 -Generating unique operation named: exportDDUsingGET_1
2019-05-22 10:08:11 -Generating unique operation named: addUsingGET_14
2019-05-22 10:08:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-22 10:08:11 -Generating unique operation named: editUsingGET_16
2019-05-22 10:08:11 -Generating unique operation named: listUsingGET_17
2019-05-22 10:08:11 -Generating unique operation named: removeUsingPOST_26
2019-05-22 10:08:11 -Generating unique operation named: saveUsingPOST_15
2019-05-22 10:08:11 -Generating unique operation named: treeUsingGET_3
2019-05-22 10:08:11 -Generating unique operation named: treeViewUsingGET_1
2019-05-22 10:08:11 -Generating unique operation named: updateUsingPOST_15
2019-05-22 10:08:11 -Generating unique operation named: addUsingGET_15
2019-05-22 10:08:11 -Generating unique operation named: editUsingGET_17
2019-05-22 10:08:11 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-22 10:08:11 -Generating unique operation named: listUsingGET_18
2019-05-22 10:08:11 -Generating unique operation named: removeUsingPOST_27
2019-05-22 10:08:11 -Generating unique operation named: removeUsingPOST_28
2019-05-22 10:08:11 -Generating unique operation named: saveUsingPOST_16
2019-05-22 10:08:11 -Generating unique operation named: updateUsingGET_10
2019-05-22 10:08:11 -Generating unique operation named: updateUsingHEAD_10
2019-05-22 10:08:11 -Generating unique operation named: updateUsingPOST_16
2019-05-22 10:08:11 -Generating unique operation named: updateUsingPUT_10
2019-05-22 10:08:11 -Generating unique operation named: updateUsingPATCH_10
2019-05-22 10:08:11 -Generating unique operation named: updateUsingDELETE_10
2019-05-22 10:08:11 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-22 10:08:11 -Generating unique operation named: updateUsingTRACE_10
2019-05-22 10:08:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-22 10:08:12 -Generating unique operation named: addUsingGET_16
2019-05-22 10:08:12 -Generating unique operation named: editUsingGET_18
2019-05-22 10:08:12 -Generating unique operation named: listUsingGET_19
2019-05-22 10:08:12 -Generating unique operation named: removeUsingPOST_29
2019-05-22 10:08:12 -Generating unique operation named: removeUsingPOST_30
2019-05-22 10:08:12 -Generating unique operation named: saveUsingPOST_17
2019-05-22 10:08:12 -Generating unique operation named: updateUsingGET_11
2019-05-22 10:08:12 -Generating unique operation named: updateUsingHEAD_11
2019-05-22 10:08:12 -Generating unique operation named: updateUsingPOST_17
2019-05-22 10:08:12 -Generating unique operation named: updateUsingPUT_11
2019-05-22 10:08:12 -Generating unique operation named: updateUsingPATCH_11
2019-05-22 10:08:12 -Generating unique operation named: updateUsingDELETE_11
2019-05-22 10:08:12 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-22 10:08:12 -Generating unique operation named: updateUsingTRACE_11
2019-05-22 10:08:12 -Generating unique operation named: addUsingGET_17
2019-05-22 10:08:12 -Generating unique operation named: editUsingGET_19
2019-05-22 10:08:12 -Generating unique operation named: listUsingGET_20
2019-05-22 10:08:12 -Generating unique operation named: removeUsingPOST_31
2019-05-22 10:08:12 -Generating unique operation named: removeUsingPOST_32
2019-05-22 10:08:12 -Generating unique operation named: saveUsingPOST_18
2019-05-22 10:08:12 -Generating unique operation named: updateUsingGET_12
2019-05-22 10:08:12 -Generating unique operation named: updateUsingHEAD_12
2019-05-22 10:08:12 -Generating unique operation named: updateUsingPOST_18
2019-05-22 10:08:12 -Generating unique operation named: updateUsingPUT_12
2019-05-22 10:08:12 -Generating unique operation named: updateUsingPATCH_12
2019-05-22 10:08:12 -Generating unique operation named: updateUsingDELETE_12
2019-05-22 10:08:13 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-22 10:08:13 -Generating unique operation named: updateUsingTRACE_12
2019-05-22 10:08:13 -Starting Quartz Scheduler now
2019-05-22 10:08:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-22 10:08:13 -Starting...
2019-05-22 10:08:13 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-22 10:08:13 -Started.
2019-05-22 10:08:13 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-22 10:08:13 -Using a shared selector for servlet write/read
2019-05-22 10:08:13 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-22 10:08:13 -Started BootdoApplication in 43.61 seconds (JVM running for 44.532)
2019-05-22 10:08:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-22 10:08:13 -==> Parameters: 
2019-05-22 10:08:13 -<==      Total: 1
2019-05-22 10:08:19 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-22 10:08:19 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-22 10:08:19 -FrameworkServlet 'dispatcherServlet': initialization completed in 104 ms
2019-05-22 10:08:19 -Enabling session validation scheduler...
2019-05-22 10:08:19 -请求地址 : http://localhost:8081/login;JSESSIONID=0f59128e-815e-4021-a8b0-54d9cada9ac0
2019-05-22 10:08:19 -HTTP METHOD : GET
2019-05-22 10:08:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 10:08:19 -参数 : [{}]
2019-05-22 10:08:19 -耗时 : 12
2019-05-22 10:08:19 -返回值 : login
2019-05-22 10:08:21 -请求地址 : http://localhost:8081/getVerify
2019-05-22 10:08:21 -HTTP METHOD : GET
2019-05-22 10:08:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 10:08:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4acd30c8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3b74bace]
2019-05-22 10:08:25 -5286
2019-05-22 10:08:26 -耗时 : 5116
2019-05-22 10:08:26 -返回值 : null
2019-05-22 10:08:31 -请求地址 : http://localhost:8081/login
2019-05-22 10:08:31 -HTTP METHOD : POST
2019-05-22 10:08:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 10:08:31 -参数 : [admin, 111111, 5286, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7da6e3b3]
2019-05-22 10:08:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 10:08:31 -==> Parameters: admin(String)
2019-05-22 10:08:31 -<==      Total: 1
2019-05-22 10:08:31 -耗时 : 391
2019-05-22 10:08:31 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:08:31 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-22 10:08:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:08:31 -==> Parameters: 1(Long), admin(String), 登录(String), 391(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 10:08:31.921(Timestamp)
2019-05-22 10:08:32 -<==    Updates: 1
2019-05-22 10:08:32 -请求地址 : http://localhost:8081/index
2019-05-22 10:08:32 -HTTP METHOD : GET
2019-05-22 10:08:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 10:08:32 -参数 : [{}]
2019-05-22 10:08:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 10:08:32 -==> Parameters: 1(Long)
2019-05-22 10:08:32 -<==      Total: 49
2019-05-22 10:08:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 10:08:32 -==> Parameters: 138(Long)
2019-05-22 10:08:32 -<==      Total: 1
2019-05-22 10:08:32 -耗时 : 319
2019-05-22 10:08:32 -返回值 : index_v1
2019-05-22 10:08:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:08:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 320(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 10:08:32.703(Timestamp)
2019-05-22 10:08:32 -<==    Updates: 1
2019-05-22 10:08:32 -请求地址 : http://localhost:8081/main
2019-05-22 10:08:32 -HTTP METHOD : GET
2019-05-22 10:08:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:08:32 -参数 : []
2019-05-22 10:08:32 -耗时 : 1
2019-05-22 10:08:32 -返回值 : main
2019-05-22 10:08:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 10:08:33 -HTTP METHOD : GET
2019-05-22 10:08:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 10:08:33 -参数 : []
2019-05-22 10:08:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 10:08:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 10:08:33 -<==      Total: 0
2019-05-22 10:08:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 10:08:33 -请求地址 : http://localhost:8081/main
2019-05-22 10:08:33 -HTTP METHOD : GET
2019-05-22 10:08:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:08:33 -参数 : []
2019-05-22 10:08:33 -耗时 : 0
2019-05-22 10:08:33 -返回值 : main
2019-05-22 10:08:33 -==> Parameters: 1(Long), 0(String)
2019-05-22 10:08:33 -<==      Total: 1
2019-05-22 10:08:33 -耗时 : 166
2019-05-22 10:08:33 -返回值 : com.bootdo.common.utils.PageUtils@55fd2fc0
2019-05-22 10:08:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 10:08:37 -==> Parameters: 1(Long)
2019-05-22 10:08:37 -<==      Total: 93
2019-05-22 10:08:37 -请求地址 : http://localhost:8081/elec/elec
2019-05-22 10:08:37 -HTTP METHOD : GET
2019-05-22 10:08:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-22 10:08:37 -参数 : []
2019-05-22 10:08:37 -耗时 : 0
2019-05-22 10:08:37 -返回值 : elec/elec/elec
2019-05-22 10:08:39 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:08:39 -HTTP METHOD : GET
2019-05-22 10:08:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:08:39 -参数 : [elecType]
2019-05-22 10:08:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:08:39 -HTTP METHOD : GET
2019-05-22 10:08:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:08:39 -参数 : [userType]
2019-05-22 10:08:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:08:39 -==> Parameters: userType(String)
2019-05-22 10:08:39 -<==      Total: 4
2019-05-22 10:08:39 -耗时 : 34
2019-05-22 10:08:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:08:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:08:39 -==> Parameters: elecType(String)
2019-05-22 10:08:39 -<==      Total: 11
2019-05-22 10:08:39 -耗时 : 75
2019-05-22 10:08:39 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:08:39 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:08:39 -HTTP METHOD : GET
2019-05-22 10:08:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:08:39 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2968831c]
2019-05-22 10:08:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-22 10:08:39 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:08:39 -<==      Total: 10
2019-05-22 10:08:39 -==>  Preparing: select count(*) from elec 
2019-05-22 10:08:39 -==> Parameters: 
2019-05-22 10:08:39 -<==      Total: 1
2019-05-22 10:08:39 -耗时 : 248
2019-05-22 10:08:39 -返回值 : com.bootdo.common.utils.PageUtils@686d19f2
2019-05-22 10:08:53 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-22 10:08:53 -HTTP METHOD : GET
2019-05-22 10:08:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-22 10:08:53 -参数 : []
2019-05-22 10:08:53 -耗时 : 0
2019-05-22 10:08:53 -返回值 : /moneyLog/elecLog/elecLog
2019-05-22 10:08:53 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:08:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:08:53 -HTTP METHOD : GET
2019-05-22 10:08:53 -HTTP METHOD : GET
2019-05-22 10:08:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:08:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:08:53 -参数 : [userType]
2019-05-22 10:08:53 -参数 : [elecType]
2019-05-22 10:08:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:08:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:08:53 -==> Parameters: elecType(String)
2019-05-22 10:08:53 -==> Parameters: userType(String)
2019-05-22 10:08:53 -<==      Total: 11
2019-05-22 10:08:53 -耗时 : 10
2019-05-22 10:08:53 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:08:53 -<==      Total: 4
2019-05-22 10:08:53 -耗时 : 20
2019-05-22 10:08:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:08:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-22 10:08:53 -HTTP METHOD : GET
2019-05-22 10:08:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-22 10:08:53 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-22 10:08:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-22 10:08:53 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:08:53 -<==      Total: 10
2019-05-22 10:08:53 -==>  Preparing: select count(*) from elec_log 
2019-05-22 10:08:53 -==> Parameters: 
2019-05-22 10:08:53 -<==      Total: 1
2019-05-22 10:08:53 -耗时 : 32
2019-05-22 10:08:53 -返回值 : com.bootdo.common.utils.PageUtils@534ad3d9
2019-05-22 10:08:54 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-22 10:08:54 -HTTP METHOD : GET
2019-05-22 10:08:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-22 10:08:54 -参数 : []
2019-05-22 10:08:54 -耗时 : 1
2019-05-22 10:08:54 -返回值 : /moneyList/moneyList
2019-05-22 10:09:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-22 10:09:02 -HTTP METHOD : GET
2019-05-22 10:09:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-22 10:09:02 -参数 : []
2019-05-22 10:09:02 -耗时 : 1
2019-05-22 10:09:02 -返回值 : /moneyLog/heatLog/heatLog
2019-05-22 10:09:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:09:02 -HTTP METHOD : GET
2019-05-22 10:09:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:09:02 -参数 : [userType]
2019-05-22 10:09:02 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-22 10:09:02 -HTTP METHOD : GET
2019-05-22 10:09:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:09:02 -参数 : [heatType]
2019-05-22 10:09:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:09:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:09:02 -==> Parameters: userType(String)
2019-05-22 10:09:02 -==> Parameters: heatType(String)
2019-05-22 10:09:02 -<==      Total: 4
2019-05-22 10:09:02 -<==      Total: 4
2019-05-22 10:09:02 -耗时 : 7
2019-05-22 10:09:02 -耗时 : 7
2019-05-22 10:09:02 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:09:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:09:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-22 10:09:02 -HTTP METHOD : GET
2019-05-22 10:09:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-22 10:09:02 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-22 10:09:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-22 10:09:02 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:09:02 -<==      Total: 10
2019-05-22 10:09:02 -==>  Preparing: select count(*) from heat_log 
2019-05-22 10:09:02 -==> Parameters: 
2019-05-22 10:09:02 -<==      Total: 1
2019-05-22 10:09:02 -耗时 : 86
2019-05-22 10:09:02 -返回值 : com.bootdo.common.utils.PageUtils@1c595559
2019-05-22 10:09:04 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-05-22 10:09:06 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-22 10:09:06 -HTTP METHOD : GET
2019-05-22 10:09:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-22 10:09:06 -参数 : []
2019-05-22 10:09:06 -耗时 : 0
2019-05-22 10:09:06 -返回值 : /moneyLog/waterLog/waterLog
2019-05-22 10:09:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:09:06 -HTTP METHOD : GET
2019-05-22 10:09:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:09:06 -参数 : [userType]
2019-05-22 10:09:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:09:06 -==> Parameters: userType(String)
2019-05-22 10:09:06 -<==      Total: 4
2019-05-22 10:09:06 -耗时 : 6
2019-05-22 10:09:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:09:06 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 10:09:06 -HTTP METHOD : GET
2019-05-22 10:09:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:09:06 -参数 : [waterType]
2019-05-22 10:09:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:09:06 -==> Parameters: waterType(String)
2019-05-22 10:09:06 -<==      Total: 4
2019-05-22 10:09:06 -耗时 : 8
2019-05-22 10:09:06 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:09:07 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-22 10:09:07 -HTTP METHOD : GET
2019-05-22 10:09:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-22 10:09:07 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-22 10:09:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-22 10:09:07 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:09:07 -<==      Total: 10
2019-05-22 10:09:07 -==>  Preparing: select count(*) from water_log 
2019-05-22 10:09:07 -==> Parameters: 
2019-05-22 10:09:07 -<==      Total: 1
2019-05-22 10:09:07 -耗时 : 64
2019-05-22 10:09:07 -返回值 : com.bootdo.common.utils.PageUtils@5bf16526
2019-05-22 10:09:15 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:09:15 -HTTP METHOD : GET
2019-05-22 10:09:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:09:15 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@3fca2c49]
2019-05-22 10:09:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-05-22 10:09:15 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:09:15 -<==      Total: 2
2019-05-22 10:09:15 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-05-22 10:09:16 -==> Parameters: 
2019-05-22 10:09:16 -<==      Total: 1
2019-05-22 10:09:16 -耗时 : 33
2019-05-22 10:09:16 -返回值 : com.bootdo.common.utils.PageUtils@759e095
2019-05-22 10:09:27 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:09:27 -HTTP METHOD : GET
2019-05-22 10:09:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:09:27 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=2019-02, queryType=2}, com.bootdo.elec.domain.ElecDO@483ca7cb]
2019-05-22 10:09:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? order by id asc limit ?, ? 
2019-05-22 10:09:27 -==> Parameters: 2019-02(String), 0(Integer), 10(Integer)
2019-05-22 10:09:27 -<==      Total: 0
2019-05-22 10:09:27 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and `create_time` = ? 
2019-05-22 10:09:27 -==> Parameters: 2019-02(String)
2019-05-22 10:09:27 -<==      Total: 1
2019-05-22 10:09:27 -耗时 : 17
2019-05-22 10:09:27 -返回值 : com.bootdo.common.utils.PageUtils@14f028a
2019-05-22 10:09:27 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:09:27 -HTTP METHOD : GET
2019-05-22 10:09:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:09:27 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=2019-02, queryType=2}, com.bootdo.elec.domain.ElecDO@20f75d1b]
2019-05-22 10:09:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? order by id asc limit ?, ? 
2019-05-22 10:09:27 -==> Parameters: 2019-02(String), 0(Integer), 10(Integer)
2019-05-22 10:09:27 -<==      Total: 0
2019-05-22 10:09:27 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and `create_time` = ? 
2019-05-22 10:09:27 -==> Parameters: 2019-02(String)
2019-05-22 10:09:27 -<==      Total: 1
2019-05-22 10:09:27 -耗时 : 6
2019-05-22 10:09:27 -返回值 : com.bootdo.common.utils.PageUtils@6dd1c4e7
2019-05-22 10:09:32 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:09:32 -HTTP METHOD : GET
2019-05-22 10:09:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:09:32 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@256a9a75]
2019-05-22 10:09:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? order by id asc limit ?, ? 
2019-05-22 10:09:32 -==> Parameters: 2019-03(String), 0(Integer), 10(Integer)
2019-05-22 10:09:32 -<==      Total: 2
2019-05-22 10:09:32 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and `create_time` = ? 
2019-05-22 10:09:32 -==> Parameters: 2019-03(String)
2019-05-22 10:09:32 -<==      Total: 1
2019-05-22 10:09:32 -耗时 : 8
2019-05-22 10:09:32 -返回值 : com.bootdo.common.utils.PageUtils@5ef2c25c
2019-05-22 10:09:40 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:09:40 -HTTP METHOD : GET
2019-05-22 10:09:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:09:40 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@1bce462a]
2019-05-22 10:09:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? order by id asc limit ?, ? 
2019-05-22 10:09:40 -==> Parameters: 2019-03(String), 0(Integer), 10(Integer)
2019-05-22 10:09:40 -<==      Total: 10
2019-05-22 10:09:40 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? 
2019-05-22 10:09:40 -==> Parameters: 2019-03(String)
2019-05-22 10:09:40 -<==      Total: 1
2019-05-22 10:09:40 -耗时 : 26
2019-05-22 10:09:40 -返回值 : com.bootdo.common.utils.PageUtils@4bdf3ae3
2019-05-22 10:09:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:09:45 -HTTP METHOD : GET
2019-05-22 10:09:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:09:45 -参数 : []
2019-05-22 10:09:45 -耗时 : 2
2019-05-22 10:09:45 -返回值 : system/dept/deptTree
2019-05-22 10:09:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:09:46 -HTTP METHOD : GET
2019-05-22 10:09:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:09:46 -参数 : []
2019-05-22 10:09:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:09:46 -==> Parameters: 
2019-05-22 10:09:46 -<==      Total: 3
2019-05-22 10:09:46 -耗时 : 16
2019-05-22 10:09:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:09:49 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:09:49 -HTTP METHOD : GET
2019-05-22 10:09:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:09:49 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=3, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@2fba42c5]
2019-05-22 10:09:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:09:49 -==> Parameters: 2019-03(String), 3(String), 0(Integer), 10(Integer)
2019-05-22 10:09:49 -<==      Total: 0
2019-05-22 10:09:49 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:09:49 -==> Parameters: 2019-03(String), 3(String)
2019-05-22 10:09:49 -<==      Total: 1
2019-05-22 10:09:49 -耗时 : 16
2019-05-22 10:09:49 -返回值 : com.bootdo.common.utils.PageUtils@4cfd322c
2019-05-22 10:10:20 -请求地址 : http://localhost:8081/index
2019-05-22 10:10:20 -HTTP METHOD : GET
2019-05-22 10:10:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 10:10:20 -参数 : [{}]
2019-05-22 10:10:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 10:10:20 -==> Parameters: 1(Long)
2019-05-22 10:10:20 -<==      Total: 49
2019-05-22 10:10:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 10:10:20 -==> Parameters: 138(Long)
2019-05-22 10:10:20 -<==      Total: 1
2019-05-22 10:10:20 -耗时 : 30
2019-05-22 10:10:20 -返回值 : index_v1
2019-05-22 10:10:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:10:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 10:10:20.041(Timestamp)
2019-05-22 10:10:20 -请求地址 : http://localhost:8081/main
2019-05-22 10:10:20 -HTTP METHOD : GET
2019-05-22 10:10:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:10:20 -参数 : []
2019-05-22 10:10:20 -耗时 : 1
2019-05-22 10:10:20 -返回值 : main
2019-05-22 10:10:20 -<==    Updates: 1
2019-05-22 10:10:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 10:10:20 -HTTP METHOD : GET
2019-05-22 10:10:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 10:10:20 -参数 : []
2019-05-22 10:10:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 10:10:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 10:10:20 -<==      Total: 0
2019-05-22 10:10:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 10:10:20 -==> Parameters: 1(Long), 0(String)
2019-05-22 10:10:20 -<==      Total: 1
2019-05-22 10:10:20 -耗时 : 18
2019-05-22 10:10:20 -返回值 : com.bootdo.common.utils.PageUtils@75840170
2019-05-22 10:10:20 -请求地址 : http://localhost:8081/main
2019-05-22 10:10:20 -HTTP METHOD : GET
2019-05-22 10:10:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:10:20 -参数 : []
2019-05-22 10:10:20 -耗时 : 1
2019-05-22 10:10:20 -返回值 : main
2019-05-22 10:10:22 -请求地址 : http://localhost:8081/elec/elec
2019-05-22 10:10:22 -HTTP METHOD : GET
2019-05-22 10:10:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-22 10:10:22 -参数 : []
2019-05-22 10:10:22 -耗时 : 0
2019-05-22 10:10:22 -返回值 : elec/elec/elec
2019-05-22 10:10:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:10:22 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:10:22 -HTTP METHOD : GET
2019-05-22 10:10:22 -HTTP METHOD : GET
2019-05-22 10:10:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:10:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:10:22 -参数 : [userType]
2019-05-22 10:10:22 -参数 : [elecType]
2019-05-22 10:10:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:10:22 -==> Parameters: elecType(String)
2019-05-22 10:10:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:10:22 -==> Parameters: userType(String)
2019-05-22 10:10:22 -<==      Total: 4
2019-05-22 10:10:22 -耗时 : 5
2019-05-22 10:10:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:10:22 -<==      Total: 11
2019-05-22 10:10:22 -耗时 : 9
2019-05-22 10:10:22 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:10:22 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:10:22 -HTTP METHOD : GET
2019-05-22 10:10:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:10:22 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2ed622bd]
2019-05-22 10:10:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-22 10:10:22 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:10:22 -<==      Total: 10
2019-05-22 10:10:22 -==>  Preparing: select count(*) from elec 
2019-05-22 10:10:22 -==> Parameters: 
2019-05-22 10:10:22 -<==      Total: 1
2019-05-22 10:10:22 -耗时 : 10
2019-05-22 10:10:22 -返回值 : com.bootdo.common.utils.PageUtils@60035d64
2019-05-22 10:10:28 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:10:28 -HTTP METHOD : GET
2019-05-22 10:10:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:10:28 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@480b561c]
2019-05-22 10:10:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? order by id asc limit ?, ? 
2019-05-22 10:10:28 -==> Parameters: 2019-03(String), 0(Integer), 10(Integer)
2019-05-22 10:10:28 -<==      Total: 10
2019-05-22 10:10:28 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? 
2019-05-22 10:10:28 -==> Parameters: 2019-03(String)
2019-05-22 10:10:28 -<==      Total: 1
2019-05-22 10:10:28 -耗时 : 12
2019-05-22 10:10:28 -返回值 : com.bootdo.common.utils.PageUtils@3aa51a14
2019-05-22 10:10:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:10:36 -HTTP METHOD : GET
2019-05-22 10:10:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:10:36 -参数 : []
2019-05-22 10:10:36 -耗时 : 0
2019-05-22 10:10:36 -返回值 : system/dept/deptTree
2019-05-22 10:10:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:10:36 -HTTP METHOD : GET
2019-05-22 10:10:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:10:36 -参数 : []
2019-05-22 10:10:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:10:36 -==> Parameters: 
2019-05-22 10:10:36 -<==      Total: 3
2019-05-22 10:10:36 -耗时 : 4
2019-05-22 10:10:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:10:38 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:10:38 -HTTP METHOD : GET
2019-05-22 10:10:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:10:38 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=3, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@63a29cc8]
2019-05-22 10:10:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:10:38 -==> Parameters: 2019-03(String), 3(String), 0(Integer), 10(Integer)
2019-05-22 10:10:38 -<==      Total: 1
2019-05-22 10:10:38 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:10:38 -==> Parameters: 2019-03(String), 3(String)
2019-05-22 10:10:38 -<==      Total: 1
2019-05-22 10:10:38 -耗时 : 7
2019-05-22 10:10:38 -返回值 : com.bootdo.common.utils.PageUtils@69000ae4
2019-05-22 10:10:53 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:10:53 -HTTP METHOD : GET
2019-05-22 10:10:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:10:53 -参数 : [{limit=10, offset=0, userType=A, elecType=, userOrg=3, userId=, createTime=2019-03, queryType=1, type=A}, com.bootdo.elec.domain.ElecDO@2a497ba3]
2019-05-22 10:10:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:10:53 -==> Parameters: 2019-03(String), A(String), 3(String), 0(Integer), 10(Integer)
2019-05-22 10:10:53 -<==      Total: 1
2019-05-22 10:10:53 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_type = ? and user_org = ? 
2019-05-22 10:10:53 -==> Parameters: 2019-03(String), A(String), 3(String)
2019-05-22 10:10:53 -<==      Total: 1
2019-05-22 10:10:53 -耗时 : 20
2019-05-22 10:10:53 -返回值 : com.bootdo.common.utils.PageUtils@65a242f8
2019-05-22 10:10:54 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:10:54 -HTTP METHOD : GET
2019-05-22 10:10:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:10:54 -参数 : [{limit=10, offset=0, userType=A, elecType=, userOrg=3, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@49b9f42]
2019-05-22 10:10:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:10:54 -==> Parameters: 2019-03(String), A(String), 3(String), 0(Integer), 10(Integer)
2019-05-22 10:10:54 -<==      Total: 1
2019-05-22 10:10:54 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_type = ? and user_org = ? 
2019-05-22 10:10:54 -==> Parameters: 2019-03(String), A(String), 3(String)
2019-05-22 10:10:54 -<==      Total: 1
2019-05-22 10:10:54 -耗时 : 7
2019-05-22 10:10:54 -返回值 : com.bootdo.common.utils.PageUtils@427823bf
2019-05-22 10:10:57 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:10:57 -HTTP METHOD : GET
2019-05-22 10:10:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:10:57 -参数 : [{limit=10, offset=0, userType=A, elecType=6, userOrg=3, userId=, createTime=2019-03, queryType=1, type=6}, com.bootdo.elec.domain.ElecDO@1f6cce9e]
2019-05-22 10:10:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:10:57 -==> Parameters: 2019-03(String), A(String), 6(String), 3(String), 0(Integer), 10(Integer)
2019-05-22 10:10:57 -<==      Total: 0
2019-05-22 10:10:57 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? 
2019-05-22 10:10:57 -==> Parameters: 2019-03(String), A(String), 6(String), 3(String)
2019-05-22 10:10:57 -<==      Total: 1
2019-05-22 10:10:57 -耗时 : 30
2019-05-22 10:10:57 -返回值 : com.bootdo.common.utils.PageUtils@1d54055a
2019-05-22 10:10:59 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:10:59 -HTTP METHOD : GET
2019-05-22 10:10:59 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:10:59 -参数 : [{limit=10, offset=0, userType=A, elecType=7, userOrg=3, userId=, createTime=2019-03, queryType=1, type=7}, com.bootdo.elec.domain.ElecDO@70f6a544]
2019-05-22 10:10:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:10:59 -==> Parameters: 2019-03(String), A(String), 7(String), 3(String), 0(Integer), 10(Integer)
2019-05-22 10:10:59 -<==      Total: 1
2019-05-22 10:10:59 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? 
2019-05-22 10:10:59 -==> Parameters: 2019-03(String), A(String), 7(String), 3(String)
2019-05-22 10:10:59 -<==      Total: 1
2019-05-22 10:10:59 -耗时 : 24
2019-05-22 10:10:59 -返回值 : com.bootdo.common.utils.PageUtils@e8aabd7
2019-05-22 10:11:05 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-22 10:11:11 -请求地址 : http://localhost:8081/elec/elec/edit/9
2019-05-22 10:11:11 -HTTP METHOD : GET
2019-05-22 10:11:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-05-22 10:11:11 -参数 : [9, {}]
2019-05-22 10:11:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-22 10:11:11 -==> Parameters: 9(Long)
2019-05-22 10:11:11 -<==      Total: 1
2019-05-22 10:11:11 -耗时 : 10
2019-05-22 10:11:11 -返回值 : elec/elec/edit
2019-05-22 10:11:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:11:11 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-22 10:11:11 -HTTP METHOD : GET
2019-05-22 10:11:11 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:11:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:11:11 -HTTP METHOD : GET
2019-05-22 10:11:11 -参数 : [userState]
2019-05-22 10:11:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:11:11 -参数 : [elecType]
2019-05-22 10:11:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:11:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:11:11 -HTTP METHOD : GET
2019-05-22 10:11:11 -==> Parameters: elecType(String)
2019-05-22 10:11:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:11:11 -参数 : [userType]
2019-05-22 10:11:11 -==> Parameters: userState(String)
2019-05-22 10:11:11 -<==      Total: 2
2019-05-22 10:11:11 -<==      Total: 11
2019-05-22 10:11:11 -耗时 : 4
2019-05-22 10:11:11 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:11:11 -耗时 : 5
2019-05-22 10:11:11 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:11:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:11:11 -==> Parameters: userType(String)
2019-05-22 10:11:11 -<==      Total: 4
2019-05-22 10:11:11 -耗时 : 16
2019-05-22 10:11:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:11:27 -请求地址 : http://localhost:8081/elec/elec/update
2019-05-22 10:11:27 -HTTP METHOD : POST
2019-05-22 10:11:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-05-22 10:11:27 -参数 : [com.bootdo.elec.domain.ElecDO@3b854ec6]
2019-05-22 10:11:27 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-22 10:11:27 -==> Parameters: 1-0009(String), 考试的(String), A(String), 3(String), (String), 0(String), 1(String), 7(String), 0(String), 10(String), 1(Integer), 10(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 2019-03(String), 1(Long), 2019-05-22 10:11:27.138(Timestamp), 1(Long), (String), 9(Long)
2019-05-22 10:11:27 -<==    Updates: 1
2019-05-22 10:11:27 -==>  Preparing: update elec set `start`= 0, `end` = 0, `elec_amount` = 0, `elec_cost` = 0 where id = ? 
2019-05-22 10:11:27 -==> Parameters: 9(Long)
2019-05-22 10:11:27 -<==    Updates: 1
2019-05-22 10:11:27 -耗时 : 172
2019-05-22 10:11:27 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:11:27 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:11:27 -HTTP METHOD : GET
2019-05-22 10:11:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:11:27 -参数 : [{limit=10, offset=0, userType=A, elecType=7, userOrg=3, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@2d5c1936]
2019-05-22 10:11:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:11:27 -==> Parameters: 2019-03(String), A(String), 7(String), 3(String), 0(Integer), 10(Integer)
2019-05-22 10:11:27 -<==      Total: 0
2019-05-22 10:11:27 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? 
2019-05-22 10:11:27 -==> Parameters: 2019-03(String), A(String), 7(String), 3(String)
2019-05-22 10:11:27 -<==      Total: 1
2019-05-22 10:11:27 -耗时 : 75
2019-05-22 10:11:27 -返回值 : com.bootdo.common.utils.PageUtils@450151a1
2019-05-22 10:11:31 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:11:31 -HTTP METHOD : GET
2019-05-22 10:11:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:11:31 -参数 : [{limit=10, offset=0, userType=A, elecType=7, userOrg=3, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@22d65d6c]
2019-05-22 10:11:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:11:31 -==> Parameters: 2019-03(String), A(String), 7(String), 3(String), 0(Integer), 10(Integer)
2019-05-22 10:11:31 -<==      Total: 1
2019-05-22 10:11:31 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_type = ? and elec_type = ? and user_org = ? 
2019-05-22 10:11:31 -==> Parameters: 2019-03(String), A(String), 7(String), 3(String)
2019-05-22 10:11:31 -<==      Total: 1
2019-05-22 10:11:31 -耗时 : 7
2019-05-22 10:11:31 -返回值 : com.bootdo.common.utils.PageUtils@7399ea82
2019-05-22 10:11:41 -请求地址 : http://localhost:8081/index
2019-05-22 10:11:41 -HTTP METHOD : GET
2019-05-22 10:11:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 10:11:41 -参数 : [{}]
2019-05-22 10:11:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 10:11:41 -==> Parameters: 1(Long)
2019-05-22 10:11:41 -<==      Total: 49
2019-05-22 10:11:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 10:11:41 -==> Parameters: 138(Long)
2019-05-22 10:11:41 -<==      Total: 1
2019-05-22 10:11:41 -耗时 : 161
2019-05-22 10:11:41 -返回值 : index_v1
2019-05-22 10:11:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:11:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 161(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 10:11:41.865(Timestamp)
2019-05-22 10:11:41 -<==    Updates: 1
2019-05-22 10:11:41 -请求地址 : http://localhost:8081/main
2019-05-22 10:11:41 -HTTP METHOD : GET
2019-05-22 10:11:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:11:41 -参数 : []
2019-05-22 10:11:41 -耗时 : 0
2019-05-22 10:11:41 -返回值 : main
2019-05-22 10:11:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 10:11:42 -HTTP METHOD : GET
2019-05-22 10:11:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 10:11:42 -参数 : []
2019-05-22 10:11:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 10:11:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 10:11:42 -<==      Total: 0
2019-05-22 10:11:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 10:11:42 -==> Parameters: 1(Long), 0(String)
2019-05-22 10:11:42 -<==      Total: 1
2019-05-22 10:11:42 -耗时 : 43
2019-05-22 10:11:42 -返回值 : com.bootdo.common.utils.PageUtils@ee0ffdc
2019-05-22 10:11:42 -请求地址 : http://localhost:8081/main
2019-05-22 10:11:42 -HTTP METHOD : GET
2019-05-22 10:11:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:11:42 -参数 : []
2019-05-22 10:11:42 -耗时 : 0
2019-05-22 10:11:42 -返回值 : main
2019-05-22 10:11:44 -请求地址 : http://localhost:8081/elec/elec
2019-05-22 10:11:44 -HTTP METHOD : GET
2019-05-22 10:11:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-22 10:11:44 -参数 : []
2019-05-22 10:11:44 -耗时 : 0
2019-05-22 10:11:44 -返回值 : elec/elec/elec
2019-05-22 10:11:44 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:11:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:11:44 -HTTP METHOD : GET
2019-05-22 10:11:44 -HTTP METHOD : GET
2019-05-22 10:11:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:11:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:11:44 -参数 : [elecType]
2019-05-22 10:11:44 -参数 : [userType]
2019-05-22 10:11:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:11:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:11:44 -==> Parameters: userType(String)
2019-05-22 10:11:44 -==> Parameters: elecType(String)
2019-05-22 10:11:44 -<==      Total: 4
2019-05-22 10:11:44 -耗时 : 4
2019-05-22 10:11:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:11:44 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:11:44 -HTTP METHOD : GET
2019-05-22 10:11:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:11:44 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2f26cc1]
2019-05-22 10:11:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-22 10:11:44 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:11:44 -<==      Total: 10
2019-05-22 10:11:44 -==>  Preparing: select count(*) from elec 
2019-05-22 10:11:44 -==> Parameters: 
2019-05-22 10:11:44 -<==      Total: 1
2019-05-22 10:11:44 -耗时 : 13
2019-05-22 10:11:44 -返回值 : com.bootdo.common.utils.PageUtils@2c702809
2019-05-22 10:11:44 -<==      Total: 11
2019-05-22 10:11:44 -耗时 : 192
2019-05-22 10:11:44 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:11:45 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:11:45 -HTTP METHOD : GET
2019-05-22 10:11:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:11:45 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@70849f0d]
2019-05-22 10:11:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-22 10:11:45 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:11:45 -<==      Total: 10
2019-05-22 10:11:45 -==>  Preparing: select count(*) from elec 
2019-05-22 10:11:45 -==> Parameters: 
2019-05-22 10:11:45 -<==      Total: 1
2019-05-22 10:11:45 -耗时 : 8
2019-05-22 10:11:45 -返回值 : com.bootdo.common.utils.PageUtils@6222b099
2019-05-22 10:12:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:12:04 -HTTP METHOD : GET
2019-05-22 10:12:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:12:04 -参数 : []
2019-05-22 10:12:04 -耗时 : 3
2019-05-22 10:12:04 -返回值 : system/dept/deptTree
2019-05-22 10:12:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:12:04 -HTTP METHOD : GET
2019-05-22 10:12:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:12:04 -参数 : []
2019-05-22 10:12:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:12:04 -==> Parameters: 
2019-05-22 10:12:04 -<==      Total: 3
2019-05-22 10:12:04 -耗时 : 3
2019-05-22 10:12:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:12:06 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:12:06 -HTTP METHOD : GET
2019-05-22 10:12:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:12:06 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=3, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@2e80023]
2019-05-22 10:12:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:12:06 -==> Parameters: 2019-03(String), 3(String), 0(Integer), 10(Integer)
2019-05-22 10:12:06 -<==      Total: 1
2019-05-22 10:12:06 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:12:06 -==> Parameters: 2019-03(String), 3(String)
2019-05-22 10:12:06 -<==      Total: 1
2019-05-22 10:12:06 -耗时 : 7
2019-05-22 10:12:06 -返回值 : com.bootdo.common.utils.PageUtils@377712bc
2019-05-22 10:12:12 -请求地址 : http://localhost:8081/elec/elec/edit/9
2019-05-22 10:12:12 -HTTP METHOD : GET
2019-05-22 10:12:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-05-22 10:12:12 -参数 : [9, {}]
2019-05-22 10:12:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-22 10:12:12 -==> Parameters: 9(Long)
2019-05-22 10:12:12 -<==      Total: 1
2019-05-22 10:12:12 -耗时 : 4
2019-05-22 10:12:12 -返回值 : elec/elec/edit
2019-05-22 10:12:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:12:13 -HTTP METHOD : GET
2019-05-22 10:12:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:12:13 -参数 : [userType]
2019-05-22 10:12:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:12:13 -==> Parameters: userType(String)
2019-05-22 10:12:13 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:12:13 -HTTP METHOD : GET
2019-05-22 10:12:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:12:13 -参数 : [elecType]
2019-05-22 10:12:13 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-22 10:12:13 -HTTP METHOD : GET
2019-05-22 10:12:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:12:13 -参数 : [userState]
2019-05-22 10:12:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:12:13 -==> Parameters: elecType(String)
2019-05-22 10:12:13 -<==      Total: 4
2019-05-22 10:12:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:12:13 -耗时 : 4
2019-05-22 10:12:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:12:13 -==> Parameters: userState(String)
2019-05-22 10:12:13 -<==      Total: 2
2019-05-22 10:12:13 -耗时 : 6
2019-05-22 10:12:13 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:12:13 -<==      Total: 11
2019-05-22 10:12:13 -耗时 : 11
2019-05-22 10:12:13 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:12:39 -请求地址 : http://localhost:8081/elec/elec/update
2019-05-22 10:12:39 -HTTP METHOD : POST
2019-05-22 10:12:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-05-22 10:12:39 -参数 : [com.bootdo.elec.domain.ElecDO@7a060838]
2019-05-22 10:12:39 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-22 10:12:39 -==> Parameters: 1-0009(String), 考试的(String), A(String), 3(String), (String), 0(String), 1(String), 7(String), 0(String), 10(String), 1(Integer), 10(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 2019-03(String), 1(Long), 2019-05-22 10:12:39.256(Timestamp), 1(Long), (String), 9(Long)
2019-05-22 10:12:39 -<==    Updates: 1
2019-05-22 10:12:39 -==>  Preparing: update elec set `start`= 0, `end` = 0, `elec_amount` = 0, `elec_cost` = 0 where id = ? 
2019-05-22 10:12:39 -==> Parameters: 9(Long)
2019-05-22 10:12:39 -<==    Updates: 1
2019-05-22 10:12:39 -耗时 : 221
2019-05-22 10:12:39 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:12:39 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:12:39 -HTTP METHOD : GET
2019-05-22 10:12:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:12:39 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=3, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@47723da3]
2019-05-22 10:12:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:12:39 -==> Parameters: 2019-03(String), 3(String), 0(Integer), 10(Integer)
2019-05-22 10:12:39 -<==      Total: 0
2019-05-22 10:12:39 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 10:12:39 -==> Parameters: 2019-03(String), 3(String)
2019-05-22 10:12:39 -<==      Total: 1
2019-05-22 10:12:39 -耗时 : 10
2019-05-22 10:12:39 -返回值 : com.bootdo.common.utils.PageUtils@464c5a4a
2019-05-22 10:12:41 -请求地址 : http://localhost:8081/index
2019-05-22 10:12:41 -HTTP METHOD : GET
2019-05-22 10:12:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 10:12:41 -参数 : [{}]
2019-05-22 10:12:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 10:12:41 -==> Parameters: 1(Long)
2019-05-22 10:12:42 -<==      Total: 49
2019-05-22 10:12:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 10:12:42 -==> Parameters: 138(Long)
2019-05-22 10:12:42 -<==      Total: 1
2019-05-22 10:12:42 -耗时 : 193
2019-05-22 10:12:42 -返回值 : index_v1
2019-05-22 10:12:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:12:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 193(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 10:12:42.088(Timestamp)
2019-05-22 10:12:42 -请求地址 : http://localhost:8081/main
2019-05-22 10:12:42 -HTTP METHOD : GET
2019-05-22 10:12:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:12:42 -参数 : []
2019-05-22 10:12:42 -耗时 : 0
2019-05-22 10:12:42 -返回值 : main
2019-05-22 10:12:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 10:12:42 -HTTP METHOD : GET
2019-05-22 10:12:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 10:12:42 -参数 : []
2019-05-22 10:12:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 10:12:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 10:12:42 -<==      Total: 0
2019-05-22 10:12:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 10:12:42 -==> Parameters: 1(Long), 0(String)
2019-05-22 10:12:42 -<==      Total: 1
2019-05-22 10:12:42 -耗时 : 6
2019-05-22 10:12:42 -返回值 : com.bootdo.common.utils.PageUtils@6c15fe6
2019-05-22 10:12:42 -请求地址 : http://localhost:8081/main
2019-05-22 10:12:42 -HTTP METHOD : GET
2019-05-22 10:12:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:12:42 -参数 : []
2019-05-22 10:12:42 -耗时 : 1
2019-05-22 10:12:42 -返回值 : main
2019-05-22 10:12:42 -<==    Updates: 1
2019-05-22 10:12:46 -请求地址 : http://localhost:8081/elec/elec
2019-05-22 10:12:46 -HTTP METHOD : GET
2019-05-22 10:12:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-22 10:12:46 -参数 : []
2019-05-22 10:12:46 -耗时 : 0
2019-05-22 10:12:46 -返回值 : elec/elec/elec
2019-05-22 10:12:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:12:46 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:12:46 -HTTP METHOD : GET
2019-05-22 10:12:46 -HTTP METHOD : GET
2019-05-22 10:12:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:12:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:12:46 -参数 : [userType]
2019-05-22 10:12:46 -参数 : [elecType]
2019-05-22 10:12:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:12:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:12:46 -==> Parameters: userType(String)
2019-05-22 10:12:46 -==> Parameters: elecType(String)
2019-05-22 10:12:46 -<==      Total: 4
2019-05-22 10:12:46 -<==      Total: 11
2019-05-22 10:12:46 -耗时 : 4
2019-05-22 10:12:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:12:46 -耗时 : 4
2019-05-22 10:12:46 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:12:46 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:12:46 -HTTP METHOD : GET
2019-05-22 10:12:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:12:46 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1e3922bf]
2019-05-22 10:12:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-22 10:12:46 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:12:46 -<==      Total: 10
2019-05-22 10:12:46 -==>  Preparing: select count(*) from elec 
2019-05-22 10:12:46 -==> Parameters: 
2019-05-22 10:12:46 -<==      Total: 1
2019-05-22 10:12:46 -耗时 : 9
2019-05-22 10:12:46 -返回值 : com.bootdo.common.utils.PageUtils@4f942c40
2019-05-22 10:12:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:12:49 -HTTP METHOD : GET
2019-05-22 10:12:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:12:49 -参数 : []
2019-05-22 10:12:49 -耗时 : 1
2019-05-22 10:12:49 -返回值 : system/dept/deptTree
2019-05-22 10:12:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:12:49 -HTTP METHOD : GET
2019-05-22 10:12:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:12:49 -参数 : []
2019-05-22 10:12:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:12:49 -==> Parameters: 
2019-05-22 10:12:49 -<==      Total: 3
2019-05-22 10:12:49 -耗时 : 3
2019-05-22 10:12:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:12:53 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:12:53 -HTTP METHOD : GET
2019-05-22 10:12:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:12:53 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=3, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@aae501d]
2019-05-22 10:12:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_org = ? order by id asc limit ?, ? 
2019-05-22 10:12:53 -==> Parameters: 3(String), 0(Integer), 10(Integer)
2019-05-22 10:12:53 -<==      Total: 1
2019-05-22 10:12:53 -==>  Preparing: select count(*) from elec WHERE user_org = ? 
2019-05-22 10:12:53 -==> Parameters: 3(String)
2019-05-22 10:12:53 -<==      Total: 1
2019-05-22 10:12:53 -耗时 : 12
2019-05-22 10:12:53 -返回值 : com.bootdo.common.utils.PageUtils@2b598050
2019-05-22 10:13:38 -请求地址 : http://localhost:8081/index
2019-05-22 10:13:38 -HTTP METHOD : GET
2019-05-22 10:13:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 10:13:38 -参数 : [{}]
2019-05-22 10:13:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 10:13:38 -==> Parameters: 1(Long)
2019-05-22 10:13:38 -<==      Total: 49
2019-05-22 10:13:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 10:13:38 -==> Parameters: 138(Long)
2019-05-22 10:13:38 -<==      Total: 1
2019-05-22 10:13:38 -耗时 : 17
2019-05-22 10:13:38 -返回值 : index_v1
2019-05-22 10:13:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:13:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 10:13:38.24(Timestamp)
2019-05-22 10:13:38 -<==    Updates: 1
2019-05-22 10:13:38 -请求地址 : http://localhost:8081/main
2019-05-22 10:13:38 -HTTP METHOD : GET
2019-05-22 10:13:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:13:38 -参数 : []
2019-05-22 10:13:38 -耗时 : 0
2019-05-22 10:13:38 -返回值 : main
2019-05-22 10:13:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 10:13:38 -HTTP METHOD : GET
2019-05-22 10:13:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 10:13:38 -参数 : []
2019-05-22 10:13:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 10:13:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 10:13:38 -<==      Total: 0
2019-05-22 10:13:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 10:13:38 -==> Parameters: 1(Long), 0(String)
2019-05-22 10:13:38 -<==      Total: 1
2019-05-22 10:13:38 -耗时 : 7
2019-05-22 10:13:38 -返回值 : com.bootdo.common.utils.PageUtils@5082b5ac
2019-05-22 10:13:38 -请求地址 : http://localhost:8081/main
2019-05-22 10:13:38 -HTTP METHOD : GET
2019-05-22 10:13:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:13:38 -参数 : []
2019-05-22 10:13:38 -耗时 : 0
2019-05-22 10:13:38 -返回值 : main
2019-05-22 10:13:48 -请求地址 : http://localhost:8081/elec/elec
2019-05-22 10:13:48 -HTTP METHOD : GET
2019-05-22 10:13:48 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-22 10:13:48 -参数 : []
2019-05-22 10:13:48 -耗时 : 1
2019-05-22 10:13:48 -返回值 : elec/elec/elec
2019-05-22 10:13:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:13:48 -HTTP METHOD : GET
2019-05-22 10:13:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:13:48 -参数 : [userType]
2019-05-22 10:13:48 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:13:48 -HTTP METHOD : GET
2019-05-22 10:13:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:13:48 -参数 : [elecType]
2019-05-22 10:13:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:13:48 -==> Parameters: userType(String)
2019-05-22 10:13:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:13:48 -==> Parameters: elecType(String)
2019-05-22 10:13:48 -<==      Total: 4
2019-05-22 10:13:48 -<==      Total: 11
2019-05-22 10:13:48 -耗时 : 5
2019-05-22 10:13:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:13:48 -耗时 : 5
2019-05-22 10:13:48 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:13:48 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:13:48 -HTTP METHOD : GET
2019-05-22 10:13:48 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:13:48 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@5111f099]
2019-05-22 10:13:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-22 10:13:48 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:13:48 -<==      Total: 10
2019-05-22 10:13:48 -==>  Preparing: select count(*) from elec 
2019-05-22 10:13:48 -==> Parameters: 
2019-05-22 10:13:48 -<==      Total: 1
2019-05-22 10:13:48 -耗时 : 7
2019-05-22 10:13:48 -返回值 : com.bootdo.common.utils.PageUtils@10e53a9b
2019-05-22 10:13:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:13:57 -HTTP METHOD : GET
2019-05-22 10:13:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:13:57 -参数 : []
2019-05-22 10:13:57 -耗时 : 0
2019-05-22 10:13:57 -返回值 : system/dept/deptTree
2019-05-22 10:13:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:13:57 -HTTP METHOD : GET
2019-05-22 10:13:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:13:57 -参数 : []
2019-05-22 10:13:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:13:57 -==> Parameters: 
2019-05-22 10:13:57 -<==      Total: 3
2019-05-22 10:13:57 -耗时 : 4
2019-05-22 10:13:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:14:01 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:14:01 -HTTP METHOD : GET
2019-05-22 10:14:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:14:01 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@256575c1]
2019-05-22 10:14:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:14:01 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:14:01 -<==      Total: 10
2019-05-22 10:14:01 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:14:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:14:01 -<==      Total: 1
2019-05-22 10:14:01 -耗时 : 10
2019-05-22 10:14:01 -返回值 : com.bootdo.common.utils.PageUtils@340c3dee
2019-05-22 10:14:13 -请求地址 : http://localhost:8081/elec/elec/edit/3
2019-05-22 10:14:13 -HTTP METHOD : GET
2019-05-22 10:14:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-05-22 10:14:13 -参数 : [3, {}]
2019-05-22 10:14:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-22 10:14:13 -==> Parameters: 3(Long)
2019-05-22 10:14:13 -<==      Total: 1
2019-05-22 10:14:13 -耗时 : 4
2019-05-22 10:14:13 -返回值 : elec/elec/edit
2019-05-22 10:14:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:14:13 -HTTP METHOD : GET
2019-05-22 10:14:13 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-22 10:14:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:14:13 -HTTP METHOD : GET
2019-05-22 10:14:13 -参数 : [userType]
2019-05-22 10:14:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:14:13 -参数 : [userState]
2019-05-22 10:14:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:14:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:14:13 -==> Parameters: userType(String)
2019-05-22 10:14:13 -==> Parameters: userState(String)
2019-05-22 10:14:13 -<==      Total: 2
2019-05-22 10:14:13 -耗时 : 3
2019-05-22 10:14:13 -<==      Total: 4
2019-05-22 10:14:13 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:14:13 -耗时 : 3
2019-05-22 10:14:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:14:13 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:14:13 -HTTP METHOD : GET
2019-05-22 10:14:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:14:13 -参数 : [elecType]
2019-05-22 10:14:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:14:13 -==> Parameters: elecType(String)
2019-05-22 10:14:13 -<==      Total: 11
2019-05-22 10:14:13 -耗时 : 5
2019-05-22 10:14:13 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:14:25 -请求地址 : http://localhost:8081/elec/elec/update
2019-05-22 10:14:25 -HTTP METHOD : POST
2019-05-22 10:14:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-05-22 10:14:25 -参数 : [com.bootdo.elec.domain.ElecDO@4eae8526]
2019-05-22 10:14:25 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-22 10:14:25 -==> Parameters: 1-0002(String), 阿萨德(String), A(String), 2(String), (String), 1(String), 1000(String), 2(String), 0(String), 10(String), 1(Integer), 10(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 2019-03(String), 1(Long), 2019-05-22 10:14:25.234(Timestamp), 1(Long), (String), 3(Long)
2019-05-22 10:14:25 -<==    Updates: 1
2019-05-22 10:14:25 -耗时 : 186
2019-05-22 10:14:25 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:14:25 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:14:25 -HTTP METHOD : GET
2019-05-22 10:14:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:14:25 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@57b3ae70]
2019-05-22 10:14:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:14:25 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:14:25 -<==      Total: 2
2019-05-22 10:14:25 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 10:14:25 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:14:25 -<==      Total: 1
2019-05-22 10:14:25 -耗时 : 9
2019-05-22 10:14:25 -返回值 : com.bootdo.common.utils.PageUtils@1d0f9144
2019-05-22 10:14:32 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:14:32 -HTTP METHOD : GET
2019-05-22 10:14:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:14:32 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@6d2b7960]
2019-05-22 10:14:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:14:32 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:14:32 -<==      Total: 10
2019-05-22 10:14:32 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:14:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:14:32 -<==      Total: 1
2019-05-22 10:14:32 -耗时 : 7
2019-05-22 10:14:32 -返回值 : com.bootdo.common.utils.PageUtils@2594359d
2019-05-22 10:15:41 -请求地址 : http://localhost:8081/elec/elec/edit/3
2019-05-22 10:15:41 -HTTP METHOD : GET
2019-05-22 10:15:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-05-22 10:15:41 -参数 : [3, {}]
2019-05-22 10:15:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-22 10:15:41 -==> Parameters: 3(Long)
2019-05-22 10:15:41 -<==      Total: 1
2019-05-22 10:15:41 -耗时 : 5
2019-05-22 10:15:41 -返回值 : elec/elec/edit
2019-05-22 10:15:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:15:41 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-22 10:15:41 -HTTP METHOD : GET
2019-05-22 10:15:41 -HTTP METHOD : GET
2019-05-22 10:15:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:15:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:15:41 -参数 : [userType]
2019-05-22 10:15:41 -参数 : [userState]
2019-05-22 10:15:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:15:41 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:15:41 -HTTP METHOD : GET
2019-05-22 10:15:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:15:41 -参数 : [elecType]
2019-05-22 10:15:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:15:41 -==> Parameters: userState(String)
2019-05-22 10:15:41 -==> Parameters: userType(String)
2019-05-22 10:15:41 -<==      Total: 4
2019-05-22 10:15:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:15:41 -==> Parameters: elecType(String)
2019-05-22 10:15:41 -<==      Total: 2
2019-05-22 10:15:41 -耗时 : 4
2019-05-22 10:15:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:15:41 -耗时 : 4
2019-05-22 10:15:41 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:15:41 -<==      Total: 11
2019-05-22 10:15:41 -耗时 : 6
2019-05-22 10:15:41 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:15:53 -请求地址 : http://localhost:8081/elec/elec/update
2019-05-22 10:15:53 -HTTP METHOD : POST
2019-05-22 10:15:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-05-22 10:15:53 -参数 : [com.bootdo.elec.domain.ElecDO@36215aff]
2019-05-22 10:15:53 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-22 10:15:53 -==> Parameters: 1-0002(String), 阿萨德(String), A(String), 2(String), (String), 0(String), 1000(String), 2(String), 0(String), 10(String), 1(Integer), 10(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 2019-03(String), 1(Long), 2019-05-22 10:15:53.507(Timestamp), 1(Long), (String), 3(Long)
2019-05-22 10:15:53 -<==    Updates: 1
2019-05-22 10:15:53 -==>  Preparing: update elec set `start`= 0, `end` = 0, `elec_amount` = 0, `elec_cost` = 0 where id = ? 
2019-05-22 10:15:53 -==> Parameters: 3(Long)
2019-05-22 10:15:53 -<==    Updates: 1
2019-05-22 10:15:53 -耗时 : 109
2019-05-22 10:15:53 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:15:53 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:15:53 -HTTP METHOD : GET
2019-05-22 10:15:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:15:53 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@324fdcc3]
2019-05-22 10:15:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:15:53 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:15:53 -<==      Total: 2
2019-05-22 10:15:53 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 10:15:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:15:53 -<==      Total: 1
2019-05-22 10:15:53 -耗时 : 9
2019-05-22 10:15:53 -返回值 : com.bootdo.common.utils.PageUtils@7d70b924
2019-05-22 10:15:59 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:15:59 -HTTP METHOD : GET
2019-05-22 10:15:59 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:15:59 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@3ac99dd3]
2019-05-22 10:15:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:15:59 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:15:59 -<==      Total: 10
2019-05-22 10:15:59 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:15:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:15:59 -<==      Total: 1
2019-05-22 10:15:59 -耗时 : 7
2019-05-22 10:15:59 -返回值 : com.bootdo.common.utils.PageUtils@4aa4c670
2019-05-22 10:16:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:16:45 -HTTP METHOD : GET
2019-05-22 10:16:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:16:45 -参数 : []
2019-05-22 10:16:45 -耗时 : 1
2019-05-22 10:16:45 -返回值 : system/dept/deptTree
2019-05-22 10:16:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:16:45 -HTTP METHOD : GET
2019-05-22 10:16:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:16:45 -参数 : []
2019-05-22 10:16:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:16:45 -==> Parameters: 
2019-05-22 10:16:45 -<==      Total: 3
2019-05-22 10:16:45 -耗时 : 8
2019-05-22 10:16:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:16:47 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:16:47 -HTTP METHOD : GET
2019-05-22 10:16:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:16:47 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=3, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@13c2b836]
2019-05-22 10:16:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:16:47 -==> Parameters: 2019-03(String), 3(String), 0(Integer), 10(Integer)
2019-05-22 10:16:47 -<==      Total: 1
2019-05-22 10:16:47 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:16:47 -==> Parameters: 2019-03(String), 3(String)
2019-05-22 10:16:47 -<==      Total: 1
2019-05-22 10:16:47 -耗时 : 7
2019-05-22 10:16:47 -返回值 : com.bootdo.common.utils.PageUtils@5318a7d0
2019-05-22 10:16:49 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-05-22 10:16:49 -HTTP METHOD : GET
2019-05-22 10:16:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-05-22 10:16:49 -参数 : [com.bootdo.elec.vo.ElecVo@3f525ed7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3980d60]
2019-05-22 10:16:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:16:49 -==> Parameters: 2019-03(String), 3(String)
2019-05-22 10:16:49 -<==      Total: 1
2019-05-22 10:16:50 -耗时 : 1250
2019-05-22 10:16:50 -返回值 : null
2019-05-22 10:27:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 10:27:26 -==> Parameters: 1(Long)
2019-05-22 10:27:26 -<==      Total: 93
2019-05-22 10:27:26 -请求地址 : http://localhost:8081/elec/elec/edit/9
2019-05-22 10:27:26 -HTTP METHOD : GET
2019-05-22 10:27:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-05-22 10:27:26 -参数 : [9, {}]
2019-05-22 10:27:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-22 10:27:26 -==> Parameters: 9(Long)
2019-05-22 10:27:26 -<==      Total: 1
2019-05-22 10:27:26 -耗时 : 3
2019-05-22 10:27:26 -返回值 : elec/elec/edit
2019-05-22 10:27:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:27:27 -HTTP METHOD : GET
2019-05-22 10:27:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:27:27 -参数 : [userType]
2019-05-22 10:27:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:27:27 -==> Parameters: userType(String)
2019-05-22 10:27:27 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-22 10:27:27 -HTTP METHOD : GET
2019-05-22 10:27:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:27:27 -参数 : [userState]
2019-05-22 10:27:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:27:27 -<==      Total: 4
2019-05-22 10:27:27 -==> Parameters: userState(String)
2019-05-22 10:27:27 -耗时 : 4
2019-05-22 10:27:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:27:27 -<==      Total: 2
2019-05-22 10:27:27 -耗时 : 5
2019-05-22 10:27:27 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:27:27 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:27:27 -HTTP METHOD : GET
2019-05-22 10:27:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:27:27 -参数 : [elecType]
2019-05-22 10:27:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:27:27 -==> Parameters: elecType(String)
2019-05-22 10:27:27 -<==      Total: 11
2019-05-22 10:27:27 -耗时 : 8
2019-05-22 10:27:27 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:27:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:27:30 -HTTP METHOD : GET
2019-05-22 10:27:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:27:30 -参数 : []
2019-05-22 10:27:30 -耗时 : 0
2019-05-22 10:27:30 -返回值 : system/dept/deptTree
2019-05-22 10:27:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:27:30 -HTTP METHOD : GET
2019-05-22 10:27:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:27:30 -参数 : []
2019-05-22 10:27:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:27:30 -==> Parameters: 
2019-05-22 10:27:30 -<==      Total: 3
2019-05-22 10:27:30 -耗时 : 3
2019-05-22 10:27:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:27:33 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:27:33 -HTTP METHOD : GET
2019-05-22 10:27:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:27:33 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@13e1ccc9]
2019-05-22 10:27:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:27:33 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:27:33 -<==      Total: 10
2019-05-22 10:27:33 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:27:33 -<==      Total: 1
2019-05-22 10:27:33 -耗时 : 8
2019-05-22 10:27:33 -返回值 : com.bootdo.common.utils.PageUtils@56556a08
2019-05-22 10:27:47 -请求地址 : http://localhost:8081/elec/elec/edit/4
2019-05-22 10:27:47 -HTTP METHOD : GET
2019-05-22 10:27:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-05-22 10:27:47 -参数 : [4, {}]
2019-05-22 10:27:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-22 10:27:47 -==> Parameters: 4(Long)
2019-05-22 10:27:47 -<==      Total: 1
2019-05-22 10:27:47 -耗时 : 4
2019-05-22 10:27:47 -返回值 : elec/elec/edit
2019-05-22 10:27:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:27:47 -HTTP METHOD : GET
2019-05-22 10:27:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:27:47 -参数 : [userType]
2019-05-22 10:27:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:27:47 -==> Parameters: userType(String)
2019-05-22 10:27:47 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-22 10:27:47 -HTTP METHOD : GET
2019-05-22 10:27:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:27:47 -参数 : [userState]
2019-05-22 10:27:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:27:47 -==> Parameters: userState(String)
2019-05-22 10:27:47 -<==      Total: 4
2019-05-22 10:27:47 -耗时 : 4
2019-05-22 10:27:47 -<==      Total: 2
2019-05-22 10:27:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:27:47 -耗时 : 3
2019-05-22 10:27:47 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:27:47 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:27:47 -HTTP METHOD : GET
2019-05-22 10:27:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:27:47 -参数 : [elecType]
2019-05-22 10:27:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:27:47 -==> Parameters: elecType(String)
2019-05-22 10:27:47 -<==      Total: 11
2019-05-22 10:27:47 -耗时 : 4
2019-05-22 10:27:47 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:27:59 -请求地址 : http://localhost:8081/elec/elec/update
2019-05-22 10:27:59 -HTTP METHOD : POST
2019-05-22 10:27:59 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-05-22 10:27:59 -参数 : [com.bootdo.elec.domain.ElecDO@b93cf5]
2019-05-22 10:27:59 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-22 10:27:59 -==> Parameters: 1-0003(String), 时代峰(String), A(String), 2(String), (String), 0(String), 1000(String), 3(String), 50(String), 100(String), 2(Integer), 100(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 2019-03(String), 1(Long), 2019-05-22 10:27:59.77(Timestamp), 1(Long), (String), 4(Long)
2019-05-22 10:27:59 -<==    Updates: 1
2019-05-22 10:27:59 -==>  Preparing: update elec set `start`= 0, `end` = 0, `elec_amount` = 0, `elec_cost` = 0 where id = ? 
2019-05-22 10:27:59 -==> Parameters: 4(Long)
2019-05-22 10:27:59 -<==    Updates: 1
2019-05-22 10:27:59 -耗时 : 201
2019-05-22 10:27:59 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:28:00 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:28:00 -HTTP METHOD : GET
2019-05-22 10:28:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:28:00 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@414700ba]
2019-05-22 10:28:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:28:00 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:28:00 -<==      Total: 2
2019-05-22 10:28:00 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 10:28:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:28:00 -<==      Total: 1
2019-05-22 10:28:00 -耗时 : 11
2019-05-22 10:28:00 -返回值 : com.bootdo.common.utils.PageUtils@2ff14797
2019-05-22 10:28:03 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:28:03 -HTTP METHOD : GET
2019-05-22 10:28:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:28:03 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@3fc42b47]
2019-05-22 10:28:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:28:03 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:28:03 -<==      Total: 10
2019-05-22 10:28:03 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:28:03 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:28:03 -<==      Total: 1
2019-05-22 10:28:03 -耗时 : 10
2019-05-22 10:28:03 -返回值 : com.bootdo.common.utils.PageUtils@4c12db44
2019-05-22 10:28:55 -请求地址 : http://localhost:8081/elec/elec/remove
2019-05-22 10:28:55 -HTTP METHOD : POST
2019-05-22 10:28:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.remove
2019-05-22 10:28:55 -参数 : [13]
2019-05-22 10:28:55 -==>  Preparing: delete from elec where id = ? 
2019-05-22 10:28:55 -==> Parameters: 13(Long)
2019-05-22 10:28:55 -<==    Updates: 1
2019-05-22 10:28:55 -耗时 : 98
2019-05-22 10:28:55 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:28:55 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:28:55 -HTTP METHOD : GET
2019-05-22 10:28:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:28:55 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@36914e8f]
2019-05-22 10:28:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:28:55 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:28:55 -<==      Total: 2
2019-05-22 10:28:55 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 10:28:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:28:55 -<==      Total: 1
2019-05-22 10:28:55 -耗时 : 6
2019-05-22 10:28:55 -返回值 : com.bootdo.common.utils.PageUtils@756a0c02
2019-05-22 10:31:31 -请求地址 : http://localhost:8081/index
2019-05-22 10:31:31 -HTTP METHOD : GET
2019-05-22 10:31:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 10:31:31 -参数 : [{}]
2019-05-22 10:31:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 10:31:31 -==> Parameters: 1(Long)
2019-05-22 10:31:31 -<==      Total: 49
2019-05-22 10:31:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 10:31:31 -==> Parameters: 138(Long)
2019-05-22 10:31:31 -<==      Total: 1
2019-05-22 10:31:31 -耗时 : 20
2019-05-22 10:31:31 -返回值 : index_v1
2019-05-22 10:31:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:31:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 10:31:31.637(Timestamp)
2019-05-22 10:31:31 -请求地址 : http://localhost:8081/main
2019-05-22 10:31:31 -HTTP METHOD : GET
2019-05-22 10:31:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:31:31 -参数 : []
2019-05-22 10:31:31 -耗时 : 0
2019-05-22 10:31:31 -返回值 : main
2019-05-22 10:31:31 -<==    Updates: 1
2019-05-22 10:31:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 10:31:31 -HTTP METHOD : GET
2019-05-22 10:31:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 10:31:31 -参数 : []
2019-05-22 10:31:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 10:31:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 10:31:31 -<==      Total: 0
2019-05-22 10:31:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 10:31:31 -==> Parameters: 1(Long), 0(String)
2019-05-22 10:31:31 -<==      Total: 1
2019-05-22 10:31:31 -耗时 : 6
2019-05-22 10:31:31 -返回值 : com.bootdo.common.utils.PageUtils@1f42de6d
2019-05-22 10:31:31 -请求地址 : http://localhost:8081/main
2019-05-22 10:31:31 -HTTP METHOD : GET
2019-05-22 10:31:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:31:31 -参数 : []
2019-05-22 10:31:31 -耗时 : 1
2019-05-22 10:31:31 -返回值 : main
2019-05-22 10:31:35 -请求地址 : http://localhost:8081/elec/elec
2019-05-22 10:31:35 -HTTP METHOD : GET
2019-05-22 10:31:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-22 10:31:35 -参数 : []
2019-05-22 10:31:35 -耗时 : 0
2019-05-22 10:31:35 -返回值 : elec/elec/elec
2019-05-22 10:31:35 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:31:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:31:35 -HTTP METHOD : GET
2019-05-22 10:31:35 -HTTP METHOD : GET
2019-05-22 10:31:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:31:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:31:35 -参数 : [elecType]
2019-05-22 10:31:35 -参数 : [userType]
2019-05-22 10:31:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:31:35 -==> Parameters: userType(String)
2019-05-22 10:31:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:31:35 -==> Parameters: elecType(String)
2019-05-22 10:31:35 -<==      Total: 4
2019-05-22 10:31:35 -<==      Total: 11
2019-05-22 10:31:35 -耗时 : 4
2019-05-22 10:31:35 -耗时 : 4
2019-05-22 10:31:35 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:31:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:31:35 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:31:35 -HTTP METHOD : GET
2019-05-22 10:31:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:31:35 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@52924f92]
2019-05-22 10:31:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-22 10:31:35 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:31:35 -<==      Total: 10
2019-05-22 10:31:35 -==>  Preparing: select count(*) from elec 
2019-05-22 10:31:35 -==> Parameters: 
2019-05-22 10:31:35 -<==      Total: 1
2019-05-22 10:31:35 -耗时 : 8
2019-05-22 10:31:35 -返回值 : com.bootdo.common.utils.PageUtils@6d616b0e
2019-05-22 10:31:42 -请求地址 : http://localhost:8081/elec/elec/remove
2019-05-22 10:31:42 -HTTP METHOD : POST
2019-05-22 10:31:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.remove
2019-05-22 10:31:42 -参数 : [10]
2019-05-22 10:31:42 -==>  Preparing: delete from elec where id = ? 
2019-05-22 10:31:42 -==> Parameters: 10(Long)
2019-05-22 10:31:42 -<==    Updates: 1
2019-05-22 10:31:42 -耗时 : 105
2019-05-22 10:31:42 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:31:42 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:31:42 -HTTP METHOD : GET
2019-05-22 10:31:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:31:42 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@4dab7ab]
2019-05-22 10:31:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-05-22 10:31:42 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:31:42 -<==      Total: 2
2019-05-22 10:31:42 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-05-22 10:31:42 -==> Parameters: 
2019-05-22 10:31:42 -<==      Total: 1
2019-05-22 10:31:42 -耗时 : 17
2019-05-22 10:31:42 -返回值 : com.bootdo.common.utils.PageUtils@6b4843b7
2019-05-22 10:33:18 -Starting BootdoApplication on PC-201905091110 with PID 20824 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-22 10:33:18 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-22 10:33:18 -The following profiles are active: dev
2019-05-22 10:33:18 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 10:33:18 CST 2019]; root of context hierarchy
2019-05-22 10:33:21 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-22 10:33:24 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d159fff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:33:24 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3b32e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:33:25 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:33:26 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:33:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:33:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-22 10:33:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-22 10:33:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:33:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:33:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:33:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 10:33:27 -Tomcat initialized with port(s): 8081 (http)
2019-05-22 10:33:27 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-22 10:33:27 -Starting service [Tomcat]
2019-05-22 10:33:27 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-22 10:33:27 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-22 10:33:28 -Initializing Spring embedded WebApplicationContext
2019-05-22 10:33:28 -Root WebApplicationContext: initialization completed in 9911 ms
2019-05-22 10:33:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-22 10:33:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-22 10:33:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-22 10:33:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-22 10:33:29 -Filter xssFilter was not registered (disabled)
2019-05-22 10:33:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-22 10:33:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-22 10:33:29 -Servlet statViewServlet mapped to [/druid/*]
2019-05-22 10:33:29 -Servlet dispatcherServlet mapped to [/]
2019-05-22 10:33:34 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 10:33:18 CST 2019]; root of context hierarchy
2019-05-22 10:33:35 -Using default implementation for ThreadExecutor
2019-05-22 10:33:35 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-22 10:33:35 -Quartz Scheduler v.2.2.1 created.
2019-05-22 10:33:35 -RAMJobStore initialized.
2019-05-22 10:33:35 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-22 10:33:35 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-22 10:33:35 -Quartz scheduler version: 2.2.1
2019-05-22 10:33:35 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60928a61
2019-05-22 10:33:35 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-22 10:33:35 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-22 10:33:38 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-22 10:33:38 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:33:38 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-22 10:33:38 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:33:38 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-22 10:33:38 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-22 10:33:38 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:33:38 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-22 10:33:38 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:33:38 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-22 10:33:38 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:33:38 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-22 10:33:38 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 10:33:38 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-22 10:33:38 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-22 10:33:38 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 10:33:38 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:33:38 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-22 10:33:38 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-22 10:33:38 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 10:33:38 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 10:33:38 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-22 10:33:38 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-22 10:33:38 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 10:33:38 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-22 10:33:38 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-22 10:33:38 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-22 10:33:38 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-22 10:33:38 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:38 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-22 10:33:38 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-22 10:33:38 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:38 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-22 10:33:38 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-22 10:33:38 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-22 10:33:38 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-22 10:33:38 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-22 10:33:38 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-22 10:33:38 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-22 10:33:38 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:38 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-22 10:33:38 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-22 10:33:38 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:38 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-22 10:33:38 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-22 10:33:38 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:38 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-22 10:33:38 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 10:33:38 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-22 10:33:38 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-22 10:33:38 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 10:33:38 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-22 10:33:38 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-22 10:33:38 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-22 10:33:38 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-22 10:33:38 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:38 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-22 10:33:38 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-22 10:33:38 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:38 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-22 10:33:38 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-22 10:33:38 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-22 10:33:38 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-22 10:33:38 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:38 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-22 10:33:38 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-22 10:33:38 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-22 10:33:38 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-22 10:33:38 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-22 10:33:38 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-22 10:33:38 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-22 10:33:38 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-22 10:33:38 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-22 10:33:38 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-22 10:33:38 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:38 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:38 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-22 10:33:38 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 10:33:38 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-22 10:33:38 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-22 10:33:38 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-22 10:33:38 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-22 10:33:38 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:38 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-22 10:33:38 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:38 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-22 10:33:39 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-22 10:33:39 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:39 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-22 10:33:39 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-22 10:33:39 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-22 10:33:39 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-22 10:33:39 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-22 10:33:39 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-22 10:33:39 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:39 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-22 10:33:39 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:39 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 10:33:39 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-22 10:33:39 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-22 10:33:39 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-22 10:33:39 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 10:33:39 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 10:33:39 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-22 10:33:39 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 10:33:39 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:39 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-22 10:33:39 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-22 10:33:39 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 10:33:39 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 10:33:39 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-22 10:33:39 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-22 10:33:39 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-22 10:33:39 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-22 10:33:39 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-22 10:33:39 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-22 10:33:39 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-22 10:33:39 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-22 10:33:39 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-22 10:33:39 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-22 10:33:39 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 10:33:39 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-22 10:33:39 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-22 10:33:39 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-22 10:33:39 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-22 10:33:39 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-22 10:33:39 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-22 10:33:39 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-22 10:33:39 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-22 10:33:39 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-22 10:33:39 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-22 10:33:39 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-22 10:33:39 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-22 10:33:39 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-22 10:33:39 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:39 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-22 10:33:39 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-22 10:33:39 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-22 10:33:39 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-22 10:33:39 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-22 10:33:39 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-22 10:33:39 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-22 10:33:39 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-22 10:33:39 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-22 10:33:39 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 10:33:39 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:39 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-22 10:33:39 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-22 10:33:39 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-22 10:33:39 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-22 10:33:39 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-22 10:33:39 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-22 10:33:39 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-22 10:33:39 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-22 10:33:39 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-22 10:33:39 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-22 10:33:39 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-22 10:33:39 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-22 10:33:39 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-22 10:33:39 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-22 10:33:39 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-22 10:33:39 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-22 10:33:39 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-22 10:33:39 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-22 10:33:39 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 10:33:39 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 10:33:39 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 10:33:39 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-22 10:33:39 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-22 10:33:39 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-22 10:33:39 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-22 10:33:39 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-22 10:33:39 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-22 10:33:39 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:39 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-22 10:33:39 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:39 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 10:33:39 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-22 10:33:39 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-22 10:33:39 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-22 10:33:39 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-22 10:33:39 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 10:33:39 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 10:33:39 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 10:33:39 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-22 10:33:39 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 10:33:39 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 10:33:39 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-22 10:33:39 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 10:33:39 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-22 10:33:39 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 10:33:39 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-22 10:33:39 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-22 10:33:39 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-22 10:33:39 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-22 10:33:39 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-22 10:33:39 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-22 10:33:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 10:33:40 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 10:33:18 CST 2019]; root of context hierarchy
2019-05-22 10:33:40 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 10:33:40 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 10:33:40 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 10:33:40 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-22 10:33:41 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-22 10:33:43 -Registering beans for JMX exposure on startup
2019-05-22 10:33:43 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-22 10:33:43 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-22 10:33:43 -Starting beans in phase 2147483647
2019-05-22 10:33:43 -Context refreshed
2019-05-22 10:33:43 -Found 1 custom documentation plugin(s)
2019-05-22 10:33:43 -Scanning for api listing references
2019-05-22 10:33:43 -Generating unique operation named: getCountDUsingPOST_1
2019-05-22 10:33:44 -Generating unique operation named: removeUsingPOST_1
2019-05-22 10:33:44 -Generating unique operation named: addUsingGET_1
2019-05-22 10:33:44 -Generating unique operation named: editUsingGET_1
2019-05-22 10:33:44 -Generating unique operation named: listUsingGET_1
2019-05-22 10:33:44 -Generating unique operation named: removeUsingPOST_2
2019-05-22 10:33:44 -Generating unique operation named: removeUsingPOST_3
2019-05-22 10:33:44 -Generating unique operation named: saveUsingPOST_1
2019-05-22 10:33:44 -Generating unique operation named: updateUsingGET_1
2019-05-22 10:33:44 -Generating unique operation named: updateUsingHEAD_1
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPOST_1
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPUT_1
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPATCH_1
2019-05-22 10:33:44 -Generating unique operation named: updateUsingDELETE_1
2019-05-22 10:33:44 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-22 10:33:44 -Generating unique operation named: updateUsingTRACE_1
2019-05-22 10:33:44 -Generating unique operation named: addUsingGET_2
2019-05-22 10:33:44 -Generating unique operation named: editUsingGET_2
2019-05-22 10:33:44 -Generating unique operation named: listUsingGET_2
2019-05-22 10:33:44 -Generating unique operation named: removeUsingPOST_4
2019-05-22 10:33:44 -Generating unique operation named: removeUsingPOST_5
2019-05-22 10:33:44 -Generating unique operation named: saveUsingPOST_2
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPOST_2
2019-05-22 10:33:44 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-22 10:33:44 -Generating unique operation named: addUsingGET_3
2019-05-22 10:33:44 -Generating unique operation named: editUsingGET_3
2019-05-22 10:33:44 -Generating unique operation named: listUsingGET_3
2019-05-22 10:33:44 -Generating unique operation named: removeUsingPOST_6
2019-05-22 10:33:44 -Generating unique operation named: removeUsingPOST_7
2019-05-22 10:33:44 -Generating unique operation named: saveUsingPOST_3
2019-05-22 10:33:44 -Generating unique operation named: updateUsingGET_2
2019-05-22 10:33:44 -Generating unique operation named: updateUsingHEAD_2
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPOST_3
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPUT_2
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPATCH_2
2019-05-22 10:33:44 -Generating unique operation named: updateUsingDELETE_2
2019-05-22 10:33:44 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-22 10:33:44 -Generating unique operation named: updateUsingTRACE_2
2019-05-22 10:33:44 -Generating unique operation named: addUsingGET_4
2019-05-22 10:33:44 -Generating unique operation named: editUsingGET_4
2019-05-22 10:33:44 -Generating unique operation named: listUsingGET_4
2019-05-22 10:33:44 -Generating unique operation named: removeUsingPOST_8
2019-05-22 10:33:44 -Generating unique operation named: removeUsingPOST_9
2019-05-22 10:33:44 -Generating unique operation named: saveUsingPOST_4
2019-05-22 10:33:44 -Generating unique operation named: updateUsingGET_3
2019-05-22 10:33:44 -Generating unique operation named: updateUsingHEAD_3
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPOST_4
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPUT_3
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPATCH_3
2019-05-22 10:33:44 -Generating unique operation named: updateUsingDELETE_3
2019-05-22 10:33:44 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-22 10:33:44 -Generating unique operation named: updateUsingTRACE_3
2019-05-22 10:33:44 -Generating unique operation named: ElecUsingGET_1
2019-05-22 10:33:44 -Generating unique operation named: addUsingGET_5
2019-05-22 10:33:44 -Generating unique operation named: editUsingGET_5
2019-05-22 10:33:44 -Generating unique operation named: listUsingGET_5
2019-05-22 10:33:44 -Generating unique operation named: removeUsingPOST_10
2019-05-22 10:33:44 -Generating unique operation named: removeUsingPOST_11
2019-05-22 10:33:44 -Generating unique operation named: saveUsingPOST_5
2019-05-22 10:33:44 -Generating unique operation named: updateUsingGET_4
2019-05-22 10:33:44 -Generating unique operation named: updateUsingHEAD_4
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPOST_5
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPUT_4
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPATCH_4
2019-05-22 10:33:44 -Generating unique operation named: updateUsingDELETE_4
2019-05-22 10:33:44 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-22 10:33:44 -Generating unique operation named: updateUsingTRACE_4
2019-05-22 10:33:44 -Generating unique operation named: editUsingGET_6
2019-05-22 10:33:44 -Generating unique operation named: listUsingGET_6
2019-05-22 10:33:44 -Generating unique operation named: updateUsingPOST_6
2019-05-22 10:33:44 -Generating unique operation named: addUsingGET_6
2019-05-22 10:33:44 -Generating unique operation named: editUsingGET_7
2019-05-22 10:33:44 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-22 10:33:44 -Generating unique operation named: listUsingGET_7
2019-05-22 10:33:44 -Generating unique operation named: removeUsingPOST_12
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_13
2019-05-22 10:33:45 -Generating unique operation named: saveUsingPOST_6
2019-05-22 10:33:45 -Generating unique operation named: updateUsingGET_5
2019-05-22 10:33:45 -Generating unique operation named: updateUsingHEAD_5
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPOST_7
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPUT_5
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPATCH_5
2019-05-22 10:33:45 -Generating unique operation named: updateUsingDELETE_5
2019-05-22 10:33:45 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-22 10:33:45 -Generating unique operation named: updateUsingTRACE_5
2019-05-22 10:33:45 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-22 10:33:45 -Generating unique operation named: addUsingGET_7
2019-05-22 10:33:45 -Generating unique operation named: editUsingGET_8
2019-05-22 10:33:45 -Generating unique operation named: listUsingGET_8
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_14
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_15
2019-05-22 10:33:45 -Generating unique operation named: saveUsingPOST_7
2019-05-22 10:33:45 -Generating unique operation named: updateUsingGET_6
2019-05-22 10:33:45 -Generating unique operation named: updateUsingHEAD_6
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPOST_8
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPUT_6
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPATCH_6
2019-05-22 10:33:45 -Generating unique operation named: updateUsingDELETE_6
2019-05-22 10:33:45 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-22 10:33:45 -Generating unique operation named: updateUsingTRACE_6
2019-05-22 10:33:45 -Generating unique operation named: addUsingGET_8
2019-05-22 10:33:45 -Generating unique operation named: editUsingGET_9
2019-05-22 10:33:45 -Generating unique operation named: listUsingGET_9
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_16
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_17
2019-05-22 10:33:45 -Generating unique operation named: saveUsingPOST_8
2019-05-22 10:33:45 -Generating unique operation named: updateUsingGET_7
2019-05-22 10:33:45 -Generating unique operation named: updateUsingHEAD_7
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPOST_9
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPUT_7
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPATCH_7
2019-05-22 10:33:45 -Generating unique operation named: updateUsingDELETE_7
2019-05-22 10:33:45 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-22 10:33:45 -Generating unique operation named: updateUsingTRACE_7
2019-05-22 10:33:45 -Generating unique operation named: addUsingGET_9
2019-05-22 10:33:45 -Generating unique operation named: editUsingGET_10
2019-05-22 10:33:45 -Generating unique operation named: infoUsingGET_1
2019-05-22 10:33:45 -Generating unique operation named: infoUsingHEAD_1
2019-05-22 10:33:45 -Generating unique operation named: infoUsingPOST_1
2019-05-22 10:33:45 -Generating unique operation named: infoUsingPUT_1
2019-05-22 10:33:45 -Generating unique operation named: infoUsingPATCH_1
2019-05-22 10:33:45 -Generating unique operation named: infoUsingDELETE_1
2019-05-22 10:33:45 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-22 10:33:45 -Generating unique operation named: infoUsingTRACE_1
2019-05-22 10:33:45 -Generating unique operation named: listUsingGET_10
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_18
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_19
2019-05-22 10:33:45 -Generating unique operation named: saveUsingPOST_9
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPOST_10
2019-05-22 10:33:45 -Generating unique operation named: listUsingGET_11
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_20
2019-05-22 10:33:45 -Generating unique operation named: welcomeUsingGET_1
2019-05-22 10:33:45 -Generating unique operation named: addUsingGET_10
2019-05-22 10:33:45 -Generating unique operation named: editUsingGET_11
2019-05-22 10:33:45 -Generating unique operation named: listUsingGET_12
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_21
2019-05-22 10:33:45 -Generating unique operation named: saveUsingPOST_10
2019-05-22 10:33:45 -Generating unique operation named: treeUsingGET_1
2019-05-22 10:33:45 -Generating unique operation named: treeUsingGET_2
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPOST_11
2019-05-22 10:33:45 -Generating unique operation named: editUsingGET_12
2019-05-22 10:33:45 -Generating unique operation named: addUsingGET_11
2019-05-22 10:33:45 -Generating unique operation named: editUsingGET_13
2019-05-22 10:33:45 -Generating unique operation named: listUsingGET_13
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_22
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_23
2019-05-22 10:33:45 -Generating unique operation named: saveUsingPOST_11
2019-05-22 10:33:45 -Generating unique operation named: updateUsingGET_8
2019-05-22 10:33:45 -Generating unique operation named: updateUsingHEAD_8
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPOST_12
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPUT_8
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPATCH_8
2019-05-22 10:33:45 -Generating unique operation named: updateUsingDELETE_8
2019-05-22 10:33:45 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-22 10:33:45 -Generating unique operation named: updateUsingTRACE_8
2019-05-22 10:33:45 -Generating unique operation named: addUsingGET_12
2019-05-22 10:33:45 -Generating unique operation named: editUsingGET_14
2019-05-22 10:33:45 -Generating unique operation named: listUsingGET_14
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_24
2019-05-22 10:33:45 -Generating unique operation named: removeUsingPOST_25
2019-05-22 10:33:45 -Generating unique operation named: saveUsingPOST_12
2019-05-22 10:33:45 -Generating unique operation named: updateUsingGET_9
2019-05-22 10:33:45 -Generating unique operation named: updateUsingHEAD_9
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPOST_13
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPUT_9
2019-05-22 10:33:45 -Generating unique operation named: updateUsingPATCH_9
2019-05-22 10:33:45 -Generating unique operation named: updateUsingDELETE_9
2019-05-22 10:33:45 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-22 10:33:45 -Generating unique operation named: updateUsingTRACE_9
2019-05-22 10:33:45 -Generating unique operation named: addUsingGET_13
2019-05-22 10:33:45 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-22 10:33:45 -Generating unique operation named: editUsingGET_15
2019-05-22 10:33:45 -Generating unique operation named: listUsingGET_15
2019-05-22 10:33:45 -Generating unique operation named: saveUsingPOST_13
2019-05-22 10:33:45 -Generating unique operation named: saveUsingPOST_14
2019-05-22 10:33:46 -Generating unique operation named: updateUsingPOST_14
2019-05-22 10:33:46 -Generating unique operation named: listUsingGET_16
2019-05-22 10:33:46 -Generating unique operation named: listUsingHEAD_1
2019-05-22 10:33:46 -Generating unique operation named: listUsingPOST_1
2019-05-22 10:33:46 -Generating unique operation named: listUsingPUT_1
2019-05-22 10:33:46 -Generating unique operation named: listUsingPATCH_1
2019-05-22 10:33:46 -Generating unique operation named: listUsingDELETE_1
2019-05-22 10:33:46 -Generating unique operation named: listUsingOPTIONS_1
2019-05-22 10:33:46 -Generating unique operation named: listUsingTRACE_1
2019-05-22 10:33:46 -Generating unique operation named: countDDUsingGET_1
2019-05-22 10:33:46 -Generating unique operation named: exportDDUsingGET_1
2019-05-22 10:33:46 -Generating unique operation named: addUsingGET_14
2019-05-22 10:33:46 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-22 10:33:46 -Generating unique operation named: editUsingGET_16
2019-05-22 10:33:46 -Generating unique operation named: listUsingGET_17
2019-05-22 10:33:46 -Generating unique operation named: removeUsingPOST_26
2019-05-22 10:33:46 -Generating unique operation named: saveUsingPOST_15
2019-05-22 10:33:46 -Generating unique operation named: treeUsingGET_3
2019-05-22 10:33:46 -Generating unique operation named: treeViewUsingGET_1
2019-05-22 10:33:46 -Generating unique operation named: updateUsingPOST_15
2019-05-22 10:33:46 -Generating unique operation named: addUsingGET_15
2019-05-22 10:33:46 -Generating unique operation named: editUsingGET_17
2019-05-22 10:33:46 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-22 10:33:46 -Generating unique operation named: listUsingGET_18
2019-05-22 10:33:46 -Generating unique operation named: removeUsingPOST_27
2019-05-22 10:33:46 -Generating unique operation named: removeUsingPOST_28
2019-05-22 10:33:46 -Generating unique operation named: saveUsingPOST_16
2019-05-22 10:33:46 -Generating unique operation named: updateUsingGET_10
2019-05-22 10:33:46 -Generating unique operation named: updateUsingHEAD_10
2019-05-22 10:33:46 -Generating unique operation named: updateUsingPOST_16
2019-05-22 10:33:46 -Generating unique operation named: updateUsingPUT_10
2019-05-22 10:33:46 -Generating unique operation named: updateUsingPATCH_10
2019-05-22 10:33:46 -Generating unique operation named: updateUsingDELETE_10
2019-05-22 10:33:46 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-22 10:33:46 -Generating unique operation named: updateUsingTRACE_10
2019-05-22 10:33:46 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-22 10:33:46 -Generating unique operation named: addUsingGET_16
2019-05-22 10:33:46 -Generating unique operation named: editUsingGET_18
2019-05-22 10:33:46 -Generating unique operation named: listUsingGET_19
2019-05-22 10:33:46 -Generating unique operation named: removeUsingPOST_29
2019-05-22 10:33:46 -Generating unique operation named: removeUsingPOST_30
2019-05-22 10:33:46 -Generating unique operation named: saveUsingPOST_17
2019-05-22 10:33:46 -Generating unique operation named: updateUsingGET_11
2019-05-22 10:33:46 -Generating unique operation named: updateUsingHEAD_11
2019-05-22 10:33:46 -Generating unique operation named: updateUsingPOST_17
2019-05-22 10:33:46 -Generating unique operation named: updateUsingPUT_11
2019-05-22 10:33:46 -Generating unique operation named: updateUsingPATCH_11
2019-05-22 10:33:46 -Generating unique operation named: updateUsingDELETE_11
2019-05-22 10:33:46 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-22 10:33:46 -Generating unique operation named: updateUsingTRACE_11
2019-05-22 10:33:46 -Generating unique operation named: addUsingGET_17
2019-05-22 10:33:46 -Generating unique operation named: editUsingGET_19
2019-05-22 10:33:46 -Generating unique operation named: listUsingGET_20
2019-05-22 10:33:46 -Generating unique operation named: removeUsingPOST_31
2019-05-22 10:33:46 -Generating unique operation named: removeUsingPOST_32
2019-05-22 10:33:46 -Generating unique operation named: saveUsingPOST_18
2019-05-22 10:33:46 -Generating unique operation named: updateUsingGET_12
2019-05-22 10:33:46 -Generating unique operation named: updateUsingHEAD_12
2019-05-22 10:33:46 -Generating unique operation named: updateUsingPOST_18
2019-05-22 10:33:46 -Generating unique operation named: updateUsingPUT_12
2019-05-22 10:33:46 -Generating unique operation named: updateUsingPATCH_12
2019-05-22 10:33:46 -Generating unique operation named: updateUsingDELETE_12
2019-05-22 10:33:46 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-22 10:33:46 -Generating unique operation named: updateUsingTRACE_12
2019-05-22 10:33:46 -Starting Quartz Scheduler now
2019-05-22 10:33:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-22 10:33:46 -Starting...
2019-05-22 10:33:46 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-22 10:33:46 -Started.
2019-05-22 10:33:46 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-22 10:33:46 -Using a shared selector for servlet write/read
2019-05-22 10:33:46 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-22 10:33:46 -Started BootdoApplication in 29.826 seconds (JVM running for 30.642)
2019-05-22 10:33:46 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-22 10:33:47 -==> Parameters: 
2019-05-22 10:33:47 -<==      Total: 1
2019-05-22 10:33:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-22 10:33:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-22 10:33:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 80 ms
2019-05-22 10:33:59 -Enabling session validation scheduler...
2019-05-22 10:33:59 -请求地址 : http://localhost:8081/login;JSESSIONID=43be6891-5b18-4b5f-94a6-5e704e8b5113
2019-05-22 10:33:59 -HTTP METHOD : GET
2019-05-22 10:33:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 10:33:59 -参数 : [{}]
2019-05-22 10:33:59 -耗时 : 5
2019-05-22 10:33:59 -返回值 : login
2019-05-22 10:34:01 -请求地址 : http://localhost:8081/getVerify
2019-05-22 10:34:01 -HTTP METHOD : GET
2019-05-22 10:34:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 10:34:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3cba341b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@72cd62f8]
2019-05-22 10:34:04 -4100
2019-05-22 10:34:04 -耗时 : 3640
2019-05-22 10:34:04 -返回值 : null
2019-05-22 10:34:08 -请求地址 : http://localhost:8081/login
2019-05-22 10:34:08 -HTTP METHOD : POST
2019-05-22 10:34:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 10:34:08 -参数 : [admin, 111111, 4100, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1a057633]
2019-05-22 10:34:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 10:34:08 -==> Parameters: admin(String)
2019-05-22 10:34:08 -<==      Total: 1
2019-05-22 10:34:08 -耗时 : 222
2019-05-22 10:34:08 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:34:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-22 10:34:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:34:08 -==> Parameters: 1(Long), admin(String), 登录(String), 223(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 10:34:08.501(Timestamp)
2019-05-22 10:34:08 -<==    Updates: 1
2019-05-22 10:34:08 -请求地址 : http://localhost:8081/index
2019-05-22 10:34:08 -HTTP METHOD : GET
2019-05-22 10:34:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 10:34:08 -参数 : [{}]
2019-05-22 10:34:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 10:34:08 -==> Parameters: 1(Long)
2019-05-22 10:34:08 -<==      Total: 49
2019-05-22 10:34:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 10:34:08 -==> Parameters: 138(Long)
2019-05-22 10:34:08 -<==      Total: 1
2019-05-22 10:34:08 -耗时 : 231
2019-05-22 10:34:08 -返回值 : index_v1
2019-05-22 10:34:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:34:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 231(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 10:34:08.978(Timestamp)
2019-05-22 10:34:09 -<==    Updates: 1
2019-05-22 10:34:09 -请求地址 : http://localhost:8081/main
2019-05-22 10:34:09 -HTTP METHOD : GET
2019-05-22 10:34:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:34:09 -参数 : []
2019-05-22 10:34:09 -耗时 : 0
2019-05-22 10:34:09 -返回值 : main
2019-05-22 10:34:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 10:34:09 -HTTP METHOD : GET
2019-05-22 10:34:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 10:34:09 -参数 : []
2019-05-22 10:34:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 10:34:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 10:34:09 -请求地址 : http://localhost:8081/main
2019-05-22 10:34:09 -HTTP METHOD : GET
2019-05-22 10:34:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:34:09 -参数 : []
2019-05-22 10:34:09 -耗时 : 1
2019-05-22 10:34:09 -返回值 : main
2019-05-22 10:34:09 -<==      Total: 0
2019-05-22 10:34:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 10:34:09 -==> Parameters: 1(Long), 0(String)
2019-05-22 10:34:09 -<==      Total: 1
2019-05-22 10:34:09 -耗时 : 239
2019-05-22 10:34:09 -返回值 : com.bootdo.common.utils.PageUtils@62b3b8fd
2019-05-22 10:34:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 10:34:16 -==> Parameters: 1(Long)
2019-05-22 10:34:17 -<==      Total: 93
2019-05-22 10:34:17 -请求地址 : http://localhost:8081/elec/elec
2019-05-22 10:34:17 -HTTP METHOD : GET
2019-05-22 10:34:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-22 10:34:17 -参数 : []
2019-05-22 10:34:17 -耗时 : 0
2019-05-22 10:34:17 -返回值 : elec/elec/elec
2019-05-22 10:34:20 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:34:20 -HTTP METHOD : GET
2019-05-22 10:34:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:34:20 -参数 : [elecType]
2019-05-22 10:34:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:34:20 -HTTP METHOD : GET
2019-05-22 10:34:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:34:20 -参数 : [userType]
2019-05-22 10:34:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:34:20 -==> Parameters: userType(String)
2019-05-22 10:34:20 -<==      Total: 4
2019-05-22 10:34:20 -耗时 : 19
2019-05-22 10:34:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:34:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:34:21 -==> Parameters: elecType(String)
2019-05-22 10:34:21 -<==      Total: 11
2019-05-22 10:34:21 -耗时 : 50
2019-05-22 10:34:21 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:34:21 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:34:21 -HTTP METHOD : GET
2019-05-22 10:34:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:34:21 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@7e0f5812]
2019-05-22 10:34:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-22 10:34:21 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:34:21 -<==      Total: 10
2019-05-22 10:34:21 -==>  Preparing: select count(*) from elec 
2019-05-22 10:34:21 -==> Parameters: 
2019-05-22 10:34:21 -<==      Total: 1
2019-05-22 10:34:21 -耗时 : 171
2019-05-22 10:34:21 -返回值 : com.bootdo.common.utils.PageUtils@667f459d
2019-05-22 10:34:33 -请求地址 : http://localhost:8081/elec/elec/remove
2019-05-22 10:34:33 -HTTP METHOD : POST
2019-05-22 10:34:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.remove
2019-05-22 10:34:33 -参数 : [3]
2019-05-22 10:34:33 -==>  Preparing: delete from elec where id = ? 
2019-05-22 10:34:33 -==> Parameters: 3(Long)
2019-05-22 10:34:33 -<==    Updates: 1
2019-05-22 10:34:33 -耗时 : 142
2019-05-22 10:34:33 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:34:33 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:34:33 -HTTP METHOD : GET
2019-05-22 10:34:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:34:33 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@2af39354]
2019-05-22 10:34:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-05-22 10:34:33 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:34:33 -<==      Total: 2
2019-05-22 10:34:33 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-05-22 10:34:33 -==> Parameters: 
2019-05-22 10:34:33 -<==      Total: 1
2019-05-22 10:34:33 -耗时 : 27
2019-05-22 10:34:33 -返回值 : com.bootdo.common.utils.PageUtils@1bf08434
2019-05-22 10:34:39 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-05-22 10:35:29 -请求地址 : http://localhost:8081/login;JSESSIONID=9adb498c-05e2-475b-aa47-0af01b1365ea
2019-05-22 10:35:29 -HTTP METHOD : GET
2019-05-22 10:35:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 10:35:29 -参数 : [{}]
2019-05-22 10:35:29 -耗时 : 1
2019-05-22 10:35:29 -返回值 : login
2019-05-22 10:35:29 -请求地址 : http://localhost:8081/getVerify
2019-05-22 10:35:29 -HTTP METHOD : GET
2019-05-22 10:35:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 10:35:29 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@734f6f43, org.apache.shiro.web.servlet.ShiroHttpServletResponse@517843c3]
2019-05-22 10:35:29 -7567
2019-05-22 10:35:29 -耗时 : 16
2019-05-22 10:35:29 -返回值 : null
2019-05-22 10:35:30 -请求地址 : http://localhost:8081/login
2019-05-22 10:35:30 -HTTP METHOD : GET
2019-05-22 10:35:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 10:35:30 -参数 : [{}]
2019-05-22 10:35:30 -耗时 : 2
2019-05-22 10:35:30 -返回值 : login
2019-05-22 10:35:34 -请求地址 : http://localhost:8081/login
2019-05-22 10:35:34 -HTTP METHOD : POST
2019-05-22 10:35:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 10:35:34 -参数 : [admin, 111111, 7567, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5cd4ada6]
2019-05-22 10:35:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 10:35:34 -==> Parameters: admin(String)
2019-05-22 10:35:34 -<==      Total: 1
2019-05-22 10:35:34 -耗时 : 7
2019-05-22 10:35:34 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:35:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:35:34 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 10:35:34.705(Timestamp)
2019-05-22 10:35:34 -请求地址 : http://localhost:8081/index
2019-05-22 10:35:34 -HTTP METHOD : GET
2019-05-22 10:35:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 10:35:34 -参数 : [{}]
2019-05-22 10:35:34 -<==    Updates: 1
2019-05-22 10:35:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 10:35:34 -==> Parameters: 1(Long)
2019-05-22 10:35:35 -<==      Total: 49
2019-05-22 10:35:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 10:35:35 -==> Parameters: 138(Long)
2019-05-22 10:35:35 -<==      Total: 1
2019-05-22 10:35:35 -耗时 : 290
2019-05-22 10:35:35 -返回值 : index_v1
2019-05-22 10:35:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:35:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 290(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 10:35:35.021(Timestamp)
2019-05-22 10:35:35 -<==    Updates: 1
2019-05-22 10:35:35 -请求地址 : http://localhost:8081/main
2019-05-22 10:35:35 -HTTP METHOD : GET
2019-05-22 10:35:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:35:35 -参数 : []
2019-05-22 10:35:35 -耗时 : 0
2019-05-22 10:35:35 -返回值 : main
2019-05-22 10:35:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 10:35:35 -HTTP METHOD : GET
2019-05-22 10:35:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 10:35:35 -参数 : []
2019-05-22 10:35:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 10:35:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 10:35:35 -请求地址 : http://localhost:8081/main
2019-05-22 10:35:35 -HTTP METHOD : GET
2019-05-22 10:35:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 10:35:35 -参数 : []
2019-05-22 10:35:35 -耗时 : 1
2019-05-22 10:35:35 -返回值 : main
2019-05-22 10:35:36 -<==      Total: 0
2019-05-22 10:35:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 10:35:36 -==> Parameters: 1(Long), 0(String)
2019-05-22 10:35:36 -<==      Total: 1
2019-05-22 10:35:36 -耗时 : 539
2019-05-22 10:35:36 -返回值 : com.bootdo.common.utils.PageUtils@14f028a
2019-05-22 10:35:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 10:35:45 -==> Parameters: 1(Long)
2019-05-22 10:35:45 -<==      Total: 93
2019-05-22 10:35:45 -请求地址 : http://localhost:8081/elec/elec
2019-05-22 10:35:45 -HTTP METHOD : GET
2019-05-22 10:35:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-22 10:35:45 -参数 : []
2019-05-22 10:35:45 -耗时 : 1
2019-05-22 10:35:45 -返回值 : elec/elec/elec
2019-05-22 10:35:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:35:46 -HTTP METHOD : GET
2019-05-22 10:35:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:35:46 -参数 : [userType]
2019-05-22 10:35:46 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:35:46 -HTTP METHOD : GET
2019-05-22 10:35:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:35:46 -参数 : [elecType]
2019-05-22 10:35:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:35:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:35:46 -==> Parameters: userType(String)
2019-05-22 10:35:46 -==> Parameters: elecType(String)
2019-05-22 10:35:46 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:35:46 -HTTP METHOD : GET
2019-05-22 10:35:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:35:46 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@329ca139]
2019-05-22 10:35:46 -<==      Total: 11
2019-05-22 10:35:46 -耗时 : 9
2019-05-22 10:35:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-22 10:35:46 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:35:46 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 10:35:46 -<==      Total: 10
2019-05-22 10:35:46 -==>  Preparing: select count(*) from elec 
2019-05-22 10:35:46 -==> Parameters: 
2019-05-22 10:35:46 -<==      Total: 1
2019-05-22 10:35:46 -耗时 : 37
2019-05-22 10:35:46 -返回值 : com.bootdo.common.utils.PageUtils@7aaee8dd
2019-05-22 10:35:47 -<==      Total: 4
2019-05-22 10:35:47 -耗时 : 275
2019-05-22 10:35:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:35:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:35:51 -HTTP METHOD : GET
2019-05-22 10:35:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:35:51 -参数 : []
2019-05-22 10:35:51 -耗时 : 1
2019-05-22 10:35:51 -返回值 : system/dept/deptTree
2019-05-22 10:35:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:35:51 -HTTP METHOD : GET
2019-05-22 10:35:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:35:51 -参数 : []
2019-05-22 10:35:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:35:51 -==> Parameters: 
2019-05-22 10:35:51 -<==      Total: 3
2019-05-22 10:35:51 -耗时 : 54
2019-05-22 10:35:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:35:54 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:35:54 -HTTP METHOD : GET
2019-05-22 10:35:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:35:54 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@6bbf7cf8]
2019-05-22 10:35:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:35:54 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:35:54 -<==      Total: 7
2019-05-22 10:35:54 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:35:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:35:54 -<==      Total: 1
2019-05-22 10:35:54 -耗时 : 147
2019-05-22 10:35:54 -返回值 : com.bootdo.common.utils.PageUtils@545476c6
2019-05-22 10:36:05 -请求地址 : http://localhost:8081/elec/elec/edit/12
2019-05-22 10:36:05 -HTTP METHOD : GET
2019-05-22 10:36:05 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-05-22 10:36:05 -参数 : [12, {}]
2019-05-22 10:36:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-22 10:36:05 -==> Parameters: 12(Long)
2019-05-22 10:36:05 -<==      Total: 1
2019-05-22 10:36:05 -耗时 : 9
2019-05-22 10:36:05 -返回值 : elec/elec/edit
2019-05-22 10:36:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 10:36:06 -HTTP METHOD : GET
2019-05-22 10:36:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:36:06 -参数 : [userType]
2019-05-22 10:36:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:36:06 -==> Parameters: userType(String)
2019-05-22 10:36:06 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-22 10:36:06 -HTTP METHOD : GET
2019-05-22 10:36:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:36:06 -参数 : [userState]
2019-05-22 10:36:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:36:06 -==> Parameters: userState(String)
2019-05-22 10:36:06 -<==      Total: 2
2019-05-22 10:36:06 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 10:36:06 -HTTP METHOD : GET
2019-05-22 10:36:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 10:36:06 -参数 : [elecType]
2019-05-22 10:36:06 -耗时 : 5
2019-05-22 10:36:06 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:36:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 10:36:06 -==> Parameters: elecType(String)
2019-05-22 10:36:06 -<==      Total: 11
2019-05-22 10:36:06 -耗时 : 7
2019-05-22 10:36:06 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:36:06 -<==      Total: 4
2019-05-22 10:36:06 -耗时 : 19
2019-05-22 10:36:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 10:36:10 -请求地址 : http://localhost:8081/elec/elec/remove
2019-05-22 10:36:10 -HTTP METHOD : POST
2019-05-22 10:36:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.remove
2019-05-22 10:36:10 -参数 : [12]
2019-05-22 10:36:10 -==>  Preparing: delete from elec where id = ? 
2019-05-22 10:36:10 -==> Parameters: 12(Long)
2019-05-22 10:36:10 -<==    Updates: 1
2019-05-22 10:36:10 -耗时 : 89
2019-05-22 10:36:10 -返回值 : {msg=操作成功, code=0}
2019-05-22 10:36:18 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-05-22 10:36:18 -HTTP METHOD : GET
2019-05-22 10:36:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-05-22 10:36:18 -参数 : [com.bootdo.elec.vo.ElecVo@70359762, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6103f0c5]
2019-05-22 10:36:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:36:18 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:36:18 -<==      Total: 6
2019-05-22 10:36:19 -耗时 : 779
2019-05-22 10:36:19 -返回值 : null
2019-05-22 10:36:19 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-05-22 10:36:19 -HTTP METHOD : GET
2019-05-22 10:36:19 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-05-22 10:36:19 -参数 : [com.bootdo.elec.vo.ElecVo@1c44fe6b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3ca823f0]
2019-05-22 10:36:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:36:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:36:19 -<==      Total: 6
2019-05-22 10:36:20 -耗时 : 28
2019-05-22 10:36:20 -返回值 : null
2019-05-22 10:36:22 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:36:22 -HTTP METHOD : GET
2019-05-22 10:36:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:36:22 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@6759f15]
2019-05-22 10:36:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:36:22 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:36:22 -<==      Total: 6
2019-05-22 10:36:22 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? 
2019-05-22 10:36:22 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:36:22 -<==      Total: 1
2019-05-22 10:36:22 -耗时 : 10
2019-05-22 10:36:22 -返回值 : com.bootdo.common.utils.PageUtils@554cd0d
2019-05-22 10:39:45 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:39:45 -HTTP METHOD : GET
2019-05-22 10:39:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:39:45 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@541ef3f4]
2019-05-22 10:39:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:39:45 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:39:45 -<==      Total: 2
2019-05-22 10:39:45 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 10:39:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 10:39:45 -<==      Total: 1
2019-05-22 10:39:45 -耗时 : 14
2019-05-22 10:39:45 -返回值 : com.bootdo.common.utils.PageUtils@2ed622bd
2019-05-22 10:54:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 10:54:15 -==> Parameters: 1(Long)
2019-05-22 10:54:15 -<==      Total: 93
2019-05-22 10:54:15 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-22 10:54:15 -HTTP METHOD : GET
2019-05-22 10:54:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-22 10:54:15 -参数 : []
2019-05-22 10:54:15 -耗时 : 0
2019-05-22 10:54:15 -返回值 : elec/elecInto/elecInto
2019-05-22 10:54:19 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-05-22 10:54:19 -HTTP METHOD : GET
2019-05-22 10:54:19 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-05-22 10:54:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@2d6821a4, userInto]
2019-05-22 10:54:19 -耗时 : 85
2019-05-22 10:54:19 -返回值 : null
2019-05-22 10:55:36 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:55:36 -HTTP METHOD : GET
2019-05-22 10:55:36 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:55:36 -参数 : [{limit=10, offset=0, userType=B, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=2, type=B}, com.bootdo.elec.domain.ElecDO@df4e5c0]
2019-05-22 10:55:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:55:36 -==> Parameters: 2019-03(String), B(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:55:36 -<==      Total: 0
2019-05-22 10:55:36 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-22 10:55:36 -==> Parameters: 2019-03(String), B(String), 2(String)
2019-05-22 10:55:36 -<==      Total: 1
2019-05-22 10:55:36 -耗时 : 28
2019-05-22 10:55:36 -返回值 : com.bootdo.common.utils.PageUtils@7fdf5813
2019-05-22 10:55:37 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:55:37 -HTTP METHOD : GET
2019-05-22 10:55:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:55:37 -参数 : [{limit=10, offset=0, userType=B, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@18a086fe]
2019-05-22 10:55:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:55:37 -==> Parameters: 2019-03(String), B(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:55:37 -<==      Total: 1
2019-05-22 10:55:37 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_type = ? and user_org = ? 
2019-05-22 10:55:37 -==> Parameters: 2019-03(String), B(String), 2(String)
2019-05-22 10:55:37 -<==      Total: 1
2019-05-22 10:55:37 -耗时 : 12
2019-05-22 10:55:37 -返回值 : com.bootdo.common.utils.PageUtils@44ac8959
2019-05-22 10:55:38 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 10:55:38 -HTTP METHOD : GET
2019-05-22 10:55:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 10:55:38 -参数 : [{limit=10, offset=0, userType=B, elecType=, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@15d732bb]
2019-05-22 10:55:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 10:55:38 -==> Parameters: 2019-03(String), B(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 10:55:38 -<==      Total: 1
2019-05-22 10:55:38 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_type = ? and user_org = ? 
2019-05-22 10:55:38 -==> Parameters: 2019-03(String), B(String), 2(String)
2019-05-22 10:55:38 -<==      Total: 1
2019-05-22 10:55:38 -耗时 : 9
2019-05-22 10:55:38 -返回值 : com.bootdo.common.utils.PageUtils@20a7e2b0
2019-05-22 10:56:54 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-05-22 10:56:54 -HTTP METHOD : GET
2019-05-22 10:56:54 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-05-22 10:56:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@6ecd2e96, userInto]
2019-05-22 10:56:54 -耗时 : 4
2019-05-22 10:56:54 -返回值 : null
2019-05-22 10:59:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 10:59:19 -HTTP METHOD : GET
2019-05-22 10:59:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 10:59:19 -参数 : []
2019-05-22 10:59:19 -耗时 : 1
2019-05-22 10:59:19 -返回值 : system/dept/deptTree
2019-05-22 10:59:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 10:59:19 -HTTP METHOD : GET
2019-05-22 10:59:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 10:59:19 -参数 : []
2019-05-22 10:59:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 10:59:19 -==> Parameters: 
2019-05-22 10:59:19 -<==      Total: 3
2019-05-22 10:59:19 -耗时 : 4
2019-05-22 10:59:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 10:59:44 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-22 10:59:44 -HTTP METHOD : POST
2019-05-22 10:59:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-22 10:59:44 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3e445dba, com.bootdo.elec.vo.ElecVo@69e32ecc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@624140ad]
2019-05-22 10:59:47 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-22 10:59:47 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-22 10:59:47 -<==      Total: 1
2019-05-22 10:59:47 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-22 10:59:47 -==> Parameters: 10(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-22 10:59:47 -<==    Updates: 1
2019-05-22 10:59:47 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-22 10:59:47 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-22 10:59:47 -<==      Total: 1
2019-05-22 10:59:47 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-22 10:59:47 -==> Parameters: 20(BigDecimal), 2019-02(String), 2(String), 1-0004(String), 姜海龙(String)
2019-05-22 10:59:47 -<==    Updates: 1
2019-05-22 10:59:48 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:59:48 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 10(BigDecimal), 2019-05-22 10:59:47.956(Timestamp), 2019-02(String), 1(Long), 2019-05-22 10:59:47.956(Timestamp), 1(Long), null
2019-05-22 10:59:48 -<==    Updates: 1
2019-05-22 10:59:48 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 10:59:48 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 2(String), 20(BigDecimal), 2019-05-22 10:59:48.002(Timestamp), 2019-02(String), 1(Long), 2019-05-22 10:59:48.002(Timestamp), 1(Long), null
2019-05-22 10:59:48 -<==    Updates: 1
2019-05-22 10:59:48 -耗时 : 3156
2019-05-22 10:59:48 -返回值 : success
2019-05-22 11:00:42 -请求地址 : http://localhost:8081/elec/elecInto/exprotElecIntoExcel
2019-05-22 11:00:42 -HTTP METHOD : GET
2019-05-22 11:00:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.exprotExcel
2019-05-22 11:00:42 -参数 : [com.bootdo.elec.vo.ElecVo@4b6b3a17, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5e8008f8]
2019-05-22 11:00:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-05-22 11:00:42 -==> Parameters: 2019-02(String), 2(String)
2019-05-22 11:00:42 -<==      Total: 2
2019-05-22 11:00:42 -耗时 : 26
2019-05-22 11:00:42 -返回值 : null
2019-05-22 11:04:39 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 440]
2019-05-22 11:05:46 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-22 11:05:46 -HTTP METHOD : POST
2019-05-22 11:05:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-22 11:05:46 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@324706e3, com.bootdo.elec.vo.ElecVo@5ddbc8ce, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5c540551]
2019-05-22 11:05:46 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-22 11:05:46 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李英(String)
2019-05-22 11:05:46 -<==      Total: 0
2019-05-22 11:05:46 -耗时 : 103
2019-05-22 11:05:46 -返回值 : 第2行，数据出错请认真编写
2019-05-22 11:06:11 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-05-22 11:06:11 -HTTP METHOD : POST
2019-05-22 11:06:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-05-22 11:06:11 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@71682e30, com.bootdo.elec.vo.ElecVo@444db2d4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6f479d9d]
2019-05-22 11:06:11 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-22 11:06:11 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-22 11:06:11 -<==      Total: 1
2019-05-22 11:06:11 -==>  Preparing: UPDATE ELEC SET ELEC_SUM = ELEC_SUM + ? WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-22 11:06:11 -==> Parameters: 10(BigDecimal), 2019-02(String), 2(String), 1-0001(String), 李文英(String)
2019-05-22 11:06:11 -<==    Updates: 1
2019-05-22 11:06:11 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-05-22 11:06:11 -==> Parameters: 2019-02(String), 2(String), 1-0004(String), 李四(String)
2019-05-22 11:06:11 -<==      Total: 0
2019-05-22 11:06:11 -耗时 : 164
2019-05-22 11:06:11 -返回值 : 第3行，数据出错请认真编写
2019-05-22 11:07:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 11:07:42 -==> Parameters: 1(Long)
2019-05-22 11:07:42 -<==      Total: 93
2019-05-22 11:07:42 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-22 11:07:42 -HTTP METHOD : GET
2019-05-22 11:07:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-22 11:07:42 -参数 : []
2019-05-22 11:07:42 -耗时 : 0
2019-05-22 11:07:42 -返回值 : elec/elecPrice/elecPrice
2019-05-22 11:07:43 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-22 11:07:43 -HTTP METHOD : GET
2019-05-22 11:07:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-22 11:07:43 -参数 : [{limit=10, offset=0}]
2019-05-22 11:07:43 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-22 11:07:43 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 11:07:43 -<==      Total: 2
2019-05-22 11:07:43 -==>  Preparing: select count(*) from elec_price 
2019-05-22 11:07:43 -==> Parameters: 
2019-05-22 11:07:43 -<==      Total: 1
2019-05-22 11:07:43 -耗时 : 191
2019-05-22 11:07:43 -返回值 : com.bootdo.common.utils.PageUtils@5f8fe1a0
2019-05-22 11:07:49 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-22 11:07:49 -HTTP METHOD : GET
2019-05-22 11:07:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-22 11:07:49 -参数 : []
2019-05-22 11:07:49 -耗时 : 68
2019-05-22 11:07:49 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-22 11:08:04 -请求地址 : http://localhost:8081/file/downImport/elecUser
2019-05-22 11:08:04 -HTTP METHOD : GET
2019-05-22 11:08:04 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-05-22 11:08:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@651c43f, elecUser]
2019-05-22 11:08:04 -耗时 : 75
2019-05-22 11:08:04 -返回值 : null
2019-05-22 11:20:58 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-05-22 11:20:58 -HTTP METHOD : GET
2019-05-22 11:20:58 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-05-22 11:20:58 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@b32c588, userInto]
2019-05-22 11:20:58 -耗时 : 22
2019-05-22 11:20:58 -返回值 : null
2019-05-22 11:28:36 -请求地址 : http://localhost:8081/main
2019-05-22 11:28:36 -HTTP METHOD : GET
2019-05-22 11:28:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 11:28:36 -参数 : []
2019-05-22 11:28:36 -耗时 : 0
2019-05-22 11:28:36 -返回值 : main
2019-05-22 11:28:37 -请求地址 : http://localhost:8081/main
2019-05-22 11:28:37 -HTTP METHOD : GET
2019-05-22 11:28:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 11:28:37 -参数 : []
2019-05-22 11:28:37 -耗时 : 0
2019-05-22 11:28:37 -返回值 : main
2019-05-22 11:28:40 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 11:28:40 -==> Parameters: 1(Long)
2019-05-22 11:28:40 -<==      Total: 93
2019-05-22 11:28:40 -请求地址 : http://localhost:8081/elec/elec
2019-05-22 11:28:40 -HTTP METHOD : GET
2019-05-22 11:28:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-22 11:28:40 -参数 : []
2019-05-22 11:28:40 -耗时 : 2
2019-05-22 11:28:40 -返回值 : elec/elec/elec
2019-05-22 11:28:41 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-22 11:28:41 -HTTP METHOD : GET
2019-05-22 11:28:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-22 11:28:41 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@10576be2]
2019-05-22 11:28:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-22 11:28:41 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 11:28:41 -<==      Total: 9
2019-05-22 11:28:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 11:28:41 -HTTP METHOD : GET
2019-05-22 11:28:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 11:28:41 -参数 : [userType]
2019-05-22 11:28:41 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-22 11:28:41 -HTTP METHOD : GET
2019-05-22 11:28:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 11:28:41 -参数 : [elecType]
2019-05-22 11:28:41 -==>  Preparing: select count(*) from elec 
2019-05-22 11:28:41 -==> Parameters: 
2019-05-22 11:28:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 11:28:41 -==> Parameters: elecType(String)
2019-05-22 11:28:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 11:28:41 -==> Parameters: userType(String)
2019-05-22 11:28:41 -<==      Total: 1
2019-05-22 11:28:41 -耗时 : 210
2019-05-22 11:28:41 -返回值 : com.bootdo.common.utils.PageUtils@3fd3e680
2019-05-22 11:28:41 -<==      Total: 11
2019-05-22 11:28:41 -耗时 : 114
2019-05-22 11:28:41 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 11:28:41 -<==      Total: 4
2019-05-22 11:28:41 -耗时 : 180
2019-05-22 11:28:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 11:28:47 -请求地址 : http://localhost:8081/water/water
2019-05-22 11:28:47 -HTTP METHOD : GET
2019-05-22 11:28:47 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-05-22 11:28:47 -参数 : []
2019-05-22 11:28:47 -耗时 : 9
2019-05-22 11:28:47 -返回值 : water/water/water
2019-05-22 11:28:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 11:28:47 -HTTP METHOD : GET
2019-05-22 11:28:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 11:28:47 -参数 : [userType]
2019-05-22 11:28:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 11:28:47 -==> Parameters: userType(String)
2019-05-22 11:28:47 -<==      Total: 4
2019-05-22 11:28:47 -耗时 : 107
2019-05-22 11:28:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 11:28:47 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:28:47 -HTTP METHOD : GET
2019-05-22 11:28:47 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:28:47 -参数 : [{limit=3, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-22 11:28:48 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 11:28:48 -HTTP METHOD : GET
2019-05-22 11:28:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 11:28:48 -参数 : [waterType]
2019-05-22 11:28:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 11:28:48 -==> Parameters: waterType(String)
2019-05-22 11:28:48 -<==      Total: 4
2019-05-22 11:28:48 -耗时 : 5
2019-05-22 11:28:48 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 11:28:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-05-22 11:28:48 -==> Parameters: 0(Integer), 3(Integer)
2019-05-22 11:28:48 -<==      Total: 3
2019-05-22 11:28:48 -==>  Preparing: select count(*) from water 
2019-05-22 11:28:48 -==> Parameters: 
2019-05-22 11:28:48 -<==      Total: 1
2019-05-22 11:28:48 -耗时 : 396
2019-05-22 11:28:48 -返回值 : com.bootdo.common.utils.PageUtils@f978ad
2019-05-22 11:29:00 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:29:00 -HTTP METHOD : GET
2019-05-22 11:29:00 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:29:00 -参数 : [{limit=3, offset=3, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-22 11:29:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-05-22 11:29:00 -==> Parameters: 3(Integer), 3(Integer)
2019-05-22 11:29:00 -<==      Total: 3
2019-05-22 11:29:00 -==>  Preparing: select count(*) from water 
2019-05-22 11:29:00 -==> Parameters: 
2019-05-22 11:29:00 -<==      Total: 1
2019-05-22 11:29:00 -耗时 : 44
2019-05-22 11:29:00 -返回值 : com.bootdo.common.utils.PageUtils@235461c0
2019-05-22 11:29:02 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:29:02 -HTTP METHOD : GET
2019-05-22 11:29:02 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:29:02 -参数 : [{limit=3, offset=6, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-22 11:29:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-05-22 11:29:02 -==> Parameters: 6(Integer), 3(Integer)
2019-05-22 11:29:02 -<==      Total: 2
2019-05-22 11:29:02 -==>  Preparing: select count(*) from water 
2019-05-22 11:29:02 -==> Parameters: 
2019-05-22 11:29:02 -<==      Total: 1
2019-05-22 11:29:02 -耗时 : 6
2019-05-22 11:29:02 -返回值 : com.bootdo.common.utils.PageUtils@1dcca99e
2019-05-22 11:29:06 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:29:06 -HTTP METHOD : GET
2019-05-22 11:29:06 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:29:06 -参数 : [{limit=3, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-22 11:29:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-05-22 11:29:06 -==> Parameters: 0(Integer), 3(Integer)
2019-05-22 11:29:06 -<==      Total: 3
2019-05-22 11:29:06 -==>  Preparing: select count(*) from water 
2019-05-22 11:29:06 -==> Parameters: 
2019-05-22 11:29:06 -<==      Total: 1
2019-05-22 11:29:06 -耗时 : 37
2019-05-22 11:29:06 -返回值 : com.bootdo.common.utils.PageUtils@6ba10413
2019-05-22 11:33:14 -请求地址 : http://localhost:8081/index
2019-05-22 11:33:14 -HTTP METHOD : GET
2019-05-22 11:33:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 11:33:14 -参数 : [{}]
2019-05-22 11:33:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 11:33:14 -==> Parameters: 1(Long)
2019-05-22 11:33:14 -<==      Total: 49
2019-05-22 11:33:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 11:33:14 -==> Parameters: 138(Long)
2019-05-22 11:33:14 -<==      Total: 1
2019-05-22 11:33:14 -耗时 : 80
2019-05-22 11:33:14 -返回值 : index_v1
2019-05-22 11:33:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 11:33:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 80(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 11:33:14.625(Timestamp)
2019-05-22 11:33:14 -<==    Updates: 1
2019-05-22 11:33:14 -请求地址 : http://localhost:8081/main
2019-05-22 11:33:14 -HTTP METHOD : GET
2019-05-22 11:33:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 11:33:14 -参数 : []
2019-05-22 11:33:14 -耗时 : 1
2019-05-22 11:33:14 -返回值 : main
2019-05-22 11:33:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 11:33:14 -HTTP METHOD : GET
2019-05-22 11:33:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 11:33:14 -参数 : []
2019-05-22 11:33:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 11:33:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 11:33:14 -<==      Total: 0
2019-05-22 11:33:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 11:33:14 -==> Parameters: 1(Long), 0(String)
2019-05-22 11:33:14 -<==      Total: 1
2019-05-22 11:33:14 -耗时 : 37
2019-05-22 11:33:14 -返回值 : com.bootdo.common.utils.PageUtils@7b48e403
2019-05-22 11:33:15 -请求地址 : http://localhost:8081/main
2019-05-22 11:33:15 -HTTP METHOD : GET
2019-05-22 11:33:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 11:33:15 -参数 : []
2019-05-22 11:33:15 -耗时 : 1
2019-05-22 11:33:15 -返回值 : main
2019-05-22 11:33:19 -请求地址 : http://localhost:8081/water/water
2019-05-22 11:33:19 -HTTP METHOD : GET
2019-05-22 11:33:19 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-05-22 11:33:19 -参数 : []
2019-05-22 11:33:19 -耗时 : 0
2019-05-22 11:33:19 -返回值 : water/water/water
2019-05-22 11:33:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 11:33:19 -HTTP METHOD : GET
2019-05-22 11:33:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 11:33:19 -参数 : [userType]
2019-05-22 11:33:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 11:33:19 -==> Parameters: userType(String)
2019-05-22 11:33:19 -<==      Total: 4
2019-05-22 11:33:19 -耗时 : 3
2019-05-22 11:33:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 11:33:19 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 11:33:19 -HTTP METHOD : GET
2019-05-22 11:33:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 11:33:19 -参数 : [waterType]
2019-05-22 11:33:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 11:33:19 -==> Parameters: waterType(String)
2019-05-22 11:33:19 -<==      Total: 4
2019-05-22 11:33:19 -耗时 : 5
2019-05-22 11:33:19 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 11:33:19 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:33:19 -HTTP METHOD : GET
2019-05-22 11:33:19 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:33:19 -参数 : [{limit=3, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-22 11:33:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-05-22 11:33:19 -==> Parameters: 0(Integer), 3(Integer)
2019-05-22 11:33:19 -<==      Total: 3
2019-05-22 11:33:19 -==>  Preparing: select count(*) from water 
2019-05-22 11:33:19 -==> Parameters: 
2019-05-22 11:33:19 -<==      Total: 1
2019-05-22 11:33:19 -耗时 : 6
2019-05-22 11:33:19 -返回值 : com.bootdo.common.utils.PageUtils@446dc270
2019-05-22 11:33:35 -请求地址 : http://localhost:8081/login;JSESSIONID=c59583d8-9754-4c83-b181-0f12aae6d040
2019-05-22 11:33:35 -HTTP METHOD : GET
2019-05-22 11:33:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 11:33:35 -参数 : [{}]
2019-05-22 11:33:35 -耗时 : 1
2019-05-22 11:33:35 -返回值 : login
2019-05-22 11:33:36 -请求地址 : http://localhost:8081/getVerify
2019-05-22 11:33:36 -HTTP METHOD : GET
2019-05-22 11:33:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 11:33:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6452bf02, org.apache.shiro.web.servlet.ShiroHttpServletResponse@64066607]
2019-05-22 11:33:36 -7836
2019-05-22 11:33:36 -耗时 : 159
2019-05-22 11:33:36 -返回值 : null
2019-05-22 11:33:36 -请求地址 : http://localhost:8081/login
2019-05-22 11:33:36 -HTTP METHOD : GET
2019-05-22 11:33:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 11:33:36 -参数 : [{}]
2019-05-22 11:33:36 -耗时 : 0
2019-05-22 11:33:36 -返回值 : login
2019-05-22 11:33:41 -请求地址 : http://localhost:8081/login
2019-05-22 11:33:41 -HTTP METHOD : POST
2019-05-22 11:33:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 11:33:41 -参数 : [admin, 111111, 7836, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1414a688]
2019-05-22 11:33:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 11:33:41 -==> Parameters: admin(String)
2019-05-22 11:33:41 -<==      Total: 1
2019-05-22 11:33:41 -耗时 : 85
2019-05-22 11:33:41 -返回值 : {msg=操作成功, code=0}
2019-05-22 11:33:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 11:33:41 -==> Parameters: 1(Long), admin(String), 登录(String), 86(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 11:33:41.81(Timestamp)
2019-05-22 11:33:41 -请求地址 : http://localhost:8081/index
2019-05-22 11:33:41 -HTTP METHOD : GET
2019-05-22 11:33:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 11:33:41 -参数 : [{}]
2019-05-22 11:33:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 11:33:41 -==> Parameters: 1(Long)
2019-05-22 11:33:41 -<==    Updates: 1
2019-05-22 11:33:41 -<==      Total: 49
2019-05-22 11:33:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 11:33:41 -==> Parameters: 138(Long)
2019-05-22 11:33:41 -<==      Total: 1
2019-05-22 11:33:41 -耗时 : 104
2019-05-22 11:33:41 -返回值 : index_v1
2019-05-22 11:33:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 11:33:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 104(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 11:33:41.97(Timestamp)
2019-05-22 11:33:42 -<==    Updates: 1
2019-05-22 11:33:42 -请求地址 : http://localhost:8081/main
2019-05-22 11:33:42 -HTTP METHOD : GET
2019-05-22 11:33:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 11:33:42 -参数 : []
2019-05-22 11:33:42 -耗时 : 0
2019-05-22 11:33:42 -返回值 : main
2019-05-22 11:33:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 11:33:42 -HTTP METHOD : GET
2019-05-22 11:33:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 11:33:42 -参数 : []
2019-05-22 11:33:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 11:33:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 11:33:42 -<==      Total: 0
2019-05-22 11:33:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 11:33:42 -==> Parameters: 1(Long), 0(String)
2019-05-22 11:33:42 -<==      Total: 1
2019-05-22 11:33:42 -耗时 : 6
2019-05-22 11:33:42 -返回值 : com.bootdo.common.utils.PageUtils@1d32627a
2019-05-22 11:33:42 -请求地址 : http://localhost:8081/main
2019-05-22 11:33:42 -HTTP METHOD : GET
2019-05-22 11:33:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 11:33:42 -参数 : []
2019-05-22 11:33:42 -耗时 : 0
2019-05-22 11:33:42 -返回值 : main
2019-05-22 11:33:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 11:33:48 -==> Parameters: 1(Long)
2019-05-22 11:33:48 -<==      Total: 93
2019-05-22 11:33:48 -请求地址 : http://localhost:8081/water/water
2019-05-22 11:33:48 -HTTP METHOD : GET
2019-05-22 11:33:48 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-05-22 11:33:48 -参数 : []
2019-05-22 11:33:48 -耗时 : 0
2019-05-22 11:33:48 -返回值 : water/water/water
2019-05-22 11:33:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 11:33:50 -HTTP METHOD : GET
2019-05-22 11:33:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 11:33:50 -参数 : [userType]
2019-05-22 11:33:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 11:33:50 -==> Parameters: userType(String)
2019-05-22 11:33:50 -<==      Total: 4
2019-05-22 11:33:50 -耗时 : 5
2019-05-22 11:33:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 11:33:50 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 11:33:50 -HTTP METHOD : GET
2019-05-22 11:33:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 11:33:50 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:33:50 -HTTP METHOD : GET
2019-05-22 11:33:50 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:33:50 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-22 11:33:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-05-22 11:33:50 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 11:33:50 -参数 : [waterType]
2019-05-22 11:33:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 11:33:50 -==> Parameters: waterType(String)
2019-05-22 11:33:50 -<==      Total: 4
2019-05-22 11:33:50 -耗时 : 78
2019-05-22 11:33:50 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 11:33:50 -<==      Total: 8
2019-05-22 11:33:50 -==>  Preparing: select count(*) from water 
2019-05-22 11:33:50 -==> Parameters: 
2019-05-22 11:33:50 -<==      Total: 1
2019-05-22 11:33:50 -耗时 : 101
2019-05-22 11:33:50 -返回值 : com.bootdo.common.utils.PageUtils@e4f3b16
2019-05-22 11:33:59 -Validating all active sessions...
2019-05-22 11:33:59 -Finished session validation.  [1] sessions were stopped.
2019-05-22 11:34:39 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 5, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 860]
2019-05-22 11:36:43 -请求地址 : http://localhost:8081/index
2019-05-22 11:36:43 -HTTP METHOD : GET
2019-05-22 11:36:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 11:36:43 -参数 : [{}]
2019-05-22 11:36:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 11:36:43 -==> Parameters: 1(Long)
2019-05-22 11:36:43 -<==      Total: 49
2019-05-22 11:36:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 11:36:43 -==> Parameters: 138(Long)
2019-05-22 11:36:43 -<==      Total: 1
2019-05-22 11:36:43 -耗时 : 176
2019-05-22 11:36:43 -返回值 : index_v1
2019-05-22 11:36:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 11:36:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 176(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 11:36:43.306(Timestamp)
2019-05-22 11:36:43 -<==    Updates: 1
2019-05-22 11:36:43 -请求地址 : http://localhost:8081/main
2019-05-22 11:36:43 -HTTP METHOD : GET
2019-05-22 11:36:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 11:36:43 -参数 : []
2019-05-22 11:36:43 -耗时 : 0
2019-05-22 11:36:43 -返回值 : main
2019-05-22 11:36:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 11:36:43 -HTTP METHOD : GET
2019-05-22 11:36:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 11:36:43 -参数 : []
2019-05-22 11:36:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 11:36:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 11:36:43 -<==      Total: 0
2019-05-22 11:36:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 11:36:43 -==> Parameters: 1(Long), 0(String)
2019-05-22 11:36:43 -<==      Total: 1
2019-05-22 11:36:43 -耗时 : 70
2019-05-22 11:36:43 -返回值 : com.bootdo.common.utils.PageUtils@3a0c3787
2019-05-22 11:36:43 -请求地址 : http://localhost:8081/main
2019-05-22 11:36:43 -HTTP METHOD : GET
2019-05-22 11:36:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 11:36:43 -参数 : []
2019-05-22 11:36:43 -耗时 : 28
2019-05-22 11:36:43 -返回值 : main
2019-05-22 11:36:45 -请求地址 : http://localhost:8081/water/water
2019-05-22 11:36:45 -HTTP METHOD : GET
2019-05-22 11:36:45 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-05-22 11:36:45 -参数 : []
2019-05-22 11:36:45 -耗时 : 1
2019-05-22 11:36:45 -返回值 : water/water/water
2019-05-22 11:36:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 11:36:46 -HTTP METHOD : GET
2019-05-22 11:36:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 11:36:46 -参数 : [userType]
2019-05-22 11:36:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 11:36:46 -==> Parameters: userType(String)
2019-05-22 11:36:46 -<==      Total: 4
2019-05-22 11:36:46 -耗时 : 4
2019-05-22 11:36:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 11:36:46 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 11:36:46 -HTTP METHOD : GET
2019-05-22 11:36:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 11:36:46 -参数 : [waterType]
2019-05-22 11:36:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 11:36:46 -==> Parameters: waterType(String)
2019-05-22 11:36:46 -<==      Total: 4
2019-05-22 11:36:46 -耗时 : 7
2019-05-22 11:36:46 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 11:36:46 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:36:46 -HTTP METHOD : GET
2019-05-22 11:36:46 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:36:46 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-22 11:36:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-05-22 11:36:46 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 11:36:46 -<==      Total: 10
2019-05-22 11:36:46 -==>  Preparing: select count(*) from water 
2019-05-22 11:36:46 -==> Parameters: 
2019-05-22 11:36:46 -<==      Total: 1
2019-05-22 11:36:46 -耗时 : 9
2019-05-22 11:36:46 -返回值 : com.bootdo.common.utils.PageUtils@678b9d5e
2019-05-22 11:37:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 11:37:14 -HTTP METHOD : GET
2019-05-22 11:37:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 11:37:14 -参数 : []
2019-05-22 11:37:14 -耗时 : 1
2019-05-22 11:37:14 -返回值 : system/dept/deptTree
2019-05-22 11:37:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 11:37:14 -HTTP METHOD : GET
2019-05-22 11:37:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 11:37:14 -参数 : []
2019-05-22 11:37:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 11:37:14 -==> Parameters: 
2019-05-22 11:37:14 -<==      Total: 3
2019-05-22 11:37:14 -耗时 : 4
2019-05-22 11:37:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 11:37:16 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:16 -HTTP METHOD : GET
2019-05-22 11:37:16 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:16 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=1}]
2019-05-22 11:37:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:16 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:16 -<==      Total: 0
2019-05-22 11:37:16 -==>  Preparing: select count(*) from water WHERE `create_time` = ? and user_org = ? 
2019-05-22 11:37:16 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:16 -<==      Total: 1
2019-05-22 11:37:16 -耗时 : 16
2019-05-22 11:37:16 -返回值 : com.bootdo.common.utils.PageUtils@a416b4b
2019-05-22 11:37:17 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:17 -HTTP METHOD : GET
2019-05-22 11:37:17 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:17 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=1}]
2019-05-22 11:37:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:17 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:17 -<==      Total: 0
2019-05-22 11:37:17 -==>  Preparing: select count(*) from water WHERE `create_time` = ? and user_org = ? 
2019-05-22 11:37:17 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:17 -<==      Total: 1
2019-05-22 11:37:17 -耗时 : 4
2019-05-22 11:37:17 -返回值 : com.bootdo.common.utils.PageUtils@74f7993e
2019-05-22 11:37:18 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:18 -HTTP METHOD : GET
2019-05-22 11:37:18 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:18 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=1}]
2019-05-22 11:37:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:18 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:18 -<==      Total: 0
2019-05-22 11:37:18 -==>  Preparing: select count(*) from water WHERE `create_time` = ? and user_org = ? 
2019-05-22 11:37:18 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:18 -<==      Total: 1
2019-05-22 11:37:18 -耗时 : 5
2019-05-22 11:37:18 -返回值 : com.bootdo.common.utils.PageUtils@4f0eef28
2019-05-22 11:37:18 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:18 -HTTP METHOD : GET
2019-05-22 11:37:18 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:18 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=1}]
2019-05-22 11:37:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:18 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:18 -<==      Total: 0
2019-05-22 11:37:18 -==>  Preparing: select count(*) from water WHERE `create_time` = ? and user_org = ? 
2019-05-22 11:37:18 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:18 -<==      Total: 1
2019-05-22 11:37:18 -耗时 : 8
2019-05-22 11:37:18 -返回值 : com.bootdo.common.utils.PageUtils@3b53ddd8
2019-05-22 11:37:18 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:18 -HTTP METHOD : GET
2019-05-22 11:37:18 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:18 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=1}]
2019-05-22 11:37:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:18 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:18 -<==      Total: 0
2019-05-22 11:37:18 -==>  Preparing: select count(*) from water WHERE `create_time` = ? and user_org = ? 
2019-05-22 11:37:18 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:18 -<==      Total: 1
2019-05-22 11:37:18 -耗时 : 7
2019-05-22 11:37:18 -返回值 : com.bootdo.common.utils.PageUtils@435dd743
2019-05-22 11:37:46 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:46 -HTTP METHOD : GET
2019-05-22 11:37:46 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:46 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=1}]
2019-05-22 11:37:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:46 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:46 -<==      Total: 0
2019-05-22 11:37:46 -==>  Preparing: select count(*) from water WHERE `create_time` = ? and user_org = ? 
2019-05-22 11:37:46 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:46 -<==      Total: 1
2019-05-22 11:37:46 -耗时 : 8
2019-05-22 11:37:46 -返回值 : com.bootdo.common.utils.PageUtils@1152b4bf
2019-05-22 11:37:48 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:48 -HTTP METHOD : GET
2019-05-22 11:37:48 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:48 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=2}]
2019-05-22 11:37:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:48 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:48 -<==      Total: 0
2019-05-22 11:37:48 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 11:37:48 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:48 -<==      Total: 1
2019-05-22 11:37:48 -耗时 : 22
2019-05-22 11:37:48 -返回值 : com.bootdo.common.utils.PageUtils@1c051405
2019-05-22 11:37:48 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:48 -HTTP METHOD : GET
2019-05-22 11:37:48 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:48 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=2}]
2019-05-22 11:37:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:48 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:48 -<==      Total: 0
2019-05-22 11:37:48 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 11:37:48 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:48 -<==      Total: 1
2019-05-22 11:37:48 -耗时 : 10
2019-05-22 11:37:48 -返回值 : com.bootdo.common.utils.PageUtils@3a081279
2019-05-22 11:37:49 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:49 -HTTP METHOD : GET
2019-05-22 11:37:49 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:49 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=2}]
2019-05-22 11:37:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:49 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:49 -<==      Total: 0
2019-05-22 11:37:49 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 11:37:49 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:49 -<==      Total: 1
2019-05-22 11:37:49 -耗时 : 9
2019-05-22 11:37:49 -返回值 : com.bootdo.common.utils.PageUtils@7218bf93
2019-05-22 11:37:49 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:49 -HTTP METHOD : GET
2019-05-22 11:37:49 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:49 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=2}]
2019-05-22 11:37:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:49 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:49 -<==      Total: 0
2019-05-22 11:37:49 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 11:37:49 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:49 -<==      Total: 1
2019-05-22 11:37:49 -耗时 : 22
2019-05-22 11:37:49 -返回值 : com.bootdo.common.utils.PageUtils@777e8811
2019-05-22 11:37:49 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:49 -HTTP METHOD : GET
2019-05-22 11:37:49 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:49 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=2}]
2019-05-22 11:37:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:49 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:49 -<==      Total: 0
2019-05-22 11:37:49 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 11:37:49 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:49 -<==      Total: 1
2019-05-22 11:37:49 -耗时 : 6
2019-05-22 11:37:49 -返回值 : com.bootdo.common.utils.PageUtils@a4f8ce5
2019-05-22 11:37:49 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:49 -HTTP METHOD : GET
2019-05-22 11:37:49 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:49 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=2}]
2019-05-22 11:37:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:49 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:49 -<==      Total: 0
2019-05-22 11:37:49 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 11:37:49 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:49 -<==      Total: 1
2019-05-22 11:37:49 -耗时 : 8
2019-05-22 11:37:49 -返回值 : com.bootdo.common.utils.PageUtils@12f55555
2019-05-22 11:37:50 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:37:50 -HTTP METHOD : GET
2019-05-22 11:37:50 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:37:50 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=2}]
2019-05-22 11:37:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:37:50 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:37:50 -<==      Total: 0
2019-05-22 11:37:50 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-22 11:37:50 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:37:50 -<==      Total: 1
2019-05-22 11:37:50 -耗时 : 8
2019-05-22 11:37:50 -返回值 : com.bootdo.common.utils.PageUtils@60239f45
2019-05-22 11:38:20 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 11:38:20 -HTTP METHOD : GET
2019-05-22 11:38:20 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 11:38:20 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2020-03, queryType=1}]
2019-05-22 11:38:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 11:38:20 -==> Parameters: 2020-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 11:38:20 -<==      Total: 0
2019-05-22 11:38:20 -==>  Preparing: select count(*) from water WHERE `create_time` = ? and user_org = ? 
2019-05-22 11:38:20 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:38:20 -<==      Total: 1
2019-05-22 11:38:20 -耗时 : 5
2019-05-22 11:38:20 -返回值 : com.bootdo.common.utils.PageUtils@53bec23a
2019-05-22 11:38:24 -请求地址 : http://localhost:8081/water/water/exprotWater
2019-05-22 11:38:24 -HTTP METHOD : GET
2019-05-22 11:38:24 -CLASS_METHOD : com.bootdo.water.controller.WaterController.exprotExcel
2019-05-22 11:38:24 -参数 : [com.bootdo.water.vo.WaterVo@3b922d40, org.apache.shiro.web.servlet.ShiroHttpServletResponse@349c2a5f]
2019-05-22 11:38:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `create_time` = ? and user_org = ? 
2019-05-22 11:38:24 -==> Parameters: 2020-03(String), 2(String)
2019-05-22 11:38:24 -<==      Total: 0
2019-05-22 11:38:25 -耗时 : 44
2019-05-22 11:38:25 -返回值 : null
2019-05-22 13:44:08 -Starting BootdoApplication on PC-201905091110 with PID 19772 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-22 13:44:08 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-22 13:44:08 -The following profiles are active: dev
2019-05-22 13:44:08 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 13:44:08 CST 2019]; root of context hierarchy
2019-05-22 13:44:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-22 13:44:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 13:44:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 13:44:22 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 13:44:23 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 13:44:23 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 13:44:23 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-22 13:44:23 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-22 13:44:23 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 13:44:23 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 13:44:23 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 13:44:23 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 13:44:24 -Tomcat initialized with port(s): 8081 (http)
2019-05-22 13:44:24 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-22 13:44:24 -Starting service [Tomcat]
2019-05-22 13:44:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-22 13:44:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-22 13:44:25 -Initializing Spring embedded WebApplicationContext
2019-05-22 13:44:25 -Root WebApplicationContext: initialization completed in 16925 ms
2019-05-22 13:44:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-22 13:44:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-22 13:44:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-22 13:44:26 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-22 13:44:26 -Filter xssFilter was not registered (disabled)
2019-05-22 13:44:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-22 13:44:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-22 13:44:26 -Servlet statViewServlet mapped to [/druid/*]
2019-05-22 13:44:26 -Servlet dispatcherServlet mapped to [/]
2019-05-22 13:44:31 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 13:44:08 CST 2019]; root of context hierarchy
2019-05-22 13:44:32 -Using default implementation for ThreadExecutor
2019-05-22 13:44:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-22 13:44:32 -Quartz Scheduler v.2.2.1 created.
2019-05-22 13:44:32 -RAMJobStore initialized.
2019-05-22 13:44:32 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-22 13:44:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-22 13:44:32 -Quartz scheduler version: 2.2.1
2019-05-22 13:44:32 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5d5d3a5c
2019-05-22 13:44:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-22 13:44:33 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-22 13:44:35 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:35 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 13:44:35 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-22 13:44:35 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:35 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 13:44:35 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-22 13:44:35 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-22 13:44:35 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:35 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-22 13:44:35 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 13:44:35 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-22 13:44:35 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:35 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 13:44:35 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-22 13:44:35 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:35 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 13:44:35 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:35 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-22 13:44:35 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 13:44:35 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-22 13:44:35 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:35 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:35 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-22 13:44:35 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 13:44:35 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:35 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-22 13:44:35 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 13:44:35 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 13:44:35 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-22 13:44:35 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:35 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:35 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-22 13:44:35 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 13:44:35 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 13:44:35 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-22 13:44:35 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:35 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-22 13:44:35 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-22 13:44:35 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-22 13:44:35 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-22 13:44:35 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:35 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-22 13:44:35 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-22 13:44:35 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-22 13:44:35 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:35 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-22 13:44:35 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-22 13:44:35 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-22 13:44:35 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-22 13:44:35 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-22 13:44:35 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-22 13:44:35 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:35 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-22 13:44:35 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-22 13:44:35 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-22 13:44:35 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-22 13:44:35 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-22 13:44:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 13:44:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-22 13:44:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-22 13:44:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 13:44:35 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-22 13:44:35 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-22 13:44:35 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-22 13:44:35 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-22 13:44:35 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:35 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-22 13:44:35 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-22 13:44:35 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:35 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-22 13:44:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-22 13:44:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-22 13:44:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-22 13:44:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-22 13:44:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-22 13:44:36 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-22 13:44:36 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-22 13:44:36 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-22 13:44:36 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-22 13:44:36 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-22 13:44:36 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 13:44:36 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-22 13:44:36 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-22 13:44:36 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-22 13:44:36 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-22 13:44:36 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-22 13:44:36 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-22 13:44:36 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-22 13:44:36 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-22 13:44:36 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-22 13:44:36 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-22 13:44:36 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-22 13:44:36 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-22 13:44:36 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-22 13:44:36 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 13:44:36 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-22 13:44:36 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 13:44:36 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 13:44:36 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-22 13:44:36 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-22 13:44:36 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-22 13:44:36 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 13:44:36 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-22 13:44:36 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 13:44:36 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 13:44:36 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-22 13:44:36 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-22 13:44:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-22 13:44:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-22 13:44:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-22 13:44:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-22 13:44:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 13:44:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-22 13:44:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-22 13:44:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-22 13:44:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-22 13:44:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-22 13:44:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-22 13:44:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-22 13:44:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-22 13:44:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-22 13:44:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-22 13:44:36 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-22 13:44:36 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-22 13:44:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-22 13:44:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-22 13:44:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-22 13:44:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-22 13:44:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-22 13:44:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-22 13:44:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-22 13:44:36 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 13:44:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-22 13:44:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-22 13:44:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-22 13:44:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-22 13:44:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-22 13:44:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-22 13:44:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-22 13:44:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-22 13:44:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-22 13:44:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-22 13:44:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-22 13:44:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-22 13:44:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-22 13:44:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-22 13:44:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-22 13:44:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-22 13:44:36 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-22 13:44:36 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 13:44:36 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 13:44:36 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 13:44:36 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-22 13:44:36 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-22 13:44:36 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-22 13:44:36 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-22 13:44:36 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-22 13:44:36 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 13:44:36 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-22 13:44:36 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-22 13:44:36 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-22 13:44:36 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-22 13:44:36 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 13:44:36 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 13:44:36 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 13:44:36 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 13:44:36 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-22 13:44:36 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 13:44:36 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 13:44:36 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-22 13:44:36 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-22 13:44:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 13:44:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-22 13:44:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-22 13:44:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-22 13:44:36 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-22 13:44:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-22 13:44:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-22 13:44:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 13:44:37 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 13:44:08 CST 2019]; root of context hierarchy
2019-05-22 13:44:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 13:44:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 13:44:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 13:44:38 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-22 13:44:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-22 13:44:40 -Registering beans for JMX exposure on startup
2019-05-22 13:44:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-22 13:44:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-22 13:44:40 -Starting beans in phase 2147483647
2019-05-22 13:44:40 -Context refreshed
2019-05-22 13:44:40 -Found 1 custom documentation plugin(s)
2019-05-22 13:44:40 -Scanning for api listing references
2019-05-22 13:44:41 -Generating unique operation named: getCountDUsingPOST_1
2019-05-22 13:44:41 -Generating unique operation named: removeUsingPOST_1
2019-05-22 13:44:41 -Generating unique operation named: addUsingGET_1
2019-05-22 13:44:41 -Generating unique operation named: editUsingGET_1
2019-05-22 13:44:41 -Generating unique operation named: listUsingGET_1
2019-05-22 13:44:41 -Generating unique operation named: removeUsingPOST_2
2019-05-22 13:44:41 -Generating unique operation named: removeUsingPOST_3
2019-05-22 13:44:41 -Generating unique operation named: saveUsingPOST_1
2019-05-22 13:44:41 -Generating unique operation named: updateUsingGET_1
2019-05-22 13:44:41 -Generating unique operation named: updateUsingHEAD_1
2019-05-22 13:44:41 -Generating unique operation named: updateUsingPOST_1
2019-05-22 13:44:41 -Generating unique operation named: updateUsingPUT_1
2019-05-22 13:44:41 -Generating unique operation named: updateUsingPATCH_1
2019-05-22 13:44:41 -Generating unique operation named: updateUsingDELETE_1
2019-05-22 13:44:41 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-22 13:44:41 -Generating unique operation named: updateUsingTRACE_1
2019-05-22 13:44:41 -Generating unique operation named: addUsingGET_2
2019-05-22 13:44:41 -Generating unique operation named: editUsingGET_2
2019-05-22 13:44:41 -Generating unique operation named: listUsingGET_2
2019-05-22 13:44:41 -Generating unique operation named: removeUsingPOST_4
2019-05-22 13:44:41 -Generating unique operation named: removeUsingPOST_5
2019-05-22 13:44:41 -Generating unique operation named: saveUsingPOST_2
2019-05-22 13:44:41 -Generating unique operation named: updateUsingPOST_2
2019-05-22 13:44:41 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-22 13:44:41 -Generating unique operation named: addUsingGET_3
2019-05-22 13:44:41 -Generating unique operation named: editUsingGET_3
2019-05-22 13:44:41 -Generating unique operation named: listUsingGET_3
2019-05-22 13:44:41 -Generating unique operation named: removeUsingPOST_6
2019-05-22 13:44:41 -Generating unique operation named: removeUsingPOST_7
2019-05-22 13:44:41 -Generating unique operation named: saveUsingPOST_3
2019-05-22 13:44:41 -Generating unique operation named: updateUsingGET_2
2019-05-22 13:44:41 -Generating unique operation named: updateUsingHEAD_2
2019-05-22 13:44:41 -Generating unique operation named: updateUsingPOST_3
2019-05-22 13:44:41 -Generating unique operation named: updateUsingPUT_2
2019-05-22 13:44:41 -Generating unique operation named: updateUsingPATCH_2
2019-05-22 13:44:41 -Generating unique operation named: updateUsingDELETE_2
2019-05-22 13:44:41 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-22 13:44:41 -Generating unique operation named: updateUsingTRACE_2
2019-05-22 13:44:41 -Generating unique operation named: addUsingGET_4
2019-05-22 13:44:41 -Generating unique operation named: editUsingGET_4
2019-05-22 13:44:41 -Generating unique operation named: listUsingGET_4
2019-05-22 13:44:41 -Generating unique operation named: removeUsingPOST_8
2019-05-22 13:44:41 -Generating unique operation named: removeUsingPOST_9
2019-05-22 13:44:41 -Generating unique operation named: saveUsingPOST_4
2019-05-22 13:44:41 -Generating unique operation named: updateUsingGET_3
2019-05-22 13:44:41 -Generating unique operation named: updateUsingHEAD_3
2019-05-22 13:44:41 -Generating unique operation named: updateUsingPOST_4
2019-05-22 13:44:41 -Generating unique operation named: updateUsingPUT_3
2019-05-22 13:44:41 -Generating unique operation named: updateUsingPATCH_3
2019-05-22 13:44:41 -Generating unique operation named: updateUsingDELETE_3
2019-05-22 13:44:41 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-22 13:44:41 -Generating unique operation named: updateUsingTRACE_3
2019-05-22 13:44:41 -Generating unique operation named: ElecUsingGET_1
2019-05-22 13:44:41 -Generating unique operation named: addUsingGET_5
2019-05-22 13:44:41 -Generating unique operation named: editUsingGET_5
2019-05-22 13:44:41 -Generating unique operation named: listUsingGET_5
2019-05-22 13:44:42 -Generating unique operation named: removeUsingPOST_10
2019-05-22 13:44:42 -Generating unique operation named: removeUsingPOST_11
2019-05-22 13:44:42 -Generating unique operation named: saveUsingPOST_5
2019-05-22 13:44:42 -Generating unique operation named: updateUsingGET_4
2019-05-22 13:44:42 -Generating unique operation named: updateUsingHEAD_4
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPOST_5
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPUT_4
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPATCH_4
2019-05-22 13:44:42 -Generating unique operation named: updateUsingDELETE_4
2019-05-22 13:44:42 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-22 13:44:42 -Generating unique operation named: updateUsingTRACE_4
2019-05-22 13:44:42 -Generating unique operation named: editUsingGET_6
2019-05-22 13:44:42 -Generating unique operation named: listUsingGET_6
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPOST_6
2019-05-22 13:44:42 -Generating unique operation named: addUsingGET_6
2019-05-22 13:44:42 -Generating unique operation named: editUsingGET_7
2019-05-22 13:44:42 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-22 13:44:42 -Generating unique operation named: listUsingGET_7
2019-05-22 13:44:42 -Generating unique operation named: removeUsingPOST_12
2019-05-22 13:44:42 -Generating unique operation named: removeUsingPOST_13
2019-05-22 13:44:42 -Generating unique operation named: saveUsingPOST_6
2019-05-22 13:44:42 -Generating unique operation named: updateUsingGET_5
2019-05-22 13:44:42 -Generating unique operation named: updateUsingHEAD_5
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPOST_7
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPUT_5
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPATCH_5
2019-05-22 13:44:42 -Generating unique operation named: updateUsingDELETE_5
2019-05-22 13:44:42 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-22 13:44:42 -Generating unique operation named: updateUsingTRACE_5
2019-05-22 13:44:42 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-22 13:44:42 -Generating unique operation named: addUsingGET_7
2019-05-22 13:44:42 -Generating unique operation named: editUsingGET_8
2019-05-22 13:44:42 -Generating unique operation named: listUsingGET_8
2019-05-22 13:44:42 -Generating unique operation named: removeUsingPOST_14
2019-05-22 13:44:42 -Generating unique operation named: removeUsingPOST_15
2019-05-22 13:44:42 -Generating unique operation named: saveUsingPOST_7
2019-05-22 13:44:42 -Generating unique operation named: updateUsingGET_6
2019-05-22 13:44:42 -Generating unique operation named: updateUsingHEAD_6
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPOST_8
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPUT_6
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPATCH_6
2019-05-22 13:44:42 -Generating unique operation named: updateUsingDELETE_6
2019-05-22 13:44:42 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-22 13:44:42 -Generating unique operation named: updateUsingTRACE_6
2019-05-22 13:44:42 -Generating unique operation named: addUsingGET_8
2019-05-22 13:44:42 -Generating unique operation named: editUsingGET_9
2019-05-22 13:44:42 -Generating unique operation named: listUsingGET_9
2019-05-22 13:44:42 -Generating unique operation named: removeUsingPOST_16
2019-05-22 13:44:42 -Generating unique operation named: removeUsingPOST_17
2019-05-22 13:44:42 -Generating unique operation named: saveUsingPOST_8
2019-05-22 13:44:42 -Generating unique operation named: updateUsingGET_7
2019-05-22 13:44:42 -Generating unique operation named: updateUsingHEAD_7
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPOST_9
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPUT_7
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPATCH_7
2019-05-22 13:44:42 -Generating unique operation named: updateUsingDELETE_7
2019-05-22 13:44:42 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-22 13:44:42 -Generating unique operation named: updateUsingTRACE_7
2019-05-22 13:44:42 -Generating unique operation named: addUsingGET_9
2019-05-22 13:44:42 -Generating unique operation named: editUsingGET_10
2019-05-22 13:44:42 -Generating unique operation named: infoUsingGET_1
2019-05-22 13:44:42 -Generating unique operation named: infoUsingHEAD_1
2019-05-22 13:44:42 -Generating unique operation named: infoUsingPOST_1
2019-05-22 13:44:42 -Generating unique operation named: infoUsingPUT_1
2019-05-22 13:44:42 -Generating unique operation named: infoUsingPATCH_1
2019-05-22 13:44:42 -Generating unique operation named: infoUsingDELETE_1
2019-05-22 13:44:42 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-22 13:44:42 -Generating unique operation named: infoUsingTRACE_1
2019-05-22 13:44:42 -Generating unique operation named: listUsingGET_10
2019-05-22 13:44:42 -Generating unique operation named: removeUsingPOST_18
2019-05-22 13:44:42 -Generating unique operation named: removeUsingPOST_19
2019-05-22 13:44:42 -Generating unique operation named: saveUsingPOST_9
2019-05-22 13:44:42 -Generating unique operation named: updateUsingPOST_10
2019-05-22 13:44:42 -Generating unique operation named: listUsingGET_11
2019-05-22 13:44:42 -Generating unique operation named: removeUsingPOST_20
2019-05-22 13:44:42 -Generating unique operation named: welcomeUsingGET_1
2019-05-22 13:44:42 -Generating unique operation named: addUsingGET_10
2019-05-22 13:44:42 -Generating unique operation named: editUsingGET_11
2019-05-22 13:44:43 -Generating unique operation named: listUsingGET_12
2019-05-22 13:44:43 -Generating unique operation named: removeUsingPOST_21
2019-05-22 13:44:43 -Generating unique operation named: saveUsingPOST_10
2019-05-22 13:44:43 -Generating unique operation named: treeUsingGET_1
2019-05-22 13:44:43 -Generating unique operation named: treeUsingGET_2
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPOST_11
2019-05-22 13:44:43 -Generating unique operation named: editUsingGET_12
2019-05-22 13:44:43 -Generating unique operation named: addUsingGET_11
2019-05-22 13:44:43 -Generating unique operation named: editUsingGET_13
2019-05-22 13:44:43 -Generating unique operation named: listUsingGET_13
2019-05-22 13:44:43 -Generating unique operation named: removeUsingPOST_22
2019-05-22 13:44:43 -Generating unique operation named: removeUsingPOST_23
2019-05-22 13:44:43 -Generating unique operation named: saveUsingPOST_11
2019-05-22 13:44:43 -Generating unique operation named: updateUsingGET_8
2019-05-22 13:44:43 -Generating unique operation named: updateUsingHEAD_8
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPOST_12
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPUT_8
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPATCH_8
2019-05-22 13:44:43 -Generating unique operation named: updateUsingDELETE_8
2019-05-22 13:44:43 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-22 13:44:43 -Generating unique operation named: updateUsingTRACE_8
2019-05-22 13:44:43 -Generating unique operation named: addUsingGET_12
2019-05-22 13:44:43 -Generating unique operation named: editUsingGET_14
2019-05-22 13:44:43 -Generating unique operation named: listUsingGET_14
2019-05-22 13:44:43 -Generating unique operation named: removeUsingPOST_24
2019-05-22 13:44:43 -Generating unique operation named: removeUsingPOST_25
2019-05-22 13:44:43 -Generating unique operation named: saveUsingPOST_12
2019-05-22 13:44:43 -Generating unique operation named: updateUsingGET_9
2019-05-22 13:44:43 -Generating unique operation named: updateUsingHEAD_9
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPOST_13
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPUT_9
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPATCH_9
2019-05-22 13:44:43 -Generating unique operation named: updateUsingDELETE_9
2019-05-22 13:44:43 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-22 13:44:43 -Generating unique operation named: updateUsingTRACE_9
2019-05-22 13:44:43 -Generating unique operation named: addUsingGET_13
2019-05-22 13:44:43 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-22 13:44:43 -Generating unique operation named: editUsingGET_15
2019-05-22 13:44:43 -Generating unique operation named: listUsingGET_15
2019-05-22 13:44:43 -Generating unique operation named: saveUsingPOST_13
2019-05-22 13:44:43 -Generating unique operation named: saveUsingPOST_14
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPOST_14
2019-05-22 13:44:43 -Generating unique operation named: listUsingGET_16
2019-05-22 13:44:43 -Generating unique operation named: listUsingHEAD_1
2019-05-22 13:44:43 -Generating unique operation named: listUsingPOST_1
2019-05-22 13:44:43 -Generating unique operation named: listUsingPUT_1
2019-05-22 13:44:43 -Generating unique operation named: listUsingPATCH_1
2019-05-22 13:44:43 -Generating unique operation named: listUsingDELETE_1
2019-05-22 13:44:43 -Generating unique operation named: listUsingOPTIONS_1
2019-05-22 13:44:43 -Generating unique operation named: listUsingTRACE_1
2019-05-22 13:44:43 -Generating unique operation named: countDDUsingGET_1
2019-05-22 13:44:43 -Generating unique operation named: exportDDUsingGET_1
2019-05-22 13:44:43 -Generating unique operation named: addUsingGET_14
2019-05-22 13:44:43 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-22 13:44:43 -Generating unique operation named: editUsingGET_16
2019-05-22 13:44:43 -Generating unique operation named: listUsingGET_17
2019-05-22 13:44:43 -Generating unique operation named: removeUsingPOST_26
2019-05-22 13:44:43 -Generating unique operation named: saveUsingPOST_15
2019-05-22 13:44:43 -Generating unique operation named: treeUsingGET_3
2019-05-22 13:44:43 -Generating unique operation named: treeViewUsingGET_1
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPOST_15
2019-05-22 13:44:43 -Generating unique operation named: addUsingGET_15
2019-05-22 13:44:43 -Generating unique operation named: editUsingGET_17
2019-05-22 13:44:43 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-22 13:44:43 -Generating unique operation named: listUsingGET_18
2019-05-22 13:44:43 -Generating unique operation named: removeUsingPOST_27
2019-05-22 13:44:43 -Generating unique operation named: removeUsingPOST_28
2019-05-22 13:44:43 -Generating unique operation named: saveUsingPOST_16
2019-05-22 13:44:43 -Generating unique operation named: updateUsingGET_10
2019-05-22 13:44:43 -Generating unique operation named: updateUsingHEAD_10
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPOST_16
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPUT_10
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPATCH_10
2019-05-22 13:44:43 -Generating unique operation named: updateUsingDELETE_10
2019-05-22 13:44:43 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-22 13:44:43 -Generating unique operation named: updateUsingTRACE_10
2019-05-22 13:44:43 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-22 13:44:43 -Generating unique operation named: addUsingGET_16
2019-05-22 13:44:43 -Generating unique operation named: editUsingGET_18
2019-05-22 13:44:43 -Generating unique operation named: listUsingGET_19
2019-05-22 13:44:43 -Generating unique operation named: removeUsingPOST_29
2019-05-22 13:44:43 -Generating unique operation named: removeUsingPOST_30
2019-05-22 13:44:43 -Generating unique operation named: saveUsingPOST_17
2019-05-22 13:44:43 -Generating unique operation named: updateUsingGET_11
2019-05-22 13:44:43 -Generating unique operation named: updateUsingHEAD_11
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPOST_17
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPUT_11
2019-05-22 13:44:43 -Generating unique operation named: updateUsingPATCH_11
2019-05-22 13:44:43 -Generating unique operation named: updateUsingDELETE_11
2019-05-22 13:44:43 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-22 13:44:43 -Generating unique operation named: updateUsingTRACE_11
2019-05-22 13:44:43 -Generating unique operation named: addUsingGET_17
2019-05-22 13:44:43 -Generating unique operation named: editUsingGET_19
2019-05-22 13:44:43 -Generating unique operation named: listUsingGET_20
2019-05-22 13:44:43 -Generating unique operation named: removeUsingPOST_31
2019-05-22 13:44:43 -Generating unique operation named: removeUsingPOST_32
2019-05-22 13:44:44 -Generating unique operation named: saveUsingPOST_18
2019-05-22 13:44:44 -Generating unique operation named: updateUsingGET_12
2019-05-22 13:44:44 -Generating unique operation named: updateUsingHEAD_12
2019-05-22 13:44:44 -Generating unique operation named: updateUsingPOST_18
2019-05-22 13:44:44 -Generating unique operation named: updateUsingPUT_12
2019-05-22 13:44:44 -Generating unique operation named: updateUsingPATCH_12
2019-05-22 13:44:44 -Generating unique operation named: updateUsingDELETE_12
2019-05-22 13:44:44 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-22 13:44:44 -Generating unique operation named: updateUsingTRACE_12
2019-05-22 13:44:44 -Starting Quartz Scheduler now
2019-05-22 13:44:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-22 13:44:44 -Starting...
2019-05-22 13:44:44 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-22 13:44:44 -Started.
2019-05-22 13:44:44 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-22 13:44:44 -Using a shared selector for servlet write/read
2019-05-22 13:44:44 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-22 13:44:44 -Started BootdoApplication in 36.826 seconds (JVM running for 37.613)
2019-05-22 13:44:44 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-22 13:44:44 -==> Parameters: 
2019-05-22 13:44:44 -<==      Total: 1
2019-05-22 13:45:13 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-22 13:45:13 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-22 13:45:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 49 ms
2019-05-22 13:45:13 -Enabling session validation scheduler...
2019-05-22 13:45:13 -请求地址 : http://localhost:8081/login;JSESSIONID=a8d64160-e695-4cda-8da1-0b98e1d4336c
2019-05-22 13:45:13 -HTTP METHOD : GET
2019-05-22 13:45:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 13:45:13 -参数 : [{}]
2019-05-22 13:45:13 -耗时 : 6
2019-05-22 13:45:13 -返回值 : login
2019-05-22 13:45:15 -请求地址 : http://localhost:8081/getVerify
2019-05-22 13:45:15 -HTTP METHOD : GET
2019-05-22 13:45:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 13:45:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@54bef15d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@11bc75ae]
2019-05-22 13:45:21 -6671
2019-05-22 13:45:21 -耗时 : 5850
2019-05-22 13:45:21 -返回值 : null
2019-05-22 13:45:21 -请求地址 : http://localhost:8081/login
2019-05-22 13:45:21 -HTTP METHOD : GET
2019-05-22 13:45:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 13:45:21 -参数 : [{}]
2019-05-22 13:45:21 -耗时 : 0
2019-05-22 13:45:21 -返回值 : login
2019-05-22 13:45:25 -请求地址 : http://localhost:8081/login
2019-05-22 13:45:25 -HTTP METHOD : POST
2019-05-22 13:45:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 13:45:25 -参数 : [admin, 111111, 6671, org.apache.shiro.web.servlet.ShiroHttpServletRequest@186b7379]
2019-05-22 13:45:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 13:45:25 -==> Parameters: admin(String)
2019-05-22 13:45:25 -<==      Total: 1
2019-05-22 13:45:25 -耗时 : 387
2019-05-22 13:45:25 -返回值 : {msg=操作成功, code=0}
2019-05-22 13:45:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-22 13:45:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 13:45:25 -==> Parameters: 1(Long), admin(String), 登录(String), 387(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 13:45:25.84(Timestamp)
2019-05-22 13:45:26 -请求地址 : http://localhost:8081/index
2019-05-22 13:45:26 -HTTP METHOD : GET
2019-05-22 13:45:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 13:45:26 -参数 : [{}]
2019-05-22 13:45:26 -<==    Updates: 1
2019-05-22 13:45:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 13:45:26 -==> Parameters: 1(Long)
2019-05-22 13:45:26 -<==      Total: 49
2019-05-22 13:45:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 13:45:26 -==> Parameters: 138(Long)
2019-05-22 13:45:26 -<==      Total: 1
2019-05-22 13:45:26 -耗时 : 566
2019-05-22 13:45:26 -返回值 : index_v1
2019-05-22 13:45:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 13:45:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 566(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 13:45:26.796(Timestamp)
2019-05-22 13:45:26 -<==    Updates: 1
2019-05-22 13:45:27 -请求地址 : http://localhost:8081/main
2019-05-22 13:45:27 -HTTP METHOD : GET
2019-05-22 13:45:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 13:45:27 -参数 : []
2019-05-22 13:45:27 -耗时 : 1
2019-05-22 13:45:27 -返回值 : main
2019-05-22 13:45:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 13:45:27 -HTTP METHOD : GET
2019-05-22 13:45:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 13:45:27 -参数 : []
2019-05-22 13:45:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 13:45:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 13:45:27 -<==      Total: 0
2019-05-22 13:45:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 13:45:27 -==> Parameters: 1(Long), 0(String)
2019-05-22 13:45:27 -<==      Total: 1
2019-05-22 13:45:27 -耗时 : 94
2019-05-22 13:45:27 -返回值 : com.bootdo.common.utils.PageUtils@627ec7d1
2019-05-22 13:45:28 -请求地址 : http://localhost:8081/main
2019-05-22 13:45:28 -HTTP METHOD : GET
2019-05-22 13:45:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 13:45:28 -参数 : []
2019-05-22 13:45:28 -耗时 : 1
2019-05-22 13:45:28 -返回值 : main
2019-05-22 13:45:33 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/818/ey7r_hwg/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-22 13:45:33 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-22 13:45:37 -WebSocketSession[1 current WS(0)-HttpStream(0)-HttpPoll(1), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-05-22 13:45:55 -请求地址 : http://localhost:8081/index
2019-05-22 13:45:55 -HTTP METHOD : GET
2019-05-22 13:45:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 13:45:55 -参数 : [{}]
2019-05-22 13:45:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 13:45:55 -==> Parameters: 1(Long)
2019-05-22 13:45:55 -<==      Total: 49
2019-05-22 13:45:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 13:45:55 -==> Parameters: 138(Long)
2019-05-22 13:45:55 -<==      Total: 1
2019-05-22 13:45:55 -耗时 : 19
2019-05-22 13:45:55 -返回值 : index_v1
2019-05-22 13:45:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 13:45:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 13:45:55.245(Timestamp)
2019-05-22 13:45:55 -请求地址 : http://localhost:8081/main
2019-05-22 13:45:55 -HTTP METHOD : GET
2019-05-22 13:45:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 13:45:55 -参数 : []
2019-05-22 13:45:55 -耗时 : 0
2019-05-22 13:45:55 -返回值 : main
2019-05-22 13:45:55 -<==    Updates: 1
2019-05-22 13:45:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 13:45:55 -HTTP METHOD : GET
2019-05-22 13:45:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 13:45:55 -参数 : []
2019-05-22 13:45:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 13:45:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 13:45:55 -<==      Total: 0
2019-05-22 13:45:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 13:45:55 -==> Parameters: 1(Long), 0(String)
2019-05-22 13:45:55 -<==      Total: 1
2019-05-22 13:45:55 -耗时 : 7
2019-05-22 13:45:55 -返回值 : com.bootdo.common.utils.PageUtils@7046bc13
2019-05-22 13:45:55 -请求地址 : http://localhost:8081/main
2019-05-22 13:45:55 -HTTP METHOD : GET
2019-05-22 13:45:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 13:45:55 -参数 : []
2019-05-22 13:45:55 -耗时 : 1
2019-05-22 13:45:55 -返回值 : main
2019-05-22 13:46:24 -请求地址 : http://localhost:8081/login;JSESSIONID=844448e2-b6f0-45b0-ab85-59d03e56dd86
2019-05-22 13:46:24 -HTTP METHOD : GET
2019-05-22 13:46:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 13:46:24 -参数 : [{}]
2019-05-22 13:46:24 -耗时 : 0
2019-05-22 13:46:24 -返回值 : login
2019-05-22 13:46:24 -请求地址 : http://localhost:8081/login;JSESSIONID=844448e2-b6f0-45b0-ab85-59d03e56dd86
2019-05-22 13:46:24 -HTTP METHOD : GET
2019-05-22 13:46:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 13:46:24 -参数 : [{}]
2019-05-22 13:46:24 -耗时 : 0
2019-05-22 13:46:24 -返回值 : login
2019-05-22 13:46:24 -请求地址 : http://localhost:8081/getVerify
2019-05-22 13:46:24 -HTTP METHOD : GET
2019-05-22 13:46:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 13:46:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@672debfd, org.apache.shiro.web.servlet.ShiroHttpServletResponse@22ce652f]
2019-05-22 13:46:24 -5038
2019-05-22 13:46:24 -耗时 : 15
2019-05-22 13:46:24 -返回值 : null
2019-05-22 13:46:24 -请求地址 : http://localhost:8081/getVerify
2019-05-22 13:46:24 -HTTP METHOD : GET
2019-05-22 13:46:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 13:46:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@10991ea6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2b3632c0]
2019-05-22 13:46:24 -5352
2019-05-22 13:46:24 -耗时 : 8
2019-05-22 13:46:24 -返回值 : null
2019-05-22 13:46:25 -请求地址 : http://localhost:8081/login
2019-05-22 13:46:25 -HTTP METHOD : GET
2019-05-22 13:46:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 13:46:25 -参数 : [{}]
2019-05-22 13:46:25 -耗时 : 0
2019-05-22 13:46:25 -返回值 : login
2019-05-22 13:46:31 -请求地址 : http://localhost:8081/login
2019-05-22 13:46:31 -HTTP METHOD : POST
2019-05-22 13:46:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 13:46:31 -参数 : [admin, 111111, 5352, org.apache.shiro.web.servlet.ShiroHttpServletRequest@77c35ab4]
2019-05-22 13:46:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 13:46:31 -==> Parameters: admin(String)
2019-05-22 13:46:31 -<==      Total: 1
2019-05-22 13:46:31 -耗时 : 7
2019-05-22 13:46:31 -返回值 : {msg=操作成功, code=0}
2019-05-22 13:46:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 13:46:31 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 13:46:31.417(Timestamp)
2019-05-22 13:46:31 -请求地址 : http://localhost:8081/index
2019-05-22 13:46:31 -HTTP METHOD : GET
2019-05-22 13:46:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 13:46:31 -参数 : [{}]
2019-05-22 13:46:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 13:46:31 -==> Parameters: 1(Long)
2019-05-22 13:46:31 -<==    Updates: 1
2019-05-22 13:46:31 -<==      Total: 49
2019-05-22 13:46:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 13:46:31 -==> Parameters: 138(Long)
2019-05-22 13:46:31 -<==      Total: 1
2019-05-22 13:46:31 -耗时 : 288
2019-05-22 13:46:31 -返回值 : index_v1
2019-05-22 13:46:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 13:46:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 288(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 13:46:31.735(Timestamp)
2019-05-22 13:46:31 -请求地址 : http://localhost:8081/main
2019-05-22 13:46:31 -HTTP METHOD : GET
2019-05-22 13:46:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 13:46:31 -参数 : []
2019-05-22 13:46:31 -耗时 : 1
2019-05-22 13:46:31 -返回值 : main
2019-05-22 13:46:32 -<==    Updates: 1
2019-05-22 13:46:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 13:46:32 -HTTP METHOD : GET
2019-05-22 13:46:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 13:46:32 -参数 : []
2019-05-22 13:46:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 13:46:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 13:46:32 -<==      Total: 0
2019-05-22 13:46:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 13:46:32 -==> Parameters: 1(Long), 0(String)
2019-05-22 13:46:32 -<==      Total: 1
2019-05-22 13:46:32 -耗时 : 93
2019-05-22 13:46:32 -返回值 : com.bootdo.common.utils.PageUtils@4297648e
2019-05-22 13:46:32 -请求地址 : http://localhost:8081/main
2019-05-22 13:46:32 -HTTP METHOD : GET
2019-05-22 13:46:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 13:46:32 -参数 : []
2019-05-22 13:46:32 -耗时 : 0
2019-05-22 13:46:32 -返回值 : main
2019-05-22 13:46:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 13:46:43 -==> Parameters: 1(Long)
2019-05-22 13:46:44 -<==      Total: 93
2019-05-22 13:46:44 -请求地址 : http://localhost:8081/water/water
2019-05-22 13:46:44 -HTTP METHOD : GET
2019-05-22 13:46:44 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-05-22 13:46:44 -参数 : []
2019-05-22 13:46:44 -耗时 : 0
2019-05-22 13:46:44 -返回值 : water/water/water
2019-05-22 13:46:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 13:46:45 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-22 13:46:45 -HTTP METHOD : GET
2019-05-22 13:46:45 -HTTP METHOD : GET
2019-05-22 13:46:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 13:46:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 13:46:45 -参数 : [userType]
2019-05-22 13:46:45 -参数 : [waterType]
2019-05-22 13:46:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 13:46:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 13:46:45 -==> Parameters: waterType(String)
2019-05-22 13:46:45 -==> Parameters: userType(String)
2019-05-22 13:46:45 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 13:46:45 -HTTP METHOD : GET
2019-05-22 13:46:45 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 13:46:45 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-22 13:46:45 -<==      Total: 4
2019-05-22 13:46:45 -耗时 : 78
2019-05-22 13:46:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-05-22 13:46:45 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 13:46:45 -==> Parameters: 0(Integer), 10(Integer)
2019-05-22 13:46:45 -<==      Total: 4
2019-05-22 13:46:45 -耗时 : 187
2019-05-22 13:46:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 13:46:45 -<==      Total: 10
2019-05-22 13:46:45 -==>  Preparing: select count(*) from water 
2019-05-22 13:46:45 -==> Parameters: 
2019-05-22 13:46:45 -<==      Total: 1
2019-05-22 13:46:45 -耗时 : 401
2019-05-22 13:46:45 -返回值 : com.bootdo.common.utils.PageUtils@33c86d9f
2019-05-22 13:46:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 13:46:59 -HTTP METHOD : GET
2019-05-22 13:46:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 13:46:59 -参数 : []
2019-05-22 13:46:59 -耗时 : 1
2019-05-22 13:46:59 -返回值 : system/dept/deptTree
2019-05-22 13:46:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 13:46:59 -HTTP METHOD : GET
2019-05-22 13:46:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 13:46:59 -参数 : []
2019-05-22 13:46:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 13:46:59 -==> Parameters: 
2019-05-22 13:46:59 -<==      Total: 3
2019-05-22 13:46:59 -耗时 : 20
2019-05-22 13:46:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 13:47:01 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 13:47:01 -HTTP METHOD : GET
2019-05-22 13:47:01 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 13:47:01 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2019-03, queryType=1}]
2019-05-22 13:47:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 13:47:01 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 13:47:01 -<==      Total: 7
2019-05-22 13:47:01 -==>  Preparing: select count(*) from water WHERE `create_time` = ? and user_org = ? 
2019-05-22 13:47:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 13:47:01 -<==      Total: 1
2019-05-22 13:47:01 -耗时 : 36
2019-05-22 13:47:01 -返回值 : com.bootdo.common.utils.PageUtils@6a901cc2
2019-05-22 13:47:01 -请求地址 : http://localhost:8081/water/water/list
2019-05-22 13:47:01 -HTTP METHOD : GET
2019-05-22 13:47:01 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-22 13:47:01 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=2, userId=, createTime=2019-03, queryType=1}]
2019-05-22 13:47:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `create_time` = ? and user_org = ? order by id asc limit ?, ? 
2019-05-22 13:47:01 -==> Parameters: 2019-03(String), 2(String), 0(Integer), 10(Integer)
2019-05-22 13:47:01 -<==      Total: 7
2019-05-22 13:47:01 -==>  Preparing: select count(*) from water WHERE `create_time` = ? and user_org = ? 
2019-05-22 13:47:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 13:47:01 -<==      Total: 1
2019-05-22 13:47:01 -耗时 : 13
2019-05-22 13:47:01 -返回值 : com.bootdo.common.utils.PageUtils@78ca9b72
2019-05-22 13:47:13 -请求地址 : http://localhost:8081/water/water/exprotWater
2019-05-22 13:47:13 -HTTP METHOD : GET
2019-05-22 13:47:13 -CLASS_METHOD : com.bootdo.water.controller.WaterController.exprotExcel
2019-05-22 13:47:13 -参数 : [com.bootdo.water.vo.WaterVo@4dc3f52d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1bb6dd62]
2019-05-22 13:47:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `create_time` = ? and user_org = ? 
2019-05-22 13:47:13 -==> Parameters: 2019-03(String), 2(String)
2019-05-22 13:47:13 -<==      Total: 7
2019-05-22 13:47:14 -耗时 : 1012
2019-05-22 13:47:14 -返回值 : null
2019-05-22 19:19:16 -Starting BootdoApplication on PC-201905091110 with PID 25880 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-22 19:19:16 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-22 19:19:16 -The following profiles are active: dev
2019-05-22 19:19:16 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 19:19:16 CST 2019]; root of context hierarchy
2019-05-22 19:19:22 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-22 19:19:25 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:19:25 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:19:26 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:19:27 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:19:27 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:19:27 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-22 19:19:27 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-22 19:19:27 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:19:27 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:19:27 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:19:27 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:19:28 -Tomcat initialized with port(s): 8081 (http)
2019-05-22 19:19:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-22 19:19:28 -Starting service [Tomcat]
2019-05-22 19:19:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-22 19:19:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-22 19:19:28 -Initializing Spring embedded WebApplicationContext
2019-05-22 19:19:28 -Root WebApplicationContext: initialization completed in 12595 ms
2019-05-22 19:19:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-22 19:19:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-22 19:19:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-22 19:19:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-22 19:19:29 -Filter xssFilter was not registered (disabled)
2019-05-22 19:19:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-22 19:19:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-22 19:19:29 -Servlet statViewServlet mapped to [/druid/*]
2019-05-22 19:19:29 -Servlet dispatcherServlet mapped to [/]
2019-05-22 19:19:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 19:19:16 CST 2019]; root of context hierarchy
2019-05-22 19:19:37 -Using default implementation for ThreadExecutor
2019-05-22 19:19:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-22 19:19:37 -Quartz Scheduler v.2.2.1 created.
2019-05-22 19:19:37 -RAMJobStore initialized.
2019-05-22 19:19:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-22 19:19:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-22 19:19:37 -Quartz scheduler version: 2.2.1
2019-05-22 19:19:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@563317c1
2019-05-22 19:19:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-22 19:19:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-22 19:19:47 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-22 19:19:47 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:19:47 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-22 19:19:47 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:19:47 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-22 19:19:47 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-22 19:19:47 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:19:47 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-22 19:19:47 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-22 19:19:47 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:19:47 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-22 19:19:47 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:19:47 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 19:19:47 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-22 19:19:47 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 19:19:47 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-22 19:19:47 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-22 19:19:47 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:19:47 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:19:47 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-22 19:19:47 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-22 19:19:47 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 19:19:47 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 19:19:47 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-22 19:19:47 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-22 19:19:47 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-22 19:19:47 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-22 19:19:47 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-22 19:19:47 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-22 19:19:47 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-22 19:19:47 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-22 19:19:47 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-22 19:19:47 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-22 19:19:47 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-22 19:19:47 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-22 19:19:47 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-22 19:19:47 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-22 19:19:47 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-22 19:19:47 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-22 19:19:47 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-22 19:19:47 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 19:19:47 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 19:19:47 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-22 19:19:47 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-22 19:19:47 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-22 19:19:47 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-22 19:19:47 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-22 19:19:47 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-22 19:19:47 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-22 19:19:47 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-22 19:19:47 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-22 19:19:47 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-22 19:19:47 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-22 19:19:47 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-22 19:19:47 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-22 19:19:47 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-22 19:19:47 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-22 19:19:47 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-22 19:19:47 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 19:19:47 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-22 19:19:47 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-22 19:19:47 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-22 19:19:47 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-22 19:19:47 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-22 19:19:47 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-22 19:19:47 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-22 19:19:47 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-22 19:19:47 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-22 19:19:47 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-22 19:19:47 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-22 19:19:47 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-22 19:19:47 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-22 19:19:47 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-22 19:19:47 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 19:19:47 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-22 19:19:47 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-22 19:19:47 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-22 19:19:47 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 19:19:47 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 19:19:47 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-22 19:19:47 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:47 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-22 19:19:47 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 19:19:47 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-22 19:19:47 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 19:19:47 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 19:19:47 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-22 19:19:47 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-22 19:19:47 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-22 19:19:47 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-22 19:19:47 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-22 19:19:47 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-22 19:19:47 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-22 19:19:47 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-22 19:19:47 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-22 19:19:47 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 19:19:47 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-22 19:19:47 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-22 19:19:47 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-22 19:19:47 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-22 19:19:47 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-22 19:19:47 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-22 19:19:47 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-22 19:19:47 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-22 19:19:47 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-22 19:19:47 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-22 19:19:47 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-22 19:19:47 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-22 19:19:47 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:47 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-22 19:19:47 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-22 19:19:47 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:47 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-22 19:19:47 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:48 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-22 19:19:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-22 19:19:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-22 19:19:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-22 19:19:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-22 19:19:48 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-22 19:19:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-22 19:19:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-22 19:19:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-22 19:19:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 19:19:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-22 19:19:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-22 19:19:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-22 19:19:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-22 19:19:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-22 19:19:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-22 19:19:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-22 19:19:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 19:19:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-22 19:19:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-22 19:19:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-22 19:19:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-22 19:19:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-22 19:19:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-22 19:19:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-22 19:19:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-22 19:19:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-22 19:19:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-22 19:19:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-22 19:19:48 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-22 19:19:48 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-22 19:19:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-22 19:19:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-22 19:19:48 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-22 19:19:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 19:19:48 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-22 19:19:48 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 19:19:48 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 19:19:48 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-22 19:19:48 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 19:19:48 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-22 19:19:48 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-22 19:19:48 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-22 19:19:48 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-22 19:19:48 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-22 19:19:48 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:48 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-22 19:19:48 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:48 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-22 19:19:48 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:48 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 19:19:48 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-22 19:19:48 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-22 19:19:48 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-22 19:19:48 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-22 19:19:48 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 19:19:48 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:19:48 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 19:19:48 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:19:48 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-22 19:19:48 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-22 19:19:48 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 19:19:48 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:19:48 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-22 19:19:48 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 19:19:48 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-22 19:19:48 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-22 19:19:48 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-22 19:19:53 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-22 19:19:56 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-22 19:19:57 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-22 19:20:01 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 19:20:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed May 22 19:19:16 CST 2019]; root of context hierarchy
2019-05-22 19:20:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 19:20:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 19:20:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 19:20:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-22 19:20:09 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-22 19:20:26 -Registering beans for JMX exposure on startup
2019-05-22 19:20:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-22 19:20:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-22 19:20:26 -Starting beans in phase 2147483647
2019-05-22 19:20:26 -Context refreshed
2019-05-22 19:20:26 -Found 1 custom documentation plugin(s)
2019-05-22 19:20:27 -Scanning for api listing references
2019-05-22 19:20:30 -Generating unique operation named: getCountDUsingPOST_1
2019-05-22 19:20:30 -Generating unique operation named: removeUsingPOST_1
2019-05-22 19:20:30 -Generating unique operation named: addUsingGET_1
2019-05-22 19:20:31 -Generating unique operation named: editUsingGET_1
2019-05-22 19:20:31 -Generating unique operation named: listUsingGET_1
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_2
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_3
2019-05-22 19:20:31 -Generating unique operation named: saveUsingPOST_1
2019-05-22 19:20:31 -Generating unique operation named: updateUsingGET_1
2019-05-22 19:20:31 -Generating unique operation named: updateUsingHEAD_1
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPOST_1
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPUT_1
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPATCH_1
2019-05-22 19:20:31 -Generating unique operation named: updateUsingDELETE_1
2019-05-22 19:20:31 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-22 19:20:31 -Generating unique operation named: updateUsingTRACE_1
2019-05-22 19:20:31 -Generating unique operation named: addUsingGET_2
2019-05-22 19:20:31 -Generating unique operation named: editUsingGET_2
2019-05-22 19:20:31 -Generating unique operation named: listUsingGET_2
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_4
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_5
2019-05-22 19:20:31 -Generating unique operation named: saveUsingPOST_2
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPOST_2
2019-05-22 19:20:31 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-22 19:20:31 -Generating unique operation named: addUsingGET_3
2019-05-22 19:20:31 -Generating unique operation named: editUsingGET_3
2019-05-22 19:20:31 -Generating unique operation named: listUsingGET_3
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_6
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_7
2019-05-22 19:20:31 -Generating unique operation named: saveUsingPOST_3
2019-05-22 19:20:31 -Generating unique operation named: updateUsingGET_2
2019-05-22 19:20:31 -Generating unique operation named: updateUsingHEAD_2
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPOST_3
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPUT_2
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPATCH_2
2019-05-22 19:20:31 -Generating unique operation named: updateUsingDELETE_2
2019-05-22 19:20:31 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-22 19:20:31 -Generating unique operation named: updateUsingTRACE_2
2019-05-22 19:20:31 -Generating unique operation named: addUsingGET_4
2019-05-22 19:20:31 -Generating unique operation named: editUsingGET_4
2019-05-22 19:20:31 -Generating unique operation named: listUsingGET_4
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_8
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_9
2019-05-22 19:20:31 -Generating unique operation named: saveUsingPOST_4
2019-05-22 19:20:31 -Generating unique operation named: updateUsingGET_3
2019-05-22 19:20:31 -Generating unique operation named: updateUsingHEAD_3
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPOST_4
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPUT_3
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPATCH_3
2019-05-22 19:20:31 -Generating unique operation named: updateUsingDELETE_3
2019-05-22 19:20:31 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-22 19:20:31 -Generating unique operation named: updateUsingTRACE_3
2019-05-22 19:20:31 -Generating unique operation named: ElecUsingGET_1
2019-05-22 19:20:31 -Generating unique operation named: addUsingGET_5
2019-05-22 19:20:31 -Generating unique operation named: editUsingGET_5
2019-05-22 19:20:31 -Generating unique operation named: listUsingGET_5
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_10
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_11
2019-05-22 19:20:31 -Generating unique operation named: saveUsingPOST_5
2019-05-22 19:20:31 -Generating unique operation named: updateUsingGET_4
2019-05-22 19:20:31 -Generating unique operation named: updateUsingHEAD_4
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPOST_5
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPUT_4
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPATCH_4
2019-05-22 19:20:31 -Generating unique operation named: updateUsingDELETE_4
2019-05-22 19:20:31 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-22 19:20:31 -Generating unique operation named: updateUsingTRACE_4
2019-05-22 19:20:31 -Generating unique operation named: editUsingGET_6
2019-05-22 19:20:31 -Generating unique operation named: listUsingGET_6
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPOST_6
2019-05-22 19:20:31 -Generating unique operation named: addUsingGET_6
2019-05-22 19:20:31 -Generating unique operation named: editUsingGET_7
2019-05-22 19:20:31 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-22 19:20:31 -Generating unique operation named: listUsingGET_7
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_12
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_13
2019-05-22 19:20:31 -Generating unique operation named: saveUsingPOST_6
2019-05-22 19:20:31 -Generating unique operation named: updateUsingGET_5
2019-05-22 19:20:31 -Generating unique operation named: updateUsingHEAD_5
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPOST_7
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPUT_5
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPATCH_5
2019-05-22 19:20:31 -Generating unique operation named: updateUsingDELETE_5
2019-05-22 19:20:31 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-22 19:20:31 -Generating unique operation named: updateUsingTRACE_5
2019-05-22 19:20:31 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-22 19:20:31 -Generating unique operation named: addUsingGET_7
2019-05-22 19:20:31 -Generating unique operation named: editUsingGET_8
2019-05-22 19:20:31 -Generating unique operation named: listUsingGET_8
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_14
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_15
2019-05-22 19:20:31 -Generating unique operation named: saveUsingPOST_7
2019-05-22 19:20:31 -Generating unique operation named: updateUsingGET_6
2019-05-22 19:20:31 -Generating unique operation named: updateUsingHEAD_6
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPOST_8
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPUT_6
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPATCH_6
2019-05-22 19:20:31 -Generating unique operation named: updateUsingDELETE_6
2019-05-22 19:20:31 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-22 19:20:31 -Generating unique operation named: updateUsingTRACE_6
2019-05-22 19:20:31 -Generating unique operation named: addUsingGET_8
2019-05-22 19:20:31 -Generating unique operation named: editUsingGET_9
2019-05-22 19:20:31 -Generating unique operation named: listUsingGET_9
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_16
2019-05-22 19:20:31 -Generating unique operation named: removeUsingPOST_17
2019-05-22 19:20:31 -Generating unique operation named: saveUsingPOST_8
2019-05-22 19:20:31 -Generating unique operation named: updateUsingGET_7
2019-05-22 19:20:31 -Generating unique operation named: updateUsingHEAD_7
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPOST_9
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPUT_7
2019-05-22 19:20:31 -Generating unique operation named: updateUsingPATCH_7
2019-05-22 19:20:31 -Generating unique operation named: updateUsingDELETE_7
2019-05-22 19:20:31 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-22 19:20:31 -Generating unique operation named: updateUsingTRACE_7
2019-05-22 19:20:32 -Generating unique operation named: addUsingGET_9
2019-05-22 19:20:32 -Generating unique operation named: editUsingGET_10
2019-05-22 19:20:32 -Generating unique operation named: infoUsingGET_1
2019-05-22 19:20:32 -Generating unique operation named: infoUsingHEAD_1
2019-05-22 19:20:32 -Generating unique operation named: infoUsingPOST_1
2019-05-22 19:20:32 -Generating unique operation named: infoUsingPUT_1
2019-05-22 19:20:32 -Generating unique operation named: infoUsingPATCH_1
2019-05-22 19:20:32 -Generating unique operation named: infoUsingDELETE_1
2019-05-22 19:20:32 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-22 19:20:32 -Generating unique operation named: infoUsingTRACE_1
2019-05-22 19:20:32 -Generating unique operation named: listUsingGET_10
2019-05-22 19:20:32 -Generating unique operation named: removeUsingPOST_18
2019-05-22 19:20:32 -Generating unique operation named: removeUsingPOST_19
2019-05-22 19:20:32 -Generating unique operation named: saveUsingPOST_9
2019-05-22 19:20:32 -Generating unique operation named: updateUsingPOST_10
2019-05-22 19:20:32 -Generating unique operation named: listUsingGET_11
2019-05-22 19:20:32 -Generating unique operation named: removeUsingPOST_20
2019-05-22 19:20:32 -Generating unique operation named: welcomeUsingGET_1
2019-05-22 19:20:32 -Generating unique operation named: addUsingGET_10
2019-05-22 19:20:32 -Generating unique operation named: editUsingGET_11
2019-05-22 19:20:32 -Generating unique operation named: listUsingGET_12
2019-05-22 19:20:32 -Generating unique operation named: removeUsingPOST_21
2019-05-22 19:20:32 -Generating unique operation named: saveUsingPOST_10
2019-05-22 19:20:32 -Generating unique operation named: treeUsingGET_1
2019-05-22 19:20:32 -Generating unique operation named: treeUsingGET_2
2019-05-22 19:20:32 -Generating unique operation named: updateUsingPOST_11
2019-05-22 19:20:32 -Generating unique operation named: editUsingGET_12
2019-05-22 19:20:32 -Generating unique operation named: addUsingGET_11
2019-05-22 19:20:32 -Generating unique operation named: editUsingGET_13
2019-05-22 19:20:32 -Generating unique operation named: listUsingGET_13
2019-05-22 19:20:32 -Generating unique operation named: removeUsingPOST_22
2019-05-22 19:20:32 -Generating unique operation named: removeUsingPOST_23
2019-05-22 19:20:32 -Generating unique operation named: saveUsingPOST_11
2019-05-22 19:20:32 -Generating unique operation named: updateUsingGET_8
2019-05-22 19:20:32 -Generating unique operation named: updateUsingHEAD_8
2019-05-22 19:20:32 -Generating unique operation named: updateUsingPOST_12
2019-05-22 19:20:32 -Generating unique operation named: updateUsingPUT_8
2019-05-22 19:20:32 -Generating unique operation named: updateUsingPATCH_8
2019-05-22 19:20:32 -Generating unique operation named: updateUsingDELETE_8
2019-05-22 19:20:32 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-22 19:20:32 -Generating unique operation named: updateUsingTRACE_8
2019-05-22 19:20:32 -Generating unique operation named: addUsingGET_12
2019-05-22 19:20:32 -Generating unique operation named: editUsingGET_14
2019-05-22 19:20:32 -Generating unique operation named: listUsingGET_14
2019-05-22 19:20:32 -Generating unique operation named: removeUsingPOST_24
2019-05-22 19:20:32 -Generating unique operation named: removeUsingPOST_25
2019-05-22 19:20:32 -Generating unique operation named: saveUsingPOST_12
2019-05-22 19:20:32 -Generating unique operation named: updateUsingGET_9
2019-05-22 19:20:32 -Generating unique operation named: updateUsingHEAD_9
2019-05-22 19:20:32 -Generating unique operation named: updateUsingPOST_13
2019-05-22 19:20:32 -Generating unique operation named: updateUsingPUT_9
2019-05-22 19:20:32 -Generating unique operation named: updateUsingPATCH_9
2019-05-22 19:20:32 -Generating unique operation named: updateUsingDELETE_9
2019-05-22 19:20:32 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-22 19:20:32 -Generating unique operation named: updateUsingTRACE_9
2019-05-22 19:20:32 -Generating unique operation named: addUsingGET_13
2019-05-22 19:20:32 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-22 19:20:32 -Generating unique operation named: editUsingGET_15
2019-05-22 19:20:33 -Generating unique operation named: listUsingGET_15
2019-05-22 19:20:33 -Generating unique operation named: saveUsingPOST_13
2019-05-22 19:20:33 -Generating unique operation named: saveUsingPOST_14
2019-05-22 19:20:33 -Generating unique operation named: updateUsingPOST_14
2019-05-22 19:20:33 -Generating unique operation named: listUsingGET_16
2019-05-22 19:20:33 -Generating unique operation named: listUsingHEAD_1
2019-05-22 19:20:33 -Generating unique operation named: listUsingPOST_1
2019-05-22 19:20:33 -Generating unique operation named: listUsingPUT_1
2019-05-22 19:20:33 -Generating unique operation named: listUsingPATCH_1
2019-05-22 19:20:33 -Generating unique operation named: listUsingDELETE_1
2019-05-22 19:20:33 -Generating unique operation named: listUsingOPTIONS_1
2019-05-22 19:20:33 -Generating unique operation named: listUsingTRACE_1
2019-05-22 19:20:33 -Generating unique operation named: countDDUsingGET_1
2019-05-22 19:20:33 -Generating unique operation named: exportDDUsingGET_1
2019-05-22 19:20:34 -Generating unique operation named: addUsingGET_14
2019-05-22 19:20:34 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-22 19:20:34 -Generating unique operation named: editUsingGET_16
2019-05-22 19:20:34 -Generating unique operation named: listUsingGET_17
2019-05-22 19:20:34 -Generating unique operation named: removeUsingPOST_26
2019-05-22 19:20:34 -Generating unique operation named: saveUsingPOST_15
2019-05-22 19:20:34 -Generating unique operation named: treeUsingGET_3
2019-05-22 19:20:34 -Generating unique operation named: treeViewUsingGET_1
2019-05-22 19:20:34 -Generating unique operation named: updateUsingPOST_15
2019-05-22 19:20:34 -Generating unique operation named: addUsingGET_15
2019-05-22 19:20:34 -Generating unique operation named: editUsingGET_17
2019-05-22 19:20:34 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-22 19:20:34 -Generating unique operation named: listUsingGET_18
2019-05-22 19:20:34 -Generating unique operation named: removeUsingPOST_27
2019-05-22 19:20:34 -Generating unique operation named: removeUsingPOST_28
2019-05-22 19:20:34 -Generating unique operation named: saveUsingPOST_16
2019-05-22 19:20:34 -Generating unique operation named: updateUsingGET_10
2019-05-22 19:20:34 -Generating unique operation named: updateUsingHEAD_10
2019-05-22 19:20:34 -Generating unique operation named: updateUsingPOST_16
2019-05-22 19:20:34 -Generating unique operation named: updateUsingPUT_10
2019-05-22 19:20:34 -Generating unique operation named: updateUsingPATCH_10
2019-05-22 19:20:34 -Generating unique operation named: updateUsingDELETE_10
2019-05-22 19:20:34 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-22 19:20:34 -Generating unique operation named: updateUsingTRACE_10
2019-05-22 19:20:34 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-22 19:20:34 -Generating unique operation named: addUsingGET_16
2019-05-22 19:20:34 -Generating unique operation named: editUsingGET_18
2019-05-22 19:20:34 -Generating unique operation named: listUsingGET_19
2019-05-22 19:20:34 -Generating unique operation named: removeUsingPOST_29
2019-05-22 19:20:34 -Generating unique operation named: removeUsingPOST_30
2019-05-22 19:20:34 -Generating unique operation named: saveUsingPOST_17
2019-05-22 19:20:34 -Generating unique operation named: updateUsingGET_11
2019-05-22 19:20:34 -Generating unique operation named: updateUsingHEAD_11
2019-05-22 19:20:34 -Generating unique operation named: updateUsingPOST_17
2019-05-22 19:20:34 -Generating unique operation named: updateUsingPUT_11
2019-05-22 19:20:34 -Generating unique operation named: updateUsingPATCH_11
2019-05-22 19:20:34 -Generating unique operation named: updateUsingDELETE_11
2019-05-22 19:20:34 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-22 19:20:34 -Generating unique operation named: updateUsingTRACE_11
2019-05-22 19:20:34 -Generating unique operation named: addUsingGET_17
2019-05-22 19:20:34 -Generating unique operation named: editUsingGET_19
2019-05-22 19:20:34 -Generating unique operation named: listUsingGET_20
2019-05-22 19:20:34 -Generating unique operation named: removeUsingPOST_31
2019-05-22 19:20:34 -Generating unique operation named: removeUsingPOST_32
2019-05-22 19:20:34 -Generating unique operation named: saveUsingPOST_18
2019-05-22 19:20:34 -Generating unique operation named: updateUsingGET_12
2019-05-22 19:20:34 -Generating unique operation named: updateUsingHEAD_12
2019-05-22 19:20:34 -Generating unique operation named: updateUsingPOST_18
2019-05-22 19:20:34 -Generating unique operation named: updateUsingPUT_12
2019-05-22 19:20:34 -Generating unique operation named: updateUsingPATCH_12
2019-05-22 19:20:34 -Generating unique operation named: updateUsingDELETE_12
2019-05-22 19:20:34 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-22 19:20:34 -Generating unique operation named: updateUsingTRACE_12
2019-05-22 19:20:34 -Starting Quartz Scheduler now
2019-05-22 19:20:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-22 19:20:34 -Starting...
2019-05-22 19:20:34 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-22 19:20:34 -Started.
2019-05-22 19:20:34 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-22 19:20:36 -Using a shared selector for servlet write/read
2019-05-22 19:20:37 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-22 19:20:37 -Started BootdoApplication in 85.883 seconds (JVM running for 88.367)
2019-05-22 19:20:38 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-22 19:20:40 -==> Parameters: 
2019-05-22 19:20:40 -<==      Total: 1
2019-05-22 19:20:57 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-22 19:22:10 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-22 19:22:10 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-22 19:22:10 -FrameworkServlet 'dispatcherServlet': initialization completed in 56 ms
2019-05-22 19:22:10 -Enabling session validation scheduler...
2019-05-22 19:22:10 -请求地址 : http://localhost:8081/login;JSESSIONID=31f5637f-05cd-4be8-b19b-4fdf9b4b8985
2019-05-22 19:22:10 -HTTP METHOD : GET
2019-05-22 19:22:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 19:22:10 -参数 : [{}]
2019-05-22 19:22:10 -耗时 : 4
2019-05-22 19:22:10 -返回值 : login
2019-05-22 19:22:13 -请求地址 : http://localhost:8081/getVerify
2019-05-22 19:22:13 -HTTP METHOD : GET
2019-05-22 19:22:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 19:22:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2a35c0e3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6f375bc1]
2019-05-22 19:22:18 -5474
2019-05-22 19:22:18 -耗时 : 5137
2019-05-22 19:22:18 -返回值 : null
2019-05-22 19:22:52 -请求地址 : http://localhost:8081/login
2019-05-22 19:22:52 -HTTP METHOD : POST
2019-05-22 19:22:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 19:22:52 -参数 : [admin, 111111, 5474, org.apache.shiro.web.servlet.ShiroHttpServletRequest@380f6f73]
2019-05-22 19:22:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 19:22:53 -==> Parameters: admin(String)
2019-05-22 19:22:53 -<==      Total: 1
2019-05-22 19:22:53 -耗时 : 158
2019-05-22 19:22:53 -返回值 : {msg=操作成功, code=0}
2019-05-22 19:22:53 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-22 19:22:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 19:22:53 -==> Parameters: 1(Long), admin(String), 登录(String), 158(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 19:22:53.186(Timestamp)
2019-05-22 19:22:53 -<==    Updates: 1
2019-05-22 19:22:53 -请求地址 : http://localhost:8081/index
2019-05-22 19:22:53 -HTTP METHOD : GET
2019-05-22 19:22:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 19:22:53 -参数 : [{}]
2019-05-22 19:22:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 19:22:53 -==> Parameters: 1(Long)
2019-05-22 19:22:53 -<==      Total: 49
2019-05-22 19:22:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 19:22:53 -==> Parameters: 138(Long)
2019-05-22 19:22:53 -<==      Total: 1
2019-05-22 19:22:53 -耗时 : 265
2019-05-22 19:22:53 -返回值 : index_v1
2019-05-22 19:22:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 19:22:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 265(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 19:22:53.78(Timestamp)
2019-05-22 19:22:53 -<==    Updates: 1
2019-05-22 19:22:54 -请求地址 : http://localhost:8081/main
2019-05-22 19:22:54 -HTTP METHOD : GET
2019-05-22 19:22:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 19:22:54 -参数 : []
2019-05-22 19:22:54 -耗时 : 1
2019-05-22 19:22:54 -返回值 : main
2019-05-22 19:22:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 19:22:56 -HTTP METHOD : GET
2019-05-22 19:22:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 19:22:56 -参数 : []
2019-05-22 19:22:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 19:22:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 19:22:56 -<==      Total: 0
2019-05-22 19:22:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 19:22:56 -==> Parameters: 1(Long), 0(String)
2019-05-22 19:22:56 -<==      Total: 1
2019-05-22 19:22:56 -耗时 : 47
2019-05-22 19:22:56 -返回值 : com.bootdo.common.utils.PageUtils@20ee197a
2019-05-22 19:22:56 -请求地址 : http://localhost:8081/main
2019-05-22 19:22:56 -HTTP METHOD : GET
2019-05-22 19:22:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 19:22:56 -参数 : []
2019-05-22 19:22:56 -耗时 : 0
2019-05-22 19:22:56 -返回值 : main
2019-05-22 19:24:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 19:24:38 -==> Parameters: 1(Long)
2019-05-22 19:24:38 -<==      Total: 93
2019-05-22 19:24:38 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 19:24:38 -HTTP METHOD : GET
2019-05-22 19:24:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:24:38 -参数 : []
2019-05-22 19:24:38 -耗时 : 13
2019-05-22 19:24:38 -返回值 : charts/tableElecYY
2019-05-22 19:24:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:24:40 -HTTP METHOD : GET
2019-05-22 19:24:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:24:40 -参数 : [userType]
2019-05-22 19:24:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:24:40 -==> Parameters: userType(String)
2019-05-22 19:24:40 -<==      Total: 4
2019-05-22 19:24:40 -耗时 : 21
2019-05-22 19:24:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:24:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 19:24:42 -HTTP METHOD : GET
2019-05-22 19:24:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 19:24:42 -参数 : []
2019-05-22 19:24:42 -耗时 : 1
2019-05-22 19:24:42 -返回值 : system/dept/deptTree
2019-05-22 19:24:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 19:24:43 -HTTP METHOD : GET
2019-05-22 19:24:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 19:24:43 -参数 : []
2019-05-22 19:24:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 19:24:43 -==> Parameters: 
2019-05-22 19:24:43 -<==      Total: 3
2019-05-22 19:24:43 -耗时 : 18
2019-05-22 19:24:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 19:24:45 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 19:24:45 -HTTP METHOD : POST
2019-05-22 19:24:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:24:45 -参数 : [com.bootdo.elec.vo.ElecVo@200b3a8f, com.bootdo.moneyLog.vo.ElecLogVo@35e720b7]
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:24:45 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:24:45 -<==      Total: 1
2019-05-22 19:24:45 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 19:24:45 -==> Parameters: 
2019-05-22 19:24:45 -<==      Total: 2
2019-05-22 19:24:45 -耗时 : 469
2019-05-22 19:24:45 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, WGElecCostYYCount=0, TotalLogyu=4634, ZTotalhuNew=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-22 19:24:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 19:24:52 -HTTP METHOD : GET
2019-05-22 19:24:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 19:24:52 -参数 : []
2019-05-22 19:24:52 -耗时 : 0
2019-05-22 19:24:52 -返回值 : system/dept/deptTree
2019-05-22 19:24:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 19:24:53 -HTTP METHOD : GET
2019-05-22 19:24:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 19:24:53 -参数 : []
2019-05-22 19:24:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 19:24:53 -==> Parameters: 
2019-05-22 19:24:53 -<==      Total: 3
2019-05-22 19:24:53 -耗时 : 2
2019-05-22 19:24:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 19:24:55 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-22 19:24:55 -HTTP METHOD : GET
2019-05-22 19:24:55 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-22 19:24:55 -参数 : []
2019-05-22 19:24:55 -耗时 : 8
2019-05-22 19:24:55 -返回值 : charts/tableHeatYY
2019-05-22 19:24:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:24:55 -HTTP METHOD : GET
2019-05-22 19:24:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:24:55 -参数 : [userType]
2019-05-22 19:24:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:24:55 -==> Parameters: userType(String)
2019-05-22 19:24:55 -<==      Total: 4
2019-05-22 19:24:55 -耗时 : 5
2019-05-22 19:24:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:24:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 19:24:56 -HTTP METHOD : GET
2019-05-22 19:24:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 19:24:56 -参数 : []
2019-05-22 19:24:56 -耗时 : 0
2019-05-22 19:24:56 -返回值 : system/dept/deptTree
2019-05-22 19:24:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 19:24:56 -HTTP METHOD : GET
2019-05-22 19:24:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 19:24:56 -参数 : []
2019-05-22 19:24:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 19:24:56 -==> Parameters: 
2019-05-22 19:24:56 -<==      Total: 3
2019-05-22 19:24:56 -耗时 : 3
2019-05-22 19:24:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 19:25:04 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-22 19:25:04 -HTTP METHOD : POST
2019-05-22 19:25:04 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-22 19:25:04 -参数 : [com.bootdo.heat.vo.HeatVo@1b08e650, com.bootdo.moneyLog.vo.HeatLogVo@72801a01]
2019-05-22 19:25:04 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:25:04 -<==      Total: 1
2019-05-22 19:25:04 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:04 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-22 19:25:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-22 19:25:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:05 -<==      Total: 1
2019-05-22 19:25:05 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-22 19:25:05 -==> Parameters: 
2019-05-22 19:25:05 -<==      Total: 2
2019-05-22 19:25:05 -耗时 : 263
2019-05-22 19:25:05 -返回值 : {STotalyuOld=0, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0, GMPreHeatCountYYNew=0, GSPreHeatSumYYNew=0, STotalyuNew=0, GSOweHeatCountYYNew=0, type=2, MHeatCostYYSum=303, SPreHeatCountYYOld=0, TotalPreyuNew=0, GSHeatAreaYY=1, SHeatCostYYCount=2, GMHeatCostYYCount=1, GMOweHeatSumYYNew=0, GSTotalhuOld=0, TotalCostyu=307, MHeatPrice=3, SHeatPrice=4, GMHeatPrice=3, SPreHeatCountYYNew=0, TotalPreyuOld=4, TotalOwehuNew=0, TotalCosthu=10, STotalhuOld=0, MOweHeatSumYYNew=0, GSOweHeatSumYYOld=0, TotalLogyu=245, STotalhuNew=0, MTotalyuOld=-2, MHeatLogYYCount=6, GSTotalhuNew=0, GSTotalyuOld=0, MOweHeatSumYYOld=-6, GMOweHeatSumYYOld=0, GMHeatLogYYSum=80, GSOweHeatSumYYNew=0, MTotalhuNew=0, MTotalyuNew=0, GSTotalyuNew=0, GSHeatPrice=4, MOweHeatCountYYOld=2, MHeatLogYYSum=124, TotalLoghu=9, GMHeatAreaYY=1, MOweHeatCountYYNew=0, TotalOweyuOld=-6, MPreHeatCountYYOld=2, MHeatCostYYCount=6, SOweHeatCountYYOld=0, GMTotalhuNew=0, SHeatLogYYSum=40, SHeatLogYYCount=1, SOweHeatSumYYOld=0, MPreHeatCountYYNew=0, MTotalhuOld=4, GMTotalhuOld=0, GSHeatCostYYCount=1, GSPreHeatCountYYNew=0, TotalPrehuNew=0, SOweHeatSumYYNew=0, SPreHeatSumYYNew=0, GMPreHeatSumYYNew=0, GSPreHeatCountYYOld=0, TotalOweyuNew=0, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, GMPreHeatSumYYOld=0, MHeatAreaYY=1, TotalPrehuOld=2, GSHeatCostYYSum=1, SPreHeatSumYYOld=0, GMHeatCostYYSum=1, SHeatAreaYY=1, GMTotalyuNew=0, TotalOwehuOld=2, PriceTotal=14, GSHeatLogYYSum=1, AreaTotalYY=4, GMTotalyuOld=0, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=0, TotalAllyuNew=0, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=4, SHeatCostYYSum=2, GSPreHeatSumYYOld=0, TotalAllhuOld=4, TotalAllyuOld=-2}
2019-05-22 19:25:08 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 19:25:08 -HTTP METHOD : GET
2019-05-22 19:25:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:25:08 -参数 : []
2019-05-22 19:25:08 -耗时 : 1
2019-05-22 19:25:08 -返回值 : charts/tableElecYY
2019-05-22 19:25:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:25:08 -HTTP METHOD : GET
2019-05-22 19:25:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:25:08 -参数 : [userType]
2019-05-22 19:25:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:25:08 -==> Parameters: userType(String)
2019-05-22 19:25:08 -<==      Total: 4
2019-05-22 19:25:08 -耗时 : 4
2019-05-22 19:25:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:25:11 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 19:25:11 -HTTP METHOD : GET
2019-05-22 19:25:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 19:25:11 -参数 : []
2019-05-22 19:25:11 -耗时 : 0
2019-05-22 19:25:11 -返回值 : system/dept/deptTree
2019-05-22 19:25:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 19:25:11 -HTTP METHOD : GET
2019-05-22 19:25:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 19:25:11 -参数 : []
2019-05-22 19:25:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 19:25:11 -==> Parameters: 
2019-05-22 19:25:11 -<==      Total: 3
2019-05-22 19:25:11 -耗时 : 3
2019-05-22 19:25:11 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 19:25:13 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 19:25:13 -HTTP METHOD : POST
2019-05-22 19:25:13 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:25:13 -参数 : [com.bootdo.elec.vo.ElecVo@67dadbc6, com.bootdo.moneyLog.vo.ElecLogVo@1d6f5822]
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:25:13 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:25:13 -<==      Total: 1
2019-05-22 19:25:13 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 19:25:13 -==> Parameters: 
2019-05-22 19:25:13 -<==      Total: 2
2019-05-22 19:25:13 -耗时 : 415
2019-05-22 19:25:13 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, WGElecCostYYCount=0, TotalLogyu=4634, ZTotalhuNew=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-22 19:25:42 -请求地址 : http://localhost:8081/charts/countRun
2019-05-22 19:25:42 -HTTP METHOD : GET
2019-05-22 19:25:42 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-05-22 19:25:42 -参数 : []
2019-05-22 19:25:42 -耗时 : 1
2019-05-22 19:25:42 -返回值 : charts/countRun
2019-05-22 19:25:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:25:42 -HTTP METHOD : GET
2019-05-22 19:25:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:25:42 -参数 : [userType]
2019-05-22 19:25:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:25:42 -==> Parameters: userType(String)
2019-05-22 19:25:42 -<==      Total: 4
2019-05-22 19:25:42 -耗时 : 8
2019-05-22 19:25:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:25:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 19:25:47 -HTTP METHOD : GET
2019-05-22 19:25:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 19:25:47 -参数 : []
2019-05-22 19:25:47 -耗时 : 0
2019-05-22 19:25:47 -返回值 : system/dept/deptTree
2019-05-22 19:25:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 19:25:47 -HTTP METHOD : GET
2019-05-22 19:25:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 19:25:47 -参数 : []
2019-05-22 19:25:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 19:25:47 -==> Parameters: 
2019-05-22 19:25:47 -<==      Total: 3
2019-05-22 19:25:47 -耗时 : 3
2019-05-22 19:25:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 19:25:55 -请求地址 : http://localhost:8081/charts/countRun/getCountRun
2019-05-22 19:25:55 -HTTP METHOD : POST
2019-05-22 19:25:55 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.getCountRun
2019-05-22 19:25:55 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@127976f2, com.bootdo.moneyLog.vo.WaterLogVo@3e89b43c, com.bootdo.moneyLog.vo.HeatLogVo@711e996e]
2019-05-22 19:25:55 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-22 19:25:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 19:25:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countRun/getCountRun(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-22 19:25:55.757(Timestamp)
2019-05-22 19:25:55 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.Count1ElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.Count1ElecLog(ElecLogServiceImpl.java:267)
	at com.bootdo.charts.controller.countRunController.getCountRun(countRunController.java:59)
	at com.bootdo.charts.controller.countRunController$$FastClassBySpringCGLIB$$3384ead5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countRunController$$EnhancerBySpringCGLIB$$b50047f2.getCountRun(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 114 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 115 common frames omitted
2019-05-22 19:25:55 -<==    Updates: 1
2019-05-22 19:26:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 19:26:04 -HTTP METHOD : GET
2019-05-22 19:26:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 19:26:04 -参数 : []
2019-05-22 19:26:04 -耗时 : 1
2019-05-22 19:26:04 -返回值 : system/dept/deptTree
2019-05-22 19:26:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 19:26:04 -HTTP METHOD : GET
2019-05-22 19:26:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 19:26:04 -参数 : []
2019-05-22 19:26:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 19:26:04 -==> Parameters: 
2019-05-22 19:26:04 -<==      Total: 3
2019-05-22 19:26:04 -耗时 : 5
2019-05-22 19:26:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 19:26:10 -请求地址 : http://localhost:8081/charts/countRun/exportRun
2019-05-22 19:26:10 -HTTP METHOD : GET
2019-05-22 19:26:10 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.exportRun
2019-05-22 19:26:10 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@221fde90, com.bootdo.moneyLog.vo.HeatLogVo@787ffac5, com.bootdo.moneyLog.vo.WaterLogVo@125cee44, org.apache.shiro.web.servlet.ShiroHttpServletResponse@43a6ee9]
2019-05-22 19:26:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-22 19:26:11 -==> Parameters: 2019(String), 2(String)
2019-05-22 19:26:11 -<==      Total: 23
2019-05-22 19:26:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-22 19:26:11 -==> Parameters: 2019(String), 2(String)
2019-05-22 19:26:11 -<==      Total: 9
2019-05-22 19:26:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` LIKE `?%` and user_org = ? 
2019-05-22 19:26:11 -耗时 : 579
2019-05-22 19:26:11 -返回值 : null
2019-05-22 19:26:19 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-22 19:26:19 -HTTP METHOD : GET
2019-05-22 19:26:19 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-22 19:26:19 -参数 : []
2019-05-22 19:26:19 -耗时 : 0
2019-05-22 19:26:19 -返回值 : charts/tableHeatYY
2019-05-22 19:26:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:19 -HTTP METHOD : GET
2019-05-22 19:26:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:19 -参数 : [userType]
2019-05-22 19:26:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:19 -==> Parameters: userType(String)
2019-05-22 19:26:19 -<==      Total: 4
2019-05-22 19:26:19 -耗时 : 3
2019-05-22 19:26:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:20 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 19:26:20 -HTTP METHOD : GET
2019-05-22 19:26:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:26:20 -参数 : []
2019-05-22 19:26:20 -耗时 : 1
2019-05-22 19:26:20 -返回值 : charts/tableElecYY
2019-05-22 19:26:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:20 -HTTP METHOD : GET
2019-05-22 19:26:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:20 -参数 : [userType]
2019-05-22 19:26:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:20 -==> Parameters: userType(String)
2019-05-22 19:26:20 -<==      Total: 4
2019-05-22 19:26:20 -耗时 : 5
2019-05-22 19:26:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:23 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-22 19:26:23 -HTTP METHOD : GET
2019-05-22 19:26:23 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-22 19:26:23 -参数 : []
2019-05-22 19:26:23 -耗时 : 0
2019-05-22 19:26:23 -返回值 : charts/tableHeatYY
2019-05-22 19:26:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:24 -HTTP METHOD : GET
2019-05-22 19:26:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:24 -参数 : [userType]
2019-05-22 19:26:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:24 -==> Parameters: userType(String)
2019-05-22 19:26:24 -<==      Total: 4
2019-05-22 19:26:24 -耗时 : 3
2019-05-22 19:26:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:24 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-22 19:26:24 -HTTP METHOD : GET
2019-05-22 19:26:24 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-22 19:26:24 -参数 : []
2019-05-22 19:26:24 -耗时 : 9
2019-05-22 19:26:24 -返回值 : charts/tableWaterYY
2019-05-22 19:26:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:24 -HTTP METHOD : GET
2019-05-22 19:26:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:24 -参数 : [userType]
2019-05-22 19:26:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:24 -==> Parameters: userType(String)
2019-05-22 19:26:24 -<==      Total: 4
2019-05-22 19:26:24 -耗时 : 4
2019-05-22 19:26:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:25 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 19:26:25 -HTTP METHOD : GET
2019-05-22 19:26:25 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:26:25 -参数 : []
2019-05-22 19:26:25 -耗时 : 1
2019-05-22 19:26:25 -返回值 : charts/tableElecYY
2019-05-22 19:26:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:25 -HTTP METHOD : GET
2019-05-22 19:26:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:25 -参数 : [userType]
2019-05-22 19:26:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:25 -==> Parameters: userType(String)
2019-05-22 19:26:25 -<==      Total: 4
2019-05-22 19:26:25 -耗时 : 4
2019-05-22 19:26:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:25 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-22 19:26:25 -HTTP METHOD : GET
2019-05-22 19:26:25 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-22 19:26:25 -参数 : []
2019-05-22 19:26:25 -耗时 : 1
2019-05-22 19:26:25 -返回值 : charts/tableHeatYY
2019-05-22 19:26:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:26 -HTTP METHOD : GET
2019-05-22 19:26:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:26 -参数 : [userType]
2019-05-22 19:26:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:26 -==> Parameters: userType(String)
2019-05-22 19:26:26 -<==      Total: 4
2019-05-22 19:26:26 -耗时 : 4
2019-05-22 19:26:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:26 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-22 19:26:26 -HTTP METHOD : GET
2019-05-22 19:26:26 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-22 19:26:26 -参数 : []
2019-05-22 19:26:26 -耗时 : 1
2019-05-22 19:26:26 -返回值 : charts/tableWaterYY
2019-05-22 19:26:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:26 -HTTP METHOD : GET
2019-05-22 19:26:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:26 -参数 : [userType]
2019-05-22 19:26:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:26 -==> Parameters: userType(String)
2019-05-22 19:26:26 -<==      Total: 4
2019-05-22 19:26:26 -耗时 : 4
2019-05-22 19:26:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:27 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-22 19:26:27 -HTTP METHOD : GET
2019-05-22 19:26:27 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-22 19:26:27 -参数 : []
2019-05-22 19:26:27 -耗时 : 0
2019-05-22 19:26:27 -返回值 : charts/tableHeatYY
2019-05-22 19:26:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:27 -HTTP METHOD : GET
2019-05-22 19:26:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:27 -参数 : [userType]
2019-05-22 19:26:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:27 -==> Parameters: userType(String)
2019-05-22 19:26:27 -<==      Total: 4
2019-05-22 19:26:27 -耗时 : 3
2019-05-22 19:26:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:27 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 19:26:27 -HTTP METHOD : GET
2019-05-22 19:26:27 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:26:27 -参数 : []
2019-05-22 19:26:27 -耗时 : 0
2019-05-22 19:26:27 -返回值 : charts/tableElecYY
2019-05-22 19:26:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:27 -HTTP METHOD : GET
2019-05-22 19:26:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:27 -参数 : [userType]
2019-05-22 19:26:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:27 -==> Parameters: userType(String)
2019-05-22 19:26:27 -<==      Total: 4
2019-05-22 19:26:27 -耗时 : 4
2019-05-22 19:26:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:28 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-22 19:26:28 -HTTP METHOD : GET
2019-05-22 19:26:28 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-22 19:26:28 -参数 : []
2019-05-22 19:26:28 -耗时 : 1
2019-05-22 19:26:28 -返回值 : charts/tableHeatYY
2019-05-22 19:26:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:28 -HTTP METHOD : GET
2019-05-22 19:26:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:28 -参数 : [userType]
2019-05-22 19:26:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:28 -==> Parameters: userType(String)
2019-05-22 19:26:28 -<==      Total: 4
2019-05-22 19:26:28 -耗时 : 3
2019-05-22 19:26:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:28 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-22 19:26:28 -HTTP METHOD : GET
2019-05-22 19:26:28 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-22 19:26:28 -参数 : []
2019-05-22 19:26:28 -耗时 : 0
2019-05-22 19:26:28 -返回值 : charts/tableWaterYY
2019-05-22 19:26:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:28 -HTTP METHOD : GET
2019-05-22 19:26:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:28 -参数 : [userType]
2019-05-22 19:26:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:28 -==> Parameters: userType(String)
2019-05-22 19:26:28 -<==      Total: 4
2019-05-22 19:26:28 -耗时 : 4
2019-05-22 19:26:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:29 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-22 19:26:29 -HTTP METHOD : GET
2019-05-22 19:26:29 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-22 19:26:29 -参数 : []
2019-05-22 19:26:29 -耗时 : 0
2019-05-22 19:26:29 -返回值 : charts/tableHeatYY
2019-05-22 19:26:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:29 -HTTP METHOD : GET
2019-05-22 19:26:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:29 -参数 : [userType]
2019-05-22 19:26:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:29 -==> Parameters: userType(String)
2019-05-22 19:26:29 -<==      Total: 4
2019-05-22 19:26:29 -耗时 : 4
2019-05-22 19:26:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:29 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 19:26:29 -HTTP METHOD : GET
2019-05-22 19:26:29 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:26:29 -参数 : []
2019-05-22 19:26:29 -耗时 : 0
2019-05-22 19:26:29 -返回值 : charts/tableElecYY
2019-05-22 19:26:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:29 -HTTP METHOD : GET
2019-05-22 19:26:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:29 -参数 : [userType]
2019-05-22 19:26:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:29 -==> Parameters: userType(String)
2019-05-22 19:26:29 -<==      Total: 4
2019-05-22 19:26:29 -耗时 : 3
2019-05-22 19:26:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:30 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-22 19:26:30 -HTTP METHOD : GET
2019-05-22 19:26:30 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-22 19:26:30 -参数 : []
2019-05-22 19:26:30 -耗时 : 0
2019-05-22 19:26:30 -返回值 : charts/tableWaterYY
2019-05-22 19:26:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:30 -HTTP METHOD : GET
2019-05-22 19:26:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:30 -参数 : [userType]
2019-05-22 19:26:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:30 -==> Parameters: userType(String)
2019-05-22 19:26:30 -<==      Total: 4
2019-05-22 19:26:30 -耗时 : 5
2019-05-22 19:26:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:31 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-22 19:26:31 -HTTP METHOD : GET
2019-05-22 19:26:31 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-22 19:26:31 -参数 : []
2019-05-22 19:26:31 -耗时 : 0
2019-05-22 19:26:31 -返回值 : charts/tableHeatYY
2019-05-22 19:26:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:31 -HTTP METHOD : GET
2019-05-22 19:26:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:31 -参数 : [userType]
2019-05-22 19:26:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:31 -==> Parameters: userType(String)
2019-05-22 19:26:31 -<==      Total: 4
2019-05-22 19:26:31 -耗时 : 5
2019-05-22 19:26:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:31 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 19:26:31 -HTTP METHOD : GET
2019-05-22 19:26:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:26:31 -参数 : []
2019-05-22 19:26:31 -耗时 : 0
2019-05-22 19:26:31 -返回值 : charts/tableElecYY
2019-05-22 19:26:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:26:31 -HTTP METHOD : GET
2019-05-22 19:26:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:26:31 -参数 : [userType]
2019-05-22 19:26:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:26:31 -==> Parameters: userType(String)
2019-05-22 19:26:31 -<==      Total: 4
2019-05-22 19:26:31 -耗时 : 5
2019-05-22 19:26:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:26:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 19:26:52 -HTTP METHOD : GET
2019-05-22 19:26:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 19:26:52 -参数 : []
2019-05-22 19:26:52 -耗时 : 0
2019-05-22 19:26:52 -返回值 : system/dept/deptTree
2019-05-22 19:26:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 19:26:52 -HTTP METHOD : GET
2019-05-22 19:26:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 19:26:52 -参数 : []
2019-05-22 19:26:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 19:26:52 -==> Parameters: 
2019-05-22 19:26:52 -<==      Total: 3
2019-05-22 19:26:52 -耗时 : 4
2019-05-22 19:26:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 19:26:54 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 19:26:54 -HTTP METHOD : POST
2019-05-22 19:26:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:26:54 -参数 : [com.bootdo.elec.vo.ElecVo@73be4ef0, com.bootdo.moneyLog.vo.ElecLogVo@e9835be]
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:26:54 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:26:54 -<==      Total: 1
2019-05-22 19:26:54 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 19:26:54 -==> Parameters: 
2019-05-22 19:26:54 -<==      Total: 2
2019-05-22 19:26:54 -耗时 : 303
2019-05-22 19:26:54 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, WGElecCostYYCount=0, TotalLogyu=4634, ZTotalhuNew=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-22 19:36:27 -Starting BootdoApplication on PC-201905091110 with PID 9404 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-22 19:36:27 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-22 19:36:27 -The following profiles are active: dev
2019-05-22 19:36:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44e3760b: startup date [Wed May 22 19:36:27 CST 2019]; root of context hierarchy
2019-05-22 19:36:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-22 19:36:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8f71eef6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:36:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$81cb1d9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:36:34 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:36:34 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:36:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:36:34 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-22 19:36:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-22 19:36:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:36:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:36:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:36:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 19:36:36 -Tomcat initialized with port(s): 8081 (http)
2019-05-22 19:36:36 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-22 19:36:36 -Starting service [Tomcat]
2019-05-22 19:36:36 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-22 19:36:36 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-22 19:36:36 -Initializing Spring embedded WebApplicationContext
2019-05-22 19:36:36 -Root WebApplicationContext: initialization completed in 8961 ms
2019-05-22 19:36:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-22 19:36:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-22 19:36:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-22 19:36:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-22 19:36:37 -Filter xssFilter was not registered (disabled)
2019-05-22 19:36:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-22 19:36:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-22 19:36:37 -Servlet statViewServlet mapped to [/druid/*]
2019-05-22 19:36:37 -Servlet dispatcherServlet mapped to [/]
2019-05-22 19:36:41 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44e3760b: startup date [Wed May 22 19:36:27 CST 2019]; root of context hierarchy
2019-05-22 19:36:42 -Using default implementation for ThreadExecutor
2019-05-22 19:36:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-22 19:36:42 -Quartz Scheduler v.2.2.1 created.
2019-05-22 19:36:42 -RAMJobStore initialized.
2019-05-22 19:36:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-22 19:36:42 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-22 19:36:42 -Quartz scheduler version: 2.2.1
2019-05-22 19:36:42 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@323b0632
2019-05-22 19:36:42 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-22 19:36:42 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-22 19:36:45 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-22 19:36:45 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:36:45 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:36:45 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-22 19:36:45 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-22 19:36:45 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-22 19:36:45 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:36:45 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-22 19:36:45 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:36:45 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-22 19:36:45 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:36:45 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-22 19:36:45 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 19:36:45 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-22 19:36:45 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-22 19:36:45 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 19:36:45 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:36:45 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-22 19:36:45 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-22 19:36:45 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 19:36:45 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 19:36:45 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-22 19:36:45 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 19:36:45 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-22 19:36:45 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-22 19:36:45 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-22 19:36:45 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-22 19:36:45 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-22 19:36:45 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-22 19:36:45 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-22 19:36:45 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-22 19:36:45 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-22 19:36:45 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-22 19:36:45 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-22 19:36:45 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-22 19:36:45 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-22 19:36:45 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-22 19:36:45 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 19:36:45 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-22 19:36:45 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 19:36:45 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-22 19:36:45 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-22 19:36:45 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-22 19:36:45 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-22 19:36:45 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-22 19:36:45 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-22 19:36:45 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-22 19:36:45 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-22 19:36:45 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-22 19:36:45 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-22 19:36:45 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-22 19:36:45 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-22 19:36:45 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-22 19:36:45 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 19:36:45 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-22 19:36:45 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-22 19:36:45 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-22 19:36:45 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-22 19:36:45 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-22 19:36:45 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-22 19:36:45 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-22 19:36:45 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-22 19:36:45 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-22 19:36:45 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-22 19:36:45 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-22 19:36:45 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-22 19:36:45 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-22 19:36:45 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 19:36:45 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-22 19:36:45 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-22 19:36:45 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 19:36:45 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 19:36:45 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-22 19:36:45 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-22 19:36:45 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-22 19:36:45 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 19:36:45 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 19:36:45 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 19:36:45 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 19:36:45 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-22 19:36:45 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-22 19:36:45 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-22 19:36:45 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-22 19:36:45 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-22 19:36:45 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-22 19:36:45 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 19:36:45 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-22 19:36:45 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-22 19:36:45 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-22 19:36:45 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-22 19:36:45 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-22 19:36:45 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-22 19:36:45 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-22 19:36:45 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-22 19:36:45 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-22 19:36:45 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:45 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-22 19:36:45 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-22 19:36:45 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-22 19:36:45 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-22 19:36:45 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-22 19:36:45 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-22 19:36:45 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-22 19:36:45 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-22 19:36:45 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-22 19:36:45 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-22 19:36:45 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-22 19:36:45 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-22 19:36:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-22 19:36:45 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-22 19:36:45 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 19:36:46 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-22 19:36:46 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-22 19:36:46 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-22 19:36:46 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-22 19:36:46 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:46 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-22 19:36:46 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-22 19:36:46 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-22 19:36:46 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-22 19:36:46 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 19:36:46 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-22 19:36:46 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-22 19:36:46 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-22 19:36:46 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-22 19:36:46 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-22 19:36:46 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-22 19:36:46 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-22 19:36:46 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:46 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-22 19:36:46 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-22 19:36:46 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-22 19:36:46 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-22 19:36:46 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:46 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-22 19:36:46 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-22 19:36:46 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-22 19:36:46 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:46 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-22 19:36:46 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-22 19:36:46 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-22 19:36:46 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-22 19:36:46 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-22 19:36:46 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-22 19:36:46 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 19:36:46 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 19:36:46 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:46 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-22 19:36:46 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 19:36:46 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 19:36:46 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-22 19:36:46 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-22 19:36:46 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-22 19:36:46 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-22 19:36:46 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-22 19:36:46 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:46 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-22 19:36:46 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-22 19:36:46 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:46 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:46 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 19:36:46 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-22 19:36:46 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:46 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-22 19:36:46 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-22 19:36:46 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-22 19:36:46 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 19:36:46 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 19:36:46 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 19:36:46 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-22 19:36:46 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 19:36:46 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-22 19:36:46 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 19:36:46 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 19:36:46 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-22 19:36:46 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 19:36:46 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-22 19:36:46 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-22 19:36:46 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-22 19:36:46 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-22 19:36:46 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-22 19:36:46 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-22 19:36:47 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 19:36:47 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44e3760b: startup date [Wed May 22 19:36:27 CST 2019]; root of context hierarchy
2019-05-22 19:36:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 19:36:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 19:36:47 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 19:36:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-22 19:36:48 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-22 19:36:50 -Registering beans for JMX exposure on startup
2019-05-22 19:36:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-22 19:36:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-22 19:36:50 -Starting beans in phase 2147483647
2019-05-22 19:36:50 -Context refreshed
2019-05-22 19:36:50 -Found 1 custom documentation plugin(s)
2019-05-22 19:36:50 -Scanning for api listing references
2019-05-22 19:36:50 -Generating unique operation named: getCountDUsingPOST_1
2019-05-22 19:36:50 -Generating unique operation named: removeUsingPOST_1
2019-05-22 19:36:51 -Generating unique operation named: addUsingGET_1
2019-05-22 19:36:51 -Generating unique operation named: editUsingGET_1
2019-05-22 19:36:51 -Generating unique operation named: listUsingGET_1
2019-05-22 19:36:51 -Generating unique operation named: removeUsingPOST_2
2019-05-22 19:36:51 -Generating unique operation named: removeUsingPOST_3
2019-05-22 19:36:51 -Generating unique operation named: saveUsingPOST_1
2019-05-22 19:36:51 -Generating unique operation named: updateUsingGET_1
2019-05-22 19:36:51 -Generating unique operation named: updateUsingHEAD_1
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPOST_1
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPUT_1
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPATCH_1
2019-05-22 19:36:51 -Generating unique operation named: updateUsingDELETE_1
2019-05-22 19:36:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-22 19:36:51 -Generating unique operation named: updateUsingTRACE_1
2019-05-22 19:36:51 -Generating unique operation named: addUsingGET_2
2019-05-22 19:36:51 -Generating unique operation named: editUsingGET_2
2019-05-22 19:36:51 -Generating unique operation named: listUsingGET_2
2019-05-22 19:36:51 -Generating unique operation named: removeUsingPOST_4
2019-05-22 19:36:51 -Generating unique operation named: removeUsingPOST_5
2019-05-22 19:36:51 -Generating unique operation named: saveUsingPOST_2
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPOST_2
2019-05-22 19:36:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-22 19:36:51 -Generating unique operation named: addUsingGET_3
2019-05-22 19:36:51 -Generating unique operation named: editUsingGET_3
2019-05-22 19:36:51 -Generating unique operation named: listUsingGET_3
2019-05-22 19:36:51 -Generating unique operation named: removeUsingPOST_6
2019-05-22 19:36:51 -Generating unique operation named: removeUsingPOST_7
2019-05-22 19:36:51 -Generating unique operation named: saveUsingPOST_3
2019-05-22 19:36:51 -Generating unique operation named: updateUsingGET_2
2019-05-22 19:36:51 -Generating unique operation named: updateUsingHEAD_2
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPOST_3
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPUT_2
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPATCH_2
2019-05-22 19:36:51 -Generating unique operation named: updateUsingDELETE_2
2019-05-22 19:36:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-22 19:36:51 -Generating unique operation named: updateUsingTRACE_2
2019-05-22 19:36:51 -Generating unique operation named: addUsingGET_4
2019-05-22 19:36:51 -Generating unique operation named: editUsingGET_4
2019-05-22 19:36:51 -Generating unique operation named: listUsingGET_4
2019-05-22 19:36:51 -Generating unique operation named: removeUsingPOST_8
2019-05-22 19:36:51 -Generating unique operation named: removeUsingPOST_9
2019-05-22 19:36:51 -Generating unique operation named: saveUsingPOST_4
2019-05-22 19:36:51 -Generating unique operation named: updateUsingGET_3
2019-05-22 19:36:51 -Generating unique operation named: updateUsingHEAD_3
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPOST_4
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPUT_3
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPATCH_3
2019-05-22 19:36:51 -Generating unique operation named: updateUsingDELETE_3
2019-05-22 19:36:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-22 19:36:51 -Generating unique operation named: updateUsingTRACE_3
2019-05-22 19:36:51 -Generating unique operation named: ElecUsingGET_1
2019-05-22 19:36:51 -Generating unique operation named: addUsingGET_5
2019-05-22 19:36:51 -Generating unique operation named: editUsingGET_5
2019-05-22 19:36:51 -Generating unique operation named: listUsingGET_5
2019-05-22 19:36:51 -Generating unique operation named: removeUsingPOST_10
2019-05-22 19:36:51 -Generating unique operation named: removeUsingPOST_11
2019-05-22 19:36:51 -Generating unique operation named: saveUsingPOST_5
2019-05-22 19:36:51 -Generating unique operation named: updateUsingGET_4
2019-05-22 19:36:51 -Generating unique operation named: updateUsingHEAD_4
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPOST_5
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPUT_4
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPATCH_4
2019-05-22 19:36:51 -Generating unique operation named: updateUsingDELETE_4
2019-05-22 19:36:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-22 19:36:51 -Generating unique operation named: updateUsingTRACE_4
2019-05-22 19:36:51 -Generating unique operation named: editUsingGET_6
2019-05-22 19:36:51 -Generating unique operation named: listUsingGET_6
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPOST_6
2019-05-22 19:36:51 -Generating unique operation named: addUsingGET_6
2019-05-22 19:36:51 -Generating unique operation named: editUsingGET_7
2019-05-22 19:36:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-22 19:36:51 -Generating unique operation named: listUsingGET_7
2019-05-22 19:36:51 -Generating unique operation named: removeUsingPOST_12
2019-05-22 19:36:51 -Generating unique operation named: removeUsingPOST_13
2019-05-22 19:36:51 -Generating unique operation named: saveUsingPOST_6
2019-05-22 19:36:51 -Generating unique operation named: updateUsingGET_5
2019-05-22 19:36:51 -Generating unique operation named: updateUsingHEAD_5
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPOST_7
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPUT_5
2019-05-22 19:36:51 -Generating unique operation named: updateUsingPATCH_5
2019-05-22 19:36:51 -Generating unique operation named: updateUsingDELETE_5
2019-05-22 19:36:51 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-22 19:36:51 -Generating unique operation named: updateUsingTRACE_5
2019-05-22 19:36:51 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-22 19:36:52 -Generating unique operation named: addUsingGET_7
2019-05-22 19:36:52 -Generating unique operation named: editUsingGET_8
2019-05-22 19:36:52 -Generating unique operation named: listUsingGET_8
2019-05-22 19:36:52 -Generating unique operation named: removeUsingPOST_14
2019-05-22 19:36:52 -Generating unique operation named: removeUsingPOST_15
2019-05-22 19:36:52 -Generating unique operation named: saveUsingPOST_7
2019-05-22 19:36:52 -Generating unique operation named: updateUsingGET_6
2019-05-22 19:36:52 -Generating unique operation named: updateUsingHEAD_6
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPOST_8
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPUT_6
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPATCH_6
2019-05-22 19:36:52 -Generating unique operation named: updateUsingDELETE_6
2019-05-22 19:36:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-22 19:36:52 -Generating unique operation named: updateUsingTRACE_6
2019-05-22 19:36:52 -Generating unique operation named: addUsingGET_8
2019-05-22 19:36:52 -Generating unique operation named: editUsingGET_9
2019-05-22 19:36:52 -Generating unique operation named: listUsingGET_9
2019-05-22 19:36:52 -Generating unique operation named: removeUsingPOST_16
2019-05-22 19:36:52 -Generating unique operation named: removeUsingPOST_17
2019-05-22 19:36:52 -Generating unique operation named: saveUsingPOST_8
2019-05-22 19:36:52 -Generating unique operation named: updateUsingGET_7
2019-05-22 19:36:52 -Generating unique operation named: updateUsingHEAD_7
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPOST_9
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPUT_7
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPATCH_7
2019-05-22 19:36:52 -Generating unique operation named: updateUsingDELETE_7
2019-05-22 19:36:52 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-22 19:36:52 -Generating unique operation named: updateUsingTRACE_7
2019-05-22 19:36:52 -Generating unique operation named: addUsingGET_9
2019-05-22 19:36:52 -Generating unique operation named: editUsingGET_10
2019-05-22 19:36:52 -Generating unique operation named: infoUsingGET_1
2019-05-22 19:36:52 -Generating unique operation named: infoUsingHEAD_1
2019-05-22 19:36:52 -Generating unique operation named: infoUsingPOST_1
2019-05-22 19:36:52 -Generating unique operation named: infoUsingPUT_1
2019-05-22 19:36:52 -Generating unique operation named: infoUsingPATCH_1
2019-05-22 19:36:52 -Generating unique operation named: infoUsingDELETE_1
2019-05-22 19:36:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-22 19:36:52 -Generating unique operation named: infoUsingTRACE_1
2019-05-22 19:36:52 -Generating unique operation named: listUsingGET_10
2019-05-22 19:36:52 -Generating unique operation named: removeUsingPOST_18
2019-05-22 19:36:52 -Generating unique operation named: removeUsingPOST_19
2019-05-22 19:36:52 -Generating unique operation named: saveUsingPOST_9
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPOST_10
2019-05-22 19:36:52 -Generating unique operation named: listUsingGET_11
2019-05-22 19:36:52 -Generating unique operation named: removeUsingPOST_20
2019-05-22 19:36:52 -Generating unique operation named: welcomeUsingGET_1
2019-05-22 19:36:52 -Generating unique operation named: addUsingGET_10
2019-05-22 19:36:52 -Generating unique operation named: editUsingGET_11
2019-05-22 19:36:52 -Generating unique operation named: listUsingGET_12
2019-05-22 19:36:52 -Generating unique operation named: removeUsingPOST_21
2019-05-22 19:36:52 -Generating unique operation named: saveUsingPOST_10
2019-05-22 19:36:52 -Generating unique operation named: treeUsingGET_1
2019-05-22 19:36:52 -Generating unique operation named: treeUsingGET_2
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPOST_11
2019-05-22 19:36:52 -Generating unique operation named: editUsingGET_12
2019-05-22 19:36:52 -Generating unique operation named: addUsingGET_11
2019-05-22 19:36:52 -Generating unique operation named: editUsingGET_13
2019-05-22 19:36:52 -Generating unique operation named: listUsingGET_13
2019-05-22 19:36:52 -Generating unique operation named: removeUsingPOST_22
2019-05-22 19:36:52 -Generating unique operation named: removeUsingPOST_23
2019-05-22 19:36:52 -Generating unique operation named: saveUsingPOST_11
2019-05-22 19:36:52 -Generating unique operation named: updateUsingGET_8
2019-05-22 19:36:52 -Generating unique operation named: updateUsingHEAD_8
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPOST_12
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPUT_8
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPATCH_8
2019-05-22 19:36:52 -Generating unique operation named: updateUsingDELETE_8
2019-05-22 19:36:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-22 19:36:52 -Generating unique operation named: updateUsingTRACE_8
2019-05-22 19:36:52 -Generating unique operation named: addUsingGET_12
2019-05-22 19:36:52 -Generating unique operation named: editUsingGET_14
2019-05-22 19:36:52 -Generating unique operation named: listUsingGET_14
2019-05-22 19:36:52 -Generating unique operation named: removeUsingPOST_24
2019-05-22 19:36:52 -Generating unique operation named: removeUsingPOST_25
2019-05-22 19:36:52 -Generating unique operation named: saveUsingPOST_12
2019-05-22 19:36:52 -Generating unique operation named: updateUsingGET_9
2019-05-22 19:36:52 -Generating unique operation named: updateUsingHEAD_9
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPOST_13
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPUT_9
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPATCH_9
2019-05-22 19:36:52 -Generating unique operation named: updateUsingDELETE_9
2019-05-22 19:36:52 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-22 19:36:52 -Generating unique operation named: updateUsingTRACE_9
2019-05-22 19:36:52 -Generating unique operation named: addUsingGET_13
2019-05-22 19:36:52 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-22 19:36:52 -Generating unique operation named: editUsingGET_15
2019-05-22 19:36:52 -Generating unique operation named: listUsingGET_15
2019-05-22 19:36:52 -Generating unique operation named: saveUsingPOST_13
2019-05-22 19:36:52 -Generating unique operation named: saveUsingPOST_14
2019-05-22 19:36:52 -Generating unique operation named: updateUsingPOST_14
2019-05-22 19:36:53 -Generating unique operation named: listUsingGET_16
2019-05-22 19:36:53 -Generating unique operation named: listUsingHEAD_1
2019-05-22 19:36:53 -Generating unique operation named: listUsingPOST_1
2019-05-22 19:36:53 -Generating unique operation named: listUsingPUT_1
2019-05-22 19:36:53 -Generating unique operation named: listUsingPATCH_1
2019-05-22 19:36:53 -Generating unique operation named: listUsingDELETE_1
2019-05-22 19:36:53 -Generating unique operation named: listUsingOPTIONS_1
2019-05-22 19:36:53 -Generating unique operation named: listUsingTRACE_1
2019-05-22 19:36:53 -Generating unique operation named: countDDUsingGET_1
2019-05-22 19:36:53 -Generating unique operation named: exportDDUsingGET_1
2019-05-22 19:36:53 -Generating unique operation named: addUsingGET_14
2019-05-22 19:36:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-22 19:36:53 -Generating unique operation named: editUsingGET_16
2019-05-22 19:36:53 -Generating unique operation named: listUsingGET_17
2019-05-22 19:36:53 -Generating unique operation named: removeUsingPOST_26
2019-05-22 19:36:53 -Generating unique operation named: saveUsingPOST_15
2019-05-22 19:36:53 -Generating unique operation named: treeUsingGET_3
2019-05-22 19:36:53 -Generating unique operation named: treeViewUsingGET_1
2019-05-22 19:36:53 -Generating unique operation named: updateUsingPOST_15
2019-05-22 19:36:53 -Generating unique operation named: addUsingGET_15
2019-05-22 19:36:53 -Generating unique operation named: editUsingGET_17
2019-05-22 19:36:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-22 19:36:53 -Generating unique operation named: listUsingGET_18
2019-05-22 19:36:53 -Generating unique operation named: removeUsingPOST_27
2019-05-22 19:36:53 -Generating unique operation named: removeUsingPOST_28
2019-05-22 19:36:53 -Generating unique operation named: saveUsingPOST_16
2019-05-22 19:36:53 -Generating unique operation named: updateUsingGET_10
2019-05-22 19:36:53 -Generating unique operation named: updateUsingHEAD_10
2019-05-22 19:36:53 -Generating unique operation named: updateUsingPOST_16
2019-05-22 19:36:53 -Generating unique operation named: updateUsingPUT_10
2019-05-22 19:36:53 -Generating unique operation named: updateUsingPATCH_10
2019-05-22 19:36:53 -Generating unique operation named: updateUsingDELETE_10
2019-05-22 19:36:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-22 19:36:53 -Generating unique operation named: updateUsingTRACE_10
2019-05-22 19:36:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-22 19:36:53 -Generating unique operation named: addUsingGET_16
2019-05-22 19:36:53 -Generating unique operation named: editUsingGET_18
2019-05-22 19:36:53 -Generating unique operation named: listUsingGET_19
2019-05-22 19:36:53 -Generating unique operation named: removeUsingPOST_29
2019-05-22 19:36:53 -Generating unique operation named: removeUsingPOST_30
2019-05-22 19:36:53 -Generating unique operation named: saveUsingPOST_17
2019-05-22 19:36:53 -Generating unique operation named: updateUsingGET_11
2019-05-22 19:36:53 -Generating unique operation named: updateUsingHEAD_11
2019-05-22 19:36:53 -Generating unique operation named: updateUsingPOST_17
2019-05-22 19:36:53 -Generating unique operation named: updateUsingPUT_11
2019-05-22 19:36:53 -Generating unique operation named: updateUsingPATCH_11
2019-05-22 19:36:53 -Generating unique operation named: updateUsingDELETE_11
2019-05-22 19:36:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-22 19:36:53 -Generating unique operation named: updateUsingTRACE_11
2019-05-22 19:36:53 -Generating unique operation named: addUsingGET_17
2019-05-22 19:36:53 -Generating unique operation named: editUsingGET_19
2019-05-22 19:36:53 -Generating unique operation named: listUsingGET_20
2019-05-22 19:36:53 -Generating unique operation named: removeUsingPOST_31
2019-05-22 19:36:53 -Generating unique operation named: removeUsingPOST_32
2019-05-22 19:36:53 -Generating unique operation named: saveUsingPOST_18
2019-05-22 19:36:53 -Generating unique operation named: updateUsingGET_12
2019-05-22 19:36:53 -Generating unique operation named: updateUsingHEAD_12
2019-05-22 19:36:53 -Generating unique operation named: updateUsingPOST_18
2019-05-22 19:36:53 -Generating unique operation named: updateUsingPUT_12
2019-05-22 19:36:53 -Generating unique operation named: updateUsingPATCH_12
2019-05-22 19:36:53 -Generating unique operation named: updateUsingDELETE_12
2019-05-22 19:36:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-22 19:36:53 -Generating unique operation named: updateUsingTRACE_12
2019-05-22 19:36:54 -Starting Quartz Scheduler now
2019-05-22 19:36:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-22 19:36:54 -Starting...
2019-05-22 19:36:54 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-22 19:36:54 -Started.
2019-05-22 19:36:54 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-22 19:36:54 -Using a shared selector for servlet write/read
2019-05-22 19:36:54 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-22 19:36:54 -Started BootdoApplication in 28.866 seconds (JVM running for 31.27)
2019-05-22 19:36:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-22 19:36:54 -==> Parameters: 
2019-05-22 19:36:54 -<==      Total: 1
2019-05-22 19:37:46 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-22 19:37:56 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-22 19:37:56 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-22 19:37:56 -FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-05-22 19:37:56 -Enabling session validation scheduler...
2019-05-22 19:37:56 -请求地址 : http://localhost:8081/login;JSESSIONID=3bf4c4ad-b63e-451e-aacd-1d050dadc31f
2019-05-22 19:37:56 -HTTP METHOD : GET
2019-05-22 19:37:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 19:37:56 -参数 : [{}]
2019-05-22 19:37:56 -耗时 : 4
2019-05-22 19:37:56 -返回值 : login
2019-05-22 19:37:57 -请求地址 : http://localhost:8081/getVerify
2019-05-22 19:37:57 -HTTP METHOD : GET
2019-05-22 19:37:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 19:37:57 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1933227d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@69ee63fe]
2019-05-22 19:38:00 -8523
2019-05-22 19:38:00 -耗时 : 2585
2019-05-22 19:38:00 -返回值 : null
2019-05-22 19:38:00 -请求地址 : http://localhost:8081/login
2019-05-22 19:38:00 -HTTP METHOD : GET
2019-05-22 19:38:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 19:38:00 -参数 : [{}]
2019-05-22 19:38:00 -耗时 : 1
2019-05-22 19:38:00 -返回值 : login
2019-05-22 19:38:06 -请求地址 : http://localhost:8081/login
2019-05-22 19:38:06 -HTTP METHOD : POST
2019-05-22 19:38:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 19:38:06 -参数 : [admin, 111111, 8523, org.apache.shiro.web.servlet.ShiroHttpServletRequest@65db121b]
2019-05-22 19:38:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 19:38:06 -==> Parameters: admin(String)
2019-05-22 19:38:06 -<==      Total: 1
2019-05-22 19:38:06 -耗时 : 75
2019-05-22 19:38:06 -返回值 : {msg=操作成功, code=0}
2019-05-22 19:38:06 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-22 19:38:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 19:38:06 -==> Parameters: 1(Long), admin(String), 登录(String), 76(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 19:38:06.354(Timestamp)
2019-05-22 19:38:06 -<==    Updates: 1
2019-05-22 19:38:06 -请求地址 : http://localhost:8081/index
2019-05-22 19:38:06 -HTTP METHOD : GET
2019-05-22 19:38:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 19:38:06 -参数 : [{}]
2019-05-22 19:38:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 19:38:06 -==> Parameters: 1(Long)
2019-05-22 19:38:06 -<==      Total: 49
2019-05-22 19:38:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 19:38:06 -==> Parameters: 138(Long)
2019-05-22 19:38:06 -<==      Total: 1
2019-05-22 19:38:06 -耗时 : 102
2019-05-22 19:38:06 -返回值 : index_v1
2019-05-22 19:38:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 19:38:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 102(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 19:38:06.569(Timestamp)
2019-05-22 19:38:06 -<==    Updates: 1
2019-05-22 19:38:06 -请求地址 : http://localhost:8081/main
2019-05-22 19:38:06 -HTTP METHOD : GET
2019-05-22 19:38:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 19:38:06 -参数 : []
2019-05-22 19:38:06 -耗时 : 0
2019-05-22 19:38:06 -返回值 : main
2019-05-22 19:38:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 19:38:07 -HTTP METHOD : GET
2019-05-22 19:38:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 19:38:07 -参数 : []
2019-05-22 19:38:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 19:38:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 19:38:07 -<==      Total: 0
2019-05-22 19:38:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 19:38:07 -==> Parameters: 1(Long), 0(String)
2019-05-22 19:38:07 -<==      Total: 1
2019-05-22 19:38:07 -耗时 : 49
2019-05-22 19:38:07 -返回值 : com.bootdo.common.utils.PageUtils@13ff78ef
2019-05-22 19:38:07 -请求地址 : http://localhost:8081/main
2019-05-22 19:38:07 -HTTP METHOD : GET
2019-05-22 19:38:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 19:38:07 -参数 : []
2019-05-22 19:38:07 -耗时 : 1
2019-05-22 19:38:07 -返回值 : main
2019-05-22 19:38:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 19:38:38 -==> Parameters: 1(Long)
2019-05-22 19:38:39 -<==      Total: 93
2019-05-22 19:38:39 -请求地址 : http://localhost:8081/charts/countYY
2019-05-22 19:38:39 -HTTP METHOD : GET
2019-05-22 19:38:39 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-22 19:38:39 -参数 : []
2019-05-22 19:38:39 -耗时 : 1
2019-05-22 19:38:39 -返回值 : charts/countYY
2019-05-22 19:38:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:38:39 -HTTP METHOD : GET
2019-05-22 19:38:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:38:39 -参数 : [userType]
2019-05-22 19:38:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:38:39 -==> Parameters: userType(String)
2019-05-22 19:38:39 -<==      Total: 4
2019-05-22 19:38:39 -耗时 : 25
2019-05-22 19:38:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:38:58 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 19:38:58 -HTTP METHOD : GET
2019-05-22 19:38:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:38:58 -参数 : []
2019-05-22 19:38:58 -耗时 : 23
2019-05-22 19:38:58 -返回值 : charts/tableElecYY
2019-05-22 19:38:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 19:38:58 -HTTP METHOD : GET
2019-05-22 19:38:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 19:38:58 -参数 : [userType]
2019-05-22 19:38:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 19:38:58 -==> Parameters: userType(String)
2019-05-22 19:38:58 -<==      Total: 4
2019-05-22 19:38:58 -耗时 : 6
2019-05-22 19:38:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 19:39:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 19:39:01 -HTTP METHOD : GET
2019-05-22 19:39:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 19:39:01 -参数 : []
2019-05-22 19:39:01 -耗时 : 0
2019-05-22 19:39:01 -返回值 : system/dept/deptTree
2019-05-22 19:39:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 19:39:02 -HTTP METHOD : GET
2019-05-22 19:39:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 19:39:02 -参数 : []
2019-05-22 19:39:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 19:39:02 -==> Parameters: 
2019-05-22 19:39:02 -<==      Total: 3
2019-05-22 19:39:02 -耗时 : 19
2019-05-22 19:39:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 19:39:04 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 19:39:04 -HTTP METHOD : POST
2019-05-22 19:39:04 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:39:04 -参数 : [com.bootdo.elec.vo.ElecVo@45bff1a7, com.bootdo.moneyLog.vo.ElecLogVo@9459a52]
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:04 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:39:04 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:39:04 -<==      Total: 1
2019-05-22 19:39:26 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 19:39:26 -==> Parameters: 
2019-05-22 19:39:26 -<==      Total: 2
2019-05-22 19:39:26 -耗时 : 22418
2019-05-22 19:39:26 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, WGElecCostYYCount=0, TotalLogyu=4634, ZTotalhuNew=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-22 19:40:03 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 19:40:03 -HTTP METHOD : POST
2019-05-22 19:40:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 19:40:03 -参数 : [com.bootdo.elec.vo.ElecVo@5e37b976, com.bootdo.moneyLog.vo.ElecLogVo@78d21b25]
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 19:40:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 19:40:03 -<==      Total: 1
2019-05-22 19:40:10 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 19:40:10 -==> Parameters: 
2019-05-22 19:40:11 -<==      Total: 2
2019-05-22 20:07:46 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 403]
2019-05-22 20:37:46 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 764]
2019-05-22 20:37:56 -Validating all active sessions...
2019-05-22 20:37:56 -Finished session validation.  [1] sessions were stopped.
2019-05-22 20:46:18 -请求地址 : http://localhost:8081/login;JSESSIONID=ab5ea129-e4eb-4e03-a58c-a2c019a6b875
2019-05-22 20:46:18 -HTTP METHOD : GET
2019-05-22 20:46:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 20:46:18 -参数 : [{}]
2019-05-22 20:46:18 -耗时 : 2
2019-05-22 20:46:18 -返回值 : login
2019-05-22 20:46:19 -请求地址 : http://localhost:8081/getVerify
2019-05-22 20:46:19 -HTTP METHOD : GET
2019-05-22 20:46:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 20:46:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5143c342, org.apache.shiro.web.servlet.ShiroHttpServletResponse@d36f36b]
2019-05-22 20:46:19 -6372
2019-05-22 20:46:19 -耗时 : 27
2019-05-22 20:46:19 -返回值 : null
2019-05-22 20:46:28 -请求地址 : http://localhost:8081/login
2019-05-22 20:46:28 -HTTP METHOD : POST
2019-05-22 20:46:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 20:46:28 -参数 : [admin, 111111, 6372, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1f74d4e5]
2019-05-22 20:46:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 20:46:28 -==> Parameters: admin(String)
2019-05-22 20:46:28 -<==      Total: 1
2019-05-22 20:46:28 -耗时 : 35
2019-05-22 20:46:28 -返回值 : {msg=操作成功, code=0}
2019-05-22 20:46:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 20:46:28 -请求地址 : http://localhost:8081/index
2019-05-22 20:46:28 -HTTP METHOD : GET
2019-05-22 20:46:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 20:46:28 -参数 : [{}]
2019-05-22 20:46:28 -==> Parameters: 1(Long), admin(String), 登录(String), 35(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 20:46:28.271(Timestamp)
2019-05-22 20:46:28 -<==    Updates: 1
2019-05-22 20:46:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 20:46:28 -==> Parameters: 1(Long)
2019-05-22 20:46:28 -<==      Total: 49
2019-05-22 20:46:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 20:46:28 -==> Parameters: 138(Long)
2019-05-22 20:46:28 -<==      Total: 1
2019-05-22 20:46:28 -耗时 : 272
2019-05-22 20:46:28 -返回值 : index_v1
2019-05-22 20:46:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 20:46:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 272(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 20:46:28.58(Timestamp)
2019-05-22 20:46:28 -请求地址 : http://localhost:8081/main
2019-05-22 20:46:28 -HTTP METHOD : GET
2019-05-22 20:46:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 20:46:28 -参数 : []
2019-05-22 20:46:28 -耗时 : 0
2019-05-22 20:46:28 -返回值 : main
2019-05-22 20:46:28 -<==    Updates: 1
2019-05-22 20:46:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 20:46:29 -HTTP METHOD : GET
2019-05-22 20:46:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 20:46:29 -参数 : []
2019-05-22 20:46:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 20:46:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 20:46:29 -请求地址 : http://localhost:8081/main
2019-05-22 20:46:29 -HTTP METHOD : GET
2019-05-22 20:46:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 20:46:29 -参数 : []
2019-05-22 20:46:29 -耗时 : 0
2019-05-22 20:46:29 -返回值 : main
2019-05-22 20:46:30 -<==      Total: 0
2019-05-22 20:46:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 20:46:30 -==> Parameters: 1(Long), 0(String)
2019-05-22 20:46:30 -<==      Total: 1
2019-05-22 20:46:30 -耗时 : 1171
2019-05-22 20:46:30 -返回值 : com.bootdo.common.utils.PageUtils@13b2325c
2019-05-22 20:46:40 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 20:46:40 -==> Parameters: 1(Long)
2019-05-22 20:46:40 -<==      Total: 93
2019-05-22 20:46:40 -请求地址 : http://localhost:8081/charts/countYY
2019-05-22 20:46:40 -HTTP METHOD : GET
2019-05-22 20:46:40 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-22 20:46:40 -参数 : []
2019-05-22 20:46:40 -耗时 : 0
2019-05-22 20:46:40 -返回值 : charts/countYY
2019-05-22 20:46:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 20:46:41 -HTTP METHOD : GET
2019-05-22 20:46:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 20:46:41 -参数 : [userType]
2019-05-22 20:46:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 20:46:41 -==> Parameters: userType(String)
2019-05-22 20:46:41 -<==      Total: 4
2019-05-22 20:46:41 -耗时 : 68
2019-05-22 20:46:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 20:46:43 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-22 20:46:43 -HTTP METHOD : GET
2019-05-22 20:46:43 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-22 20:46:43 -参数 : []
2019-05-22 20:46:43 -耗时 : 35
2019-05-22 20:46:43 -返回值 : charts/tableElecMM
2019-05-22 20:46:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 20:46:43 -HTTP METHOD : GET
2019-05-22 20:46:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 20:46:43 -参数 : [userType]
2019-05-22 20:46:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 20:46:43 -==> Parameters: userType(String)
2019-05-22 20:46:43 -<==      Total: 4
2019-05-22 20:46:43 -耗时 : 9
2019-05-22 20:46:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 20:46:45 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 20:46:45 -HTTP METHOD : GET
2019-05-22 20:46:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 20:46:45 -参数 : []
2019-05-22 20:46:45 -耗时 : 1
2019-05-22 20:46:45 -返回值 : charts/tableElecYY
2019-05-22 20:46:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 20:46:45 -HTTP METHOD : GET
2019-05-22 20:46:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 20:46:45 -参数 : [userType]
2019-05-22 20:46:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 20:46:45 -==> Parameters: userType(String)
2019-05-22 20:46:45 -<==      Total: 4
2019-05-22 20:46:45 -耗时 : 5
2019-05-22 20:46:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 20:46:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 20:46:48 -HTTP METHOD : GET
2019-05-22 20:46:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 20:46:48 -参数 : []
2019-05-22 20:46:48 -耗时 : 0
2019-05-22 20:46:48 -返回值 : system/dept/deptTree
2019-05-22 20:46:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 20:46:48 -HTTP METHOD : GET
2019-05-22 20:46:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 20:46:48 -参数 : []
2019-05-22 20:46:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 20:46:48 -==> Parameters: 
2019-05-22 20:46:48 -<==      Total: 3
2019-05-22 20:46:48 -耗时 : 66
2019-05-22 20:46:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 20:46:50 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 20:46:50 -HTTP METHOD : POST
2019-05-22 20:46:50 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 20:46:50 -参数 : [com.bootdo.elec.vo.ElecVo@41f03855, com.bootdo.moneyLog.vo.ElecLogVo@6e10f7fd]
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:46:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:46:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:46:50 -<==      Total: 1
2019-05-22 20:47:09 -耗时 : 4026098
2019-05-22 20:47:09 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, WGElecCostYYCount=0, TotalLogyu=4634, ZTotalhuNew=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-22 20:47:09 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [org.apache.shiro.session.UnknownSessionException: There is no session with id [3bf4c4ad-b63e-451e-aacd-1d050dadc31f]] with root cause
org.apache.shiro.session.UnknownSessionException: There is no session with id [3bf4c4ad-b63e-451e-aacd-1d050dadc31f]
	at org.apache.shiro.session.mgt.eis.AbstractSessionDAO.readSession(AbstractSessionDAO.java:170)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSessionFromDataSource(DefaultSessionManager.java:236)
	at org.apache.shiro.session.mgt.DefaultSessionManager.retrieveSession(DefaultSessionManager.java:222)
	at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:118)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:148)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:152)
	at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:249)
	at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141)
	at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)
	at org.apache.shiro.subject.support.DelegatingSubject.getRunAsPrincipalsStack(DelegatingSubject.java:469)
	at org.apache.shiro.subject.support.DelegatingSubject.getPrincipals(DelegatingSubject.java:153)
	at org.apache.shiro.subject.support.DelegatingSubject.getPrincipal(DelegatingSubject.java:149)
	at org.apache.shiro.web.servlet.ShiroHttpServletRequest.getSubjectPrincipal(ShiroHttpServletRequest.java:96)
	at org.apache.shiro.web.servlet.ShiroHttpServletRequest.getUserPrincipal(ShiroHttpServletRequest.java:112)
	at org.springframework.web.servlet.FrameworkServlet.getUsernameForRequest(FrameworkServlet.java:1093)
	at org.springframework.web.servlet.FrameworkServlet.publishRequestHandledEvent(FrameworkServlet.java:1078)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-22 20:47:09 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:400)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-22 20:47:09 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1100)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:915)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:272)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 41 common frames omitted
2019-05-22 20:47:27 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 20:47:27 -==> Parameters: 
2019-05-22 20:47:27 -<==      Total: 2
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:33 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:33 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:33 -<==      Total: 1
2019-05-22 20:54:35 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 20:54:35 -==> Parameters: 
2019-05-22 20:54:35 -<==      Total: 2
2019-05-22 20:54:35 -耗时 : 465230
2019-05-22 20:54:35 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, WGElecCostYYCount=0, TotalLogyu=4634, ZTotalhuNew=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-22 20:54:45 -请求地址 : http://localhost:8081/index
2019-05-22 20:54:45 -HTTP METHOD : GET
2019-05-22 20:54:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 20:54:45 -参数 : [{}]
2019-05-22 20:54:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 20:54:45 -==> Parameters: 1(Long)
2019-05-22 20:54:45 -<==      Total: 49
2019-05-22 20:54:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 20:54:45 -==> Parameters: 138(Long)
2019-05-22 20:54:45 -<==      Total: 1
2019-05-22 20:54:45 -耗时 : 57
2019-05-22 20:54:45 -返回值 : index_v1
2019-05-22 20:54:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 20:54:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 58(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 20:54:45.338(Timestamp)
2019-05-22 20:54:45 -请求地址 : http://localhost:8081/main
2019-05-22 20:54:45 -HTTP METHOD : GET
2019-05-22 20:54:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 20:54:45 -参数 : []
2019-05-22 20:54:45 -耗时 : 1
2019-05-22 20:54:45 -返回值 : main
2019-05-22 20:54:45 -<==    Updates: 1
2019-05-22 20:54:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 20:54:45 -HTTP METHOD : GET
2019-05-22 20:54:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 20:54:45 -参数 : []
2019-05-22 20:54:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 20:54:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 20:54:45 -<==      Total: 0
2019-05-22 20:54:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 20:54:45 -==> Parameters: 1(Long), 0(String)
2019-05-22 20:54:45 -<==      Total: 1
2019-05-22 20:54:45 -耗时 : 14
2019-05-22 20:54:45 -返回值 : com.bootdo.common.utils.PageUtils@5a7ed408
2019-05-22 20:54:45 -请求地址 : http://localhost:8081/main
2019-05-22 20:54:45 -HTTP METHOD : GET
2019-05-22 20:54:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 20:54:45 -参数 : []
2019-05-22 20:54:45 -耗时 : 0
2019-05-22 20:54:45 -返回值 : main
2019-05-22 20:54:47 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 20:54:47 -HTTP METHOD : GET
2019-05-22 20:54:47 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 20:54:47 -参数 : []
2019-05-22 20:54:47 -耗时 : 0
2019-05-22 20:54:47 -返回值 : charts/tableElecYY
2019-05-22 20:54:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 20:54:48 -HTTP METHOD : GET
2019-05-22 20:54:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 20:54:48 -参数 : [userType]
2019-05-22 20:54:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 20:54:48 -==> Parameters: userType(String)
2019-05-22 20:54:48 -<==      Total: 4
2019-05-22 20:54:48 -耗时 : 4
2019-05-22 20:54:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 20:54:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 20:54:50 -HTTP METHOD : GET
2019-05-22 20:54:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 20:54:50 -参数 : []
2019-05-22 20:54:50 -耗时 : 0
2019-05-22 20:54:50 -返回值 : system/dept/deptTree
2019-05-22 20:54:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 20:54:50 -HTTP METHOD : GET
2019-05-22 20:54:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 20:54:50 -参数 : []
2019-05-22 20:54:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 20:54:50 -==> Parameters: 
2019-05-22 20:54:50 -<==      Total: 3
2019-05-22 20:54:50 -耗时 : 4
2019-05-22 20:54:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 20:54:53 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 20:54:53 -HTTP METHOD : POST
2019-05-22 20:54:53 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 20:54:53 -参数 : [com.bootdo.elec.vo.ElecVo@20080fc6, com.bootdo.moneyLog.vo.ElecLogVo@700ab486]
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:54:53 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:54:53 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:54:53 -<==      Total: 1
2019-05-22 20:55:02 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 20:55:02 -==> Parameters: 
2019-05-22 20:55:02 -<==      Total: 2
2019-05-22 20:57:42 -耗时 : 168811
2019-05-22 20:57:42 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, WGElecCostYYCount=0, TotalLogyu=4634, ZTotalhuNew=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-22 20:57:49 -请求地址 : http://localhost:8081/index
2019-05-22 20:57:49 -HTTP METHOD : GET
2019-05-22 20:57:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 20:57:49 -参数 : [{}]
2019-05-22 20:57:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 20:57:49 -==> Parameters: 1(Long)
2019-05-22 20:57:49 -<==      Total: 49
2019-05-22 20:57:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 20:57:49 -==> Parameters: 138(Long)
2019-05-22 20:57:49 -<==      Total: 1
2019-05-22 20:57:49 -耗时 : 74
2019-05-22 20:57:49 -返回值 : index_v1
2019-05-22 20:57:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 20:57:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 74(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 20:57:49.632(Timestamp)
2019-05-22 20:57:49 -<==    Updates: 1
2019-05-22 20:57:49 -请求地址 : http://localhost:8081/main
2019-05-22 20:57:49 -HTTP METHOD : GET
2019-05-22 20:57:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 20:57:49 -参数 : []
2019-05-22 20:57:49 -耗时 : 0
2019-05-22 20:57:49 -返回值 : main
2019-05-22 20:57:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 20:57:49 -HTTP METHOD : GET
2019-05-22 20:57:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 20:57:49 -参数 : []
2019-05-22 20:57:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 20:57:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 20:57:50 -<==      Total: 0
2019-05-22 20:57:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 20:57:50 -==> Parameters: 1(Long), 0(String)
2019-05-22 20:57:50 -<==      Total: 1
2019-05-22 20:57:50 -耗时 : 62
2019-05-22 20:57:50 -返回值 : com.bootdo.common.utils.PageUtils@78ff777a
2019-05-22 20:57:50 -请求地址 : http://localhost:8081/main
2019-05-22 20:57:50 -HTTP METHOD : GET
2019-05-22 20:57:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 20:57:50 -参数 : []
2019-05-22 20:57:50 -耗时 : 1
2019-05-22 20:57:50 -返回值 : main
2019-05-22 20:57:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 20:57:56 -==> Parameters: 1(Long)
2019-05-22 20:57:56 -<==      Total: 93
2019-05-22 20:57:56 -请求地址 : http://localhost:8081/charts/countYY
2019-05-22 20:57:56 -HTTP METHOD : GET
2019-05-22 20:57:56 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-22 20:57:56 -参数 : []
2019-05-22 20:57:56 -耗时 : 1
2019-05-22 20:57:56 -返回值 : charts/countYY
2019-05-22 20:57:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 20:57:57 -HTTP METHOD : GET
2019-05-22 20:57:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 20:57:57 -参数 : [userType]
2019-05-22 20:57:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 20:57:57 -==> Parameters: userType(String)
2019-05-22 20:57:57 -<==      Total: 4
2019-05-22 20:57:57 -耗时 : 4
2019-05-22 20:57:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 20:57:58 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 20:57:58 -HTTP METHOD : GET
2019-05-22 20:57:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 20:57:58 -参数 : []
2019-05-22 20:57:58 -耗时 : 0
2019-05-22 20:57:58 -返回值 : charts/tableElecYY
2019-05-22 20:57:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 20:57:58 -HTTP METHOD : GET
2019-05-22 20:57:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 20:57:58 -参数 : [userType]
2019-05-22 20:57:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 20:57:58 -==> Parameters: userType(String)
2019-05-22 20:57:58 -<==      Total: 4
2019-05-22 20:57:58 -耗时 : 6
2019-05-22 20:57:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 20:58:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 20:58:01 -HTTP METHOD : GET
2019-05-22 20:58:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 20:58:01 -参数 : []
2019-05-22 20:58:01 -耗时 : 1
2019-05-22 20:58:01 -返回值 : system/dept/deptTree
2019-05-22 20:58:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 20:58:02 -HTTP METHOD : GET
2019-05-22 20:58:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 20:58:02 -参数 : []
2019-05-22 20:58:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 20:58:02 -==> Parameters: 
2019-05-22 20:58:02 -<==      Total: 3
2019-05-22 20:58:02 -耗时 : 4
2019-05-22 20:58:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 20:58:05 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 20:58:05 -HTTP METHOD : POST
2019-05-22 20:58:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 20:58:05 -参数 : [com.bootdo.elec.vo.ElecVo@16793123, com.bootdo.moneyLog.vo.ElecLogVo@34ac546e]
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:05 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:05 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:05 -<==      Total: 1
2019-05-22 20:58:25 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 20:58:25 -==> Parameters: 
2019-05-22 20:58:25 -<==      Total: 2
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:55 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:58:55 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:58:55 -<==      Total: 1
2019-05-22 20:58:56 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 20:58:56 -==> Parameters: 
2019-05-22 20:58:56 -<==      Total: 2
2019-05-22 20:58:56 -耗时 : 51330
2019-05-22 20:58:56 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, WGElecCostYYCount=0, TotalLogyu=4634, ZTotalhuNew=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-22 20:59:01 -请求地址 : http://localhost:8081/index
2019-05-22 20:59:01 -HTTP METHOD : GET
2019-05-22 20:59:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 20:59:01 -参数 : [{}]
2019-05-22 20:59:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 20:59:01 -==> Parameters: 1(Long)
2019-05-22 20:59:01 -<==      Total: 49
2019-05-22 20:59:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 20:59:01 -==> Parameters: 138(Long)
2019-05-22 20:59:01 -<==      Total: 1
2019-05-22 20:59:01 -耗时 : 39
2019-05-22 20:59:01 -返回值 : index_v1
2019-05-22 20:59:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 20:59:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 20:59:01.238(Timestamp)
2019-05-22 20:59:01 -<==    Updates: 1
2019-05-22 20:59:01 -请求地址 : http://localhost:8081/main
2019-05-22 20:59:01 -HTTP METHOD : GET
2019-05-22 20:59:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 20:59:01 -参数 : []
2019-05-22 20:59:01 -耗时 : 0
2019-05-22 20:59:01 -返回值 : main
2019-05-22 20:59:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 20:59:01 -HTTP METHOD : GET
2019-05-22 20:59:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 20:59:01 -参数 : []
2019-05-22 20:59:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 20:59:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 20:59:01 -<==      Total: 0
2019-05-22 20:59:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 20:59:01 -==> Parameters: 1(Long), 0(String)
2019-05-22 20:59:01 -<==      Total: 1
2019-05-22 20:59:01 -耗时 : 12
2019-05-22 20:59:01 -返回值 : com.bootdo.common.utils.PageUtils@37ed2285
2019-05-22 20:59:01 -请求地址 : http://localhost:8081/main
2019-05-22 20:59:01 -HTTP METHOD : GET
2019-05-22 20:59:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 20:59:01 -参数 : []
2019-05-22 20:59:01 -耗时 : 0
2019-05-22 20:59:01 -返回值 : main
2019-05-22 20:59:12 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 20:59:12 -HTTP METHOD : GET
2019-05-22 20:59:12 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 20:59:12 -参数 : []
2019-05-22 20:59:12 -耗时 : 1
2019-05-22 20:59:12 -返回值 : charts/tableElecYY
2019-05-22 20:59:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 20:59:13 -HTTP METHOD : GET
2019-05-22 20:59:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 20:59:13 -参数 : [userType]
2019-05-22 20:59:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 20:59:13 -==> Parameters: userType(String)
2019-05-22 20:59:13 -<==      Total: 4
2019-05-22 20:59:13 -耗时 : 4
2019-05-22 20:59:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 20:59:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 20:59:16 -HTTP METHOD : GET
2019-05-22 20:59:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 20:59:16 -参数 : []
2019-05-22 20:59:16 -耗时 : 0
2019-05-22 20:59:16 -返回值 : system/dept/deptTree
2019-05-22 20:59:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 20:59:16 -HTTP METHOD : GET
2019-05-22 20:59:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 20:59:16 -参数 : []
2019-05-22 20:59:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 20:59:16 -==> Parameters: 
2019-05-22 20:59:16 -<==      Total: 3
2019-05-22 20:59:16 -耗时 : 5
2019-05-22 20:59:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 20:59:19 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 20:59:19 -HTTP METHOD : POST
2019-05-22 20:59:19 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 20:59:19 -参数 : [com.bootdo.elec.vo.ElecVo@18adb798, com.bootdo.moneyLog.vo.ElecLogVo@21a17328]
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:19 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 20:59:19 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 20:59:19 -<==      Total: 1
2019-05-22 20:59:22 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 20:59:22 -==> Parameters: 
2019-05-22 20:59:22 -<==      Total: 2
2019-05-22 21:00:08 -Starting BootdoApplication on PC-201905091110 with PID 19132 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-22 21:00:08 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-22 21:00:08 -The following profiles are active: dev
2019-05-22 21:00:08 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76c7beb3: startup date [Wed May 22 21:00:08 CST 2019]; root of context hierarchy
2019-05-22 21:00:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-22 21:00:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$974c3f17] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 21:00:20 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$89a56dbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 21:00:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 21:00:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 21:00:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 21:00:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-22 21:00:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-22 21:00:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 21:00:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 21:00:23 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 21:00:23 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-22 21:00:24 -Tomcat initialized with port(s): 8081 (http)
2019-05-22 21:00:24 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-22 21:00:24 -Starting service [Tomcat]
2019-05-22 21:00:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-22 21:00:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-22 21:00:25 -Initializing Spring embedded WebApplicationContext
2019-05-22 21:00:25 -Root WebApplicationContext: initialization completed in 16979 ms
2019-05-22 21:00:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-22 21:00:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-22 21:00:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-22 21:00:26 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-22 21:00:26 -Filter xssFilter was not registered (disabled)
2019-05-22 21:00:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-22 21:00:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-22 21:00:26 -Servlet statViewServlet mapped to [/druid/*]
2019-05-22 21:00:26 -Servlet dispatcherServlet mapped to [/]
2019-05-22 21:00:32 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76c7beb3: startup date [Wed May 22 21:00:08 CST 2019]; root of context hierarchy
2019-05-22 21:00:33 -Using default implementation for ThreadExecutor
2019-05-22 21:00:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-22 21:00:33 -Quartz Scheduler v.2.2.1 created.
2019-05-22 21:00:33 -RAMJobStore initialized.
2019-05-22 21:00:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-22 21:00:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-22 21:00:33 -Quartz scheduler version: 2.2.1
2019-05-22 21:00:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@19d9ba89
2019-05-22 21:00:34 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-22 21:00:34 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-22 21:00:37 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 21:00:37 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-22 21:00:37 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:37 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:37 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-22 21:00:37 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 21:00:37 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-22 21:00:37 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-22 21:00:37 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:37 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 21:00:37 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-22 21:00:37 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:37 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-22 21:00:37 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 21:00:37 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:37 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-22 21:00:37 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:37 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 21:00:37 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 21:00:37 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-22 21:00:37 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:37 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-22 21:00:37 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-22 21:00:37 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:37 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 21:00:37 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-22 21:00:37 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:37 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-22 21:00:37 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-22 21:00:37 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:37 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 21:00:37 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-22 21:00:37 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:37 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-22 21:00:37 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-22 21:00:37 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-22 21:00:38 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-22 21:00:38 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-22 21:00:38 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-22 21:00:38 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-22 21:00:38 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-22 21:00:38 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-22 21:00:38 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-22 21:00:38 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-22 21:00:38 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-22 21:00:38 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-22 21:00:38 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-22 21:00:38 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-22 21:00:38 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 21:00:38 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-22 21:00:38 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-22 21:00:38 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-22 21:00:38 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-22 21:00:38 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-22 21:00:38 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-22 21:00:38 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-22 21:00:38 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-22 21:00:38 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-22 21:00:38 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-22 21:00:38 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-22 21:00:38 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-22 21:00:38 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-22 21:00:38 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-22 21:00:38 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-22 21:00:38 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-22 21:00:38 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 21:00:38 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-22 21:00:38 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-22 21:00:38 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-22 21:00:38 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-22 21:00:38 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-22 21:00:38 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-22 21:00:38 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-22 21:00:38 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-22 21:00:38 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-22 21:00:38 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-22 21:00:38 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-22 21:00:38 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-22 21:00:38 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-22 21:00:38 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 21:00:38 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-22 21:00:38 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 21:00:38 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-22 21:00:38 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-22 21:00:38 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-22 21:00:38 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 21:00:38 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-22 21:00:38 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 21:00:38 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-22 21:00:38 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 21:00:38 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-22 21:00:38 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-22 21:00:38 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-22 21:00:38 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-22 21:00:38 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-22 21:00:38 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-22 21:00:38 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-22 21:00:38 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-22 21:00:38 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-22 21:00:38 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-22 21:00:38 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-22 21:00:38 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-22 21:00:38 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-22 21:00:38 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-22 21:00:38 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-22 21:00:38 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-22 21:00:38 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-22 21:00:38 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-22 21:00:38 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-22 21:00:38 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-22 21:00:38 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-22 21:00:38 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-22 21:00:38 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-22 21:00:38 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-22 21:00:38 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-22 21:00:38 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-22 21:00:38 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-22 21:00:38 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 21:00:38 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-22 21:00:38 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-22 21:00:38 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-22 21:00:38 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-22 21:00:38 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-22 21:00:38 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-22 21:00:38 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-22 21:00:38 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-22 21:00:38 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-22 21:00:38 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-22 21:00:38 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-22 21:00:38 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-22 21:00:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-22 21:00:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-22 21:00:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-22 21:00:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-22 21:00:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 21:00:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 21:00:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-22 21:00:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-22 21:00:38 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-22 21:00:38 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-22 21:00:38 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-22 21:00:38 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-22 21:00:38 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-22 21:00:38 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-22 21:00:38 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-22 21:00:38 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-22 21:00:38 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-22 21:00:38 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-22 21:00:38 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 21:00:38 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-22 21:00:38 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-22 21:00:38 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-22 21:00:38 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-22 21:00:38 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-22 21:00:38 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-22 21:00:38 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-22 21:00:38 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-22 21:00:38 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-22 21:00:38 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-22 21:00:38 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-22 21:00:38 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-22 21:00:39 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-22 21:00:39 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-22 21:00:39 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-22 21:00:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 21:00:40 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76c7beb3: startup date [Wed May 22 21:00:08 CST 2019]; root of context hierarchy
2019-05-22 21:00:40 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 21:00:40 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 21:00:40 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-22 21:00:40 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-22 21:00:41 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-22 21:00:45 -Registering beans for JMX exposure on startup
2019-05-22 21:00:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-22 21:00:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-22 21:00:46 -Starting beans in phase 2147483647
2019-05-22 21:00:46 -Context refreshed
2019-05-22 21:00:46 -Found 1 custom documentation plugin(s)
2019-05-22 21:00:46 -Scanning for api listing references
2019-05-22 21:00:47 -Generating unique operation named: getCountDUsingPOST_1
2019-05-22 21:00:47 -Generating unique operation named: removeUsingPOST_1
2019-05-22 21:00:47 -Generating unique operation named: addUsingGET_1
2019-05-22 21:00:47 -Generating unique operation named: editUsingGET_1
2019-05-22 21:00:47 -Generating unique operation named: listUsingGET_1
2019-05-22 21:00:47 -Generating unique operation named: removeUsingPOST_2
2019-05-22 21:00:47 -Generating unique operation named: removeUsingPOST_3
2019-05-22 21:00:47 -Generating unique operation named: saveUsingPOST_1
2019-05-22 21:00:47 -Generating unique operation named: updateUsingGET_1
2019-05-22 21:00:47 -Generating unique operation named: updateUsingHEAD_1
2019-05-22 21:00:47 -Generating unique operation named: updateUsingPOST_1
2019-05-22 21:00:47 -Generating unique operation named: updateUsingPUT_1
2019-05-22 21:00:47 -Generating unique operation named: updateUsingPATCH_1
2019-05-22 21:00:47 -Generating unique operation named: updateUsingDELETE_1
2019-05-22 21:00:47 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-22 21:00:47 -Generating unique operation named: updateUsingTRACE_1
2019-05-22 21:00:48 -Generating unique operation named: addUsingGET_2
2019-05-22 21:00:48 -Generating unique operation named: editUsingGET_2
2019-05-22 21:00:48 -Generating unique operation named: listUsingGET_2
2019-05-22 21:00:48 -Generating unique operation named: removeUsingPOST_4
2019-05-22 21:00:48 -Generating unique operation named: removeUsingPOST_5
2019-05-22 21:00:48 -Generating unique operation named: saveUsingPOST_2
2019-05-22 21:00:48 -Generating unique operation named: updateUsingPOST_2
2019-05-22 21:00:48 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-22 21:00:48 -Generating unique operation named: addUsingGET_3
2019-05-22 21:00:48 -Generating unique operation named: editUsingGET_3
2019-05-22 21:00:48 -Generating unique operation named: listUsingGET_3
2019-05-22 21:00:48 -Generating unique operation named: removeUsingPOST_6
2019-05-22 21:00:48 -Generating unique operation named: removeUsingPOST_7
2019-05-22 21:00:48 -Generating unique operation named: saveUsingPOST_3
2019-05-22 21:00:48 -Generating unique operation named: updateUsingGET_2
2019-05-22 21:00:48 -Generating unique operation named: updateUsingHEAD_2
2019-05-22 21:00:48 -Generating unique operation named: updateUsingPOST_3
2019-05-22 21:00:48 -Generating unique operation named: updateUsingPUT_2
2019-05-22 21:00:48 -Generating unique operation named: updateUsingPATCH_2
2019-05-22 21:00:48 -Generating unique operation named: updateUsingDELETE_2
2019-05-22 21:00:48 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-22 21:00:48 -Generating unique operation named: updateUsingTRACE_2
2019-05-22 21:00:48 -Generating unique operation named: addUsingGET_4
2019-05-22 21:00:48 -Generating unique operation named: editUsingGET_4
2019-05-22 21:00:48 -Generating unique operation named: listUsingGET_4
2019-05-22 21:00:48 -Generating unique operation named: removeUsingPOST_8
2019-05-22 21:00:48 -Generating unique operation named: removeUsingPOST_9
2019-05-22 21:00:48 -Generating unique operation named: saveUsingPOST_4
2019-05-22 21:00:48 -Generating unique operation named: updateUsingGET_3
2019-05-22 21:00:48 -Generating unique operation named: updateUsingHEAD_3
2019-05-22 21:00:48 -Generating unique operation named: updateUsingPOST_4
2019-05-22 21:00:48 -Generating unique operation named: updateUsingPUT_3
2019-05-22 21:00:48 -Generating unique operation named: updateUsingPATCH_3
2019-05-22 21:00:48 -Generating unique operation named: updateUsingDELETE_3
2019-05-22 21:00:48 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-22 21:00:48 -Generating unique operation named: updateUsingTRACE_3
2019-05-22 21:00:48 -Generating unique operation named: ElecUsingGET_1
2019-05-22 21:00:48 -Generating unique operation named: addUsingGET_5
2019-05-22 21:00:48 -Generating unique operation named: editUsingGET_5
2019-05-22 21:00:48 -Generating unique operation named: listUsingGET_5
2019-05-22 21:00:48 -Generating unique operation named: removeUsingPOST_10
2019-05-22 21:00:48 -Generating unique operation named: removeUsingPOST_11
2019-05-22 21:00:48 -Generating unique operation named: saveUsingPOST_5
2019-05-22 21:00:48 -Generating unique operation named: updateUsingGET_4
2019-05-22 21:00:48 -Generating unique operation named: updateUsingHEAD_4
2019-05-22 21:00:48 -Generating unique operation named: updateUsingPOST_5
2019-05-22 21:00:48 -Generating unique operation named: updateUsingPUT_4
2019-05-22 21:00:48 -Generating unique operation named: updateUsingPATCH_4
2019-05-22 21:00:48 -Generating unique operation named: updateUsingDELETE_4
2019-05-22 21:00:48 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-22 21:00:48 -Generating unique operation named: updateUsingTRACE_4
2019-05-22 21:00:49 -Generating unique operation named: editUsingGET_6
2019-05-22 21:00:49 -Generating unique operation named: listUsingGET_6
2019-05-22 21:00:49 -Generating unique operation named: updateUsingPOST_6
2019-05-22 21:00:49 -Generating unique operation named: addUsingGET_6
2019-05-22 21:00:49 -Generating unique operation named: editUsingGET_7
2019-05-22 21:00:49 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-22 21:00:49 -Generating unique operation named: listUsingGET_7
2019-05-22 21:00:49 -Generating unique operation named: removeUsingPOST_12
2019-05-22 21:00:49 -Generating unique operation named: removeUsingPOST_13
2019-05-22 21:00:49 -Generating unique operation named: saveUsingPOST_6
2019-05-22 21:00:49 -Generating unique operation named: updateUsingGET_5
2019-05-22 21:00:49 -Generating unique operation named: updateUsingHEAD_5
2019-05-22 21:00:49 -Generating unique operation named: updateUsingPOST_7
2019-05-22 21:00:49 -Generating unique operation named: updateUsingPUT_5
2019-05-22 21:00:49 -Generating unique operation named: updateUsingPATCH_5
2019-05-22 21:00:49 -Generating unique operation named: updateUsingDELETE_5
2019-05-22 21:00:49 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-22 21:00:49 -Generating unique operation named: updateUsingTRACE_5
2019-05-22 21:00:49 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-22 21:00:49 -Generating unique operation named: addUsingGET_7
2019-05-22 21:00:49 -Generating unique operation named: editUsingGET_8
2019-05-22 21:00:49 -Generating unique operation named: listUsingGET_8
2019-05-22 21:00:49 -Generating unique operation named: removeUsingPOST_14
2019-05-22 21:00:49 -Generating unique operation named: removeUsingPOST_15
2019-05-22 21:00:49 -Generating unique operation named: saveUsingPOST_7
2019-05-22 21:00:49 -Generating unique operation named: updateUsingGET_6
2019-05-22 21:00:49 -Generating unique operation named: updateUsingHEAD_6
2019-05-22 21:00:49 -Generating unique operation named: updateUsingPOST_8
2019-05-22 21:00:49 -Generating unique operation named: updateUsingPUT_6
2019-05-22 21:00:49 -Generating unique operation named: updateUsingPATCH_6
2019-05-22 21:00:49 -Generating unique operation named: updateUsingDELETE_6
2019-05-22 21:00:49 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-22 21:00:49 -Generating unique operation named: updateUsingTRACE_6
2019-05-22 21:00:49 -Generating unique operation named: addUsingGET_8
2019-05-22 21:00:49 -Generating unique operation named: editUsingGET_9
2019-05-22 21:00:49 -Generating unique operation named: listUsingGET_9
2019-05-22 21:00:49 -Generating unique operation named: removeUsingPOST_16
2019-05-22 21:00:49 -Generating unique operation named: removeUsingPOST_17
2019-05-22 21:00:49 -Generating unique operation named: saveUsingPOST_8
2019-05-22 21:00:49 -Generating unique operation named: updateUsingGET_7
2019-05-22 21:00:49 -Generating unique operation named: updateUsingHEAD_7
2019-05-22 21:00:49 -Generating unique operation named: updateUsingPOST_9
2019-05-22 21:00:49 -Generating unique operation named: updateUsingPUT_7
2019-05-22 21:00:49 -Generating unique operation named: updateUsingPATCH_7
2019-05-22 21:00:49 -Generating unique operation named: updateUsingDELETE_7
2019-05-22 21:00:49 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-22 21:00:49 -Generating unique operation named: updateUsingTRACE_7
2019-05-22 21:00:49 -Generating unique operation named: addUsingGET_9
2019-05-22 21:00:49 -Generating unique operation named: editUsingGET_10
2019-05-22 21:00:49 -Generating unique operation named: infoUsingGET_1
2019-05-22 21:00:49 -Generating unique operation named: infoUsingHEAD_1
2019-05-22 21:00:49 -Generating unique operation named: infoUsingPOST_1
2019-05-22 21:00:49 -Generating unique operation named: infoUsingPUT_1
2019-05-22 21:00:49 -Generating unique operation named: infoUsingPATCH_1
2019-05-22 21:00:49 -Generating unique operation named: infoUsingDELETE_1
2019-05-22 21:00:49 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-22 21:00:49 -Generating unique operation named: infoUsingTRACE_1
2019-05-22 21:00:49 -Generating unique operation named: listUsingGET_10
2019-05-22 21:00:49 -Generating unique operation named: removeUsingPOST_18
2019-05-22 21:00:49 -Generating unique operation named: removeUsingPOST_19
2019-05-22 21:00:49 -Generating unique operation named: saveUsingPOST_9
2019-05-22 21:00:49 -Generating unique operation named: updateUsingPOST_10
2019-05-22 21:00:49 -Generating unique operation named: listUsingGET_11
2019-05-22 21:00:49 -Generating unique operation named: removeUsingPOST_20
2019-05-22 21:00:49 -Generating unique operation named: welcomeUsingGET_1
2019-05-22 21:00:49 -Generating unique operation named: addUsingGET_10
2019-05-22 21:00:49 -Generating unique operation named: editUsingGET_11
2019-05-22 21:00:49 -Generating unique operation named: listUsingGET_12
2019-05-22 21:00:50 -Generating unique operation named: removeUsingPOST_21
2019-05-22 21:00:50 -Generating unique operation named: saveUsingPOST_10
2019-05-22 21:00:50 -Generating unique operation named: treeUsingGET_1
2019-05-22 21:00:50 -Generating unique operation named: treeUsingGET_2
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPOST_11
2019-05-22 21:00:50 -Generating unique operation named: editUsingGET_12
2019-05-22 21:00:50 -Generating unique operation named: addUsingGET_11
2019-05-22 21:00:50 -Generating unique operation named: editUsingGET_13
2019-05-22 21:00:50 -Generating unique operation named: listUsingGET_13
2019-05-22 21:00:50 -Generating unique operation named: removeUsingPOST_22
2019-05-22 21:00:50 -Generating unique operation named: removeUsingPOST_23
2019-05-22 21:00:50 -Generating unique operation named: saveUsingPOST_11
2019-05-22 21:00:50 -Generating unique operation named: updateUsingGET_8
2019-05-22 21:00:50 -Generating unique operation named: updateUsingHEAD_8
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPOST_12
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPUT_8
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPATCH_8
2019-05-22 21:00:50 -Generating unique operation named: updateUsingDELETE_8
2019-05-22 21:00:50 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-22 21:00:50 -Generating unique operation named: updateUsingTRACE_8
2019-05-22 21:00:50 -Generating unique operation named: addUsingGET_12
2019-05-22 21:00:50 -Generating unique operation named: editUsingGET_14
2019-05-22 21:00:50 -Generating unique operation named: listUsingGET_14
2019-05-22 21:00:50 -Generating unique operation named: removeUsingPOST_24
2019-05-22 21:00:50 -Generating unique operation named: removeUsingPOST_25
2019-05-22 21:00:50 -Generating unique operation named: saveUsingPOST_12
2019-05-22 21:00:50 -Generating unique operation named: updateUsingGET_9
2019-05-22 21:00:50 -Generating unique operation named: updateUsingHEAD_9
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPOST_13
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPUT_9
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPATCH_9
2019-05-22 21:00:50 -Generating unique operation named: updateUsingDELETE_9
2019-05-22 21:00:50 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-22 21:00:50 -Generating unique operation named: updateUsingTRACE_9
2019-05-22 21:00:50 -Generating unique operation named: addUsingGET_13
2019-05-22 21:00:50 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-22 21:00:50 -Generating unique operation named: editUsingGET_15
2019-05-22 21:00:50 -Generating unique operation named: listUsingGET_15
2019-05-22 21:00:50 -Generating unique operation named: saveUsingPOST_13
2019-05-22 21:00:50 -Generating unique operation named: saveUsingPOST_14
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPOST_14
2019-05-22 21:00:50 -Generating unique operation named: listUsingGET_16
2019-05-22 21:00:50 -Generating unique operation named: listUsingHEAD_1
2019-05-22 21:00:50 -Generating unique operation named: listUsingPOST_1
2019-05-22 21:00:50 -Generating unique operation named: listUsingPUT_1
2019-05-22 21:00:50 -Generating unique operation named: listUsingPATCH_1
2019-05-22 21:00:50 -Generating unique operation named: listUsingDELETE_1
2019-05-22 21:00:50 -Generating unique operation named: listUsingOPTIONS_1
2019-05-22 21:00:50 -Generating unique operation named: listUsingTRACE_1
2019-05-22 21:00:50 -Generating unique operation named: countDDUsingGET_1
2019-05-22 21:00:50 -Generating unique operation named: exportDDUsingGET_1
2019-05-22 21:00:50 -Generating unique operation named: addUsingGET_14
2019-05-22 21:00:50 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-22 21:00:50 -Generating unique operation named: editUsingGET_16
2019-05-22 21:00:50 -Generating unique operation named: listUsingGET_17
2019-05-22 21:00:50 -Generating unique operation named: removeUsingPOST_26
2019-05-22 21:00:50 -Generating unique operation named: saveUsingPOST_15
2019-05-22 21:00:50 -Generating unique operation named: treeUsingGET_3
2019-05-22 21:00:50 -Generating unique operation named: treeViewUsingGET_1
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPOST_15
2019-05-22 21:00:50 -Generating unique operation named: addUsingGET_15
2019-05-22 21:00:50 -Generating unique operation named: editUsingGET_17
2019-05-22 21:00:50 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-22 21:00:50 -Generating unique operation named: listUsingGET_18
2019-05-22 21:00:50 -Generating unique operation named: removeUsingPOST_27
2019-05-22 21:00:50 -Generating unique operation named: removeUsingPOST_28
2019-05-22 21:00:50 -Generating unique operation named: saveUsingPOST_16
2019-05-22 21:00:50 -Generating unique operation named: updateUsingGET_10
2019-05-22 21:00:50 -Generating unique operation named: updateUsingHEAD_10
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPOST_16
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPUT_10
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPATCH_10
2019-05-22 21:00:50 -Generating unique operation named: updateUsingDELETE_10
2019-05-22 21:00:50 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-22 21:00:50 -Generating unique operation named: updateUsingTRACE_10
2019-05-22 21:00:50 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-22 21:00:50 -Generating unique operation named: addUsingGET_16
2019-05-22 21:00:50 -Generating unique operation named: editUsingGET_18
2019-05-22 21:00:50 -Generating unique operation named: listUsingGET_19
2019-05-22 21:00:50 -Generating unique operation named: removeUsingPOST_29
2019-05-22 21:00:50 -Generating unique operation named: removeUsingPOST_30
2019-05-22 21:00:50 -Generating unique operation named: saveUsingPOST_17
2019-05-22 21:00:50 -Generating unique operation named: updateUsingGET_11
2019-05-22 21:00:50 -Generating unique operation named: updateUsingHEAD_11
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPOST_17
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPUT_11
2019-05-22 21:00:50 -Generating unique operation named: updateUsingPATCH_11
2019-05-22 21:00:50 -Generating unique operation named: updateUsingDELETE_11
2019-05-22 21:00:50 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-22 21:00:50 -Generating unique operation named: updateUsingTRACE_11
2019-05-22 21:00:50 -Generating unique operation named: addUsingGET_17
2019-05-22 21:00:50 -Generating unique operation named: editUsingGET_19
2019-05-22 21:00:50 -Generating unique operation named: listUsingGET_20
2019-05-22 21:00:50 -Generating unique operation named: removeUsingPOST_31
2019-05-22 21:00:50 -Generating unique operation named: removeUsingPOST_32
2019-05-22 21:00:51 -Generating unique operation named: saveUsingPOST_18
2019-05-22 21:00:51 -Generating unique operation named: updateUsingGET_12
2019-05-22 21:00:51 -Generating unique operation named: updateUsingHEAD_12
2019-05-22 21:00:51 -Generating unique operation named: updateUsingPOST_18
2019-05-22 21:00:51 -Generating unique operation named: updateUsingPUT_12
2019-05-22 21:00:51 -Generating unique operation named: updateUsingPATCH_12
2019-05-22 21:00:51 -Generating unique operation named: updateUsingDELETE_12
2019-05-22 21:00:51 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-22 21:00:51 -Generating unique operation named: updateUsingTRACE_12
2019-05-22 21:00:51 -Starting Quartz Scheduler now
2019-05-22 21:00:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-22 21:00:51 -Starting...
2019-05-22 21:00:51 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-22 21:00:51 -Started.
2019-05-22 21:00:51 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-22 21:00:51 -Using a shared selector for servlet write/read
2019-05-22 21:00:51 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-22 21:00:51 -Started BootdoApplication in 46.735 seconds (JVM running for 49.303)
2019-05-22 21:00:51 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-22 21:00:52 -==> Parameters: 
2019-05-22 21:00:52 -<==      Total: 1
2019-05-22 21:01:01 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-22 21:01:01 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-22 21:01:01 -FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2019-05-22 21:01:01 -Enabling session validation scheduler...
2019-05-22 21:01:01 -请求地址 : http://localhost:8081/login;JSESSIONID=b24b47d2-54d5-40c1-8314-548d59327bbe
2019-05-22 21:01:01 -HTTP METHOD : GET
2019-05-22 21:01:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-22 21:01:01 -参数 : [{}]
2019-05-22 21:01:01 -耗时 : 3
2019-05-22 21:01:01 -返回值 : login
2019-05-22 21:01:06 -请求地址 : http://localhost:8081/getVerify
2019-05-22 21:01:06 -HTTP METHOD : GET
2019-05-22 21:01:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-22 21:01:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3dd6eaa1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@9f674a3]
2019-05-22 21:01:12 -0995
2019-05-22 21:01:12 -耗时 : 5587
2019-05-22 21:01:12 -返回值 : null
2019-05-22 21:01:17 -请求地址 : http://localhost:8081/login
2019-05-22 21:01:17 -HTTP METHOD : POST
2019-05-22 21:01:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-22 21:01:17 -参数 : [admin, 111111, 0995, org.apache.shiro.web.servlet.ShiroHttpServletRequest@523b3fd6]
2019-05-22 21:01:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-22 21:01:17 -==> Parameters: admin(String)
2019-05-22 21:01:18 -<==      Total: 1
2019-05-22 21:01:18 -耗时 : 238
2019-05-22 21:01:18 -返回值 : {msg=操作成功, code=0}
2019-05-22 21:01:18 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-22 21:01:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 21:01:18 -==> Parameters: 1(Long), admin(String), 登录(String), 238(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-22 21:01:18.37(Timestamp)
2019-05-22 21:01:18 -请求地址 : http://localhost:8081/index
2019-05-22 21:01:18 -HTTP METHOD : GET
2019-05-22 21:01:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 21:01:18 -参数 : [{}]
2019-05-22 21:01:18 -<==    Updates: 1
2019-05-22 21:01:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 21:01:18 -==> Parameters: 1(Long)
2019-05-22 21:01:19 -<==      Total: 49
2019-05-22 21:01:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 21:01:19 -==> Parameters: 138(Long)
2019-05-22 21:01:19 -<==      Total: 1
2019-05-22 21:01:19 -耗时 : 472
2019-05-22 21:01:19 -返回值 : index_v1
2019-05-22 21:01:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 21:01:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 473(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 21:01:19.207(Timestamp)
2019-05-22 21:01:19 -<==    Updates: 1
2019-05-22 21:01:19 -请求地址 : http://localhost:8081/main
2019-05-22 21:01:19 -HTTP METHOD : GET
2019-05-22 21:01:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 21:01:19 -参数 : []
2019-05-22 21:01:19 -耗时 : 2
2019-05-22 21:01:19 -返回值 : main
2019-05-22 21:01:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 21:01:19 -HTTP METHOD : GET
2019-05-22 21:01:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 21:01:19 -参数 : []
2019-05-22 21:01:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 21:01:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 21:01:19 -<==      Total: 0
2019-05-22 21:01:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 21:01:19 -==> Parameters: 1(Long), 0(String)
2019-05-22 21:01:19 -<==      Total: 1
2019-05-22 21:01:19 -耗时 : 88
2019-05-22 21:01:19 -返回值 : com.bootdo.common.utils.PageUtils@6ffd06cf
2019-05-22 21:01:19 -请求地址 : http://localhost:8081/main
2019-05-22 21:01:19 -HTTP METHOD : GET
2019-05-22 21:01:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 21:01:19 -参数 : []
2019-05-22 21:01:19 -耗时 : 0
2019-05-22 21:01:19 -返回值 : main
2019-05-22 21:01:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 21:01:22 -==> Parameters: 1(Long)
2019-05-22 21:01:22 -<==      Total: 93
2019-05-22 21:01:22 -请求地址 : http://localhost:8081/charts/countYY
2019-05-22 21:01:22 -HTTP METHOD : GET
2019-05-22 21:01:22 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-22 21:01:22 -参数 : []
2019-05-22 21:01:22 -耗时 : 1
2019-05-22 21:01:22 -返回值 : charts/countYY
2019-05-22 21:01:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 21:01:23 -HTTP METHOD : GET
2019-05-22 21:01:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 21:01:23 -参数 : [userType]
2019-05-22 21:01:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 21:01:23 -==> Parameters: userType(String)
2019-05-22 21:01:23 -<==      Total: 4
2019-05-22 21:01:23 -耗时 : 132
2019-05-22 21:01:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 21:01:24 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 21:01:24 -HTTP METHOD : GET
2019-05-22 21:01:24 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 21:01:24 -参数 : []
2019-05-22 21:01:25 -耗时 : 19
2019-05-22 21:01:25 -返回值 : charts/tableElecYY
2019-05-22 21:01:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 21:01:25 -HTTP METHOD : GET
2019-05-22 21:01:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 21:01:25 -参数 : [userType]
2019-05-22 21:01:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 21:01:25 -==> Parameters: userType(String)
2019-05-22 21:01:25 -<==      Total: 4
2019-05-22 21:01:25 -耗时 : 6
2019-05-22 21:01:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 21:01:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 21:01:27 -HTTP METHOD : GET
2019-05-22 21:01:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 21:01:27 -参数 : []
2019-05-22 21:01:27 -耗时 : 0
2019-05-22 21:01:27 -返回值 : system/dept/deptTree
2019-05-22 21:01:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 21:01:28 -HTTP METHOD : GET
2019-05-22 21:01:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 21:01:28 -参数 : []
2019-05-22 21:01:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 21:01:28 -==> Parameters: 
2019-05-22 21:01:28 -<==      Total: 3
2019-05-22 21:01:28 -耗时 : 60
2019-05-22 21:01:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 21:01:30 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 21:01:30 -HTTP METHOD : POST
2019-05-22 21:01:30 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 21:01:30 -参数 : [com.bootdo.elec.vo.ElecVo@761b1f43, com.bootdo.moneyLog.vo.ElecLogVo@564e6be7]
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:30 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:01:30 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:01:30 -<==      Total: 1
2019-05-22 21:01:38 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 21:01:38 -==> Parameters: 
2019-05-22 21:01:38 -<==      Total: 2
2019-05-22 21:01:39 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-05-22 21:08:43 -耗时 : 433909
2019-05-22 21:08:43 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, WGElecCostYYCount=0, TotalLogyu=4634, ZTotalhuNew=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-22 21:08:44 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 21:08:44 -HTTP METHOD : POST
2019-05-22 21:08:44 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 21:08:44 -参数 : [com.bootdo.elec.vo.ElecVo@119780a2, com.bootdo.moneyLog.vo.ElecLogVo@2052e261]
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:08:44 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:08:44 -<==      Total: 1
2019-05-22 21:08:44 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 21:08:44 -==> Parameters: 
2019-05-22 21:08:44 -<==      Total: 2
2019-05-22 21:08:46 -耗时 : 2024
2019-05-22 21:08:46 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, WGElecCostYYCount=0, TotalLogyu=4634, ZTotalhuNew=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-22 21:08:53 -请求地址 : http://localhost:8081/index
2019-05-22 21:08:53 -HTTP METHOD : GET
2019-05-22 21:08:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 21:08:53 -参数 : [{}]
2019-05-22 21:08:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 21:08:53 -==> Parameters: 1(Long)
2019-05-22 21:08:53 -<==      Total: 49
2019-05-22 21:08:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 21:08:53 -==> Parameters: 138(Long)
2019-05-22 21:08:53 -<==      Total: 1
2019-05-22 21:08:53 -耗时 : 45
2019-05-22 21:08:53 -返回值 : index_v1
2019-05-22 21:08:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 21:08:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 46(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 21:08:53.591(Timestamp)
2019-05-22 21:08:53 -<==    Updates: 1
2019-05-22 21:08:53 -请求地址 : http://localhost:8081/main
2019-05-22 21:08:53 -HTTP METHOD : GET
2019-05-22 21:08:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 21:08:53 -参数 : []
2019-05-22 21:08:53 -耗时 : 2
2019-05-22 21:08:53 -返回值 : main
2019-05-22 21:08:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 21:08:54 -HTTP METHOD : GET
2019-05-22 21:08:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 21:08:54 -参数 : []
2019-05-22 21:08:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 21:08:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 21:08:54 -<==      Total: 0
2019-05-22 21:08:54 -请求地址 : http://localhost:8081/main
2019-05-22 21:08:54 -HTTP METHOD : GET
2019-05-22 21:08:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 21:08:54 -参数 : []
2019-05-22 21:08:54 -耗时 : 0
2019-05-22 21:08:54 -返回值 : main
2019-05-22 21:08:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 21:08:54 -==> Parameters: 1(Long), 0(String)
2019-05-22 21:08:54 -<==      Total: 1
2019-05-22 21:08:54 -耗时 : 30
2019-05-22 21:08:54 -返回值 : com.bootdo.common.utils.PageUtils@7227a215
2019-05-22 21:08:58 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 21:08:58 -HTTP METHOD : GET
2019-05-22 21:08:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 21:08:58 -参数 : []
2019-05-22 21:08:58 -耗时 : 1
2019-05-22 21:08:58 -返回值 : charts/tableElecYY
2019-05-22 21:08:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 21:08:59 -HTTP METHOD : GET
2019-05-22 21:08:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 21:08:59 -参数 : [userType]
2019-05-22 21:08:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 21:08:59 -==> Parameters: userType(String)
2019-05-22 21:08:59 -<==      Total: 4
2019-05-22 21:08:59 -耗时 : 4
2019-05-22 21:08:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 21:09:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 21:09:01 -HTTP METHOD : GET
2019-05-22 21:09:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 21:09:01 -参数 : []
2019-05-22 21:09:01 -耗时 : 0
2019-05-22 21:09:01 -返回值 : system/dept/deptTree
2019-05-22 21:09:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 21:09:01 -HTTP METHOD : GET
2019-05-22 21:09:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 21:09:01 -参数 : []
2019-05-22 21:09:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 21:09:01 -==> Parameters: 
2019-05-22 21:09:01 -<==      Total: 3
2019-05-22 21:09:01 -耗时 : 3
2019-05-22 21:09:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 21:09:03 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 21:09:03 -HTTP METHOD : POST
2019-05-22 21:09:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 21:09:03 -参数 : [com.bootdo.elec.vo.ElecVo@5c00324c, com.bootdo.moneyLog.vo.ElecLogVo@28dd3816]
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:03 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:09:03 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:09:03 -<==      Total: 1
2019-05-22 21:09:13 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 21:09:13 -==> Parameters: 
2019-05-22 21:09:13 -<==      Total: 2
2019-05-22 21:09:42 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-22 21:13:31 -耗时 : 267932
2019-05-22 21:13:31 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, WGElecCostYYCount=0, TotalLogyu=4634, ZTotalhuNew=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-22 21:13:47 -请求地址 : http://localhost:8081/index
2019-05-22 21:13:47 -HTTP METHOD : GET
2019-05-22 21:13:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 21:13:47 -参数 : [{}]
2019-05-22 21:13:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 21:13:47 -==> Parameters: 1(Long)
2019-05-22 21:13:47 -<==      Total: 49
2019-05-22 21:13:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 21:13:47 -==> Parameters: 138(Long)
2019-05-22 21:13:47 -<==      Total: 1
2019-05-22 21:13:47 -耗时 : 68
2019-05-22 21:13:47 -返回值 : index_v1
2019-05-22 21:13:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 21:13:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 68(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 21:13:47.584(Timestamp)
2019-05-22 21:13:47 -<==    Updates: 1
2019-05-22 21:13:47 -请求地址 : http://localhost:8081/main
2019-05-22 21:13:47 -HTTP METHOD : GET
2019-05-22 21:13:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 21:13:47 -参数 : []
2019-05-22 21:13:47 -耗时 : 0
2019-05-22 21:13:47 -返回值 : main
2019-05-22 21:13:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 21:13:48 -HTTP METHOD : GET
2019-05-22 21:13:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 21:13:48 -参数 : []
2019-05-22 21:13:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 21:13:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 21:13:48 -<==      Total: 0
2019-05-22 21:13:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 21:13:48 -==> Parameters: 1(Long), 0(String)
2019-05-22 21:13:48 -<==      Total: 1
2019-05-22 21:13:48 -耗时 : 19
2019-05-22 21:13:48 -返回值 : com.bootdo.common.utils.PageUtils@366b697
2019-05-22 21:13:48 -请求地址 : http://localhost:8081/main
2019-05-22 21:13:48 -HTTP METHOD : GET
2019-05-22 21:13:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 21:13:48 -参数 : []
2019-05-22 21:13:48 -耗时 : 0
2019-05-22 21:13:48 -返回值 : main
2019-05-22 21:13:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-22 21:13:51 -==> Parameters: 1(Long)
2019-05-22 21:13:51 -<==      Total: 93
2019-05-22 21:13:51 -请求地址 : http://localhost:8081/charts/countYY
2019-05-22 21:13:51 -HTTP METHOD : GET
2019-05-22 21:13:51 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-22 21:13:51 -参数 : []
2019-05-22 21:13:51 -耗时 : 2
2019-05-22 21:13:51 -返回值 : charts/countYY
2019-05-22 21:13:53 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 21:13:53 -HTTP METHOD : GET
2019-05-22 21:13:53 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 21:13:53 -参数 : []
2019-05-22 21:13:53 -耗时 : 1
2019-05-22 21:13:53 -返回值 : charts/tableElecYY
2019-05-22 21:13:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 21:13:54 -HTTP METHOD : GET
2019-05-22 21:13:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 21:13:54 -参数 : [userType]
2019-05-22 21:13:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 21:13:54 -==> Parameters: userType(String)
2019-05-22 21:13:54 -<==      Total: 4
2019-05-22 21:13:54 -耗时 : 11
2019-05-22 21:13:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 21:13:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 21:13:55 -HTTP METHOD : GET
2019-05-22 21:13:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 21:13:55 -参数 : [userType]
2019-05-22 21:13:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 21:13:55 -==> Parameters: userType(String)
2019-05-22 21:13:55 -<==      Total: 4
2019-05-22 21:13:55 -耗时 : 4
2019-05-22 21:13:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 21:13:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 21:13:57 -HTTP METHOD : GET
2019-05-22 21:13:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 21:13:57 -参数 : []
2019-05-22 21:13:57 -耗时 : 0
2019-05-22 21:13:57 -返回值 : system/dept/deptTree
2019-05-22 21:13:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 21:13:58 -HTTP METHOD : GET
2019-05-22 21:13:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 21:13:58 -参数 : []
2019-05-22 21:13:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 21:13:58 -==> Parameters: 
2019-05-22 21:13:58 -<==      Total: 3
2019-05-22 21:13:58 -耗时 : 3
2019-05-22 21:13:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 21:13:59 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 21:13:59 -HTTP METHOD : POST
2019-05-22 21:13:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 21:13:59 -参数 : [com.bootdo.elec.vo.ElecVo@100b0bcb, com.bootdo.moneyLog.vo.ElecLogVo@3bece4b5]
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:13:59 -<==      Total: 1
2019-05-22 21:13:59 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:13:59 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:14:00 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:14:00 -<==      Total: 1
2019-05-22 21:14:05 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 21:14:05 -==> Parameters: 
2019-05-22 21:14:05 -<==      Total: 2
2019-05-22 21:18:28 -Handler dispatch failed; nested exception is java.lang.Error: Unresolved compilation problem: 
	Syntax error on token ")", delete this token

org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.Error: Unresolved compilation problem: 
	Syntax error on token ")", delete this token

	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1006)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.Error: Unresolved compilation problem: 
	Syntax error on token ")", delete this token

	at com.bootdo.charts.controller.tableElecYYController.tableElecYY(Unknown Source)
	at com.bootdo.charts.controller.tableElecYYController$$FastClassBySpringCGLIB$$2af9ae92.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecYYController$$EnhancerBySpringCGLIB$$64e723cc.tableElecYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	... 60 common frames omitted
2019-05-22 21:18:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 21:18:28 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecYY/tableElecYY(String), org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.Error: Unresolved compilation problem: 
	Syntax error on token ")", delete this token(String), null, 2019-05-22 21:18:28.843(Timestamp)
2019-05-22 21:18:28 -<==    Updates: 1
2019-05-22 21:18:31 -请求地址 : http://localhost:8081/index
2019-05-22 21:18:31 -HTTP METHOD : GET
2019-05-22 21:18:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-22 21:18:31 -参数 : [{}]
2019-05-22 21:18:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-22 21:18:31 -==> Parameters: 1(Long)
2019-05-22 21:18:31 -<==      Total: 49
2019-05-22 21:18:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-22 21:18:31 -==> Parameters: 138(Long)
2019-05-22 21:18:31 -<==      Total: 1
2019-05-22 21:18:31 -耗时 : 49
2019-05-22 21:18:31 -返回值 : index_v1
2019-05-22 21:18:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-22 21:18:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 49(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-22 21:18:31.738(Timestamp)
2019-05-22 21:18:31 -<==    Updates: 1
2019-05-22 21:18:31 -请求地址 : http://localhost:8081/main
2019-05-22 21:18:31 -HTTP METHOD : GET
2019-05-22 21:18:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 21:18:31 -参数 : []
2019-05-22 21:18:31 -耗时 : 3
2019-05-22 21:18:31 -返回值 : main
2019-05-22 21:18:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-22 21:18:32 -HTTP METHOD : GET
2019-05-22 21:18:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-22 21:18:32 -参数 : []
2019-05-22 21:18:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-22 21:18:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-22 21:18:32 -<==      Total: 0
2019-05-22 21:18:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-22 21:18:32 -==> Parameters: 1(Long), 0(String)
2019-05-22 21:18:32 -<==      Total: 1
2019-05-22 21:18:32 -耗时 : 8
2019-05-22 21:18:32 -返回值 : com.bootdo.common.utils.PageUtils@5bb89743
2019-05-22 21:18:32 -请求地址 : http://localhost:8081/main
2019-05-22 21:18:32 -HTTP METHOD : GET
2019-05-22 21:18:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-22 21:18:32 -参数 : []
2019-05-22 21:18:32 -耗时 : 2
2019-05-22 21:18:32 -返回值 : main
2019-05-22 21:18:36 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-22 21:18:36 -HTTP METHOD : GET
2019-05-22 21:18:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 21:18:36 -参数 : []
2019-05-22 21:18:36 -耗时 : 1
2019-05-22 21:18:36 -返回值 : charts/tableElecYY
2019-05-22 21:18:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-22 21:18:36 -HTTP METHOD : GET
2019-05-22 21:18:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-22 21:18:36 -参数 : [userType]
2019-05-22 21:18:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-22 21:18:36 -==> Parameters: userType(String)
2019-05-22 21:18:36 -<==      Total: 4
2019-05-22 21:18:36 -耗时 : 5
2019-05-22 21:18:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-22 21:18:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-22 21:18:40 -HTTP METHOD : GET
2019-05-22 21:18:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-22 21:18:40 -参数 : []
2019-05-22 21:18:40 -耗时 : 1
2019-05-22 21:18:40 -返回值 : system/dept/deptTree
2019-05-22 21:18:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-22 21:18:40 -HTTP METHOD : GET
2019-05-22 21:18:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-22 21:18:40 -参数 : []
2019-05-22 21:18:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-22 21:18:40 -==> Parameters: 
2019-05-22 21:18:40 -<==      Total: 3
2019-05-22 21:18:40 -耗时 : 3
2019-05-22 21:18:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-22 21:18:42 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-22 21:18:42 -HTTP METHOD : POST
2019-05-22 21:18:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-22 21:18:42 -参数 : [com.bootdo.elec.vo.ElecVo@395c088b, com.bootdo.moneyLog.vo.ElecLogVo@49fd74a0]
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:42 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-22 21:18:42 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-22 21:18:42 -<==      Total: 1
2019-05-22 21:18:52 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-22 21:18:52 -==> Parameters: 
2019-05-22 21:18:52 -<==      Total: 2
2019-05-22 21:19:00 -耗时 : 18609
2019-05-22 21:19:00 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=202, WGTotalyuNew=0, TotalCostyu=304, SElecPrice=2, WSElecPrice=0, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=80, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=8, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, ZElecPrice=0, G1ElecLogYYCount=0, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=2, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WGElecPrice=0, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=0, MOweElecSumYYOld=0, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G1ElecPrice=0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=16, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4374, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, MSElecCostYYSum=0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=0, WSOweElecSumYYNew=0, G2ElecCostYYCount=1, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, G3ElecPrice=0, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=1, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=0, ZElecCostYYSum=0, WMElecAmountYY=0, MElecCostYYCount=2, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=200, TotalAllhuOld=0, STotalyuOld=0, SElecCostYYSum=100, MPreElecCountYYNew=0, SOweElecSumYYNew=0, WMElecCostYYSum=1, G3ElecCostYYSum=1, MMTotalyuOld=0, MMElecCostYYSum=1, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, G1ElecCostYYCount=1, WMElecCostYYCount=1, ZOweElecSumYYNew=0, MElecPrice=1, WGElecCostYYCount=0, TotalLogyu=4634, ZTotalhuNew=0, WMElecPrice=0, MPreElecSumYYNew=0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, G2ElecCostYYSum=100, MTotalhuOld=0, G1TotalyuOld=0, TotalPrehuNew=4, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, PriceTotal=3, ZPreElecCountYYNew=0, WMTotalhuNew=1, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=6, G1ElecCostYYSum=0, MMElecCostYYCount=1, WGOweElecSumYYOld=0, WSElecCostYYSum=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=0, WGElecCostYYSum=0, MElecCostYYSum=101, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, G2ElecPrice=0, MSElecAmountYY=0, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecPrice=0, MMElecLogYYSum=0, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, MSElecPrice=0, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=1, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-22 21:31:39 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 438]
2019-05-22 22:01:01 -Validating all active sessions...
2019-05-22 22:01:01 -Finished session validation.  [1] sessions were stopped.
2019-05-22 22:01:39 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 871]

2019-03-25 09:04:17 -Starting BootdoApplication on ZJZL-20180906VX with PID 11136 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 09:04:17 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 09:04:17 -The following profiles are active: dev
2019-03-25 09:04:18 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d1f7216: startup date [Mon Mar 25 09:04:18 CST 2019]; root of context hierarchy
2019-03-25 09:04:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 09:04:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b2738d7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:04:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a4ccbc23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:04:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:04:31 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:04:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:04:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 09:04:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 09:04:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:04:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:04:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:04:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:04:32 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 09:04:33 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 09:04:33 -Starting service [Tomcat]
2019-03-25 09:04:33 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 09:04:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 09:04:33 -Initializing Spring embedded WebApplicationContext
2019-03-25 09:04:33 -Root WebApplicationContext: initialization completed in 15097 ms
2019-03-25 09:04:34 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 09:04:34 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 09:04:34 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 09:04:34 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 09:04:34 -Filter xssFilter was not registered (disabled)
2019-03-25 09:04:34 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 09:04:34 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 09:04:34 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 09:04:34 -Servlet dispatcherServlet mapped to [/]
2019-03-25 09:04:38 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d1f7216: startup date [Mon Mar 25 09:04:18 CST 2019]; root of context hierarchy
2019-03-25 09:04:39 -Using default implementation for ThreadExecutor
2019-03-25 09:04:39 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-25 09:04:39 -Quartz Scheduler v.2.2.1 created.
2019-03-25 09:04:39 -RAMJobStore initialized.
2019-03-25 09:04:39 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-25 09:04:39 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-25 09:04:39 -Quartz scheduler version: 2.2.1
2019-03-25 09:04:39 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3a9c92b5
2019-03-25 09:04:40 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-25 09:04:40 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-25 09:04:41 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'heatUpLoadController': Unsatisfied dependency expressed through field 'heatUpLoadService'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'com.bootdo.heat.service.HeatUpLoadService' available: expected single matching bean but found 2: heatUpLoadServiceImpl,waterUpLoadServiceImpl
2019-03-25 09:04:41 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-25 09:04:41 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-25 09:04:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-25 09:04:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-25 09:04:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-25 09:04:41 -Shutting down Quartz Scheduler
2019-03-25 09:04:41 -Stopping service [Tomcat]
2019-03-25 09:04:41 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-25 09:04:41 -

***************************
APPLICATION FAILED TO START
***************************

Description:

Field heatUpLoadService in com.bootdo.heat.controller.HeatUpLoadController required a single bean, but 2 were found:
	- heatUpLoadServiceImpl: defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\heat\service\impl\HeatUpLoadServiceImpl.class]
	- waterUpLoadServiceImpl: defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\water\service\impl\WaterUpLoadServiceImpl.class]


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed

2019-03-25 09:05:38 -Starting BootdoApplication on ZJZL-20180906VX with PID 5156 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 09:05:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 09:05:38 -The following profiles are active: dev
2019-03-25 09:05:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@346a361: startup date [Mon Mar 25 09:05:38 CST 2019]; root of context hierarchy
2019-03-25 09:05:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 09:05:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$df33dcfa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:05:45 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d18d0ba1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:05:45 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:05:46 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:05:46 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:05:46 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 09:05:46 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 09:05:46 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:05:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:05:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:05:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:05:47 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 09:05:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 09:05:47 -Starting service [Tomcat]
2019-03-25 09:05:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 09:05:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 09:05:48 -Initializing Spring embedded WebApplicationContext
2019-03-25 09:05:48 -Root WebApplicationContext: initialization completed in 9571 ms
2019-03-25 09:05:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 09:05:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 09:05:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 09:05:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 09:05:49 -Filter xssFilter was not registered (disabled)
2019-03-25 09:05:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 09:05:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 09:05:49 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 09:05:49 -Servlet dispatcherServlet mapped to [/]
2019-03-25 09:05:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@346a361: startup date [Mon Mar 25 09:05:38 CST 2019]; root of context hierarchy
2019-03-25 09:05:52 -Using default implementation for ThreadExecutor
2019-03-25 09:05:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-25 09:05:52 -Quartz Scheduler v.2.2.1 created.
2019-03-25 09:05:52 -RAMJobStore initialized.
2019-03-25 09:05:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-25 09:05:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-25 09:05:52 -Quartz scheduler version: 2.2.1
2019-03-25 09:05:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3c68e82
2019-03-25 09:05:53 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-25 09:05:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-25 09:05:54 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'heatUpLoadController': Unsatisfied dependency expressed through field 'heatUpLoadService'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'com.bootdo.heat.service.HeatUpLoadService' available: expected single matching bean but found 2: heatUpLoadServiceImpl,waterUpLoadServiceImpl
2019-03-25 09:05:54 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-25 09:05:54 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-25 09:05:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-25 09:05:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-25 09:05:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-25 09:05:54 -Shutting down Quartz Scheduler
2019-03-25 09:05:54 -Stopping service [Tomcat]
2019-03-25 09:05:54 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-25 09:05:54 -

***************************
APPLICATION FAILED TO START
***************************

Description:

Field heatUpLoadService in com.bootdo.heat.controller.HeatUpLoadController required a single bean, but 2 were found:
	- heatUpLoadServiceImpl: defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\heat\service\impl\HeatUpLoadServiceImpl.class]
	- waterUpLoadServiceImpl: defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\water\service\impl\WaterUpLoadServiceImpl.class]


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed

2019-03-25 09:16:52 -Starting BootdoApplication on ZJZL-20180906VX with PID 3752 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 09:16:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 09:16:52 -The following profiles are active: dev
2019-03-25 09:16:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6cfcd46d: startup date [Mon Mar 25 09:16:53 CST 2019]; root of context hierarchy
2019-03-25 09:16:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 09:16:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f3a1b5ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:16:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e5fae452] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:17:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:17:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:17:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:17:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 09:17:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 09:17:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:17:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:17:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:17:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:17:01 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 09:17:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 09:17:01 -Starting service [Tomcat]
2019-03-25 09:17:02 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 09:17:02 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 09:17:02 -Initializing Spring embedded WebApplicationContext
2019-03-25 09:17:02 -Root WebApplicationContext: initialization completed in 9382 ms
2019-03-25 09:17:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 09:17:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 09:17:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 09:17:03 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 09:17:03 -Filter xssFilter was not registered (disabled)
2019-03-25 09:17:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 09:17:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 09:17:03 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 09:17:03 -Servlet dispatcherServlet mapped to [/]
2019-03-25 09:17:05 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6cfcd46d: startup date [Mon Mar 25 09:16:53 CST 2019]; root of context hierarchy
2019-03-25 09:17:06 -Using default implementation for ThreadExecutor
2019-03-25 09:17:06 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-25 09:17:06 -Quartz Scheduler v.2.2.1 created.
2019-03-25 09:17:06 -RAMJobStore initialized.
2019-03-25 09:17:06 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-25 09:17:06 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-25 09:17:06 -Quartz scheduler version: 2.2.1
2019-03-25 09:17:06 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7816454d
2019-03-25 09:17:06 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-25 09:17:06 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-25 09:17:07 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'heatUpLoadController': Unsatisfied dependency expressed through field 'heatUpLoadService'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of type 'com.bootdo.heat.service.HeatUpLoadService' available: expected single matching bean but found 2: heatUpLoadServiceImpl,waterUpLoadServiceImpl
2019-03-25 09:17:07 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-25 09:17:07 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-25 09:17:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-25 09:17:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-25 09:17:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-25 09:17:07 -Shutting down Quartz Scheduler
2019-03-25 09:17:07 -Stopping service [Tomcat]
2019-03-25 09:17:07 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-25 09:17:07 -

***************************
APPLICATION FAILED TO START
***************************

Description:

Field heatUpLoadService in com.bootdo.heat.controller.HeatUpLoadController required a single bean, but 2 were found:
	- heatUpLoadServiceImpl: defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\heat\service\impl\HeatUpLoadServiceImpl.class]
	- waterUpLoadServiceImpl: defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\water\service\impl\WaterUpLoadServiceImpl.class]


Action:

Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed

2019-03-25 09:24:15 -Starting BootdoApplication on ZJZL-20180906VX with PID 4720 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 09:24:15 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 09:24:15 -The following profiles are active: dev
2019-03-25 09:24:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78fb9a67: startup date [Mon Mar 25 09:24:15 CST 2019]; root of context hierarchy
2019-03-25 09:24:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 09:24:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ac5cc03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:24:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$fd1efaaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:24:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:24:31 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:24:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:24:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 09:24:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 09:24:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:24:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:24:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:24:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 09:24:33 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 09:24:33 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 09:24:33 -Starting service [Tomcat]
2019-03-25 09:24:33 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 09:24:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 09:24:34 -Initializing Spring embedded WebApplicationContext
2019-03-25 09:24:34 -Root WebApplicationContext: initialization completed in 18137 ms
2019-03-25 09:24:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 09:24:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 09:24:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 09:24:35 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 09:24:35 -Filter xssFilter was not registered (disabled)
2019-03-25 09:24:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 09:24:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 09:24:35 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 09:24:35 -Servlet dispatcherServlet mapped to [/]
2019-03-25 09:24:39 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78fb9a67: startup date [Mon Mar 25 09:24:15 CST 2019]; root of context hierarchy
2019-03-25 09:24:40 -Using default implementation for ThreadExecutor
2019-03-25 09:24:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-25 09:24:40 -Quartz Scheduler v.2.2.1 created.
2019-03-25 09:24:40 -RAMJobStore initialized.
2019-03-25 09:24:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-25 09:24:40 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-25 09:24:40 -Quartz scheduler version: 2.2.1
2019-03-25 09:24:40 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3abadb65
2019-03-25 09:24:41 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-25 09:24:41 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-25 09:24:44 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-25 09:24:44 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-25 09:24:44 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-25 09:24:44 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-25 09:24:44 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-25 09:24:44 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-25 09:24:44 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-25 09:24:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-25 09:24:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-25 09:24:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-25 09:24:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-25 09:24:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-25 09:24:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-25 09:24:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-25 09:24:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-25 09:24:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-25 09:24:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-25 09:24:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-25 09:24:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-25 09:24:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-25 09:24:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 09:24:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 09:24:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-25 09:24:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-25 09:24:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-25 09:24:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-25 09:24:44 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-25 09:24:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-25 09:24:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-25 09:24:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-25 09:24:44 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-25 09:24:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 09:24:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 09:24:44 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-25 09:24:44 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-25 09:24:44 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-25 09:24:44 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-25 09:24:44 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-25 09:24:44 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 09:24:44 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-25 09:24:44 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 09:24:44 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-25 09:24:44 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-25 09:24:44 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-25 09:24:44 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-25 09:24:44 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-25 09:24:44 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-25 09:24:44 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-25 09:24:44 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-25 09:24:44 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-25 09:24:44 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-25 09:24:44 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-25 09:24:44 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-25 09:24:44 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-25 09:24:44 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 09:24:44 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-25 09:24:44 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 09:24:44 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-25 09:24:44 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 09:24:44 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 09:24:44 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-25 09:24:44 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-25 09:24:44 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-25 09:24:44 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 09:24:44 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 09:24:44 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-25 09:24:44 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-25 09:24:44 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-25 09:24:44 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-25 09:24:44 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-25 09:24:44 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-25 09:24:44 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 09:24:44 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-25 09:24:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-25 09:24:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-25 09:24:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-25 09:24:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-25 09:24:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-25 09:24:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-25 09:24:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-25 09:24:44 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-25 09:24:44 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-25 09:24:44 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-25 09:24:44 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 09:24:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-25 09:24:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-25 09:24:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-25 09:24:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-25 09:24:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-25 09:24:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-25 09:24:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-25 09:24:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 09:24:44 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 09:24:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-25 09:24:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-25 09:24:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-25 09:24:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-25 09:24:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-25 09:24:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-25 09:24:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-25 09:24:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-25 09:24:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-25 09:24:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-25 09:24:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-25 09:24:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-25 09:24:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-25 09:24:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-25 09:24:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-25 09:24:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-25 09:24:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-25 09:24:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-25 09:24:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 09:24:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 09:24:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 09:24:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-25 09:24:44 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-25 09:24:44 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-25 09:24:44 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-25 09:24:44 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 09:24:44 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-25 09:24:44 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 09:24:44 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-25 09:24:44 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-25 09:24:44 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-25 09:24:44 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-25 09:24:44 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 09:24:44 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 09:24:44 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 09:24:44 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 09:24:44 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-25 09:24:44 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-25 09:24:44 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-25 09:24:44 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 09:24:44 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 09:24:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 09:24:44 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-25 09:24:44 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-25 09:24:44 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-25 09:24:45 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-25 09:24:45 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-25 09:24:45 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-25 09:24:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 09:24:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78fb9a67: startup date [Mon Mar 25 09:24:15 CST 2019]; root of context hierarchy
2019-03-25 09:24:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 09:24:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 09:24:47 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 09:24:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-25 09:24:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-25 09:24:51 -Registering beans for JMX exposure on startup
2019-03-25 09:24:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-25 09:24:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-25 09:24:51 -Starting beans in phase 2147483647
2019-03-25 09:24:51 -Context refreshed
2019-03-25 09:24:51 -Found 1 custom documentation plugin(s)
2019-03-25 09:24:51 -Scanning for api listing references
2019-03-25 09:24:52 -Generating unique operation named: removeUsingPOST_1
2019-03-25 09:24:52 -Generating unique operation named: addUsingGET_1
2019-03-25 09:24:52 -Generating unique operation named: editUsingGET_1
2019-03-25 09:24:52 -Generating unique operation named: listUsingGET_1
2019-03-25 09:24:52 -Generating unique operation named: removeUsingPOST_2
2019-03-25 09:24:52 -Generating unique operation named: removeUsingPOST_3
2019-03-25 09:24:52 -Generating unique operation named: saveUsingPOST_1
2019-03-25 09:24:52 -Generating unique operation named: updateUsingGET_1
2019-03-25 09:24:52 -Generating unique operation named: updateUsingHEAD_1
2019-03-25 09:24:52 -Generating unique operation named: updateUsingPOST_1
2019-03-25 09:24:52 -Generating unique operation named: updateUsingPUT_1
2019-03-25 09:24:52 -Generating unique operation named: updateUsingPATCH_1
2019-03-25 09:24:52 -Generating unique operation named: updateUsingDELETE_1
2019-03-25 09:24:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-25 09:24:52 -Generating unique operation named: updateUsingTRACE_1
2019-03-25 09:24:52 -Generating unique operation named: addUsingGET_2
2019-03-25 09:24:52 -Generating unique operation named: editUsingGET_2
2019-03-25 09:24:52 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-25 09:24:52 -Generating unique operation named: listUsingGET_2
2019-03-25 09:24:52 -Generating unique operation named: removeUsingPOST_4
2019-03-25 09:24:52 -Generating unique operation named: removeUsingPOST_5
2019-03-25 09:24:52 -Generating unique operation named: saveUsingPOST_2
2019-03-25 09:24:52 -Generating unique operation named: updateUsingGET_2
2019-03-25 09:24:52 -Generating unique operation named: updateUsingHEAD_2
2019-03-25 09:24:52 -Generating unique operation named: updateUsingPOST_2
2019-03-25 09:24:52 -Generating unique operation named: updateUsingPUT_2
2019-03-25 09:24:52 -Generating unique operation named: updateUsingPATCH_2
2019-03-25 09:24:52 -Generating unique operation named: updateUsingDELETE_2
2019-03-25 09:24:52 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-25 09:24:52 -Generating unique operation named: updateUsingTRACE_2
2019-03-25 09:24:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-25 09:24:52 -Generating unique operation named: addUsingGET_3
2019-03-25 09:24:52 -Generating unique operation named: editUsingGET_3
2019-03-25 09:24:52 -Generating unique operation named: listUsingGET_3
2019-03-25 09:24:53 -Generating unique operation named: removeUsingPOST_6
2019-03-25 09:24:53 -Generating unique operation named: removeUsingPOST_7
2019-03-25 09:24:53 -Generating unique operation named: saveUsingPOST_3
2019-03-25 09:24:53 -Generating unique operation named: updateUsingGET_3
2019-03-25 09:24:53 -Generating unique operation named: updateUsingHEAD_3
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPOST_3
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPUT_3
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPATCH_3
2019-03-25 09:24:53 -Generating unique operation named: updateUsingDELETE_3
2019-03-25 09:24:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-25 09:24:53 -Generating unique operation named: updateUsingTRACE_3
2019-03-25 09:24:53 -Generating unique operation named: addUsingGET_4
2019-03-25 09:24:53 -Generating unique operation named: editUsingGET_4
2019-03-25 09:24:53 -Generating unique operation named: listUsingGET_4
2019-03-25 09:24:53 -Generating unique operation named: removeUsingPOST_8
2019-03-25 09:24:53 -Generating unique operation named: removeUsingPOST_9
2019-03-25 09:24:53 -Generating unique operation named: saveUsingPOST_4
2019-03-25 09:24:53 -Generating unique operation named: updateUsingGET_4
2019-03-25 09:24:53 -Generating unique operation named: updateUsingHEAD_4
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPOST_4
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPUT_4
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPATCH_4
2019-03-25 09:24:53 -Generating unique operation named: updateUsingDELETE_4
2019-03-25 09:24:53 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-25 09:24:53 -Generating unique operation named: updateUsingTRACE_4
2019-03-25 09:24:53 -Generating unique operation named: ElecUsingGET_1
2019-03-25 09:24:53 -Generating unique operation named: addUsingGET_5
2019-03-25 09:24:53 -Generating unique operation named: editUsingGET_5
2019-03-25 09:24:53 -Generating unique operation named: listUsingGET_5
2019-03-25 09:24:53 -Generating unique operation named: removeUsingPOST_10
2019-03-25 09:24:53 -Generating unique operation named: removeUsingPOST_11
2019-03-25 09:24:53 -Generating unique operation named: saveUsingPOST_5
2019-03-25 09:24:53 -Generating unique operation named: updateUsingGET_5
2019-03-25 09:24:53 -Generating unique operation named: updateUsingHEAD_5
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPOST_5
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPUT_5
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPATCH_5
2019-03-25 09:24:53 -Generating unique operation named: updateUsingDELETE_5
2019-03-25 09:24:53 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-25 09:24:53 -Generating unique operation named: updateUsingTRACE_5
2019-03-25 09:24:53 -Generating unique operation named: editUsingGET_6
2019-03-25 09:24:53 -Generating unique operation named: listUsingGET_6
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPOST_6
2019-03-25 09:24:53 -Generating unique operation named: addUsingGET_6
2019-03-25 09:24:53 -Generating unique operation named: editUsingGET_7
2019-03-25 09:24:53 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-25 09:24:53 -Generating unique operation named: listUsingGET_7
2019-03-25 09:24:53 -Generating unique operation named: removeUsingPOST_12
2019-03-25 09:24:53 -Generating unique operation named: removeUsingPOST_13
2019-03-25 09:24:53 -Generating unique operation named: saveUsingPOST_6
2019-03-25 09:24:53 -Generating unique operation named: updateUsingGET_6
2019-03-25 09:24:53 -Generating unique operation named: updateUsingHEAD_6
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPOST_7
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPUT_6
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPATCH_6
2019-03-25 09:24:53 -Generating unique operation named: updateUsingDELETE_6
2019-03-25 09:24:53 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-25 09:24:53 -Generating unique operation named: updateUsingTRACE_6
2019-03-25 09:24:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-25 09:24:53 -Generating unique operation named: addUsingGET_7
2019-03-25 09:24:53 -Generating unique operation named: editUsingGET_8
2019-03-25 09:24:53 -Generating unique operation named: listUsingGET_8
2019-03-25 09:24:53 -Generating unique operation named: removeUsingPOST_14
2019-03-25 09:24:53 -Generating unique operation named: removeUsingPOST_15
2019-03-25 09:24:53 -Generating unique operation named: saveUsingPOST_7
2019-03-25 09:24:53 -Generating unique operation named: updateUsingGET_7
2019-03-25 09:24:53 -Generating unique operation named: updateUsingHEAD_7
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPOST_8
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPUT_7
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPATCH_7
2019-03-25 09:24:53 -Generating unique operation named: updateUsingDELETE_7
2019-03-25 09:24:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-25 09:24:53 -Generating unique operation named: updateUsingTRACE_7
2019-03-25 09:24:53 -Generating unique operation named: addUsingGET_8
2019-03-25 09:24:53 -Generating unique operation named: editUsingGET_9
2019-03-25 09:24:53 -Generating unique operation named: listUsingGET_9
2019-03-25 09:24:53 -Generating unique operation named: removeUsingPOST_16
2019-03-25 09:24:53 -Generating unique operation named: removeUsingPOST_17
2019-03-25 09:24:53 -Generating unique operation named: saveUsingPOST_8
2019-03-25 09:24:53 -Generating unique operation named: updateUsingGET_8
2019-03-25 09:24:53 -Generating unique operation named: updateUsingHEAD_8
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPOST_9
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPUT_8
2019-03-25 09:24:53 -Generating unique operation named: updateUsingPATCH_8
2019-03-25 09:24:53 -Generating unique operation named: updateUsingDELETE_8
2019-03-25 09:24:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-25 09:24:53 -Generating unique operation named: updateUsingTRACE_8
2019-03-25 09:24:53 -Generating unique operation named: addUsingGET_9
2019-03-25 09:24:53 -Generating unique operation named: editUsingGET_10
2019-03-25 09:24:53 -Generating unique operation named: infoUsingGET_1
2019-03-25 09:24:53 -Generating unique operation named: infoUsingHEAD_1
2019-03-25 09:24:54 -Generating unique operation named: infoUsingPOST_1
2019-03-25 09:24:54 -Generating unique operation named: infoUsingPUT_1
2019-03-25 09:24:54 -Generating unique operation named: infoUsingPATCH_1
2019-03-25 09:24:54 -Generating unique operation named: infoUsingDELETE_1
2019-03-25 09:24:54 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-25 09:24:54 -Generating unique operation named: infoUsingTRACE_1
2019-03-25 09:24:54 -Generating unique operation named: listUsingGET_10
2019-03-25 09:24:54 -Generating unique operation named: removeUsingPOST_18
2019-03-25 09:24:54 -Generating unique operation named: removeUsingPOST_19
2019-03-25 09:24:54 -Generating unique operation named: saveUsingPOST_9
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPOST_10
2019-03-25 09:24:54 -Generating unique operation named: listUsingGET_11
2019-03-25 09:24:54 -Generating unique operation named: removeUsingPOST_20
2019-03-25 09:24:54 -Generating unique operation named: welcomeUsingGET_1
2019-03-25 09:24:54 -Generating unique operation named: addUsingGET_10
2019-03-25 09:24:54 -Generating unique operation named: editUsingGET_11
2019-03-25 09:24:54 -Generating unique operation named: listUsingGET_12
2019-03-25 09:24:54 -Generating unique operation named: removeUsingPOST_21
2019-03-25 09:24:54 -Generating unique operation named: saveUsingPOST_10
2019-03-25 09:24:54 -Generating unique operation named: treeUsingGET_1
2019-03-25 09:24:54 -Generating unique operation named: treeUsingGET_2
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPOST_11
2019-03-25 09:24:54 -Generating unique operation named: addUsingGET_11
2019-03-25 09:24:54 -Generating unique operation named: editUsingGET_12
2019-03-25 09:24:54 -Generating unique operation named: listUsingGET_13
2019-03-25 09:24:54 -Generating unique operation named: removeUsingPOST_22
2019-03-25 09:24:54 -Generating unique operation named: removeUsingPOST_23
2019-03-25 09:24:54 -Generating unique operation named: saveUsingPOST_11
2019-03-25 09:24:54 -Generating unique operation named: updateUsingGET_9
2019-03-25 09:24:54 -Generating unique operation named: updateUsingHEAD_9
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPOST_12
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPUT_9
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPATCH_9
2019-03-25 09:24:54 -Generating unique operation named: updateUsingDELETE_9
2019-03-25 09:24:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-25 09:24:54 -Generating unique operation named: updateUsingTRACE_9
2019-03-25 09:24:54 -Generating unique operation named: addUsingGET_12
2019-03-25 09:24:54 -Generating unique operation named: editUsingGET_13
2019-03-25 09:24:54 -Generating unique operation named: listUsingGET_14
2019-03-25 09:24:54 -Generating unique operation named: removeUsingPOST_24
2019-03-25 09:24:54 -Generating unique operation named: removeUsingPOST_25
2019-03-25 09:24:54 -Generating unique operation named: saveUsingPOST_12
2019-03-25 09:24:54 -Generating unique operation named: updateUsingGET_10
2019-03-25 09:24:54 -Generating unique operation named: updateUsingHEAD_10
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPOST_13
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPUT_10
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPATCH_10
2019-03-25 09:24:54 -Generating unique operation named: updateUsingDELETE_10
2019-03-25 09:24:54 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-25 09:24:54 -Generating unique operation named: updateUsingTRACE_10
2019-03-25 09:24:54 -Generating unique operation named: addUsingGET_13
2019-03-25 09:24:54 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-25 09:24:54 -Generating unique operation named: editUsingGET_14
2019-03-25 09:24:54 -Generating unique operation named: listUsingGET_15
2019-03-25 09:24:54 -Generating unique operation named: saveUsingPOST_13
2019-03-25 09:24:54 -Generating unique operation named: saveUsingPOST_14
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPOST_14
2019-03-25 09:24:54 -Generating unique operation named: listUsingGET_16
2019-03-25 09:24:54 -Generating unique operation named: listUsingHEAD_1
2019-03-25 09:24:54 -Generating unique operation named: listUsingPOST_1
2019-03-25 09:24:54 -Generating unique operation named: listUsingPUT_1
2019-03-25 09:24:54 -Generating unique operation named: listUsingPATCH_1
2019-03-25 09:24:54 -Generating unique operation named: listUsingDELETE_1
2019-03-25 09:24:54 -Generating unique operation named: listUsingOPTIONS_1
2019-03-25 09:24:54 -Generating unique operation named: listUsingTRACE_1
2019-03-25 09:24:54 -Generating unique operation named: addUsingGET_14
2019-03-25 09:24:54 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-25 09:24:54 -Generating unique operation named: editUsingGET_15
2019-03-25 09:24:54 -Generating unique operation named: listUsingGET_17
2019-03-25 09:24:54 -Generating unique operation named: removeUsingPOST_26
2019-03-25 09:24:54 -Generating unique operation named: saveUsingPOST_15
2019-03-25 09:24:54 -Generating unique operation named: treeUsingGET_3
2019-03-25 09:24:54 -Generating unique operation named: treeViewUsingGET_1
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPOST_15
2019-03-25 09:24:54 -Generating unique operation named: addUsingGET_15
2019-03-25 09:24:54 -Generating unique operation named: editUsingGET_16
2019-03-25 09:24:54 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-25 09:24:54 -Generating unique operation named: listUsingGET_18
2019-03-25 09:24:54 -Generating unique operation named: removeUsingPOST_27
2019-03-25 09:24:54 -Generating unique operation named: removeUsingPOST_28
2019-03-25 09:24:54 -Generating unique operation named: saveUsingPOST_16
2019-03-25 09:24:54 -Generating unique operation named: updateUsingGET_11
2019-03-25 09:24:54 -Generating unique operation named: updateUsingHEAD_11
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPOST_16
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPUT_11
2019-03-25 09:24:54 -Generating unique operation named: updateUsingPATCH_11
2019-03-25 09:24:54 -Generating unique operation named: updateUsingDELETE_11
2019-03-25 09:24:54 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-25 09:24:54 -Generating unique operation named: updateUsingTRACE_11
2019-03-25 09:24:54 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-25 09:24:54 -Generating unique operation named: addUsingGET_16
2019-03-25 09:24:54 -Generating unique operation named: editUsingGET_17
2019-03-25 09:24:54 -Generating unique operation named: listUsingGET_19
2019-03-25 09:24:54 -Generating unique operation named: removeUsingPOST_29
2019-03-25 09:24:55 -Generating unique operation named: removeUsingPOST_30
2019-03-25 09:24:55 -Generating unique operation named: saveUsingPOST_17
2019-03-25 09:24:55 -Generating unique operation named: updateUsingGET_12
2019-03-25 09:24:55 -Generating unique operation named: updateUsingHEAD_12
2019-03-25 09:24:55 -Generating unique operation named: updateUsingPOST_17
2019-03-25 09:24:55 -Generating unique operation named: updateUsingPUT_12
2019-03-25 09:24:55 -Generating unique operation named: updateUsingPATCH_12
2019-03-25 09:24:55 -Generating unique operation named: updateUsingDELETE_12
2019-03-25 09:24:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-25 09:24:55 -Generating unique operation named: updateUsingTRACE_12
2019-03-25 09:24:55 -Generating unique operation named: addUsingGET_17
2019-03-25 09:24:55 -Generating unique operation named: editUsingGET_18
2019-03-25 09:24:55 -Generating unique operation named: listUsingGET_20
2019-03-25 09:24:55 -Generating unique operation named: removeUsingPOST_31
2019-03-25 09:24:55 -Generating unique operation named: removeUsingPOST_32
2019-03-25 09:24:55 -Generating unique operation named: saveUsingPOST_18
2019-03-25 09:24:55 -Generating unique operation named: updateUsingGET_13
2019-03-25 09:24:55 -Generating unique operation named: updateUsingHEAD_13
2019-03-25 09:24:55 -Generating unique operation named: updateUsingPOST_18
2019-03-25 09:24:55 -Generating unique operation named: updateUsingPUT_13
2019-03-25 09:24:55 -Generating unique operation named: updateUsingPATCH_13
2019-03-25 09:24:55 -Generating unique operation named: updateUsingDELETE_13
2019-03-25 09:24:55 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-25 09:24:55 -Generating unique operation named: updateUsingTRACE_13
2019-03-25 09:24:55 -Starting Quartz Scheduler now
2019-03-25 09:24:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-25 09:24:55 -Starting...
2019-03-25 09:24:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-25 09:24:55 -Started.
2019-03-25 09:24:55 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-25 09:24:55 -Using a shared selector for servlet write/read
2019-03-25 09:24:55 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-25 09:24:55 -Started BootdoApplication in 42.076 seconds (JVM running for 43.673)
2019-03-25 09:24:55 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-25 09:24:56 -==> Parameters: 
2019-03-25 09:24:56 -<==      Total: 1
2019-03-25 09:25:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-25 09:25:03 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-25 09:25:04 -FrameworkServlet 'dispatcherServlet': initialization completed in 139 ms
2019-03-25 09:25:04 -Enabling session validation scheduler...
2019-03-25 09:25:05 -请求地址 : http://localhost:8081/
2019-03-25 09:25:05 -HTTP METHOD : GET
2019-03-25 09:25:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-25 09:25:05 -参数 : [{}]
2019-03-25 09:25:05 -耗时 : 6
2019-03-25 09:25:05 -返回值 : redirect:/index
2019-03-25 09:25:06 -请求地址 : http://localhost:8081/login;JSESSIONID=512ef664-ac5b-45dc-807a-8cf3ccd3e6df
2019-03-25 09:25:06 -HTTP METHOD : GET
2019-03-25 09:25:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 09:25:06 -参数 : [{}]
2019-03-25 09:25:06 -耗时 : 2
2019-03-25 09:25:06 -返回值 : login
2019-03-25 09:25:09 -请求地址 : http://localhost:8081/getVerify
2019-03-25 09:25:09 -HTTP METHOD : GET
2019-03-25 09:25:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 09:25:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5e8c1809, org.apache.shiro.web.servlet.ShiroHttpServletResponse@76ee05b5]
2019-03-25 09:25:16 -2551
2019-03-25 09:25:16 -耗时 : 7079
2019-03-25 09:25:16 -返回值 : null
2019-03-25 09:25:17 -请求地址 : http://localhost:8081/login
2019-03-25 09:25:17 -HTTP METHOD : GET
2019-03-25 09:25:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 09:25:17 -参数 : [{}]
2019-03-25 09:25:17 -耗时 : 1
2019-03-25 09:25:17 -返回值 : login
2019-03-25 09:25:23 -请求地址 : http://localhost:8081/login
2019-03-25 09:25:23 -HTTP METHOD : POST
2019-03-25 09:25:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 09:25:23 -参数 : [admin, 111111, 2551, org.apache.shiro.web.servlet.ShiroHttpServletRequest@30953b92]
2019-03-25 09:25:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 09:25:24 -==> Parameters: admin(String)
2019-03-25 09:25:25 -<==      Total: 1
2019-03-25 09:25:25 -耗时 : 1322
2019-03-25 09:25:25 -返回值 : {msg=操作成功, code=0}
2019-03-25 09:25:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-25 09:25:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 09:25:25 -==> Parameters: 1(Long), admin(String), 登录(String), 1322(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 09:25:25.354(Timestamp)
2019-03-25 09:25:25 -请求地址 : http://localhost:8081/index
2019-03-25 09:25:25 -HTTP METHOD : GET
2019-03-25 09:25:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 09:25:25 -参数 : [{}]
2019-03-25 09:25:27 -<==    Updates: 1
2019-03-25 09:25:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 09:25:27 -==> Parameters: 1(Long)
2019-03-25 09:25:28 -<==      Total: 46
2019-03-25 09:25:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 09:25:28 -==> Parameters: 138(Long)
2019-03-25 09:25:28 -<==      Total: 1
2019-03-25 09:25:28 -耗时 : 2760
2019-03-25 09:25:28 -返回值 : index_v1
2019-03-25 09:25:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 09:25:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 2761(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 09:25:29.18(Timestamp)
2019-03-25 09:25:29 -<==    Updates: 1
2019-03-25 09:25:30 -请求地址 : http://localhost:8081/main
2019-03-25 09:25:30 -HTTP METHOD : GET
2019-03-25 09:25:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 09:25:30 -参数 : []
2019-03-25 09:25:30 -耗时 : 3
2019-03-25 09:25:30 -返回值 : main
2019-03-25 09:25:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 09:25:33 -HTTP METHOD : GET
2019-03-25 09:25:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 09:25:33 -参数 : []
2019-03-25 09:25:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 09:25:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 09:25:33 -请求地址 : http://localhost:8081/main
2019-03-25 09:25:33 -HTTP METHOD : GET
2019-03-25 09:25:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 09:25:33 -参数 : []
2019-03-25 09:25:33 -耗时 : 0
2019-03-25 09:25:33 -返回值 : main
2019-03-25 09:25:34 -<==      Total: 0
2019-03-25 09:25:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 09:25:34 -==> Parameters: 1(Long), 0(String)
2019-03-25 09:25:34 -<==      Total: 1
2019-03-25 09:25:34 -耗时 : 819
2019-03-25 09:25:34 -返回值 : com.bootdo.common.utils.PageUtils@58fbc613
2019-03-25 09:25:45 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 3]
2019-03-25 09:25:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 09:25:57 -==> Parameters: 1(Long)
2019-03-25 09:25:57 -<==      Total: 90
2019-03-25 09:25:57 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-25 09:25:57 -HTTP METHOD : GET
2019-03-25 09:25:57 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-25 09:25:57 -参数 : []
2019-03-25 09:25:57 -耗时 : 1
2019-03-25 09:25:57 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-25 09:27:40 -请求地址 : http://localhost:8081/file/downImport/heatUser
2019-03-25 09:27:40 -HTTP METHOD : GET
2019-03-25 09:27:40 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-25 09:27:40 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@2afb7c42, heatUser]
2019-03-25 09:27:41 -耗时 : 91
2019-03-25 09:27:41 -返回值 : null
2019-03-25 09:31:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 09:31:03 -HTTP METHOD : GET
2019-03-25 09:31:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 09:31:03 -参数 : []
2019-03-25 09:31:03 -耗时 : 1
2019-03-25 09:31:03 -返回值 : system/dept/deptTree
2019-03-25 09:31:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 09:31:05 -HTTP METHOD : GET
2019-03-25 09:31:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 09:31:05 -参数 : []
2019-03-25 09:31:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 09:31:05 -==> Parameters: 
2019-03-25 09:31:05 -<==      Total: 3
2019-03-25 09:31:05 -耗时 : 257
2019-03-25 09:31:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 09:31:26 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 09:31:26 -HTTP METHOD : POST
2019-03-25 09:31:26 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 09:31:26 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@52aab229, 2019-06, 2]
2019-03-25 09:31:29 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 09:31:29 -==> Parameters: 1-0001(String)
2019-03-25 09:31:30 -<==      Total: 1
2019-03-25 09:31:30 -耗时 : 4453
2019-03-25 09:31:30 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 09:32:29 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 09:32:29 -HTTP METHOD : POST
2019-03-25 09:32:29 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 09:32:29 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2acbd508, 2019-06, 2]
2019-03-25 09:32:29 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 09:32:29 -==> Parameters: 1-0001(String)
2019-03-25 09:32:29 -<==      Total: 1
2019-03-25 09:32:29 -耗时 : 118
2019-03-25 09:32:29 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 09:34:52 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 09:34:52 -HTTP METHOD : POST
2019-03-25 09:34:52 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 09:34:52 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@30fdef5d, 2019-06, 2]
2019-03-25 09:34:52 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 09:34:52 -==> Parameters: 1-0001(String)
2019-03-25 09:34:52 -<==      Total: 1
2019-03-25 09:34:52 -耗时 : 105
2019-03-25 09:34:52 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 09:36:22 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 09:36:22 -HTTP METHOD : POST
2019-03-25 09:36:22 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 09:36:22 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@618487f9, 2019-06, 2]
2019-03-25 09:36:22 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 09:36:22 -==> Parameters: 1-0001(String)
2019-03-25 09:36:22 -<==      Total: 1
2019-03-25 09:36:22 -耗时 : 129
2019-03-25 09:36:22 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 09:36:32 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 09:36:32 -HTTP METHOD : POST
2019-03-25 09:36:32 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 09:36:32 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6ce8af42, 2019-06, 2]
2019-03-25 09:36:32 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 09:36:32 -==> Parameters: 1-0001(String)
2019-03-25 09:36:32 -<==      Total: 1
2019-03-25 09:36:32 -耗时 : 117
2019-03-25 09:36:32 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 09:37:09 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 09:37:09 -HTTP METHOD : POST
2019-03-25 09:37:09 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 09:37:09 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@752f17b6, 2019-06, 2]
2019-03-25 09:37:09 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 09:37:09 -==> Parameters: 1-0001(String)
2019-03-25 09:37:09 -<==      Total: 1
2019-03-25 09:37:09 -耗时 : 107
2019-03-25 09:37:09 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 09:55:45 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 435]
2019-03-25 10:10:56 -Starting BootdoApplication on ZJZL-20180906VX with PID 5984 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 10:10:56 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 10:10:56 -The following profiles are active: dev
2019-03-25 10:10:56 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2756c0a7: startup date [Mon Mar 25 10:10:56 CST 2019]; root of context hierarchy
2019-03-25 10:11:05 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 10:11:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e64844e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 10:11:13 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d8a1738e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 10:11:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 10:11:17 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 10:11:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 10:11:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 10:11:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 10:11:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 10:11:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 10:11:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 10:11:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 10:11:19 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 10:11:19 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 10:11:19 -Starting service [Tomcat]
2019-03-25 10:11:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 10:11:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 10:11:19 -Initializing Spring embedded WebApplicationContext
2019-03-25 10:11:19 -Root WebApplicationContext: initialization completed in 22877 ms
2019-03-25 10:11:20 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 10:11:20 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 10:11:20 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 10:11:20 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 10:11:20 -Filter xssFilter was not registered (disabled)
2019-03-25 10:11:20 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 10:11:20 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 10:11:20 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 10:11:20 -Servlet dispatcherServlet mapped to [/]
2019-03-25 10:11:25 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2756c0a7: startup date [Mon Mar 25 10:10:56 CST 2019]; root of context hierarchy
2019-03-25 10:11:25 -Using default implementation for ThreadExecutor
2019-03-25 10:11:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-25 10:11:26 -Quartz Scheduler v.2.2.1 created.
2019-03-25 10:11:26 -RAMJobStore initialized.
2019-03-25 10:11:26 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-25 10:11:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-25 10:11:26 -Quartz scheduler version: 2.2.1
2019-03-25 10:11:26 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@36eb8e07
2019-03-25 10:11:27 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-25 10:11:27 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-25 10:11:31 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-25 10:11:31 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-25 10:11:31 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-25 10:11:31 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-25 10:11:31 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-25 10:11:31 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-25 10:11:31 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-25 10:11:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-25 10:11:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-25 10:11:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-25 10:11:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-25 10:11:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-25 10:11:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-25 10:11:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-25 10:11:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-25 10:11:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-25 10:11:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-25 10:11:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-25 10:11:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-25 10:11:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-25 10:11:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 10:11:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 10:11:31 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-25 10:11:31 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-25 10:11:31 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-25 10:11:31 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-25 10:11:31 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-25 10:11:31 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-25 10:11:31 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-25 10:11:31 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-25 10:11:31 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-25 10:11:31 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 10:11:31 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 10:11:31 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-25 10:11:31 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-25 10:11:31 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-25 10:11:31 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-25 10:11:31 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-25 10:11:31 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 10:11:31 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-25 10:11:31 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 10:11:31 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-25 10:11:31 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-25 10:11:31 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-25 10:11:31 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-25 10:11:31 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-25 10:11:31 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-25 10:11:31 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-25 10:11:31 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-25 10:11:31 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-25 10:11:31 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-25 10:11:31 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-25 10:11:31 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-25 10:11:31 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-25 10:11:31 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 10:11:31 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-25 10:11:31 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 10:11:31 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-25 10:11:31 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 10:11:31 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 10:11:31 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-25 10:11:31 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-25 10:11:31 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 10:11:31 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-25 10:11:31 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 10:11:31 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-25 10:11:31 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-25 10:11:31 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-25 10:11:31 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-25 10:11:31 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-25 10:11:31 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-25 10:11:31 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-25 10:11:31 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 10:11:31 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-25 10:11:31 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-25 10:11:31 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-25 10:11:31 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-25 10:11:31 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-25 10:11:31 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-25 10:11:31 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-25 10:11:31 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-25 10:11:31 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-25 10:11:31 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-25 10:11:31 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 10:11:31 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-25 10:11:31 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-25 10:11:31 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-25 10:11:31 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-25 10:11:31 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-25 10:11:31 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-25 10:11:31 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-25 10:11:31 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-25 10:11:31 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-25 10:11:31 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 10:11:31 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 10:11:31 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-25 10:11:31 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-25 10:11:31 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-25 10:11:31 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-25 10:11:31 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-25 10:11:31 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-25 10:11:31 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-25 10:11:31 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-25 10:11:31 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-25 10:11:31 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-25 10:11:31 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-25 10:11:31 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-25 10:11:31 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-25 10:11:31 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-25 10:11:31 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-25 10:11:31 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-25 10:11:31 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 10:11:31 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 10:11:31 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-25 10:11:31 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 10:11:31 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-25 10:11:31 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-25 10:11:31 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-25 10:11:31 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-25 10:11:31 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 10:11:31 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-25 10:11:31 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 10:11:31 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-25 10:11:31 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-25 10:11:31 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-25 10:11:31 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-25 10:11:31 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 10:11:31 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 10:11:31 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 10:11:31 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 10:11:31 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-25 10:11:31 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 10:11:31 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-25 10:11:31 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-25 10:11:31 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 10:11:31 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 10:11:31 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-25 10:11:31 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-25 10:11:31 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-25 10:11:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-25 10:11:32 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-25 10:11:32 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-25 10:11:33 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 10:11:33 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2756c0a7: startup date [Mon Mar 25 10:10:56 CST 2019]; root of context hierarchy
2019-03-25 10:11:33 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 10:11:33 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 10:11:33 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 10:11:33 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-25 10:11:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-25 10:11:37 -Registering beans for JMX exposure on startup
2019-03-25 10:11:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-25 10:11:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-25 10:11:37 -Starting beans in phase 2147483647
2019-03-25 10:11:37 -Context refreshed
2019-03-25 10:11:37 -Found 1 custom documentation plugin(s)
2019-03-25 10:11:37 -Scanning for api listing references
2019-03-25 10:11:38 -Generating unique operation named: removeUsingPOST_1
2019-03-25 10:11:38 -Generating unique operation named: addUsingGET_1
2019-03-25 10:11:38 -Generating unique operation named: editUsingGET_1
2019-03-25 10:11:38 -Generating unique operation named: listUsingGET_1
2019-03-25 10:11:38 -Generating unique operation named: removeUsingPOST_2
2019-03-25 10:11:38 -Generating unique operation named: removeUsingPOST_3
2019-03-25 10:11:38 -Generating unique operation named: saveUsingPOST_1
2019-03-25 10:11:38 -Generating unique operation named: updateUsingGET_1
2019-03-25 10:11:38 -Generating unique operation named: updateUsingHEAD_1
2019-03-25 10:11:38 -Generating unique operation named: updateUsingPOST_1
2019-03-25 10:11:38 -Generating unique operation named: updateUsingPUT_1
2019-03-25 10:11:38 -Generating unique operation named: updateUsingPATCH_1
2019-03-25 10:11:38 -Generating unique operation named: updateUsingDELETE_1
2019-03-25 10:11:38 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-25 10:11:38 -Generating unique operation named: updateUsingTRACE_1
2019-03-25 10:11:38 -Generating unique operation named: addUsingGET_2
2019-03-25 10:11:38 -Generating unique operation named: editUsingGET_2
2019-03-25 10:11:38 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-25 10:11:38 -Generating unique operation named: listUsingGET_2
2019-03-25 10:11:38 -Generating unique operation named: removeUsingPOST_4
2019-03-25 10:11:38 -Generating unique operation named: removeUsingPOST_5
2019-03-25 10:11:38 -Generating unique operation named: saveUsingPOST_2
2019-03-25 10:11:38 -Generating unique operation named: updateUsingGET_2
2019-03-25 10:11:39 -Generating unique operation named: updateUsingHEAD_2
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPOST_2
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPUT_2
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPATCH_2
2019-03-25 10:11:39 -Generating unique operation named: updateUsingDELETE_2
2019-03-25 10:11:39 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-25 10:11:39 -Generating unique operation named: updateUsingTRACE_2
2019-03-25 10:11:39 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-25 10:11:39 -Generating unique operation named: addUsingGET_3
2019-03-25 10:11:39 -Generating unique operation named: editUsingGET_3
2019-03-25 10:11:39 -Generating unique operation named: listUsingGET_3
2019-03-25 10:11:39 -Generating unique operation named: removeUsingPOST_6
2019-03-25 10:11:39 -Generating unique operation named: removeUsingPOST_7
2019-03-25 10:11:39 -Generating unique operation named: saveUsingPOST_3
2019-03-25 10:11:39 -Generating unique operation named: updateUsingGET_3
2019-03-25 10:11:39 -Generating unique operation named: updateUsingHEAD_3
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPOST_3
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPUT_3
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPATCH_3
2019-03-25 10:11:39 -Generating unique operation named: updateUsingDELETE_3
2019-03-25 10:11:39 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-25 10:11:39 -Generating unique operation named: updateUsingTRACE_3
2019-03-25 10:11:39 -Generating unique operation named: addUsingGET_4
2019-03-25 10:11:39 -Generating unique operation named: editUsingGET_4
2019-03-25 10:11:39 -Generating unique operation named: listUsingGET_4
2019-03-25 10:11:39 -Generating unique operation named: removeUsingPOST_8
2019-03-25 10:11:39 -Generating unique operation named: removeUsingPOST_9
2019-03-25 10:11:39 -Generating unique operation named: saveUsingPOST_4
2019-03-25 10:11:39 -Generating unique operation named: updateUsingGET_4
2019-03-25 10:11:39 -Generating unique operation named: updateUsingHEAD_4
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPOST_4
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPUT_4
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPATCH_4
2019-03-25 10:11:39 -Generating unique operation named: updateUsingDELETE_4
2019-03-25 10:11:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-25 10:11:39 -Generating unique operation named: updateUsingTRACE_4
2019-03-25 10:11:39 -Generating unique operation named: ElecUsingGET_1
2019-03-25 10:11:39 -Generating unique operation named: addUsingGET_5
2019-03-25 10:11:39 -Generating unique operation named: editUsingGET_5
2019-03-25 10:11:39 -Generating unique operation named: listUsingGET_5
2019-03-25 10:11:39 -Generating unique operation named: removeUsingPOST_10
2019-03-25 10:11:39 -Generating unique operation named: removeUsingPOST_11
2019-03-25 10:11:39 -Generating unique operation named: saveUsingPOST_5
2019-03-25 10:11:39 -Generating unique operation named: updateUsingGET_5
2019-03-25 10:11:39 -Generating unique operation named: updateUsingHEAD_5
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPOST_5
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPUT_5
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPATCH_5
2019-03-25 10:11:39 -Generating unique operation named: updateUsingDELETE_5
2019-03-25 10:11:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-25 10:11:39 -Generating unique operation named: updateUsingTRACE_5
2019-03-25 10:11:39 -Generating unique operation named: editUsingGET_6
2019-03-25 10:11:39 -Generating unique operation named: listUsingGET_6
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPOST_6
2019-03-25 10:11:39 -Generating unique operation named: addUsingGET_6
2019-03-25 10:11:39 -Generating unique operation named: editUsingGET_7
2019-03-25 10:11:39 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-25 10:11:39 -Generating unique operation named: listUsingGET_7
2019-03-25 10:11:39 -Generating unique operation named: removeUsingPOST_12
2019-03-25 10:11:39 -Generating unique operation named: removeUsingPOST_13
2019-03-25 10:11:39 -Generating unique operation named: saveUsingPOST_6
2019-03-25 10:11:39 -Generating unique operation named: updateUsingGET_6
2019-03-25 10:11:39 -Generating unique operation named: updateUsingHEAD_6
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPOST_7
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPUT_6
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPATCH_6
2019-03-25 10:11:39 -Generating unique operation named: updateUsingDELETE_6
2019-03-25 10:11:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-25 10:11:39 -Generating unique operation named: updateUsingTRACE_6
2019-03-25 10:11:39 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-25 10:11:39 -Generating unique operation named: addUsingGET_7
2019-03-25 10:11:39 -Generating unique operation named: editUsingGET_8
2019-03-25 10:11:39 -Generating unique operation named: listUsingGET_8
2019-03-25 10:11:39 -Generating unique operation named: removeUsingPOST_14
2019-03-25 10:11:39 -Generating unique operation named: removeUsingPOST_15
2019-03-25 10:11:39 -Generating unique operation named: saveUsingPOST_7
2019-03-25 10:11:39 -Generating unique operation named: updateUsingGET_7
2019-03-25 10:11:39 -Generating unique operation named: updateUsingHEAD_7
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPOST_8
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPUT_7
2019-03-25 10:11:39 -Generating unique operation named: updateUsingPATCH_7
2019-03-25 10:11:39 -Generating unique operation named: updateUsingDELETE_7
2019-03-25 10:11:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-25 10:11:39 -Generating unique operation named: updateUsingTRACE_7
2019-03-25 10:11:39 -Generating unique operation named: addUsingGET_8
2019-03-25 10:11:39 -Generating unique operation named: editUsingGET_9
2019-03-25 10:11:39 -Generating unique operation named: listUsingGET_9
2019-03-25 10:11:39 -Generating unique operation named: removeUsingPOST_16
2019-03-25 10:11:39 -Generating unique operation named: removeUsingPOST_17
2019-03-25 10:11:39 -Generating unique operation named: saveUsingPOST_8
2019-03-25 10:11:39 -Generating unique operation named: updateUsingGET_8
2019-03-25 10:11:39 -Generating unique operation named: updateUsingHEAD_8
2019-03-25 10:11:40 -Generating unique operation named: updateUsingPOST_9
2019-03-25 10:11:40 -Generating unique operation named: updateUsingPUT_8
2019-03-25 10:11:40 -Generating unique operation named: updateUsingPATCH_8
2019-03-25 10:11:40 -Generating unique operation named: updateUsingDELETE_8
2019-03-25 10:11:40 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-25 10:11:40 -Generating unique operation named: updateUsingTRACE_8
2019-03-25 10:11:40 -Generating unique operation named: addUsingGET_9
2019-03-25 10:11:40 -Generating unique operation named: editUsingGET_10
2019-03-25 10:11:40 -Generating unique operation named: infoUsingGET_1
2019-03-25 10:11:40 -Generating unique operation named: infoUsingHEAD_1
2019-03-25 10:11:40 -Generating unique operation named: infoUsingPOST_1
2019-03-25 10:11:40 -Generating unique operation named: infoUsingPUT_1
2019-03-25 10:11:40 -Generating unique operation named: infoUsingPATCH_1
2019-03-25 10:11:40 -Generating unique operation named: infoUsingDELETE_1
2019-03-25 10:11:40 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-25 10:11:40 -Generating unique operation named: infoUsingTRACE_1
2019-03-25 10:11:40 -Generating unique operation named: listUsingGET_10
2019-03-25 10:11:40 -Generating unique operation named: removeUsingPOST_18
2019-03-25 10:11:40 -Generating unique operation named: removeUsingPOST_19
2019-03-25 10:11:40 -Generating unique operation named: saveUsingPOST_9
2019-03-25 10:11:40 -Generating unique operation named: updateUsingPOST_10
2019-03-25 10:11:40 -Generating unique operation named: listUsingGET_11
2019-03-25 10:11:40 -Generating unique operation named: removeUsingPOST_20
2019-03-25 10:11:40 -Generating unique operation named: welcomeUsingGET_1
2019-03-25 10:11:40 -Generating unique operation named: addUsingGET_10
2019-03-25 10:11:40 -Generating unique operation named: editUsingGET_11
2019-03-25 10:11:40 -Generating unique operation named: listUsingGET_12
2019-03-25 10:11:40 -Generating unique operation named: removeUsingPOST_21
2019-03-25 10:11:40 -Generating unique operation named: saveUsingPOST_10
2019-03-25 10:11:40 -Generating unique operation named: treeUsingGET_1
2019-03-25 10:11:40 -Generating unique operation named: treeUsingGET_2
2019-03-25 10:11:40 -Generating unique operation named: updateUsingPOST_11
2019-03-25 10:11:40 -Generating unique operation named: addUsingGET_11
2019-03-25 10:11:40 -Generating unique operation named: editUsingGET_12
2019-03-25 10:11:40 -Generating unique operation named: listUsingGET_13
2019-03-25 10:11:40 -Generating unique operation named: removeUsingPOST_22
2019-03-25 10:11:40 -Generating unique operation named: removeUsingPOST_23
2019-03-25 10:11:40 -Generating unique operation named: saveUsingPOST_11
2019-03-25 10:11:40 -Generating unique operation named: updateUsingGET_9
2019-03-25 10:11:40 -Generating unique operation named: updateUsingHEAD_9
2019-03-25 10:11:40 -Generating unique operation named: updateUsingPOST_12
2019-03-25 10:11:40 -Generating unique operation named: updateUsingPUT_9
2019-03-25 10:11:40 -Generating unique operation named: updateUsingPATCH_9
2019-03-25 10:11:40 -Generating unique operation named: updateUsingDELETE_9
2019-03-25 10:11:40 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-25 10:11:40 -Generating unique operation named: updateUsingTRACE_9
2019-03-25 10:11:40 -Generating unique operation named: addUsingGET_12
2019-03-25 10:11:40 -Generating unique operation named: editUsingGET_13
2019-03-25 10:11:40 -Generating unique operation named: listUsingGET_14
2019-03-25 10:11:40 -Generating unique operation named: removeUsingPOST_24
2019-03-25 10:11:40 -Generating unique operation named: removeUsingPOST_25
2019-03-25 10:11:40 -Generating unique operation named: saveUsingPOST_12
2019-03-25 10:11:40 -Generating unique operation named: updateUsingGET_10
2019-03-25 10:11:40 -Generating unique operation named: updateUsingHEAD_10
2019-03-25 10:11:40 -Generating unique operation named: updateUsingPOST_13
2019-03-25 10:11:40 -Generating unique operation named: updateUsingPUT_10
2019-03-25 10:11:40 -Generating unique operation named: updateUsingPATCH_10
2019-03-25 10:11:40 -Generating unique operation named: updateUsingDELETE_10
2019-03-25 10:11:40 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-25 10:11:41 -Generating unique operation named: updateUsingTRACE_10
2019-03-25 10:11:41 -Generating unique operation named: addUsingGET_13
2019-03-25 10:11:41 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-25 10:11:41 -Generating unique operation named: editUsingGET_14
2019-03-25 10:11:41 -Generating unique operation named: listUsingGET_15
2019-03-25 10:11:41 -Generating unique operation named: saveUsingPOST_13
2019-03-25 10:11:41 -Generating unique operation named: saveUsingPOST_14
2019-03-25 10:11:41 -Generating unique operation named: updateUsingPOST_14
2019-03-25 10:11:41 -Generating unique operation named: listUsingGET_16
2019-03-25 10:11:41 -Generating unique operation named: listUsingHEAD_1
2019-03-25 10:11:41 -Generating unique operation named: listUsingPOST_1
2019-03-25 10:11:41 -Generating unique operation named: listUsingPUT_1
2019-03-25 10:11:41 -Generating unique operation named: listUsingPATCH_1
2019-03-25 10:11:41 -Generating unique operation named: listUsingDELETE_1
2019-03-25 10:11:41 -Generating unique operation named: listUsingOPTIONS_1
2019-03-25 10:11:41 -Generating unique operation named: listUsingTRACE_1
2019-03-25 10:11:41 -Generating unique operation named: addUsingGET_14
2019-03-25 10:11:41 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-25 10:11:41 -Generating unique operation named: editUsingGET_15
2019-03-25 10:11:41 -Generating unique operation named: listUsingGET_17
2019-03-25 10:11:41 -Generating unique operation named: removeUsingPOST_26
2019-03-25 10:11:41 -Generating unique operation named: saveUsingPOST_15
2019-03-25 10:11:41 -Generating unique operation named: treeUsingGET_3
2019-03-25 10:11:41 -Generating unique operation named: treeViewUsingGET_1
2019-03-25 10:11:41 -Generating unique operation named: updateUsingPOST_15
2019-03-25 10:11:41 -Generating unique operation named: addUsingGET_15
2019-03-25 10:11:41 -Generating unique operation named: editUsingGET_16
2019-03-25 10:11:41 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-25 10:11:41 -Generating unique operation named: listUsingGET_18
2019-03-25 10:11:41 -Generating unique operation named: removeUsingPOST_27
2019-03-25 10:11:41 -Generating unique operation named: removeUsingPOST_28
2019-03-25 10:11:41 -Generating unique operation named: saveUsingPOST_16
2019-03-25 10:11:41 -Generating unique operation named: updateUsingGET_11
2019-03-25 10:11:41 -Generating unique operation named: updateUsingHEAD_11
2019-03-25 10:11:41 -Generating unique operation named: updateUsingPOST_16
2019-03-25 10:11:41 -Generating unique operation named: updateUsingPUT_11
2019-03-25 10:11:41 -Generating unique operation named: updateUsingPATCH_11
2019-03-25 10:11:41 -Generating unique operation named: updateUsingDELETE_11
2019-03-25 10:11:41 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-25 10:11:41 -Generating unique operation named: updateUsingTRACE_11
2019-03-25 10:11:41 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-25 10:11:41 -Generating unique operation named: addUsingGET_16
2019-03-25 10:11:41 -Generating unique operation named: editUsingGET_17
2019-03-25 10:11:41 -Generating unique operation named: listUsingGET_19
2019-03-25 10:11:41 -Generating unique operation named: removeUsingPOST_29
2019-03-25 10:11:41 -Generating unique operation named: removeUsingPOST_30
2019-03-25 10:11:41 -Generating unique operation named: saveUsingPOST_17
2019-03-25 10:11:41 -Generating unique operation named: updateUsingGET_12
2019-03-25 10:11:41 -Generating unique operation named: updateUsingHEAD_12
2019-03-25 10:11:41 -Generating unique operation named: updateUsingPOST_17
2019-03-25 10:11:41 -Generating unique operation named: updateUsingPUT_12
2019-03-25 10:11:41 -Generating unique operation named: updateUsingPATCH_12
2019-03-25 10:11:41 -Generating unique operation named: updateUsingDELETE_12
2019-03-25 10:11:41 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-25 10:11:41 -Generating unique operation named: updateUsingTRACE_12
2019-03-25 10:11:41 -Generating unique operation named: addUsingGET_17
2019-03-25 10:11:41 -Generating unique operation named: editUsingGET_18
2019-03-25 10:11:41 -Generating unique operation named: listUsingGET_20
2019-03-25 10:11:41 -Generating unique operation named: removeUsingPOST_31
2019-03-25 10:11:41 -Generating unique operation named: removeUsingPOST_32
2019-03-25 10:11:41 -Generating unique operation named: saveUsingPOST_18
2019-03-25 10:11:41 -Generating unique operation named: updateUsingGET_13
2019-03-25 10:11:41 -Generating unique operation named: updateUsingHEAD_13
2019-03-25 10:11:41 -Generating unique operation named: updateUsingPOST_18
2019-03-25 10:11:41 -Generating unique operation named: updateUsingPUT_13
2019-03-25 10:11:41 -Generating unique operation named: updateUsingPATCH_13
2019-03-25 10:11:41 -Generating unique operation named: updateUsingDELETE_13
2019-03-25 10:11:41 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-25 10:11:41 -Generating unique operation named: updateUsingTRACE_13
2019-03-25 10:11:42 -Starting Quartz Scheduler now
2019-03-25 10:11:42 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-25 10:11:42 -Starting...
2019-03-25 10:11:42 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-25 10:11:42 -Started.
2019-03-25 10:11:42 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-25 10:11:42 -Using a shared selector for servlet write/read
2019-03-25 10:11:42 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-25 10:11:42 -Started BootdoApplication in 49.903 seconds (JVM running for 55.148)
2019-03-25 10:11:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-25 10:11:43 -==> Parameters: 
2019-03-25 10:11:43 -<==      Total: 1
2019-03-25 10:12:28 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-25 10:12:28 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-25 10:12:28 -FrameworkServlet 'dispatcherServlet': initialization completed in 87 ms
2019-03-25 10:12:28 -Enabling session validation scheduler...
2019-03-25 10:12:29 -请求地址 : http://localhost:8081/login;JSESSIONID=fff71eeb-261e-40ae-8e4c-1d942e693e7c
2019-03-25 10:12:29 -HTTP METHOD : GET
2019-03-25 10:12:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 10:12:29 -参数 : [{}]
2019-03-25 10:12:29 -耗时 : 8
2019-03-25 10:12:29 -返回值 : login
2019-03-25 10:12:32 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-25 10:12:34 -请求地址 : http://localhost:8081/getVerify
2019-03-25 10:12:34 -HTTP METHOD : GET
2019-03-25 10:12:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 10:12:34 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4e625522, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5ef75d65]
2019-03-25 10:12:58 -0128
2019-03-25 10:12:59 -耗时 : 25452
2019-03-25 10:12:59 -返回值 : null
2019-03-25 10:13:01 -请求地址 : http://localhost:8081/login
2019-03-25 10:13:01 -HTTP METHOD : GET
2019-03-25 10:13:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 10:13:01 -参数 : [{}]
2019-03-25 10:13:01 -耗时 : 1
2019-03-25 10:13:01 -返回值 : login
2019-03-25 10:13:07 -请求地址 : http://localhost:8081/login
2019-03-25 10:13:07 -HTTP METHOD : POST
2019-03-25 10:13:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 10:13:07 -参数 : [admin, 111111, 0128, org.apache.shiro.web.servlet.ShiroHttpServletRequest@70dcf5ff]
2019-03-25 10:13:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 10:13:09 -==> Parameters: admin(String)
2019-03-25 10:13:10 -<==      Total: 1
2019-03-25 10:13:10 -耗时 : 2620
2019-03-25 10:13:10 -返回值 : {msg=操作成功, code=0}
2019-03-25 10:13:10 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-25 10:13:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 10:13:11 -==> Parameters: 1(Long), admin(String), 登录(String), 2621(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 10:13:10.784(Timestamp)
2019-03-25 10:13:11 -<==    Updates: 1
2019-03-25 10:13:11 -请求地址 : http://localhost:8081/index
2019-03-25 10:13:11 -HTTP METHOD : GET
2019-03-25 10:13:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 10:13:11 -参数 : [{}]
2019-03-25 10:13:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 10:13:11 -==> Parameters: 1(Long)
2019-03-25 10:13:12 -<==      Total: 46
2019-03-25 10:13:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 10:13:12 -==> Parameters: 138(Long)
2019-03-25 10:13:12 -<==      Total: 1
2019-03-25 10:13:12 -耗时 : 793
2019-03-25 10:13:12 -返回值 : index_v1
2019-03-25 10:13:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 10:13:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 793(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 10:13:12.349(Timestamp)
2019-03-25 10:13:13 -<==    Updates: 1
2019-03-25 10:13:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 10:13:14 -HTTP METHOD : GET
2019-03-25 10:13:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 10:13:14 -参数 : []
2019-03-25 10:13:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 10:13:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 10:13:14 -<==      Total: 0
2019-03-25 10:13:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 10:13:14 -==> Parameters: 1(Long), 0(String)
2019-03-25 10:13:14 -<==      Total: 1
2019-03-25 10:13:14 -耗时 : 351
2019-03-25 10:13:14 -返回值 : com.bootdo.common.utils.PageUtils@738199fd
2019-03-25 10:13:15 -请求地址 : http://localhost:8081/main
2019-03-25 10:13:15 -HTTP METHOD : GET
2019-03-25 10:13:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 10:13:15 -参数 : []
2019-03-25 10:13:15 -耗时 : 2
2019-03-25 10:13:15 -返回值 : main
2019-03-25 10:13:15 -请求地址 : http://localhost:8081/main
2019-03-25 10:13:15 -HTTP METHOD : GET
2019-03-25 10:13:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 10:13:15 -参数 : []
2019-03-25 10:13:15 -耗时 : 1
2019-03-25 10:13:15 -返回值 : main
2019-03-25 10:13:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 10:13:34 -==> Parameters: 1(Long)
2019-03-25 10:13:34 -<==      Total: 90
2019-03-25 10:13:34 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-25 10:13:34 -HTTP METHOD : GET
2019-03-25 10:13:34 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-25 10:13:34 -参数 : []
2019-03-25 10:13:34 -耗时 : 1
2019-03-25 10:13:34 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-25 10:13:58 -请求地址 : http://localhost:8081/index
2019-03-25 10:13:58 -HTTP METHOD : GET
2019-03-25 10:13:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 10:13:58 -参数 : [{}]
2019-03-25 10:13:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 10:13:58 -==> Parameters: 1(Long)
2019-03-25 10:13:58 -<==      Total: 46
2019-03-25 10:13:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 10:13:58 -==> Parameters: 138(Long)
2019-03-25 10:13:58 -<==      Total: 1
2019-03-25 10:13:58 -耗时 : 27
2019-03-25 10:13:58 -返回值 : index_v1
2019-03-25 10:13:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 10:13:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 10:13:58.058(Timestamp)
2019-03-25 10:13:58 -<==    Updates: 1
2019-03-25 10:13:58 -请求地址 : http://localhost:8081/main
2019-03-25 10:13:58 -HTTP METHOD : GET
2019-03-25 10:13:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 10:13:58 -参数 : []
2019-03-25 10:13:58 -耗时 : 1
2019-03-25 10:13:58 -返回值 : main
2019-03-25 10:13:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 10:13:58 -HTTP METHOD : GET
2019-03-25 10:13:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 10:13:58 -参数 : []
2019-03-25 10:13:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 10:13:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 10:13:58 -<==      Total: 0
2019-03-25 10:13:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 10:13:58 -==> Parameters: 1(Long), 0(String)
2019-03-25 10:13:58 -<==      Total: 1
2019-03-25 10:13:58 -耗时 : 10
2019-03-25 10:13:58 -返回值 : com.bootdo.common.utils.PageUtils@78fc4b16
2019-03-25 10:13:58 -请求地址 : http://localhost:8081/main
2019-03-25 10:13:58 -HTTP METHOD : GET
2019-03-25 10:13:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 10:13:58 -参数 : []
2019-03-25 10:13:58 -耗时 : 1
2019-03-25 10:13:58 -返回值 : main
2019-03-25 10:14:26 -请求地址 : http://localhost:8081/index
2019-03-25 10:14:26 -HTTP METHOD : GET
2019-03-25 10:14:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 10:14:26 -参数 : [{}]
2019-03-25 10:14:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 10:14:26 -==> Parameters: 1(Long)
2019-03-25 10:14:26 -<==      Total: 46
2019-03-25 10:14:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 10:14:26 -==> Parameters: 138(Long)
2019-03-25 10:14:26 -<==      Total: 1
2019-03-25 10:14:26 -耗时 : 36
2019-03-25 10:14:26 -返回值 : index_v1
2019-03-25 10:14:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 10:14:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 10:14:26.903(Timestamp)
2019-03-25 10:14:27 -请求地址 : http://localhost:8081/main
2019-03-25 10:14:27 -HTTP METHOD : GET
2019-03-25 10:14:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 10:14:27 -参数 : []
2019-03-25 10:14:27 -耗时 : 0
2019-03-25 10:14:27 -返回值 : main
2019-03-25 10:14:27 -<==    Updates: 1
2019-03-25 10:14:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 10:14:27 -HTTP METHOD : GET
2019-03-25 10:14:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 10:14:27 -参数 : []
2019-03-25 10:14:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 10:14:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 10:14:27 -<==      Total: 0
2019-03-25 10:14:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 10:14:27 -==> Parameters: 1(Long), 0(String)
2019-03-25 10:14:27 -<==      Total: 1
2019-03-25 10:14:27 -耗时 : 32
2019-03-25 10:14:27 -返回值 : com.bootdo.common.utils.PageUtils@5687bb59
2019-03-25 10:14:27 -请求地址 : http://localhost:8081/main
2019-03-25 10:14:27 -HTTP METHOD : GET
2019-03-25 10:14:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 10:14:27 -参数 : []
2019-03-25 10:14:27 -耗时 : 1
2019-03-25 10:14:27 -返回值 : main
2019-03-25 10:15:51 -请求地址 : http://localhost:8081/
2019-03-25 10:15:51 -HTTP METHOD : GET
2019-03-25 10:15:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-25 10:15:51 -参数 : [{}]
2019-03-25 10:15:51 -耗时 : 0
2019-03-25 10:15:51 -返回值 : redirect:/index
2019-03-25 10:15:52 -请求地址 : http://localhost:8081/login;JSESSIONID=6827346e-8307-4af9-a25a-2791771174b4
2019-03-25 10:15:52 -HTTP METHOD : GET
2019-03-25 10:15:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 10:15:52 -参数 : [{}]
2019-03-25 10:15:52 -耗时 : 0
2019-03-25 10:15:52 -返回值 : login
2019-03-25 10:15:53 -请求地址 : http://localhost:8081/getVerify
2019-03-25 10:15:53 -HTTP METHOD : GET
2019-03-25 10:15:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 10:15:53 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@665e4dcb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7ab26489]
2019-03-25 10:15:53 -5563
2019-03-25 10:15:53 -耗时 : 36
2019-03-25 10:15:53 -返回值 : null
2019-03-25 10:15:53 -请求地址 : http://localhost:8081/login
2019-03-25 10:15:53 -HTTP METHOD : GET
2019-03-25 10:15:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 10:15:53 -参数 : [{}]
2019-03-25 10:15:53 -耗时 : 1
2019-03-25 10:15:53 -返回值 : login
2019-03-25 10:15:57 -请求地址 : http://localhost:8081/login
2019-03-25 10:15:57 -HTTP METHOD : POST
2019-03-25 10:15:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 10:15:57 -参数 : [admin, 111111, 5563, org.apache.shiro.web.servlet.ShiroHttpServletRequest@44d511eb]
2019-03-25 10:15:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 10:15:57 -==> Parameters: admin(String)
2019-03-25 10:15:57 -<==      Total: 1
2019-03-25 10:15:57 -耗时 : 15
2019-03-25 10:15:57 -返回值 : {msg=操作成功, code=0}
2019-03-25 10:15:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 10:15:57 -==> Parameters: 1(Long), admin(String), 登录(String), 16(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 10:15:57.412(Timestamp)
2019-03-25 10:15:57 -<==    Updates: 1
2019-03-25 10:15:57 -请求地址 : http://localhost:8081/index
2019-03-25 10:15:57 -HTTP METHOD : GET
2019-03-25 10:15:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 10:15:57 -参数 : [{}]
2019-03-25 10:15:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 10:15:57 -==> Parameters: 1(Long)
2019-03-25 10:15:57 -<==      Total: 46
2019-03-25 10:15:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 10:15:57 -==> Parameters: 138(Long)
2019-03-25 10:15:57 -<==      Total: 1
2019-03-25 10:15:57 -耗时 : 213
2019-03-25 10:15:57 -返回值 : index_v1
2019-03-25 10:15:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 10:15:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 213(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 10:15:57.894(Timestamp)
2019-03-25 10:15:58 -<==    Updates: 1
2019-03-25 10:15:59 -请求地址 : http://localhost:8081/main
2019-03-25 10:15:59 -HTTP METHOD : GET
2019-03-25 10:15:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 10:15:59 -参数 : []
2019-03-25 10:15:59 -耗时 : 0
2019-03-25 10:15:59 -返回值 : main
2019-03-25 10:16:05 -请求地址 : http://localhost:8081/main
2019-03-25 10:16:05 -HTTP METHOD : GET
2019-03-25 10:16:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 10:16:05 -参数 : []
2019-03-25 10:16:05 -耗时 : 1
2019-03-25 10:16:05 -返回值 : main
2019-03-25 10:16:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 10:16:05 -HTTP METHOD : GET
2019-03-25 10:16:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 10:16:05 -参数 : []
2019-03-25 10:16:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 10:16:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 10:16:05 -<==      Total: 0
2019-03-25 10:16:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 10:16:05 -==> Parameters: 1(Long), 0(String)
2019-03-25 10:16:05 -<==      Total: 1
2019-03-25 10:16:05 -耗时 : 84
2019-03-25 10:16:05 -返回值 : com.bootdo.common.utils.PageUtils@fdb6179
2019-03-25 10:16:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 10:16:13 -==> Parameters: 1(Long)
2019-03-25 10:16:13 -<==      Total: 90
2019-03-25 10:16:13 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-25 10:16:13 -HTTP METHOD : GET
2019-03-25 10:16:13 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-25 10:16:13 -参数 : []
2019-03-25 10:16:13 -耗时 : 1
2019-03-25 10:16:13 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-25 10:16:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 10:16:27 -HTTP METHOD : GET
2019-03-25 10:16:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 10:16:27 -参数 : []
2019-03-25 10:16:27 -耗时 : 0
2019-03-25 10:16:27 -返回值 : system/dept/deptTree
2019-03-25 10:16:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 10:16:27 -HTTP METHOD : GET
2019-03-25 10:16:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 10:16:27 -参数 : []
2019-03-25 10:16:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 10:16:27 -==> Parameters: 
2019-03-25 10:16:28 -<==      Total: 3
2019-03-25 10:16:28 -耗时 : 125
2019-03-25 10:16:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 10:16:30 -请求地址 : http://localhost:8081/heat/heatUpLoad/exprotHeatExcel
2019-03-25 10:16:30 -HTTP METHOD : GET
2019-03-25 10:16:30 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel
2019-03-25 10:16:30 -参数 : [com.bootdo.heat.vo.HeatVo@54868699, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2fc659fb]
2019-03-25 10:16:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_org = ? and create_time = ? 
2019-03-25 10:16:30 -==> Parameters: 2(String), 2019-04(String)
2019-03-25 10:16:31 -<==      Total: 1
2019-03-25 10:16:32 -耗时 : 1628
2019-03-25 10:16:32 -返回值 : null
2019-03-25 10:16:46 -请求地址 : http://localhost:8081/water/waterUpLoad
2019-03-25 10:16:46 -HTTP METHOD : GET
2019-03-25 10:16:46 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad
2019-03-25 10:16:46 -参数 : []
2019-03-25 10:16:46 -耗时 : 1
2019-03-25 10:16:46 -返回值 : water/waterUpLoad/waterUpLoad
2019-03-25 10:16:48 -请求地址 : http://localhost:8081/file/downImport/waterUser
2019-03-25 10:16:48 -HTTP METHOD : GET
2019-03-25 10:16:48 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-25 10:16:48 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@7c86203a, waterUser]
2019-03-25 10:16:50 -耗时 : 1995
2019-03-25 10:16:50 -返回值 : null
2019-03-25 10:17:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 10:17:37 -HTTP METHOD : GET
2019-03-25 10:17:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 10:17:37 -参数 : []
2019-03-25 10:17:37 -耗时 : 2
2019-03-25 10:17:37 -返回值 : system/dept/deptTree
2019-03-25 10:17:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 10:17:38 -HTTP METHOD : GET
2019-03-25 10:17:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 10:17:38 -参数 : []
2019-03-25 10:17:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 10:17:38 -==> Parameters: 
2019-03-25 10:17:38 -<==      Total: 3
2019-03-25 10:17:38 -耗时 : 6
2019-03-25 10:17:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 10:17:40 -请求地址 : http://localhost:8081/water/waterUpLoad/exprotWaterExcel
2019-03-25 10:17:40 -HTTP METHOD : GET
2019-03-25 10:17:40 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel
2019-03-25 10:17:40 -参数 : [com.bootdo.water.vo.WaterVo@1e97b793, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6367aef8]
2019-03-25 10:17:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE user_org = ? and create_time = ? 
2019-03-25 10:17:40 -==> Parameters: 2(String), 2019-03(String)
2019-03-25 10:17:40 -<==      Total: 2
2019-03-25 10:17:40 -耗时 : 662
2019-03-25 10:17:40 -返回值 : null
2019-03-25 10:18:23 -请求地址 : http://localhost:8081/water/water
2019-03-25 10:18:23 -HTTP METHOD : GET
2019-03-25 10:18:23 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-25 10:18:23 -参数 : []
2019-03-25 10:18:23 -耗时 : 1
2019-03-25 10:18:23 -返回值 : water/water/water
2019-03-25 10:18:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 10:18:23 -HTTP METHOD : GET
2019-03-25 10:18:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 10:18:23 -参数 : [userType]
2019-03-25 10:18:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 10:18:23 -==> Parameters: userType(String)
2019-03-25 10:18:23 -请求地址 : http://localhost:8081/water/water/list
2019-03-25 10:18:23 -HTTP METHOD : GET
2019-03-25 10:18:23 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-25 10:18:23 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-25 10:18:24 -<==      Total: 2
2019-03-25 10:18:24 -耗时 : 234
2019-03-25 10:18:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 10:18:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-03-25 10:18:24 -==> Parameters: 0(Integer), 3(Integer)
2019-03-25 10:18:24 -<==      Total: 3
2019-03-25 10:18:24 -==>  Preparing: select count(*) from water 
2019-03-25 10:18:24 -==> Parameters: 
2019-03-25 10:18:24 -<==      Total: 1
2019-03-25 10:18:24 -耗时 : 252
2019-03-25 10:18:24 -返回值 : com.bootdo.common.utils.PageUtils@599b5b51
2019-03-25 10:18:26 -请求地址 : http://localhost:8081/water/water/edit/1
2019-03-25 10:18:26 -HTTP METHOD : GET
2019-03-25 10:18:26 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-03-25 10:18:26 -参数 : [1, {}]
2019-03-25 10:18:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-03-25 10:18:26 -==> Parameters: 1(Long)
2019-03-25 10:18:26 -<==      Total: 1
2019-03-25 10:18:26 -耗时 : 34
2019-03-25 10:18:26 -返回值 : water/water/edit
2019-03-25 10:18:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 10:18:27 -HTTP METHOD : GET
2019-03-25 10:18:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 10:18:27 -参数 : [userType]
2019-03-25 10:18:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 10:18:27 -==> Parameters: userType(String)
2019-03-25 10:18:27 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-03-25 10:18:27 -HTTP METHOD : GET
2019-03-25 10:18:27 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-25 10:18:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 10:18:27 -HTTP METHOD : GET
2019-03-25 10:18:27 -参数 : [waterType]
2019-03-25 10:18:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 10:18:27 -参数 : [userState]
2019-03-25 10:18:27 -<==      Total: 2
2019-03-25 10:18:27 -耗时 : 13
2019-03-25 10:18:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 10:18:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 10:18:27 -==> Parameters: userState(String)
2019-03-25 10:18:27 -<==      Total: 2
2019-03-25 10:18:27 -耗时 : 15
2019-03-25 10:18:27 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 10:18:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 10:18:27 -==> Parameters: waterType(String)
2019-03-25 10:18:27 -<==      Total: 6
2019-03-25 10:18:27 -耗时 : 22
2019-03-25 10:18:27 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 10:18:37 -请求地址 : http://localhost:8081/water/water/update
2019-03-25 10:18:37 -HTTP METHOD : POST
2019-03-25 10:18:37 -CLASS_METHOD : com.bootdo.water.controller.WaterController.update
2019-03-25 10:18:37 -参数 : [com.bootdo.water.domain.WaterDO@21be2678]
2019-03-25 10:18:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 10:18:38 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/water/water/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-03-25 10:18:38.011(Timestamp)
2019-03-25 10:18:38 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy127.update(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.update(WaterServiceImpl.java:44)
	at com.bootdo.water.controller.WaterController.update(WaterController.java:221)
	at com.bootdo.water.controller.WaterController$$FastClassBySpringCGLIB$$55e6da3c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.water.controller.WaterController$$EnhancerBySpringCGLIB$$237004b0.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-03-25 10:18:38 -<==    Updates: 1
2019-03-25 10:22:10 -请求地址 : http://localhost:8081/water/waterUpLoad/createWaterExcel
2019-03-25 10:22:10 -HTTP METHOD : POST
2019-03-25 10:22:10 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.createWaterExcel
2019-03-25 10:22:10 -参数 : [com.bootdo.water.domain.WaterDO@794dd289]
2019-03-25 10:22:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE user_org = ? 
2019-03-25 10:22:10 -==> Parameters: 2(String)
2019-03-25 10:22:10 -<==      Total: 3
2019-03-25 10:22:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-03-25 10:22:10 -==> Parameters: 2019-03(String), 2(String)
2019-03-25 10:22:10 -<==      Total: 2
2019-03-25 10:22:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-03-25 10:22:10 -==> Parameters: 2019-03(String), 2(String)
2019-03-25 10:22:10 -<==      Total: 2
2019-03-25 10:22:10 -耗时 : 193
2019-03-25 10:22:10 -返回值 : fail
2019-03-25 10:22:48 -请求地址 : http://localhost:8081/water/waterUpLoad/createWaterExcel
2019-03-25 10:22:48 -HTTP METHOD : POST
2019-03-25 10:22:48 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.createWaterExcel
2019-03-25 10:22:48 -参数 : [com.bootdo.water.domain.WaterDO@661d385]
2019-03-25 10:22:48 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE user_org = ? 
2019-03-25 10:22:48 -==> Parameters: 2(String)
2019-03-25 10:22:48 -<==      Total: 3
2019-03-25 10:22:48 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-03-25 10:22:48 -==> Parameters: 2019-03(String), 2(String)
2019-03-25 10:22:48 -<==      Total: 2
2019-03-25 10:22:48 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-03-25 10:22:48 -==> Parameters: 2019-03(String), 2(String)
2019-03-25 10:22:48 -<==      Total: 2
2019-03-25 10:22:48 -耗时 : 17
2019-03-25 10:22:48 -返回值 : fail
2019-03-25 10:22:55 -请求地址 : http://localhost:8081/water/waterUpLoad/createWaterExcel
2019-03-25 10:22:55 -HTTP METHOD : POST
2019-03-25 10:22:55 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.createWaterExcel
2019-03-25 10:22:55 -参数 : [com.bootdo.water.domain.WaterDO@93749ca]
2019-03-25 10:22:55 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE user_org = ? 
2019-03-25 10:22:55 -==> Parameters: 2(String)
2019-03-25 10:22:55 -<==      Total: 3
2019-03-25 10:22:55 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-03-25 10:22:55 -==> Parameters: 2019-03(String), 2(String)
2019-03-25 10:22:55 -<==      Total: 2
2019-03-25 10:22:55 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-03-25 10:22:55 -==> Parameters: 2019-03(String), 2(String)
2019-03-25 10:22:55 -<==      Total: 2
2019-03-25 10:22:55 -耗时 : 14
2019-03-25 10:22:55 -返回值 : fail
2019-03-25 10:42:32 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 417]
2019-03-25 11:12:28 -Validating all active sessions...
2019-03-25 11:12:29 -Finished session validation.  [2] sessions were stopped.
2019-03-25 11:12:32 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 850]
2019-03-25 11:14:39 -Starting BootdoApplication on ZJZL-20180906VX with PID 2524 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 11:14:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 11:14:39 -The following profiles are active: dev
2019-03-25 11:14:40 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45c8d09f: startup date [Mon Mar 25 11:14:40 CST 2019]; root of context hierarchy
2019-03-25 11:15:23 -Starting BootdoApplication on ZJZL-20180906VX with PID 16136 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 11:15:23 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 11:15:23 -The following profiles are active: dev
2019-03-25 11:15:24 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ac86ba5: startup date [Mon Mar 25 11:15:24 CST 2019]; root of context hierarchy
2019-03-25 11:15:31 -Starting BootdoApplication on ZJZL-20180906VX with PID 19356 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 11:15:32 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 11:15:32 -The following profiles are active: dev
2019-03-25 11:15:32 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e28bdd1: startup date [Mon Mar 25 11:15:32 CST 2019]; root of context hierarchy
2019-03-25 11:15:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 11:15:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 11:15:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b2738d7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:15:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a4ccbc23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:15:55 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d1f8036c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:15:55 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c4513213] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:15:57 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:15:57 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 11:16:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 11:16:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 11:16:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 11:16:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:02 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:02 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:03 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 11:16:08 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 11:16:08 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 11:16:08 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 11:16:08 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 11:16:09 -Starting service [Tomcat]
2019-03-25 11:16:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 11:16:09 -Starting service [Tomcat]
2019-03-25 11:16:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 11:16:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 11:16:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 11:16:10 -Initializing Spring embedded WebApplicationContext
2019-03-25 11:16:10 -Root WebApplicationContext: initialization completed in 45986 ms
2019-03-25 11:16:10 -Initializing Spring embedded WebApplicationContext
2019-03-25 11:16:10 -Root WebApplicationContext: initialization completed in 38032 ms
2019-03-25 11:16:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 11:16:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 11:16:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 11:16:17 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 11:16:17 -Filter xssFilter was not registered (disabled)
2019-03-25 11:16:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 11:16:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 11:16:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 11:16:17 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 11:16:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 11:16:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 11:16:17 -Servlet dispatcherServlet mapped to [/]
2019-03-25 11:16:17 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 11:16:17 -Filter xssFilter was not registered (disabled)
2019-03-25 11:16:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 11:16:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 11:16:17 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 11:16:17 -Servlet dispatcherServlet mapped to [/]
2019-03-25 11:16:28 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e28bdd1: startup date [Mon Mar 25 11:15:32 CST 2019]; root of context hierarchy
2019-03-25 11:16:28 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ac86ba5: startup date [Mon Mar 25 11:15:24 CST 2019]; root of context hierarchy
2019-03-25 11:16:33 -Using default implementation for ThreadExecutor
2019-03-25 11:16:33 -Using default implementation for ThreadExecutor
2019-03-25 11:16:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-25 11:16:33 -Quartz Scheduler v.2.2.1 created.
2019-03-25 11:16:33 -RAMJobStore initialized.
2019-03-25 11:16:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-25 11:16:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-25 11:16:33 -Quartz scheduler version: 2.2.1
2019-03-25 11:16:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3883031d
2019-03-25 11:16:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-25 11:16:33 -Quartz Scheduler v.2.2.1 created.
2019-03-25 11:16:33 -RAMJobStore initialized.
2019-03-25 11:16:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-25 11:16:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-25 11:16:33 -Quartz scheduler version: 2.2.1
2019-03-25 11:16:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2a20da9f
2019-03-25 11:16:36 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-25 11:16:37 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-25 11:16:37 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-25 11:16:37 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-25 11:16:50 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-25 11:16:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-25 11:16:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-25 11:16:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-25 11:16:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-25 11:16:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-25 11:16:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-25 11:16:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-25 11:16:50 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-25 11:16:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-25 11:16:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-25 11:16:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-25 11:16:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-25 11:16:51 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-25 11:16:51 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-25 11:16:51 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-25 11:16:51 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-25 11:16:51 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-25 11:16:51 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-25 11:16:51 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-25 11:16:51 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-25 11:16:51 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-25 11:16:51 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-25 11:16:51 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-25 11:16:51 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-25 11:16:51 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-25 11:16:51 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-25 11:16:51 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-25 11:16:51 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 11:16:51 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-25 11:16:51 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 11:16:51 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-25 11:16:51 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-25 11:16:51 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-25 11:16:51 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-25 11:16:51 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-25 11:16:51 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-25 11:16:51 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:51 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-25 11:16:51 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-25 11:16:51 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 11:16:51 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 11:16:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-25 11:16:51 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-25 11:16:51 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-25 11:16:51 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-25 11:16:51 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-25 11:16:51 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-25 11:16:51 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-25 11:16:51 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-25 11:16:51 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-25 11:16:51 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-25 11:16:51 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-25 11:16:51 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-25 11:16:51 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-25 11:16:51 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-25 11:16:51 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-25 11:16:51 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-25 11:16:51 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-25 11:16:51 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-25 11:16:51 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-25 11:16:51 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-25 11:16:51 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-25 11:16:51 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-25 11:16:51 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-25 11:16:51 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-25 11:16:51 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-25 11:16:51 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-25 11:16:51 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-25 11:16:51 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 11:16:51 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-25 11:16:51 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-25 11:16:51 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-25 11:16:51 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-25 11:16:51 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-25 11:16:51 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-25 11:16:51 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-25 11:16:51 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-25 11:16:51 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-25 11:16:51 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-25 11:16:51 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-25 11:16:51 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-25 11:16:51 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-25 11:16:51 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-25 11:16:51 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-25 11:16:51 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-25 11:16:51 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-25 11:16:51 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-25 11:16:51 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-25 11:16:51 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-25 11:16:51 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 11:16:51 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-25 11:16:51 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-25 11:16:51 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:51 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-25 11:16:51 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-25 11:16:51 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-25 11:16:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-25 11:16:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-25 11:16:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-25 11:16:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-25 11:16:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-25 11:16:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-25 11:16:51 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-25 11:16:51 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-25 11:16:51 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-25 11:16:51 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:51 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-25 11:16:51 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-25 11:16:51 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:51 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:51 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-25 11:16:52 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-25 11:16:52 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-25 11:16:52 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:52 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:52 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-25 11:16:52 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-25 11:16:52 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-25 11:16:52 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-25 11:16:52 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-25 11:16:52 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-25 11:16:52 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-25 11:16:52 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-25 11:16:52 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-25 11:16:52 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-25 11:16:52 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-25 11:16:52 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-25 11:16:52 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 11:16:52 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 11:16:52 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-25 11:16:52 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:52 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-25 11:16:52 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-25 11:16:52 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-25 11:16:52 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:52 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-25 11:16:52 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 11:16:52 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 11:16:52 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-25 11:16:52 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-25 11:16:52 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-25 11:16:52 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-25 11:16:52 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-25 11:16:52 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:52 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-25 11:16:52 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-25 11:16:52 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:52 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-25 11:16:52 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 11:16:52 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:52 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-25 11:16:52 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-25 11:16:52 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-25 11:16:52 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-25 11:16:52 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 11:16:52 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 11:16:52 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:52 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-25 11:16:52 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-25 11:16:52 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-25 11:16:52 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-25 11:16:52 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-25 11:16:52 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-25 11:16:52 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-25 11:16:52 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-25 11:16:52 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-25 11:16:52 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-25 11:16:52 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-25 11:16:52 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:52 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-25 11:16:52 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-25 11:16:52 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-25 11:16:52 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-25 11:16:52 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:52 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:52 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-25 11:16:52 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-25 11:16:52 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-25 11:16:52 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-25 11:16:52 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-25 11:16:52 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-25 11:16:52 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-25 11:16:52 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-25 11:16:52 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-25 11:16:52 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-25 11:16:52 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-25 11:16:52 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-25 11:16:52 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-25 11:16:52 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 11:16:52 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 11:16:52 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:52 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-25 11:16:52 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-25 11:16:52 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-25 11:16:52 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-25 11:16:52 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-25 11:16:52 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-25 11:16:52 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-25 11:16:52 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:52 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-25 11:16:52 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-25 11:16:52 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 11:16:52 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-25 11:16:52 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 11:16:52 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 11:16:52 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-25 11:16:52 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 11:16:52 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-25 11:16:52 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-25 11:16:52 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-25 11:16:53 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-25 11:16:53 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-25 11:16:54 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-25 11:16:54 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-25 11:16:54 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-25 11:16:54 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-25 11:16:56 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 11:16:56 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 11:16:57 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ac86ba5: startup date [Mon Mar 25 11:15:24 CST 2019]; root of context hierarchy
2019-03-25 11:16:57 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e28bdd1: startup date [Mon Mar 25 11:15:32 CST 2019]; root of context hierarchy
2019-03-25 11:16:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 11:16:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 11:16:57 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 11:16:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 11:16:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 11:16:57 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 11:16:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-25 11:16:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-25 11:16:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-25 11:16:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-25 11:17:06 -Registering beans for JMX exposure on startup
2019-03-25 11:17:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-25 11:17:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-25 11:17:06 -Registering beans for JMX exposure on startup
2019-03-25 11:17:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-25 11:17:06 -Starting beans in phase 2147483647
2019-03-25 11:17:06 -Context refreshed
2019-03-25 11:17:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-25 11:17:06 -Starting beans in phase 2147483647
2019-03-25 11:17:06 -Context refreshed
2019-03-25 11:17:06 -Found 1 custom documentation plugin(s)
2019-03-25 11:17:06 -Found 1 custom documentation plugin(s)
2019-03-25 11:17:06 -Scanning for api listing references
2019-03-25 11:17:06 -Scanning for api listing references
2019-03-25 11:17:08 -Generating unique operation named: removeUsingPOST_1
2019-03-25 11:17:08 -Generating unique operation named: removeUsingPOST_1
2019-03-25 11:17:09 -Generating unique operation named: addUsingGET_1
2019-03-25 11:17:09 -Generating unique operation named: addUsingGET_1
2019-03-25 11:17:09 -Generating unique operation named: editUsingGET_1
2019-03-25 11:17:09 -Generating unique operation named: editUsingGET_1
2019-03-25 11:17:09 -Generating unique operation named: listUsingGET_1
2019-03-25 11:17:09 -Generating unique operation named: listUsingGET_1
2019-03-25 11:17:10 -Generating unique operation named: removeUsingPOST_2
2019-03-25 11:17:10 -Generating unique operation named: removeUsingPOST_2
2019-03-25 11:17:10 -Generating unique operation named: removeUsingPOST_3
2019-03-25 11:17:10 -Generating unique operation named: removeUsingPOST_3
2019-03-25 11:17:10 -Generating unique operation named: saveUsingPOST_1
2019-03-25 11:17:10 -Generating unique operation named: saveUsingPOST_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingGET_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingGET_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingHEAD_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingHEAD_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingPOST_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingPOST_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingPUT_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingPUT_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingPATCH_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingPATCH_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingDELETE_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingDELETE_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-25 11:17:10 -Generating unique operation named: updateUsingTRACE_1
2019-03-25 11:17:10 -Generating unique operation named: addUsingGET_2
2019-03-25 11:17:10 -Generating unique operation named: updateUsingTRACE_1
2019-03-25 11:17:10 -Generating unique operation named: addUsingGET_2
2019-03-25 11:17:10 -Generating unique operation named: editUsingGET_2
2019-03-25 11:17:10 -Generating unique operation named: editUsingGET_2
2019-03-25 11:17:10 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-25 11:17:10 -Generating unique operation named: listUsingGET_2
2019-03-25 11:17:10 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-25 11:17:10 -Generating unique operation named: removeUsingPOST_4
2019-03-25 11:17:10 -Generating unique operation named: listUsingGET_2
2019-03-25 11:17:10 -Generating unique operation named: removeUsingPOST_5
2019-03-25 11:17:10 -Generating unique operation named: saveUsingPOST_2
2019-03-25 11:17:10 -Generating unique operation named: updateUsingGET_2
2019-03-25 11:17:10 -Generating unique operation named: removeUsingPOST_4
2019-03-25 11:17:11 -Generating unique operation named: removeUsingPOST_5
2019-03-25 11:17:11 -Generating unique operation named: saveUsingPOST_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingHEAD_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingPOST_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingPUT_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingPATCH_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingGET_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingHEAD_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingPOST_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingDELETE_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingPUT_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingPATCH_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingTRACE_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingDELETE_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-25 11:17:11 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-25 11:17:11 -Generating unique operation named: updateUsingTRACE_2
2019-03-25 11:17:11 -Generating unique operation named: addUsingGET_3
2019-03-25 11:17:11 -Generating unique operation named: editUsingGET_3
2019-03-25 11:17:11 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-25 11:17:11 -Generating unique operation named: listUsingGET_3
2019-03-25 11:17:11 -Generating unique operation named: removeUsingPOST_6
2019-03-25 11:17:11 -Generating unique operation named: addUsingGET_3
2019-03-25 11:17:11 -Generating unique operation named: editUsingGET_3
2019-03-25 11:17:11 -Generating unique operation named: removeUsingPOST_7
2019-03-25 11:17:11 -Generating unique operation named: saveUsingPOST_3
2019-03-25 11:17:12 -Generating unique operation named: updateUsingGET_3
2019-03-25 11:17:12 -Generating unique operation named: updateUsingHEAD_3
2019-03-25 11:17:12 -Generating unique operation named: updateUsingPOST_3
2019-03-25 11:17:12 -Generating unique operation named: updateUsingPUT_3
2019-03-25 11:17:12 -Generating unique operation named: listUsingGET_3
2019-03-25 11:17:12 -Generating unique operation named: removeUsingPOST_6
2019-03-25 11:17:12 -Generating unique operation named: updateUsingPATCH_3
2019-03-25 11:17:12 -Generating unique operation named: updateUsingDELETE_3
2019-03-25 11:17:12 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-25 11:17:12 -Generating unique operation named: updateUsingTRACE_3
2019-03-25 11:17:12 -Generating unique operation named: removeUsingPOST_7
2019-03-25 11:17:12 -Generating unique operation named: addUsingGET_4
2019-03-25 11:17:12 -Generating unique operation named: saveUsingPOST_3
2019-03-25 11:17:12 -Generating unique operation named: updateUsingGET_3
2019-03-25 11:17:12 -Generating unique operation named: updateUsingHEAD_3
2019-03-25 11:17:12 -Generating unique operation named: editUsingGET_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingPOST_3
2019-03-25 11:17:12 -Generating unique operation named: updateUsingPUT_3
2019-03-25 11:17:12 -Generating unique operation named: listUsingGET_4
2019-03-25 11:17:12 -Generating unique operation named: removeUsingPOST_8
2019-03-25 11:17:12 -Generating unique operation named: updateUsingPATCH_3
2019-03-25 11:17:12 -Generating unique operation named: removeUsingPOST_9
2019-03-25 11:17:12 -Generating unique operation named: updateUsingDELETE_3
2019-03-25 11:17:12 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-25 11:17:12 -Generating unique operation named: updateUsingTRACE_3
2019-03-25 11:17:12 -Generating unique operation named: addUsingGET_4
2019-03-25 11:17:12 -Generating unique operation named: saveUsingPOST_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingGET_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingHEAD_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingPOST_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingPUT_4
2019-03-25 11:17:12 -Generating unique operation named: editUsingGET_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingPATCH_4
2019-03-25 11:17:12 -Generating unique operation named: listUsingGET_4
2019-03-25 11:17:12 -Generating unique operation named: removeUsingPOST_8
2019-03-25 11:17:12 -Generating unique operation named: removeUsingPOST_9
2019-03-25 11:17:12 -Generating unique operation named: updateUsingDELETE_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingTRACE_4
2019-03-25 11:17:12 -Generating unique operation named: saveUsingPOST_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingGET_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingHEAD_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingPOST_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingPUT_4
2019-03-25 11:17:12 -Generating unique operation named: ElecUsingGET_1
2019-03-25 11:17:12 -Generating unique operation named: updateUsingPATCH_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingDELETE_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-25 11:17:12 -Generating unique operation named: updateUsingTRACE_4
2019-03-25 11:17:12 -Generating unique operation named: ElecUsingGET_1
2019-03-25 11:17:12 -Generating unique operation named: addUsingGET_5
2019-03-25 11:17:12 -Generating unique operation named: addUsingGET_5
2019-03-25 11:17:12 -Generating unique operation named: editUsingGET_5
2019-03-25 11:17:12 -Generating unique operation named: editUsingGET_5
2019-03-25 11:17:13 -Generating unique operation named: listUsingGET_5
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_10
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_11
2019-03-25 11:17:13 -Generating unique operation named: listUsingGET_5
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_10
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_11
2019-03-25 11:17:13 -Generating unique operation named: saveUsingPOST_5
2019-03-25 11:17:13 -Generating unique operation named: saveUsingPOST_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingGET_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingHEAD_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPOST_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingGET_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingHEAD_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPOST_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPUT_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPATCH_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingDELETE_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPUT_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPATCH_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingDELETE_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingTRACE_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-25 11:17:13 -Generating unique operation named: updateUsingTRACE_5
2019-03-25 11:17:13 -Generating unique operation named: editUsingGET_6
2019-03-25 11:17:13 -Generating unique operation named: listUsingGET_6
2019-03-25 11:17:13 -Generating unique operation named: editUsingGET_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPOST_6
2019-03-25 11:17:13 -Generating unique operation named: listUsingGET_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPOST_6
2019-03-25 11:17:13 -Generating unique operation named: addUsingGET_6
2019-03-25 11:17:13 -Generating unique operation named: editUsingGET_7
2019-03-25 11:17:13 -Generating unique operation named: addUsingGET_6
2019-03-25 11:17:13 -Generating unique operation named: editUsingGET_7
2019-03-25 11:17:13 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-25 11:17:13 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-25 11:17:13 -Generating unique operation named: listUsingGET_7
2019-03-25 11:17:13 -Generating unique operation named: listUsingGET_7
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_12
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_12
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_13
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_13
2019-03-25 11:17:13 -Generating unique operation named: saveUsingPOST_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingGET_6
2019-03-25 11:17:13 -Generating unique operation named: saveUsingPOST_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingHEAD_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPOST_7
2019-03-25 11:17:13 -Generating unique operation named: updateUsingGET_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPUT_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingHEAD_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPATCH_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPOST_7
2019-03-25 11:17:13 -Generating unique operation named: updateUsingDELETE_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPUT_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPATCH_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingTRACE_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingDELETE_6
2019-03-25 11:17:13 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-25 11:17:13 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-25 11:17:13 -Generating unique operation named: updateUsingTRACE_6
2019-03-25 11:17:13 -Generating unique operation named: addUsingGET_7
2019-03-25 11:17:13 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-25 11:17:13 -Generating unique operation named: editUsingGET_8
2019-03-25 11:17:13 -Generating unique operation named: addUsingGET_7
2019-03-25 11:17:13 -Generating unique operation named: listUsingGET_8
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_14
2019-03-25 11:17:13 -Generating unique operation named: editUsingGET_8
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_15
2019-03-25 11:17:13 -Generating unique operation named: saveUsingPOST_7
2019-03-25 11:17:13 -Generating unique operation named: updateUsingGET_7
2019-03-25 11:17:13 -Generating unique operation named: listUsingGET_8
2019-03-25 11:17:13 -Generating unique operation named: updateUsingHEAD_7
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPOST_8
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_14
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPUT_7
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPATCH_7
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_15
2019-03-25 11:17:13 -Generating unique operation named: updateUsingDELETE_7
2019-03-25 11:17:13 -Generating unique operation named: saveUsingPOST_7
2019-03-25 11:17:13 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-25 11:17:13 -Generating unique operation named: updateUsingTRACE_7
2019-03-25 11:17:13 -Generating unique operation named: updateUsingGET_7
2019-03-25 11:17:13 -Generating unique operation named: updateUsingHEAD_7
2019-03-25 11:17:13 -Generating unique operation named: addUsingGET_8
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPOST_8
2019-03-25 11:17:13 -Generating unique operation named: editUsingGET_9
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPUT_7
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPATCH_7
2019-03-25 11:17:13 -Generating unique operation named: listUsingGET_9
2019-03-25 11:17:13 -Generating unique operation named: updateUsingDELETE_7
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_16
2019-03-25 11:17:13 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-25 11:17:13 -Generating unique operation named: updateUsingTRACE_7
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_17
2019-03-25 11:17:13 -Generating unique operation named: addUsingGET_8
2019-03-25 11:17:13 -Generating unique operation named: editUsingGET_9
2019-03-25 11:17:13 -Generating unique operation named: saveUsingPOST_8
2019-03-25 11:17:13 -Generating unique operation named: listUsingGET_9
2019-03-25 11:17:13 -Generating unique operation named: updateUsingGET_8
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_16
2019-03-25 11:17:13 -Generating unique operation named: updateUsingHEAD_8
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPOST_9
2019-03-25 11:17:13 -Generating unique operation named: removeUsingPOST_17
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPUT_8
2019-03-25 11:17:13 -Generating unique operation named: saveUsingPOST_8
2019-03-25 11:17:13 -Generating unique operation named: updateUsingGET_8
2019-03-25 11:17:13 -Generating unique operation named: updateUsingHEAD_8
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPATCH_8
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPOST_9
2019-03-25 11:17:13 -Generating unique operation named: updateUsingPUT_8
2019-03-25 11:17:13 -Generating unique operation named: updateUsingDELETE_8
2019-03-25 11:17:13 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-25 11:17:13 -Generating unique operation named: updateUsingTRACE_8
2019-03-25 11:17:14 -Generating unique operation named: updateUsingPATCH_8
2019-03-25 11:17:14 -Generating unique operation named: updateUsingDELETE_8
2019-03-25 11:17:14 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-25 11:17:14 -Generating unique operation named: updateUsingTRACE_8
2019-03-25 11:17:14 -Generating unique operation named: addUsingGET_9
2019-03-25 11:17:14 -Generating unique operation named: editUsingGET_10
2019-03-25 11:17:14 -Generating unique operation named: infoUsingGET_1
2019-03-25 11:17:14 -Generating unique operation named: infoUsingHEAD_1
2019-03-25 11:17:14 -Generating unique operation named: infoUsingPOST_1
2019-03-25 11:17:14 -Generating unique operation named: infoUsingPUT_1
2019-03-25 11:17:14 -Generating unique operation named: addUsingGET_9
2019-03-25 11:17:14 -Generating unique operation named: infoUsingPATCH_1
2019-03-25 11:17:14 -Generating unique operation named: editUsingGET_10
2019-03-25 11:17:14 -Generating unique operation named: infoUsingDELETE_1
2019-03-25 11:17:14 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-25 11:17:14 -Generating unique operation named: infoUsingTRACE_1
2019-03-25 11:17:14 -Generating unique operation named: listUsingGET_10
2019-03-25 11:17:14 -Generating unique operation named: removeUsingPOST_18
2019-03-25 11:17:14 -Generating unique operation named: removeUsingPOST_19
2019-03-25 11:17:14 -Generating unique operation named: infoUsingGET_1
2019-03-25 11:17:14 -Generating unique operation named: infoUsingHEAD_1
2019-03-25 11:17:14 -Generating unique operation named: infoUsingPOST_1
2019-03-25 11:17:14 -Generating unique operation named: infoUsingPUT_1
2019-03-25 11:17:14 -Generating unique operation named: infoUsingPATCH_1
2019-03-25 11:17:14 -Generating unique operation named: infoUsingDELETE_1
2019-03-25 11:17:14 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-25 11:17:14 -Generating unique operation named: saveUsingPOST_9
2019-03-25 11:17:14 -Generating unique operation named: infoUsingTRACE_1
2019-03-25 11:17:14 -Generating unique operation named: listUsingGET_10
2019-03-25 11:17:14 -Generating unique operation named: updateUsingPOST_10
2019-03-25 11:17:14 -Generating unique operation named: removeUsingPOST_18
2019-03-25 11:17:14 -Generating unique operation named: removeUsingPOST_19
2019-03-25 11:17:14 -Generating unique operation named: listUsingGET_11
2019-03-25 11:17:14 -Generating unique operation named: saveUsingPOST_9
2019-03-25 11:17:14 -Generating unique operation named: removeUsingPOST_20
2019-03-25 11:17:14 -Generating unique operation named: updateUsingPOST_10
2019-03-25 11:17:14 -Generating unique operation named: listUsingGET_11
2019-03-25 11:17:14 -Generating unique operation named: welcomeUsingGET_1
2019-03-25 11:17:14 -Generating unique operation named: removeUsingPOST_20
2019-03-25 11:17:14 -Generating unique operation named: welcomeUsingGET_1
2019-03-25 11:17:14 -Generating unique operation named: addUsingGET_10
2019-03-25 11:17:14 -Generating unique operation named: addUsingGET_10
2019-03-25 11:17:14 -Generating unique operation named: editUsingGET_11
2019-03-25 11:17:14 -Generating unique operation named: editUsingGET_11
2019-03-25 11:17:14 -Generating unique operation named: listUsingGET_12
2019-03-25 11:17:14 -Generating unique operation named: listUsingGET_12
2019-03-25 11:17:15 -Generating unique operation named: removeUsingPOST_21
2019-03-25 11:17:15 -Generating unique operation named: removeUsingPOST_21
2019-03-25 11:17:15 -Generating unique operation named: saveUsingPOST_10
2019-03-25 11:17:15 -Generating unique operation named: saveUsingPOST_10
2019-03-25 11:17:15 -Generating unique operation named: treeUsingGET_1
2019-03-25 11:17:15 -Generating unique operation named: treeUsingGET_2
2019-03-25 11:17:15 -Generating unique operation named: treeUsingGET_1
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPOST_11
2019-03-25 11:17:15 -Generating unique operation named: treeUsingGET_2
2019-03-25 11:17:15 -Generating unique operation named: addUsingGET_11
2019-03-25 11:17:15 -Generating unique operation named: editUsingGET_12
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPOST_11
2019-03-25 11:17:15 -Generating unique operation named: listUsingGET_13
2019-03-25 11:17:15 -Generating unique operation named: addUsingGET_11
2019-03-25 11:17:15 -Generating unique operation named: editUsingGET_12
2019-03-25 11:17:15 -Generating unique operation named: listUsingGET_13
2019-03-25 11:17:15 -Generating unique operation named: removeUsingPOST_22
2019-03-25 11:17:15 -Generating unique operation named: removeUsingPOST_23
2019-03-25 11:17:15 -Generating unique operation named: saveUsingPOST_11
2019-03-25 11:17:15 -Generating unique operation named: removeUsingPOST_22
2019-03-25 11:17:15 -Generating unique operation named: removeUsingPOST_23
2019-03-25 11:17:15 -Generating unique operation named: saveUsingPOST_11
2019-03-25 11:17:15 -Generating unique operation named: updateUsingGET_9
2019-03-25 11:17:15 -Generating unique operation named: updateUsingHEAD_9
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPOST_12
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPUT_9
2019-03-25 11:17:15 -Generating unique operation named: updateUsingGET_9
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPATCH_9
2019-03-25 11:17:15 -Generating unique operation named: updateUsingHEAD_9
2019-03-25 11:17:15 -Generating unique operation named: updateUsingDELETE_9
2019-03-25 11:17:15 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-25 11:17:15 -Generating unique operation named: updateUsingTRACE_9
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPOST_12
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPUT_9
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPATCH_9
2019-03-25 11:17:15 -Generating unique operation named: updateUsingDELETE_9
2019-03-25 11:17:15 -Generating unique operation named: addUsingGET_12
2019-03-25 11:17:15 -Generating unique operation named: editUsingGET_13
2019-03-25 11:17:15 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-25 11:17:15 -Generating unique operation named: updateUsingTRACE_9
2019-03-25 11:17:15 -Generating unique operation named: listUsingGET_14
2019-03-25 11:17:15 -Generating unique operation named: addUsingGET_12
2019-03-25 11:17:15 -Generating unique operation named: editUsingGET_13
2019-03-25 11:17:15 -Generating unique operation named: removeUsingPOST_24
2019-03-25 11:17:15 -Generating unique operation named: removeUsingPOST_25
2019-03-25 11:17:15 -Generating unique operation named: saveUsingPOST_12
2019-03-25 11:17:15 -Generating unique operation named: updateUsingGET_10
2019-03-25 11:17:15 -Generating unique operation named: updateUsingHEAD_10
2019-03-25 11:17:15 -Generating unique operation named: listUsingGET_14
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPOST_13
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPUT_10
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPATCH_10
2019-03-25 11:17:15 -Generating unique operation named: updateUsingDELETE_10
2019-03-25 11:17:15 -Generating unique operation named: removeUsingPOST_24
2019-03-25 11:17:15 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-25 11:17:15 -Generating unique operation named: removeUsingPOST_25
2019-03-25 11:17:15 -Generating unique operation named: updateUsingTRACE_10
2019-03-25 11:17:15 -Generating unique operation named: saveUsingPOST_12
2019-03-25 11:17:15 -Generating unique operation named: updateUsingGET_10
2019-03-25 11:17:15 -Generating unique operation named: addUsingGET_13
2019-03-25 11:17:15 -Generating unique operation named: updateUsingHEAD_10
2019-03-25 11:17:15 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPOST_13
2019-03-25 11:17:15 -Generating unique operation named: editUsingGET_14
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPUT_10
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPATCH_10
2019-03-25 11:17:15 -Generating unique operation named: listUsingGET_15
2019-03-25 11:17:15 -Generating unique operation named: updateUsingDELETE_10
2019-03-25 11:17:15 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-25 11:17:15 -Generating unique operation named: updateUsingTRACE_10
2019-03-25 11:17:15 -Generating unique operation named: saveUsingPOST_13
2019-03-25 11:17:15 -Generating unique operation named: addUsingGET_13
2019-03-25 11:17:15 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-25 11:17:15 -Generating unique operation named: editUsingGET_14
2019-03-25 11:17:15 -Generating unique operation named: listUsingGET_15
2019-03-25 11:17:15 -Generating unique operation named: saveUsingPOST_14
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPOST_14
2019-03-25 11:17:15 -Generating unique operation named: saveUsingPOST_13
2019-03-25 11:17:15 -Generating unique operation named: saveUsingPOST_14
2019-03-25 11:17:15 -Generating unique operation named: updateUsingPOST_14
2019-03-25 11:17:15 -Generating unique operation named: listUsingGET_16
2019-03-25 11:17:15 -Generating unique operation named: listUsingHEAD_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingPOST_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingPUT_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingPATCH_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingDELETE_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingOPTIONS_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingTRACE_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingGET_16
2019-03-25 11:17:15 -Generating unique operation named: listUsingHEAD_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingPOST_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingPUT_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingPATCH_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingDELETE_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingOPTIONS_1
2019-03-25 11:17:15 -Generating unique operation named: listUsingTRACE_1
2019-03-25 11:17:15 -Generating unique operation named: addUsingGET_14
2019-03-25 11:17:16 -Generating unique operation named: addUsingGET_14
2019-03-25 11:17:16 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-25 11:17:16 -Generating unique operation named: editUsingGET_15
2019-03-25 11:17:16 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-25 11:17:16 -Generating unique operation named: editUsingGET_15
2019-03-25 11:17:16 -Generating unique operation named: listUsingGET_17
2019-03-25 11:17:16 -Generating unique operation named: listUsingGET_17
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_26
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_26
2019-03-25 11:17:16 -Generating unique operation named: saveUsingPOST_15
2019-03-25 11:17:16 -Generating unique operation named: treeUsingGET_3
2019-03-25 11:17:16 -Generating unique operation named: treeViewUsingGET_1
2019-03-25 11:17:16 -Generating unique operation named: saveUsingPOST_15
2019-03-25 11:17:16 -Generating unique operation named: treeUsingGET_3
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPOST_15
2019-03-25 11:17:16 -Generating unique operation named: treeViewUsingGET_1
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPOST_15
2019-03-25 11:17:16 -Generating unique operation named: addUsingGET_15
2019-03-25 11:17:16 -Generating unique operation named: editUsingGET_16
2019-03-25 11:17:16 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-25 11:17:16 -Generating unique operation named: listUsingGET_18
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_27
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_28
2019-03-25 11:17:16 -Generating unique operation named: addUsingGET_15
2019-03-25 11:17:16 -Generating unique operation named: editUsingGET_16
2019-03-25 11:17:16 -Generating unique operation named: saveUsingPOST_16
2019-03-25 11:17:16 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-25 11:17:16 -Generating unique operation named: updateUsingGET_11
2019-03-25 11:17:16 -Generating unique operation named: updateUsingHEAD_11
2019-03-25 11:17:16 -Generating unique operation named: listUsingGET_18
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPOST_16
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_27
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPUT_11
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_28
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPATCH_11
2019-03-25 11:17:16 -Generating unique operation named: saveUsingPOST_16
2019-03-25 11:17:16 -Generating unique operation named: updateUsingDELETE_11
2019-03-25 11:17:16 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-25 11:17:16 -Generating unique operation named: updateUsingGET_11
2019-03-25 11:17:16 -Generating unique operation named: updateUsingTRACE_11
2019-03-25 11:17:16 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-25 11:17:16 -Generating unique operation named: updateUsingHEAD_11
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPOST_16
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPUT_11
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPATCH_11
2019-03-25 11:17:16 -Generating unique operation named: addUsingGET_16
2019-03-25 11:17:16 -Generating unique operation named: updateUsingDELETE_11
2019-03-25 11:17:16 -Generating unique operation named: editUsingGET_17
2019-03-25 11:17:16 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-25 11:17:16 -Generating unique operation named: updateUsingTRACE_11
2019-03-25 11:17:16 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-25 11:17:16 -Generating unique operation named: addUsingGET_16
2019-03-25 11:17:16 -Generating unique operation named: listUsingGET_19
2019-03-25 11:17:16 -Generating unique operation named: editUsingGET_17
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_29
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_30
2019-03-25 11:17:16 -Generating unique operation named: listUsingGET_19
2019-03-25 11:17:16 -Generating unique operation named: saveUsingPOST_17
2019-03-25 11:17:16 -Generating unique operation named: updateUsingGET_12
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_29
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_30
2019-03-25 11:17:16 -Generating unique operation named: updateUsingHEAD_12
2019-03-25 11:17:16 -Generating unique operation named: saveUsingPOST_17
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPOST_17
2019-03-25 11:17:16 -Generating unique operation named: updateUsingGET_12
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPUT_12
2019-03-25 11:17:16 -Generating unique operation named: updateUsingHEAD_12
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPOST_17
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPATCH_12
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPUT_12
2019-03-25 11:17:16 -Generating unique operation named: updateUsingDELETE_12
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPATCH_12
2019-03-25 11:17:16 -Generating unique operation named: updateUsingDELETE_12
2019-03-25 11:17:16 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-25 11:17:16 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-25 11:17:16 -Generating unique operation named: updateUsingTRACE_12
2019-03-25 11:17:16 -Generating unique operation named: updateUsingTRACE_12
2019-03-25 11:17:16 -Generating unique operation named: addUsingGET_17
2019-03-25 11:17:16 -Generating unique operation named: addUsingGET_17
2019-03-25 11:17:16 -Generating unique operation named: editUsingGET_18
2019-03-25 11:17:16 -Generating unique operation named: editUsingGET_18
2019-03-25 11:17:16 -Generating unique operation named: listUsingGET_20
2019-03-25 11:17:16 -Generating unique operation named: listUsingGET_20
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_31
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_31
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_32
2019-03-25 11:17:16 -Generating unique operation named: removeUsingPOST_32
2019-03-25 11:17:16 -Generating unique operation named: saveUsingPOST_18
2019-03-25 11:17:16 -Generating unique operation named: saveUsingPOST_18
2019-03-25 11:17:16 -Generating unique operation named: updateUsingGET_13
2019-03-25 11:17:16 -Generating unique operation named: updateUsingGET_13
2019-03-25 11:17:16 -Generating unique operation named: updateUsingHEAD_13
2019-03-25 11:17:16 -Generating unique operation named: updateUsingHEAD_13
2019-03-25 11:17:16 -Generating unique operation named: updateUsingPOST_18
2019-03-25 11:17:17 -Generating unique operation named: updateUsingPOST_18
2019-03-25 11:17:17 -Generating unique operation named: updateUsingPUT_13
2019-03-25 11:17:17 -Generating unique operation named: updateUsingPUT_13
2019-03-25 11:17:17 -Generating unique operation named: updateUsingPATCH_13
2019-03-25 11:17:17 -Generating unique operation named: updateUsingDELETE_13
2019-03-25 11:17:17 -Generating unique operation named: updateUsingPATCH_13
2019-03-25 11:17:17 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-25 11:17:17 -Generating unique operation named: updateUsingDELETE_13
2019-03-25 11:17:17 -Generating unique operation named: updateUsingTRACE_13
2019-03-25 11:17:17 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-25 11:17:17 -Generating unique operation named: updateUsingTRACE_13
2019-03-25 11:17:17 -Starting Quartz Scheduler now
2019-03-25 11:17:17 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-25 11:17:17 -Starting...
2019-03-25 11:17:17 -Starting Quartz Scheduler now
2019-03-25 11:17:17 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-25 11:17:17 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-25 11:17:17 -Started.
2019-03-25 11:17:17 -Starting...
2019-03-25 11:17:17 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-25 11:17:17 -Started.
2019-03-25 11:17:17 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-25 11:17:17 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-25 11:17:17 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-25 11:17:17 -Using a shared selector for servlet write/read
2019-03-25 11:17:17 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-25 11:17:17 -Stopping service [Tomcat]
2019-03-25 11:17:17 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-25 11:17:17 -Started BootdoApplication in 110.748 seconds (JVM running for 118.105)
2019-03-25 11:17:18 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-25 11:17:18 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-25 11:17:18 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-25 11:17:18 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-25 11:17:18 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-25 11:17:18 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ac86ba5: startup date [Mon Mar 25 11:15:24 CST 2019]; root of context hierarchy
2019-03-25 11:17:18 -Stopping beans in phase 2147483647
2019-03-25 11:17:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-25 11:17:18 -Stopping...
2019-03-25 11:17:18 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-25 11:17:18 -Stopped.
2019-03-25 11:17:18 -Unregistering JMX-exposed beans on shutdown
2019-03-25 11:17:18 -Unregistering JMX-exposed beans
2019-03-25 11:17:18 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-25 11:17:18 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-25 11:17:18 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-25 11:17:18 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-25 11:17:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-25 11:17:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-25 11:17:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-25 11:17:18 -Shutting down Quartz Scheduler
2019-03-25 11:17:18 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-25 11:17:19 -==> Parameters: 
2019-03-25 11:17:20 -<==      Total: 1
2019-03-25 11:17:33 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-25 11:17:33 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-25 11:17:34 -FrameworkServlet 'dispatcherServlet': initialization completed in 130 ms
2019-03-25 11:17:34 -Enabling session validation scheduler...
2019-03-25 11:17:34 -请求地址 : http://localhost:8081/login;JSESSIONID=a98926d2-b090-46d2-bcce-3c428a7be55b
2019-03-25 11:17:34 -HTTP METHOD : GET
2019-03-25 11:17:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 11:17:34 -参数 : [{}]
2019-03-25 11:17:34 -耗时 : 3
2019-03-25 11:17:34 -返回值 : login
2019-03-25 11:17:36 -请求地址 : http://localhost:8081/login
2019-03-25 11:17:36 -HTTP METHOD : GET
2019-03-25 11:17:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 11:17:36 -参数 : [{}]
2019-03-25 11:17:36 -耗时 : 0
2019-03-25 11:17:36 -返回值 : login
2019-03-25 11:17:44 -请求地址 : http://localhost:8081/getVerify
2019-03-25 11:17:44 -HTTP METHOD : GET
2019-03-25 11:17:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 11:17:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c9eca63, org.apache.shiro.web.servlet.ShiroHttpServletResponse@55e01c95]
2019-03-25 11:17:54 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-25 11:17:59 -0176
2019-03-25 11:18:00 -耗时 : 16282
2019-03-25 11:18:00 -返回值 : null
2019-03-25 11:18:00 -请求地址 : http://localhost:8081/login
2019-03-25 11:18:00 -HTTP METHOD : GET
2019-03-25 11:18:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 11:18:00 -参数 : [{}]
2019-03-25 11:18:00 -耗时 : 1
2019-03-25 11:18:00 -返回值 : login
2019-03-25 11:18:10 -请求地址 : http://localhost:8081/login
2019-03-25 11:18:10 -HTTP METHOD : POST
2019-03-25 11:18:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 11:18:10 -参数 : [admin, 111111, 0176, org.apache.shiro.web.servlet.ShiroHttpServletRequest@550d6196]
2019-03-25 11:18:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 11:18:10 -==> Parameters: admin(String)
2019-03-25 11:18:11 -<==      Total: 1
2019-03-25 11:18:11 -耗时 : 808
2019-03-25 11:18:11 -返回值 : {msg=操作成功, code=0}
2019-03-25 11:18:11 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-25 11:18:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:18:11 -==> Parameters: 1(Long), admin(String), 登录(String), 809(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 11:18:11.377(Timestamp)
2019-03-25 11:18:11 -<==    Updates: 1
2019-03-25 11:18:11 -请求地址 : http://localhost:8081/index
2019-03-25 11:18:11 -HTTP METHOD : GET
2019-03-25 11:18:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 11:18:11 -参数 : [{}]
2019-03-25 11:18:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 11:18:12 -==> Parameters: 1(Long)
2019-03-25 11:18:12 -<==      Total: 46
2019-03-25 11:18:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 11:18:12 -==> Parameters: 138(Long)
2019-03-25 11:18:12 -<==      Total: 1
2019-03-25 11:18:12 -耗时 : 1011
2019-03-25 11:18:12 -返回值 : index_v1
2019-03-25 11:18:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:18:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1011(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 11:18:13.077(Timestamp)
2019-03-25 11:18:13 -<==    Updates: 1
2019-03-25 11:18:14 -请求地址 : http://localhost:8081/main
2019-03-25 11:18:14 -HTTP METHOD : GET
2019-03-25 11:18:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:18:14 -参数 : []
2019-03-25 11:18:14 -耗时 : 1
2019-03-25 11:18:14 -返回值 : main
2019-03-25 11:18:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 11:18:16 -HTTP METHOD : GET
2019-03-25 11:18:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 11:18:16 -参数 : []
2019-03-25 11:18:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 11:18:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 11:18:16 -<==      Total: 0
2019-03-25 11:18:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 11:18:16 -==> Parameters: 1(Long), 0(String)
2019-03-25 11:18:16 -<==      Total: 1
2019-03-25 11:18:16 -耗时 : 592
2019-03-25 11:18:16 -返回值 : com.bootdo.common.utils.PageUtils@703c96ed
2019-03-25 11:18:17 -请求地址 : http://localhost:8081/main
2019-03-25 11:18:17 -HTTP METHOD : GET
2019-03-25 11:18:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:18:17 -参数 : []
2019-03-25 11:18:17 -耗时 : 1
2019-03-25 11:18:17 -返回值 : main
2019-03-25 11:18:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 11:18:35 -==> Parameters: 1(Long)
2019-03-25 11:18:35 -<==      Total: 90
2019-03-25 11:18:35 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 11:18:35 -HTTP METHOD : GET
2019-03-25 11:18:35 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 11:18:35 -参数 : []
2019-03-25 11:18:35 -耗时 : 1
2019-03-25 11:18:35 -返回值 : charts/countDD
2019-03-25 11:18:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 11:18:36 -HTTP METHOD : GET
2019-03-25 11:18:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 11:18:36 -参数 : [userType]
2019-03-25 11:18:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 11:18:36 -==> Parameters: userType(String)
2019-03-25 11:18:36 -<==      Total: 2
2019-03-25 11:18:36 -耗时 : 149
2019-03-25 11:18:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 11:21:00 -请求地址 : http://localhost:8081/index
2019-03-25 11:21:00 -HTTP METHOD : GET
2019-03-25 11:21:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 11:21:00 -参数 : [{}]
2019-03-25 11:21:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 11:21:00 -==> Parameters: 1(Long)
2019-03-25 11:21:00 -<==      Total: 46
2019-03-25 11:21:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 11:21:00 -==> Parameters: 138(Long)
2019-03-25 11:21:00 -<==      Total: 1
2019-03-25 11:21:00 -耗时 : 217
2019-03-25 11:21:00 -返回值 : index_v1
2019-03-25 11:21:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:21:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 217(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 11:21:00.28(Timestamp)
2019-03-25 11:21:00 -<==    Updates: 1
2019-03-25 11:21:01 -请求地址 : http://localhost:8081/main
2019-03-25 11:21:01 -HTTP METHOD : GET
2019-03-25 11:21:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:21:01 -参数 : []
2019-03-25 11:21:01 -耗时 : 10
2019-03-25 11:21:01 -返回值 : main
2019-03-25 11:21:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 11:21:03 -HTTP METHOD : GET
2019-03-25 11:21:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 11:21:03 -参数 : []
2019-03-25 11:21:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 11:21:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 11:21:03 -请求地址 : http://localhost:8081/main
2019-03-25 11:21:03 -HTTP METHOD : GET
2019-03-25 11:21:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:21:03 -参数 : []
2019-03-25 11:21:03 -耗时 : 0
2019-03-25 11:21:03 -返回值 : main
2019-03-25 11:21:03 -<==      Total: 0
2019-03-25 11:21:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 11:21:03 -==> Parameters: 1(Long), 0(String)
2019-03-25 11:21:03 -<==      Total: 1
2019-03-25 11:21:03 -耗时 : 72
2019-03-25 11:21:03 -返回值 : com.bootdo.common.utils.PageUtils@4a78e85b
2019-03-25 11:21:26 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 11:21:26 -HTTP METHOD : GET
2019-03-25 11:21:26 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 11:21:26 -参数 : []
2019-03-25 11:21:26 -耗时 : 2
2019-03-25 11:21:26 -返回值 : charts/countDD
2019-03-25 11:21:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 11:21:27 -HTTP METHOD : GET
2019-03-25 11:21:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 11:21:27 -参数 : [userType]
2019-03-25 11:21:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 11:21:27 -==> Parameters: userType(String)
2019-03-25 11:21:27 -<==      Total: 2
2019-03-25 11:21:27 -耗时 : 11
2019-03-25 11:21:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 11:21:41 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-25 11:22:13 -请求地址 : http://localhost:8081/index
2019-03-25 11:22:13 -HTTP METHOD : GET
2019-03-25 11:22:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 11:22:13 -参数 : [{}]
2019-03-25 11:22:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 11:22:14 -==> Parameters: 1(Long)
2019-03-25 11:22:14 -<==      Total: 46
2019-03-25 11:22:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 11:22:14 -==> Parameters: 138(Long)
2019-03-25 11:22:14 -<==      Total: 1
2019-03-25 11:22:14 -耗时 : 235
2019-03-25 11:22:14 -返回值 : index_v1
2019-03-25 11:22:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:22:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 235(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 11:22:14.107(Timestamp)
2019-03-25 11:22:14 -<==    Updates: 1
2019-03-25 11:22:14 -请求地址 : http://localhost:8081/main
2019-03-25 11:22:14 -HTTP METHOD : GET
2019-03-25 11:22:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:22:14 -参数 : []
2019-03-25 11:22:14 -耗时 : 0
2019-03-25 11:22:14 -返回值 : main
2019-03-25 11:22:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 11:22:15 -HTTP METHOD : GET
2019-03-25 11:22:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 11:22:15 -参数 : []
2019-03-25 11:22:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 11:22:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 11:22:15 -<==      Total: 0
2019-03-25 11:22:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 11:22:15 -==> Parameters: 1(Long), 0(String)
2019-03-25 11:22:15 -<==      Total: 1
2019-03-25 11:22:15 -耗时 : 54
2019-03-25 11:22:15 -返回值 : com.bootdo.common.utils.PageUtils@47b49725
2019-03-25 11:22:15 -请求地址 : http://localhost:8081/main
2019-03-25 11:22:15 -HTTP METHOD : GET
2019-03-25 11:22:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:22:15 -参数 : []
2019-03-25 11:22:15 -耗时 : 1
2019-03-25 11:22:15 -返回值 : main
2019-03-25 11:22:21 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 11:22:21 -HTTP METHOD : GET
2019-03-25 11:22:21 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 11:22:21 -参数 : []
2019-03-25 11:22:21 -耗时 : 2
2019-03-25 11:22:21 -返回值 : charts/countDD
2019-03-25 11:22:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 11:22:21 -HTTP METHOD : GET
2019-03-25 11:22:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 11:22:21 -参数 : [userType]
2019-03-25 11:22:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 11:22:21 -==> Parameters: userType(String)
2019-03-25 11:22:21 -<==      Total: 2
2019-03-25 11:22:21 -耗时 : 5
2019-03-25 11:22:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 11:22:24 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-25 11:22:24 -HTTP METHOD : POST
2019-03-25 11:22:24 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-25 11:22:24 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@5794e65, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@1ebbe9a2, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@49c4ccfa, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@5794e65, com.bootdo.moneyLog.vo.WaterLogVo@1ebbe9a2, com.bootdo.moneyLog.vo.HeatLogVo@49c4ccfa]
2019-03-25 11:22:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-25 11:22:25 -==> Parameters: 
2019-03-25 11:22:26 -<==      Total: 1
2019-03-25 11:22:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-25 11:22:26 -==> Parameters: 
2019-03-25 11:22:26 -<==      Total: 1
2019-03-25 11:22:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-25 11:22:26 -==> Parameters: 
2019-03-25 11:22:26 -<==      Total: 1
2019-03-25 11:22:26 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-25 11:22:26 -==> Parameters: 
2019-03-25 11:22:26 -<==      Total: 1
2019-03-25 11:22:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-25 11:22:26 -==> Parameters: 
2019-03-25 11:22:26 -<==      Total: 1
2019-03-25 11:22:26 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-25 11:22:26 -==> Parameters: 
2019-03-25 11:22:26 -<==      Total: 1
2019-03-25 11:22:26 -耗时 : 2345
2019-03-25 11:22:26 -返回值 : charts/countDD
2019-03-25 11:24:43 -请求地址 : http://localhost:8081/index
2019-03-25 11:24:43 -HTTP METHOD : GET
2019-03-25 11:24:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 11:24:43 -参数 : [{}]
2019-03-25 11:24:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 11:24:43 -==> Parameters: 1(Long)
2019-03-25 11:24:43 -<==      Total: 46
2019-03-25 11:24:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 11:24:43 -==> Parameters: 138(Long)
2019-03-25 11:24:43 -<==      Total: 1
2019-03-25 11:24:43 -耗时 : 129
2019-03-25 11:24:43 -返回值 : index_v1
2019-03-25 11:24:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:24:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 129(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 11:24:43.908(Timestamp)
2019-03-25 11:24:44 -请求地址 : http://localhost:8081/main
2019-03-25 11:24:44 -HTTP METHOD : GET
2019-03-25 11:24:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:24:44 -参数 : []
2019-03-25 11:24:44 -耗时 : 0
2019-03-25 11:24:44 -返回值 : main
2019-03-25 11:24:44 -<==    Updates: 1
2019-03-25 11:24:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 11:24:44 -HTTP METHOD : GET
2019-03-25 11:24:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 11:24:44 -参数 : []
2019-03-25 11:24:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 11:24:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 11:24:44 -<==      Total: 0
2019-03-25 11:24:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 11:24:44 -==> Parameters: 1(Long), 0(String)
2019-03-25 11:24:44 -<==      Total: 1
2019-03-25 11:24:44 -耗时 : 7
2019-03-25 11:24:44 -返回值 : com.bootdo.common.utils.PageUtils@5d371278
2019-03-25 11:24:45 -请求地址 : http://localhost:8081/main
2019-03-25 11:24:45 -HTTP METHOD : GET
2019-03-25 11:24:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:24:45 -参数 : []
2019-03-25 11:24:45 -耗时 : 14
2019-03-25 11:24:45 -返回值 : main
2019-03-25 11:24:47 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 11:24:47 -HTTP METHOD : GET
2019-03-25 11:24:47 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 11:24:47 -参数 : []
2019-03-25 11:24:47 -耗时 : 0
2019-03-25 11:24:47 -返回值 : charts/countDD
2019-03-25 11:24:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 11:24:48 -HTTP METHOD : GET
2019-03-25 11:24:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 11:24:48 -参数 : [userType]
2019-03-25 11:24:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 11:24:48 -==> Parameters: userType(String)
2019-03-25 11:24:48 -<==      Total: 2
2019-03-25 11:24:48 -耗时 : 7
2019-03-25 11:24:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 11:24:49 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-25 11:24:49 -HTTP METHOD : POST
2019-03-25 11:24:49 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-25 11:24:49 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@6f071c46, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@456586ca, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@ddfa94c, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@6f071c46, com.bootdo.moneyLog.vo.WaterLogVo@456586ca, com.bootdo.moneyLog.vo.HeatLogVo@ddfa94c]
2019-03-25 11:24:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-25 11:24:49 -==> Parameters: 
2019-03-25 11:24:49 -<==      Total: 1
2019-03-25 11:24:49 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-25 11:24:49 -==> Parameters: 
2019-03-25 11:24:49 -<==      Total: 1
2019-03-25 11:24:49 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-25 11:24:49 -==> Parameters: 
2019-03-25 11:24:49 -<==      Total: 1
2019-03-25 11:24:49 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-25 11:24:49 -==> Parameters: 
2019-03-25 11:24:49 -<==      Total: 1
2019-03-25 11:24:49 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-25 11:24:49 -==> Parameters: 
2019-03-25 11:24:49 -<==      Total: 1
2019-03-25 11:24:49 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-25 11:24:49 -==> Parameters: 
2019-03-25 11:24:49 -<==      Total: 1
2019-03-25 11:24:49 -耗时 : 68
2019-03-25 11:24:49 -返回值 : charts/countDD
2019-03-25 11:24:55 -请求地址 : http://localhost:8081/index
2019-03-25 11:24:55 -HTTP METHOD : GET
2019-03-25 11:24:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 11:24:55 -参数 : [{}]
2019-03-25 11:24:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 11:24:55 -==> Parameters: 1(Long)
2019-03-25 11:24:55 -<==      Total: 46
2019-03-25 11:24:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 11:24:55 -==> Parameters: 138(Long)
2019-03-25 11:24:55 -<==      Total: 1
2019-03-25 11:24:55 -耗时 : 55
2019-03-25 11:24:55 -返回值 : index_v1
2019-03-25 11:24:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:24:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 55(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 11:24:55.324(Timestamp)
2019-03-25 11:24:55 -请求地址 : http://localhost:8081/main
2019-03-25 11:24:55 -HTTP METHOD : GET
2019-03-25 11:24:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:24:55 -参数 : []
2019-03-25 11:24:55 -耗时 : 1
2019-03-25 11:24:55 -返回值 : main
2019-03-25 11:24:55 -<==    Updates: 1
2019-03-25 11:24:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 11:24:55 -HTTP METHOD : GET
2019-03-25 11:24:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 11:24:55 -参数 : []
2019-03-25 11:24:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 11:24:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 11:24:55 -<==      Total: 0
2019-03-25 11:24:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 11:24:55 -==> Parameters: 1(Long), 0(String)
2019-03-25 11:24:55 -<==      Total: 1
2019-03-25 11:24:55 -耗时 : 9
2019-03-25 11:24:55 -返回值 : com.bootdo.common.utils.PageUtils@6d217683
2019-03-25 11:24:55 -请求地址 : http://localhost:8081/main
2019-03-25 11:24:55 -HTTP METHOD : GET
2019-03-25 11:24:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:24:55 -参数 : []
2019-03-25 11:24:55 -耗时 : 1
2019-03-25 11:24:55 -返回值 : main
2019-03-25 11:24:58 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 11:24:58 -HTTP METHOD : GET
2019-03-25 11:24:58 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 11:24:58 -参数 : []
2019-03-25 11:24:58 -耗时 : 1
2019-03-25 11:24:58 -返回值 : charts/countDD
2019-03-25 11:24:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 11:24:58 -HTTP METHOD : GET
2019-03-25 11:24:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 11:24:58 -参数 : [userType]
2019-03-25 11:24:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 11:24:58 -==> Parameters: userType(String)
2019-03-25 11:24:58 -<==      Total: 2
2019-03-25 11:24:58 -耗时 : 12
2019-03-25 11:24:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 11:25:46 -请求地址 : http://localhost:8081/index
2019-03-25 11:25:46 -HTTP METHOD : GET
2019-03-25 11:25:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 11:25:46 -参数 : [{}]
2019-03-25 11:25:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 11:25:46 -==> Parameters: 1(Long)
2019-03-25 11:25:46 -<==      Total: 46
2019-03-25 11:25:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 11:25:46 -==> Parameters: 138(Long)
2019-03-25 11:25:46 -<==      Total: 1
2019-03-25 11:25:46 -耗时 : 35
2019-03-25 11:25:46 -返回值 : index_v1
2019-03-25 11:25:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:25:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 11:25:46.25(Timestamp)
2019-03-25 11:25:46 -<==    Updates: 1
2019-03-25 11:25:46 -请求地址 : http://localhost:8081/main
2019-03-25 11:25:46 -HTTP METHOD : GET
2019-03-25 11:25:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:25:46 -参数 : []
2019-03-25 11:25:46 -耗时 : 0
2019-03-25 11:25:46 -返回值 : main
2019-03-25 11:25:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 11:25:46 -HTTP METHOD : GET
2019-03-25 11:25:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 11:25:46 -参数 : []
2019-03-25 11:25:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 11:25:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 11:25:46 -<==      Total: 0
2019-03-25 11:25:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 11:25:46 -==> Parameters: 1(Long), 0(String)
2019-03-25 11:25:46 -<==      Total: 1
2019-03-25 11:25:46 -耗时 : 8
2019-03-25 11:25:46 -返回值 : com.bootdo.common.utils.PageUtils@2687e784
2019-03-25 11:25:46 -请求地址 : http://localhost:8081/main
2019-03-25 11:25:46 -HTTP METHOD : GET
2019-03-25 11:25:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:25:46 -参数 : []
2019-03-25 11:25:46 -耗时 : 1
2019-03-25 11:25:46 -返回值 : main
2019-03-25 11:25:48 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 11:25:48 -HTTP METHOD : GET
2019-03-25 11:25:48 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 11:25:48 -参数 : []
2019-03-25 11:25:48 -耗时 : 1
2019-03-25 11:25:48 -返回值 : charts/countDD
2019-03-25 11:25:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 11:25:49 -HTTP METHOD : GET
2019-03-25 11:25:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 11:25:49 -参数 : [userType]
2019-03-25 11:25:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 11:25:49 -==> Parameters: userType(String)
2019-03-25 11:25:49 -<==      Total: 2
2019-03-25 11:25:49 -耗时 : 5
2019-03-25 11:25:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 11:25:58 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-25 11:25:58 -HTTP METHOD : POST
2019-03-25 11:25:58 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-25 11:25:58 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@59dd179c, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@6c4c7b01, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@15326d51, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@59dd179c, com.bootdo.moneyLog.vo.WaterLogVo@6c4c7b01, com.bootdo.moneyLog.vo.HeatLogVo@15326d51]
2019-03-25 11:25:58 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-25 11:25:58 -==> Parameters: 
2019-03-25 11:25:58 -<==      Total: 1
2019-03-25 11:25:58 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-25 11:25:58 -==> Parameters: 
2019-03-25 11:25:58 -<==      Total: 1
2019-03-25 11:25:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-25 11:25:58 -==> Parameters: 
2019-03-25 11:25:58 -<==      Total: 1
2019-03-25 11:25:58 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-25 11:25:58 -==> Parameters: 
2019-03-25 11:25:58 -<==      Total: 1
2019-03-25 11:25:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-25 11:25:58 -==> Parameters: 
2019-03-25 11:25:58 -<==      Total: 1
2019-03-25 11:25:58 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-25 11:25:58 -==> Parameters: 
2019-03-25 11:25:58 -<==      Total: 1
2019-03-25 11:25:58 -耗时 : 16
2019-03-25 11:25:58 -返回值 : charts/countDD
2019-03-25 11:28:10 -请求地址 : http://localhost:8081/index
2019-03-25 11:28:10 -HTTP METHOD : GET
2019-03-25 11:28:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 11:28:10 -参数 : [{}]
2019-03-25 11:28:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 11:28:10 -==> Parameters: 1(Long)
2019-03-25 11:28:10 -<==      Total: 46
2019-03-25 11:28:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 11:28:10 -==> Parameters: 138(Long)
2019-03-25 11:28:10 -<==      Total: 1
2019-03-25 11:28:10 -耗时 : 26
2019-03-25 11:28:10 -返回值 : index_v1
2019-03-25 11:28:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:28:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 11:28:10.292(Timestamp)
2019-03-25 11:28:10 -请求地址 : http://localhost:8081/main
2019-03-25 11:28:10 -HTTP METHOD : GET
2019-03-25 11:28:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:28:10 -参数 : []
2019-03-25 11:28:10 -耗时 : 1
2019-03-25 11:28:10 -返回值 : main
2019-03-25 11:28:10 -<==    Updates: 1
2019-03-25 11:28:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 11:28:10 -HTTP METHOD : GET
2019-03-25 11:28:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 11:28:10 -参数 : []
2019-03-25 11:28:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 11:28:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 11:28:10 -<==      Total: 0
2019-03-25 11:28:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 11:28:10 -==> Parameters: 1(Long), 0(String)
2019-03-25 11:28:10 -<==      Total: 1
2019-03-25 11:28:10 -耗时 : 25
2019-03-25 11:28:10 -返回值 : com.bootdo.common.utils.PageUtils@1e3da800
2019-03-25 11:28:11 -请求地址 : http://localhost:8081/main
2019-03-25 11:28:11 -HTTP METHOD : GET
2019-03-25 11:28:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:28:11 -参数 : []
2019-03-25 11:28:11 -耗时 : 1
2019-03-25 11:28:11 -返回值 : main
2019-03-25 11:28:12 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 11:28:12 -HTTP METHOD : GET
2019-03-25 11:28:12 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 11:28:12 -参数 : []
2019-03-25 11:28:12 -耗时 : 0
2019-03-25 11:28:12 -返回值 : charts/countDD
2019-03-25 11:28:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 11:28:13 -HTTP METHOD : GET
2019-03-25 11:28:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 11:28:13 -参数 : [userType]
2019-03-25 11:28:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 11:28:13 -==> Parameters: userType(String)
2019-03-25 11:28:13 -<==      Total: 2
2019-03-25 11:28:13 -耗时 : 7
2019-03-25 11:28:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 11:28:14 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-25 11:28:14 -HTTP METHOD : POST
2019-03-25 11:28:14 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-25 11:28:14 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@79ac601c, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4d7b8d50, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@26bf8538, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@79ac601c, com.bootdo.moneyLog.vo.WaterLogVo@4d7b8d50, com.bootdo.moneyLog.vo.HeatLogVo@26bf8538]
2019-03-25 11:28:14 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-25 11:28:14 -==> Parameters: 
2019-03-25 11:28:14 -<==      Total: 1
2019-03-25 11:28:14 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-25 11:28:14 -==> Parameters: 
2019-03-25 11:28:14 -<==      Total: 1
2019-03-25 11:28:14 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-25 11:28:14 -==> Parameters: 
2019-03-25 11:28:14 -<==      Total: 1
2019-03-25 11:28:14 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-25 11:28:14 -==> Parameters: 
2019-03-25 11:28:14 -<==      Total: 1
2019-03-25 11:28:14 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-25 11:28:14 -==> Parameters: 
2019-03-25 11:28:14 -<==      Total: 1
2019-03-25 11:28:14 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-25 11:28:14 -==> Parameters: 
2019-03-25 11:28:14 -<==      Total: 1
2019-03-25 11:28:14 -耗时 : 13
2019-03-25 11:28:14 -返回值 : charts/countDD
2019-03-25 11:29:08 -请求地址 : http://localhost:8081/index
2019-03-25 11:29:08 -HTTP METHOD : GET
2019-03-25 11:29:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 11:29:08 -参数 : [{}]
2019-03-25 11:29:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 11:29:08 -==> Parameters: 1(Long)
2019-03-25 11:29:08 -<==      Total: 46
2019-03-25 11:29:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 11:29:08 -==> Parameters: 138(Long)
2019-03-25 11:29:08 -<==      Total: 1
2019-03-25 11:29:08 -耗时 : 23
2019-03-25 11:29:08 -返回值 : index_v1
2019-03-25 11:29:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:29:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 11:29:08.328(Timestamp)
2019-03-25 11:29:08 -<==    Updates: 1
2019-03-25 11:29:08 -请求地址 : http://localhost:8081/main
2019-03-25 11:29:08 -HTTP METHOD : GET
2019-03-25 11:29:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:29:08 -参数 : []
2019-03-25 11:29:08 -耗时 : 0
2019-03-25 11:29:08 -返回值 : main
2019-03-25 11:29:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 11:29:09 -HTTP METHOD : GET
2019-03-25 11:29:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 11:29:09 -参数 : []
2019-03-25 11:29:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 11:29:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 11:29:09 -<==      Total: 0
2019-03-25 11:29:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 11:29:09 -==> Parameters: 1(Long), 0(String)
2019-03-25 11:29:09 -<==      Total: 1
2019-03-25 11:29:09 -耗时 : 10
2019-03-25 11:29:09 -返回值 : com.bootdo.common.utils.PageUtils@d494ad6
2019-03-25 11:29:09 -请求地址 : http://localhost:8081/main
2019-03-25 11:29:09 -HTTP METHOD : GET
2019-03-25 11:29:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:29:09 -参数 : []
2019-03-25 11:29:09 -耗时 : 1
2019-03-25 11:29:09 -返回值 : main
2019-03-25 11:29:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 11:29:11 -==> Parameters: 1(Long)
2019-03-25 11:29:11 -<==      Total: 90
2019-03-25 11:29:11 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 11:29:11 -HTTP METHOD : GET
2019-03-25 11:29:11 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 11:29:11 -参数 : []
2019-03-25 11:29:11 -耗时 : 1
2019-03-25 11:29:11 -返回值 : charts/countDD
2019-03-25 11:29:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 11:29:12 -HTTP METHOD : GET
2019-03-25 11:29:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 11:29:12 -参数 : [userType]
2019-03-25 11:29:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 11:29:12 -==> Parameters: userType(String)
2019-03-25 11:29:12 -<==      Total: 2
2019-03-25 11:29:12 -耗时 : 67
2019-03-25 11:29:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 11:29:13 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-25 11:29:13 -HTTP METHOD : POST
2019-03-25 11:29:13 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-25 11:29:13 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@4270287a, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4037d19f, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@521a4c93, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@4270287a, com.bootdo.moneyLog.vo.WaterLogVo@4037d19f, com.bootdo.moneyLog.vo.HeatLogVo@521a4c93]
2019-03-25 11:29:13 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-25 11:29:13 -==> Parameters: 
2019-03-25 11:29:13 -<==      Total: 1
2019-03-25 11:29:13 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-25 11:29:13 -==> Parameters: 
2019-03-25 11:29:13 -<==      Total: 1
2019-03-25 11:29:13 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-25 11:29:13 -==> Parameters: 
2019-03-25 11:29:13 -<==      Total: 1
2019-03-25 11:29:13 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-25 11:29:13 -==> Parameters: 
2019-03-25 11:29:13 -<==      Total: 1
2019-03-25 11:29:13 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-25 11:29:13 -==> Parameters: 
2019-03-25 11:29:13 -<==      Total: 1
2019-03-25 11:29:13 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-25 11:29:13 -==> Parameters: 
2019-03-25 11:29:13 -<==      Total: 1
2019-03-25 11:29:13 -耗时 : 12
2019-03-25 11:29:13 -返回值 : charts/countDD
2019-03-25 11:29:15 -请求地址 : http://localhost:8081/login
2019-03-25 11:29:15 -HTTP METHOD : GET
2019-03-25 11:29:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 11:29:15 -参数 : [{}]
2019-03-25 11:29:15 -耗时 : 120
2019-03-25 11:29:15 -返回值 : login
2019-03-25 11:29:15 -请求地址 : http://localhost:8081/getVerify
2019-03-25 11:29:15 -HTTP METHOD : GET
2019-03-25 11:29:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 11:29:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5279216e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@448561d5]
2019-03-25 11:29:15 -9356
2019-03-25 11:29:15 -耗时 : 236
2019-03-25 11:29:15 -返回值 : null
2019-03-25 11:29:27 -请求地址 : http://localhost:8081/login
2019-03-25 11:29:27 -HTTP METHOD : POST
2019-03-25 11:29:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 11:29:27 -参数 : [admin, 111111, 9356, org.apache.shiro.web.servlet.ShiroHttpServletRequest@772a1ac2]
2019-03-25 11:29:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 11:29:27 -==> Parameters: admin(String)
2019-03-25 11:29:27 -<==      Total: 1
2019-03-25 11:29:27 -耗时 : 40
2019-03-25 11:29:27 -返回值 : {msg=操作成功, code=0}
2019-03-25 11:29:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:29:27 -==> Parameters: 1(Long), admin(String), 登录(String), 40(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 11:29:27.236(Timestamp)
2019-03-25 11:29:27 -请求地址 : http://localhost:8081/index
2019-03-25 11:29:27 -HTTP METHOD : GET
2019-03-25 11:29:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 11:29:27 -参数 : [{}]
2019-03-25 11:29:27 -<==    Updates: 1
2019-03-25 11:29:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 11:29:27 -==> Parameters: 1(Long)
2019-03-25 11:29:27 -<==      Total: 46
2019-03-25 11:29:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 11:29:27 -==> Parameters: 138(Long)
2019-03-25 11:29:27 -<==      Total: 1
2019-03-25 11:29:27 -耗时 : 303
2019-03-25 11:29:27 -返回值 : index_v1
2019-03-25 11:29:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:29:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 304(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 11:29:27.567(Timestamp)
2019-03-25 11:29:27 -请求地址 : http://localhost:8081/main
2019-03-25 11:29:27 -HTTP METHOD : GET
2019-03-25 11:29:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:29:27 -参数 : []
2019-03-25 11:29:27 -耗时 : 0
2019-03-25 11:29:27 -返回值 : main
2019-03-25 11:29:27 -<==    Updates: 1
2019-03-25 11:29:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 11:29:27 -HTTP METHOD : GET
2019-03-25 11:29:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 11:29:27 -参数 : []
2019-03-25 11:29:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 11:29:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 11:29:27 -<==      Total: 0
2019-03-25 11:29:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 11:29:27 -==> Parameters: 1(Long), 0(String)
2019-03-25 11:29:27 -<==      Total: 1
2019-03-25 11:29:27 -耗时 : 8
2019-03-25 11:29:27 -返回值 : com.bootdo.common.utils.PageUtils@1c3e85b5
2019-03-25 11:29:27 -请求地址 : http://localhost:8081/main
2019-03-25 11:29:27 -HTTP METHOD : GET
2019-03-25 11:29:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:29:27 -参数 : []
2019-03-25 11:29:27 -耗时 : 1
2019-03-25 11:29:27 -返回值 : main
2019-03-25 11:29:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 11:29:35 -==> Parameters: 1(Long)
2019-03-25 11:29:35 -<==      Total: 90
2019-03-25 11:29:35 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 11:29:35 -HTTP METHOD : GET
2019-03-25 11:29:35 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 11:29:35 -参数 : []
2019-03-25 11:29:35 -耗时 : 1
2019-03-25 11:29:35 -返回值 : charts/countDD
2019-03-25 11:29:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 11:29:36 -HTTP METHOD : GET
2019-03-25 11:29:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 11:29:36 -参数 : [userType]
2019-03-25 11:29:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 11:29:36 -==> Parameters: userType(String)
2019-03-25 11:29:36 -<==      Total: 2
2019-03-25 11:29:36 -耗时 : 144
2019-03-25 11:29:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 11:29:37 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-03-25 11:29:37 -HTTP METHOD : POST
2019-03-25 11:29:37 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-03-25 11:29:37 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@19ca8f56, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@519c392, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@c1bbada, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@19ca8f56, com.bootdo.moneyLog.vo.WaterLogVo@519c392, com.bootdo.moneyLog.vo.HeatLogVo@c1bbada]
2019-03-25 11:29:37 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-03-25 11:29:37 -==> Parameters: 
2019-03-25 11:29:38 -<==      Total: 1
2019-03-25 11:29:38 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG 
2019-03-25 11:29:38 -==> Parameters: 
2019-03-25 11:29:38 -<==      Total: 1
2019-03-25 11:29:38 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG 
2019-03-25 11:29:38 -==> Parameters: 
2019-03-25 11:29:38 -<==      Total: 1
2019-03-25 11:29:38 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG 
2019-03-25 11:29:38 -==> Parameters: 
2019-03-25 11:29:38 -<==      Total: 1
2019-03-25 11:29:38 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG 
2019-03-25 11:29:38 -==> Parameters: 
2019-03-25 11:29:38 -<==      Total: 1
2019-03-25 11:29:38 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG 
2019-03-25 11:29:38 -==> Parameters: 
2019-03-25 11:29:38 -<==      Total: 1
2019-03-25 11:29:38 -耗时 : 719
2019-03-25 11:29:38 -返回值 : charts/countDD
2019-03-25 11:29:40 -请求地址 : http://localhost:8081/login
2019-03-25 11:29:40 -HTTP METHOD : GET
2019-03-25 11:29:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 11:29:40 -参数 : [{}]
2019-03-25 11:29:40 -耗时 : 0
2019-03-25 11:29:40 -返回值 : login
2019-03-25 11:29:40 -请求地址 : http://localhost:8081/getVerify
2019-03-25 11:29:40 -HTTP METHOD : GET
2019-03-25 11:29:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 11:29:40 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2c79034d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@b22f00a]
2019-03-25 11:29:40 -6355
2019-03-25 11:29:40 -耗时 : 13
2019-03-25 11:29:40 -返回值 : null
2019-03-25 11:29:54 -请求地址 : http://localhost:8081/login
2019-03-25 11:29:54 -HTTP METHOD : POST
2019-03-25 11:29:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 11:29:54 -参数 : [admin, 111111, 6355, org.apache.shiro.web.servlet.ShiroHttpServletRequest@58ae7c36]
2019-03-25 11:29:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 11:29:54 -==> Parameters: admin(String)
2019-03-25 11:29:55 -<==      Total: 1
2019-03-25 11:29:55 -耗时 : 73
2019-03-25 11:29:55 -返回值 : {msg=操作成功, code=0}
2019-03-25 11:29:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:29:55 -==> Parameters: 1(Long), admin(String), 登录(String), 73(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 11:29:55.045(Timestamp)
2019-03-25 11:29:55 -请求地址 : http://localhost:8081/index
2019-03-25 11:29:55 -HTTP METHOD : GET
2019-03-25 11:29:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 11:29:55 -参数 : [{}]
2019-03-25 11:29:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 11:29:55 -==> Parameters: 1(Long)
2019-03-25 11:29:55 -<==      Total: 46
2019-03-25 11:29:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 11:29:55 -==> Parameters: 138(Long)
2019-03-25 11:29:55 -<==      Total: 1
2019-03-25 11:29:55 -耗时 : 20
2019-03-25 11:29:55 -返回值 : index_v1
2019-03-25 11:29:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:29:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 11:29:55.087(Timestamp)
2019-03-25 11:29:55 -请求地址 : http://localhost:8081/main
2019-03-25 11:29:55 -HTTP METHOD : GET
2019-03-25 11:29:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:29:55 -参数 : []
2019-03-25 11:29:55 -耗时 : 1
2019-03-25 11:29:55 -返回值 : main
2019-03-25 11:29:55 -<==    Updates: 1
2019-03-25 11:29:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 11:29:55 -HTTP METHOD : GET
2019-03-25 11:29:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 11:29:55 -参数 : []
2019-03-25 11:29:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 11:29:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 11:29:55 -<==      Total: 0
2019-03-25 11:29:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 11:29:55 -==> Parameters: 1(Long), 0(String)
2019-03-25 11:29:55 -<==      Total: 1
2019-03-25 11:29:55 -耗时 : 7
2019-03-25 11:29:55 -返回值 : com.bootdo.common.utils.PageUtils@815bb8f
2019-03-25 11:29:55 -<==    Updates: 1
2019-03-25 11:29:55 -请求地址 : http://localhost:8081/main
2019-03-25 11:29:55 -HTTP METHOD : GET
2019-03-25 11:29:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:29:55 -参数 : []
2019-03-25 11:29:55 -耗时 : 1
2019-03-25 11:29:55 -返回值 : main
2019-03-25 11:30:42 -请求地址 : http://localhost:8081/index
2019-03-25 11:30:42 -HTTP METHOD : GET
2019-03-25 11:30:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 11:30:42 -参数 : [{}]
2019-03-25 11:30:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 11:30:42 -==> Parameters: 1(Long)
2019-03-25 11:30:42 -<==      Total: 46
2019-03-25 11:30:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 11:30:42 -==> Parameters: 138(Long)
2019-03-25 11:30:42 -<==      Total: 1
2019-03-25 11:30:42 -耗时 : 76
2019-03-25 11:30:42 -返回值 : index_v1
2019-03-25 11:30:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:30:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 77(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 11:30:42.955(Timestamp)
2019-03-25 11:30:43 -<==    Updates: 1
2019-03-25 11:30:43 -请求地址 : http://localhost:8081/main
2019-03-25 11:30:43 -HTTP METHOD : GET
2019-03-25 11:30:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:30:43 -参数 : []
2019-03-25 11:30:43 -耗时 : 1
2019-03-25 11:30:43 -返回值 : main
2019-03-25 11:30:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 11:30:43 -HTTP METHOD : GET
2019-03-25 11:30:43 -请求地址 : http://localhost:8081/main
2019-03-25 11:30:43 -HTTP METHOD : GET
2019-03-25 11:30:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:30:43 -参数 : []
2019-03-25 11:30:43 -耗时 : 0
2019-03-25 11:30:43 -返回值 : main
2019-03-25 11:30:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 11:30:43 -参数 : []
2019-03-25 11:30:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 11:30:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 11:30:43 -<==      Total: 0
2019-03-25 11:30:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 11:30:43 -==> Parameters: 1(Long), 0(String)
2019-03-25 11:30:43 -<==      Total: 1
2019-03-25 11:30:43 -耗时 : 235
2019-03-25 11:30:43 -返回值 : com.bootdo.common.utils.PageUtils@2062f943
2019-03-25 11:30:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 11:30:45 -==> Parameters: 1(Long)
2019-03-25 11:30:45 -<==      Total: 90
2019-03-25 11:30:45 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 11:30:45 -HTTP METHOD : GET
2019-03-25 11:30:45 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 11:30:45 -参数 : []
2019-03-25 11:30:45 -耗时 : 0
2019-03-25 11:30:45 -返回值 : charts/countDD
2019-03-25 11:38:36 -请求地址 : http://localhost:8081/index
2019-03-25 11:38:36 -HTTP METHOD : GET
2019-03-25 11:38:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 11:38:36 -参数 : [{}]
2019-03-25 11:38:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 11:38:36 -==> Parameters: 1(Long)
2019-03-25 11:38:36 -<==      Total: 46
2019-03-25 11:38:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 11:38:36 -==> Parameters: 138(Long)
2019-03-25 11:38:36 -<==      Total: 1
2019-03-25 11:38:36 -耗时 : 84
2019-03-25 11:38:36 -返回值 : index_v1
2019-03-25 11:38:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 11:38:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 84(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 11:38:36.114(Timestamp)
2019-03-25 11:38:36 -请求地址 : http://localhost:8081/main
2019-03-25 11:38:36 -HTTP METHOD : GET
2019-03-25 11:38:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:38:36 -参数 : []
2019-03-25 11:38:36 -耗时 : 1
2019-03-25 11:38:36 -返回值 : main
2019-03-25 11:38:36 -<==    Updates: 1
2019-03-25 11:38:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 11:38:36 -HTTP METHOD : GET
2019-03-25 11:38:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 11:38:36 -参数 : []
2019-03-25 11:38:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 11:38:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 11:38:36 -<==      Total: 0
2019-03-25 11:38:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 11:38:36 -==> Parameters: 1(Long), 0(String)
2019-03-25 11:38:36 -<==      Total: 1
2019-03-25 11:38:36 -耗时 : 9
2019-03-25 11:38:36 -返回值 : com.bootdo.common.utils.PageUtils@6ef1b9b6
2019-03-25 11:38:36 -请求地址 : http://localhost:8081/main
2019-03-25 11:38:36 -HTTP METHOD : GET
2019-03-25 11:38:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 11:38:36 -参数 : []
2019-03-25 11:38:36 -耗时 : 0
2019-03-25 11:38:36 -返回值 : main
2019-03-25 11:38:38 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 11:38:38 -HTTP METHOD : GET
2019-03-25 11:38:38 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 11:38:38 -参数 : []
2019-03-25 11:38:38 -耗时 : 1
2019-03-25 11:38:38 -返回值 : charts/countDD
2019-03-25 11:38:41 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 11:38:41 -HTTP METHOD : GET
2019-03-25 11:38:41 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 11:38:41 -参数 : []
2019-03-25 11:38:41 -耗时 : 1
2019-03-25 11:38:41 -返回值 : charts/countDD
2019-03-25 11:47:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 13 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(12)-CONNECTED(12)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 144], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 422]
2019-03-25 12:24:33 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 13 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(12)-CONNECTED(12)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 144], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 1, completed tasks = 824]
2019-03-25 12:26:25 -Validating all active sessions...
2019-03-25 12:26:25 -Finished session validation.  [1] sessions were stopped.
2019-03-25 12:47:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 13 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(12)-CONNECTED(12)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 144], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1267]
2019-03-25 13:54:36 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 13 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(12)-CONNECTED(12)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 144], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1397]
2019-03-25 13:54:36 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 13 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(12)-CONNECTED(12)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 144], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1398]
2019-03-25 13:58:32 -请求地址 : http://localhost:8081/login;JSESSIONID=685c7b42-f814-4479-bd77-83d60562bd90
2019-03-25 13:58:32 -HTTP METHOD : GET
2019-03-25 13:58:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 13:58:32 -参数 : [{}]
2019-03-25 13:58:32 -耗时 : 1
2019-03-25 13:58:32 -返回值 : login
2019-03-25 13:58:32 -请求地址 : http://localhost:8081/login;JSESSIONID=685c7b42-f814-4479-bd77-83d60562bd90
2019-03-25 13:58:32 -HTTP METHOD : GET
2019-03-25 13:58:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 13:58:32 -参数 : [{}]
2019-03-25 13:58:32 -耗时 : 2
2019-03-25 13:58:32 -返回值 : login
2019-03-25 13:58:32 -请求地址 : http://localhost:8081/getVerify
2019-03-25 13:58:32 -HTTP METHOD : GET
2019-03-25 13:58:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 13:58:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e6fcf9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6ecd463c]
2019-03-25 13:58:32 -6633
2019-03-25 13:58:32 -耗时 : 125
2019-03-25 13:58:32 -返回值 : null
2019-03-25 13:58:32 -请求地址 : http://localhost:8081/getVerify
2019-03-25 13:58:32 -HTTP METHOD : GET
2019-03-25 13:58:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 13:58:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@28023b2b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@691658cc]
2019-03-25 13:58:33 -9643
2019-03-25 13:58:33 -耗时 : 174
2019-03-25 13:58:33 -返回值 : null
2019-03-25 14:15:17 -Validating all active sessions...
2019-03-25 14:15:17 -Finished session validation.  No sessions were stopped.
2019-03-25 14:16:58 -请求地址 : http://localhost:8081/login
2019-03-25 14:16:58 -HTTP METHOD : POST
2019-03-25 14:16:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 14:16:58 -参数 : [admin, 111111, 9643, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6e652aee]
2019-03-25 14:16:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 14:16:59 -==> Parameters: admin(String)
2019-03-25 14:16:59 -<==      Total: 1
2019-03-25 14:16:59 -耗时 : 1497
2019-03-25 14:16:59 -返回值 : {msg=操作成功, code=0}
2019-03-25 14:17:01 -请求地址 : http://localhost:8081/index
2019-03-25 14:17:01 -HTTP METHOD : GET
2019-03-25 14:17:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 14:17:01 -参数 : [{}]
2019-03-25 14:17:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 14:17:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 14:17:02 -==> Parameters: 1(Long)
2019-03-25 14:17:03 -==> Parameters: 1(Long), admin(String), 登录(String), 1498(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 14:16:59.9(Timestamp)
2019-03-25 14:17:03 -<==    Updates: 1
2019-03-25 14:17:03 -<==      Total: 46
2019-03-25 14:17:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 14:17:04 -==> Parameters: 138(Long)
2019-03-25 14:17:04 -<==      Total: 1
2019-03-25 14:17:04 -耗时 : 2667
2019-03-25 14:17:04 -返回值 : index_v1
2019-03-25 14:17:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 14:17:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 2668(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 14:17:04.923(Timestamp)
2019-03-25 14:17:06 -<==    Updates: 1
2019-03-25 14:17:09 -请求地址 : http://localhost:8081/main
2019-03-25 14:17:11 -HTTP METHOD : GET
2019-03-25 14:17:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 14:17:11 -参数 : []
2019-03-25 14:17:11 -耗时 : 2028
2019-03-25 14:17:11 -返回值 : main
2019-03-25 14:17:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 14:17:15 -HTTP METHOD : GET
2019-03-25 14:17:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 14:17:15 -参数 : []
2019-03-25 14:17:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 14:17:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 14:17:16 -请求地址 : http://localhost:8081/main
2019-03-25 14:17:16 -HTTP METHOD : GET
2019-03-25 14:17:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 14:17:16 -参数 : []
2019-03-25 14:17:16 -耗时 : 1
2019-03-25 14:17:16 -返回值 : main
2019-03-25 14:17:16 -<==      Total: 0
2019-03-25 14:17:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 14:17:16 -==> Parameters: 1(Long), 0(String)
2019-03-25 14:17:16 -<==      Total: 1
2019-03-25 14:17:16 -耗时 : 598
2019-03-25 14:17:16 -返回值 : com.bootdo.common.utils.PageUtils@6808d159
2019-03-25 14:17:34 -Validating all active sessions...
2019-03-25 14:17:34 -Finished session validation.  No sessions were stopped.
2019-03-25 14:17:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 14:17:36 -==> Parameters: 1(Long)
2019-03-25 14:17:37 -<==      Total: 90
2019-03-25 14:17:37 -请求地址 : http://localhost:8081/water/waterUpLoad
2019-03-25 14:17:37 -HTTP METHOD : GET
2019-03-25 14:17:37 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad
2019-03-25 14:17:37 -参数 : []
2019-03-25 14:17:37 -耗时 : 118
2019-03-25 14:17:37 -返回值 : water/waterUpLoad/waterUpLoad
2019-03-25 14:17:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 14:17:49 -HTTP METHOD : GET
2019-03-25 14:17:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 14:17:49 -参数 : []
2019-03-25 14:17:49 -耗时 : 16
2019-03-25 14:17:49 -返回值 : system/dept/deptTree
2019-03-25 14:17:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 14:17:50 -HTTP METHOD : GET
2019-03-25 14:17:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 14:17:50 -参数 : []
2019-03-25 14:17:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 14:17:52 -==> Parameters: 
2019-03-25 14:17:52 -<==      Total: 3
2019-03-25 14:17:52 -耗时 : 2117
2019-03-25 14:17:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 14:17:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 14 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(13)-CONNECTED(13)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 156], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 26], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2382]
2019-03-25 14:17:59 -请求地址 : http://localhost:8081/water/waterUpLoad/createWaterExcel
2019-03-25 14:17:59 -HTTP METHOD : POST
2019-03-25 14:17:59 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.createWaterExcel
2019-03-25 14:17:59 -参数 : [com.bootdo.water.domain.WaterDO@6ab55d72]
2019-03-25 14:18:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE user_org = ? 
2019-03-25 14:18:00 -==> Parameters: 2(String)
2019-03-25 14:18:00 -<==      Total: 3
2019-03-25 14:18:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-03-25 14:18:00 -==> Parameters: 2019-03(String), 2(String)
2019-03-25 14:18:00 -<==      Total: 2
2019-03-25 14:18:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-03-25 14:18:00 -==> Parameters: 2019-03(String), 2(String)
2019-03-25 14:18:00 -<==      Total: 2
2019-03-25 14:18:00 -耗时 : 980
2019-03-25 14:18:00 -返回值 : fail
2019-03-25 14:18:12 -请求地址 : http://localhost:8081/water/waterUpLoad/createWaterExcel
2019-03-25 14:18:12 -HTTP METHOD : POST
2019-03-25 14:18:12 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.createWaterExcel
2019-03-25 14:18:12 -参数 : [com.bootdo.water.domain.WaterDO@9fc00b8]
2019-03-25 14:18:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE user_org = ? 
2019-03-25 14:18:12 -==> Parameters: 2(String)
2019-03-25 14:18:12 -<==      Total: 3
2019-03-25 14:18:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-03-25 14:18:12 -==> Parameters: 2019-03(String), 2(String)
2019-03-25 14:18:12 -<==      Total: 2
2019-03-25 14:18:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `water_type`, `water_price`, `water_cost`, `water_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM WATER WHERE create_time = ? and user_org = ? 
2019-03-25 14:18:12 -==> Parameters: 2019-03(String), 2(String)
2019-03-25 14:18:12 -<==      Total: 2
2019-03-25 14:18:12 -耗时 : 149
2019-03-25 14:18:12 -返回值 : fail
2019-03-25 14:18:20 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-25 14:18:20 -HTTP METHOD : GET
2019-03-25 14:18:20 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-25 14:18:20 -参数 : []
2019-03-25 14:18:20 -耗时 : 16
2019-03-25 14:18:20 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-25 14:18:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 14:18:47 -HTTP METHOD : GET
2019-03-25 14:18:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 14:18:47 -参数 : []
2019-03-25 14:18:47 -耗时 : 0
2019-03-25 14:18:47 -返回值 : system/dept/deptTree
2019-03-25 14:18:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 14:18:47 -HTTP METHOD : GET
2019-03-25 14:18:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 14:18:47 -参数 : []
2019-03-25 14:18:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 14:18:47 -==> Parameters: 
2019-03-25 14:18:47 -<==      Total: 3
2019-03-25 14:18:47 -耗时 : 59
2019-03-25 14:18:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 14:18:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 14:18:49 -HTTP METHOD : GET
2019-03-25 14:18:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 14:18:49 -参数 : []
2019-03-25 14:18:49 -耗时 : 69
2019-03-25 14:18:49 -返回值 : system/dept/deptTree
2019-03-25 14:18:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 14:18:49 -HTTP METHOD : GET
2019-03-25 14:18:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 14:18:49 -参数 : []
2019-03-25 14:18:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 14:18:49 -==> Parameters: 
2019-03-25 14:18:49 -<==      Total: 3
2019-03-25 14:18:49 -耗时 : 24
2019-03-25 14:18:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 14:18:53 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-03-25 14:18:53 -HTTP METHOD : POST
2019-03-25 14:18:53 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-03-25 14:18:53 -参数 : [com.bootdo.heat.domain.HeatDO@24d7d289]
2019-03-25 14:18:53 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-25 14:18:53 -==> Parameters: 2019-05(String), 2(String)
2019-03-25 14:18:53 -<==      Total: 0
2019-03-25 14:18:53 -耗时 : 549
2019-03-25 14:18:53 -返回值 : 
2019-03-25 14:19:03 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-03-25 14:19:03 -HTTP METHOD : POST
2019-03-25 14:19:03 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-03-25 14:19:03 -参数 : [com.bootdo.heat.domain.HeatDO@40262e12]
2019-03-25 14:19:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-25 14:19:03 -==> Parameters: 2019-05(String), 2(String)
2019-03-25 14:19:03 -<==      Total: 0
2019-03-25 14:19:03 -耗时 : 4
2019-03-25 14:19:03 -返回值 : 
2019-03-25 14:45:33 -Starting BootdoApplication on ZJZL-20180906VX with PID 6464 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 14:45:33 -Starting BootdoApplication on ZJZL-20180906VX with PID 14960 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 14:45:33 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 14:45:33 -The following profiles are active: dev
2019-03-25 14:45:33 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 14:45:33 -The following profiles are active: dev
2019-03-25 14:45:34 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cf92cc7: startup date [Mon Mar 25 14:45:34 CST 2019]; root of context hierarchy
2019-03-25 14:45:34 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@28d6290: startup date [Mon Mar 25 14:45:34 CST 2019]; root of context hierarchy
2019-03-25 14:45:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 14:45:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 14:46:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c33bd703] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6bd6da26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:06 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b59505aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:06 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5e3008cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 14:46:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 14:46:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 14:46:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 14:46:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:12 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:12 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:13 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:13 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 14:46:18 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 14:46:18 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 14:46:18 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 14:46:18 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 14:46:18 -Starting service [Tomcat]
2019-03-25 14:46:18 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 14:46:18 -Starting service [Tomcat]
2019-03-25 14:46:18 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 14:46:18 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 14:46:18 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 14:46:19 -Initializing Spring embedded WebApplicationContext
2019-03-25 14:46:19 -Root WebApplicationContext: initialization completed in 45052 ms
2019-03-25 14:46:19 -Initializing Spring embedded WebApplicationContext
2019-03-25 14:46:19 -Root WebApplicationContext: initialization completed in 45085 ms
2019-03-25 14:46:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 14:46:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 14:46:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 14:46:25 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 14:46:25 -Filter xssFilter was not registered (disabled)
2019-03-25 14:46:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 14:46:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 14:46:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 14:46:25 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 14:46:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 14:46:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 14:46:25 -Servlet dispatcherServlet mapped to [/]
2019-03-25 14:46:25 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 14:46:25 -Filter xssFilter was not registered (disabled)
2019-03-25 14:46:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 14:46:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 14:46:25 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 14:46:25 -Servlet dispatcherServlet mapped to [/]
2019-03-25 14:46:38 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cf92cc7: startup date [Mon Mar 25 14:45:34 CST 2019]; root of context hierarchy
2019-03-25 14:46:38 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@28d6290: startup date [Mon Mar 25 14:45:34 CST 2019]; root of context hierarchy
2019-03-25 14:46:43 -Using default implementation for ThreadExecutor
2019-03-25 14:46:43 -Using default implementation for ThreadExecutor
2019-03-25 14:46:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-25 14:46:43 -Quartz Scheduler v.2.2.1 created.
2019-03-25 14:46:43 -RAMJobStore initialized.
2019-03-25 14:46:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-25 14:46:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-25 14:46:43 -Quartz scheduler version: 2.2.1
2019-03-25 14:46:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4040ccae
2019-03-25 14:46:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-25 14:46:43 -Quartz Scheduler v.2.2.1 created.
2019-03-25 14:46:43 -RAMJobStore initialized.
2019-03-25 14:46:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-25 14:46:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-25 14:46:43 -Quartz scheduler version: 2.2.1
2019-03-25 14:46:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6a07e6ca
2019-03-25 14:46:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-25 14:46:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-25 14:46:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-25 14:46:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-25 14:46:58 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-25 14:46:59 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:46:59 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-25 14:46:59 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-25 14:46:59 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-25 14:46:59 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-25 14:46:59 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-25 14:46:59 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-25 14:46:59 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-25 14:46:59 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-25 14:46:59 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-25 14:46:59 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-25 14:46:59 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-25 14:46:59 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-25 14:46:59 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-25 14:46:59 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-25 14:46:59 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:46:59 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-25 14:46:59 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-25 14:46:59 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-25 14:46:59 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-25 14:46:59 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-25 14:46:59 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-25 14:46:59 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-25 14:46:59 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-25 14:46:59 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-25 14:46:59 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-25 14:46:59 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-25 14:46:59 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-25 14:46:59 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-25 14:46:59 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 14:46:59 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-25 14:46:59 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 14:46:59 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-25 14:46:59 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-25 14:46:59 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-25 14:46:59 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-25 14:46:59 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-25 14:46:59 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-25 14:46:59 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 14:46:59 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 14:46:59 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-25 14:46:59 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-25 14:46:59 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-25 14:46:59 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-25 14:46:59 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-25 14:46:59 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-25 14:46:59 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-25 14:46:59 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-25 14:46:59 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-25 14:46:59 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-25 14:46:59 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-25 14:46:59 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 14:46:59 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 14:46:59 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-25 14:46:59 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-25 14:46:59 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-25 14:46:59 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-25 14:46:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 14:46:59 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 14:46:59 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-25 14:46:59 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-25 14:46:59 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-25 14:46:59 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-25 14:46:59 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-25 14:46:59 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:46:59 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-25 14:46:59 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:46:59 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-25 14:46:59 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-25 14:46:59 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-25 14:46:59 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-25 14:46:59 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-25 14:46:59 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-25 14:46:59 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-25 14:46:59 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-25 14:46:59 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:46:59 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-25 14:46:59 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:46:59 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-25 14:46:59 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-25 14:46:59 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-25 14:46:59 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-25 14:46:59 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-25 14:46:59 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-25 14:46:59 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-25 14:46:59 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-25 14:46:59 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-25 14:46:59 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:46:59 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-25 14:46:59 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:46:59 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-25 14:46:59 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-25 14:47:00 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:00 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-25 14:47:00 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-25 14:47:00 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 14:47:00 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:00 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-25 14:47:00 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-25 14:47:00 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-25 14:47:00 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-25 14:47:00 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-25 14:47:00 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-25 14:47:00 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-25 14:47:00 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-25 14:47:00 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-25 14:47:00 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:00 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-25 14:47:00 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-25 14:47:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-25 14:47:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-25 14:47:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-25 14:47:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-25 14:47:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-25 14:47:00 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-25 14:47:00 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-25 14:47:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-25 14:47:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-25 14:47:00 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-25 14:47:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-25 14:47:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-25 14:47:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-25 14:47:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-25 14:47:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-25 14:47:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-25 14:47:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-25 14:47:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-25 14:47:00 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:00 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 14:47:00 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-25 14:47:00 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-25 14:47:00 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-25 14:47:00 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-25 14:47:00 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-25 14:47:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-25 14:47:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-25 14:47:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-25 14:47:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-25 14:47:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-25 14:47:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-25 14:47:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-25 14:47:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-25 14:47:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-25 14:47:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-25 14:47:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-25 14:47:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-25 14:47:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-25 14:47:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-25 14:47:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-25 14:47:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 14:47:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-25 14:47:00 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 14:47:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-25 14:47:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-25 14:47:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-25 14:47:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-25 14:47:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-25 14:47:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-25 14:47:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-25 14:47:00 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-25 14:47:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-25 14:47:01 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-25 14:47:01 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:01 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-25 14:47:01 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 14:47:01 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-25 14:47:01 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-25 14:47:01 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-25 14:47:01 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:01 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-25 14:47:01 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-25 14:47:01 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:01 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-25 14:47:01 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-25 14:47:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:01 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-25 14:47:01 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-25 14:47:01 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-25 14:47:01 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:01 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-25 14:47:01 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:01 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-25 14:47:01 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-25 14:47:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-25 14:47:01 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-25 14:47:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-25 14:47:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-25 14:47:01 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-25 14:47:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-25 14:47:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-25 14:47:01 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-25 14:47:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-25 14:47:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-25 14:47:01 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-25 14:47:01 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:01 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-25 14:47:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-25 14:47:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-25 14:47:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-25 14:47:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-25 14:47:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-25 14:47:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-25 14:47:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-25 14:47:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-25 14:47:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-25 14:47:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-25 14:47:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-25 14:47:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-25 14:47:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-25 14:47:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-25 14:47:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-25 14:47:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-25 14:47:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-25 14:47:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 14:47:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 14:47:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-25 14:47:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-25 14:47:01 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-25 14:47:01 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-25 14:47:01 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-25 14:47:01 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:01 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-25 14:47:01 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:01 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-25 14:47:01 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:01 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-25 14:47:01 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 14:47:01 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-25 14:47:01 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-25 14:47:01 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 14:47:01 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-25 14:47:01 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 14:47:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 14:47:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-25 14:47:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-25 14:47:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-25 14:47:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-25 14:47:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-25 14:47:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-25 14:47:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-25 14:47:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-25 14:47:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-25 14:47:06 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 14:47:06 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 14:47:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@28d6290: startup date [Mon Mar 25 14:45:34 CST 2019]; root of context hierarchy
2019-03-25 14:47:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cf92cc7: startup date [Mon Mar 25 14:45:34 CST 2019]; root of context hierarchy
2019-03-25 14:47:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 14:47:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 14:47:08 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 14:47:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 14:47:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 14:47:08 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 14:47:08 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-25 14:47:08 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-25 14:47:09 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-25 14:47:09 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-25 14:47:16 -Registering beans for JMX exposure on startup
2019-03-25 14:47:16 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-25 14:47:16 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-25 14:47:16 -Registering beans for JMX exposure on startup
2019-03-25 14:47:16 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-25 14:47:16 -Starting beans in phase 2147483647
2019-03-25 14:47:16 -Context refreshed
2019-03-25 14:47:16 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-25 14:47:16 -Starting beans in phase 2147483647
2019-03-25 14:47:16 -Context refreshed
2019-03-25 14:47:17 -Found 1 custom documentation plugin(s)
2019-03-25 14:47:17 -Found 1 custom documentation plugin(s)
2019-03-25 14:47:17 -Scanning for api listing references
2019-03-25 14:47:17 -Scanning for api listing references
2019-03-25 14:47:18 -Generating unique operation named: removeUsingPOST_1
2019-03-25 14:47:18 -Generating unique operation named: removeUsingPOST_1
2019-03-25 14:47:20 -Generating unique operation named: addUsingGET_1
2019-03-25 14:47:20 -Generating unique operation named: editUsingGET_1
2019-03-25 14:47:20 -Generating unique operation named: addUsingGET_1
2019-03-25 14:47:20 -Generating unique operation named: listUsingGET_1
2019-03-25 14:47:20 -Generating unique operation named: editUsingGET_1
2019-03-25 14:47:20 -Generating unique operation named: removeUsingPOST_2
2019-03-25 14:47:21 -Generating unique operation named: removeUsingPOST_3
2019-03-25 14:47:21 -Generating unique operation named: listUsingGET_1
2019-03-25 14:47:21 -Generating unique operation named: saveUsingPOST_1
2019-03-25 14:47:21 -Generating unique operation named: removeUsingPOST_2
2019-03-25 14:47:21 -Generating unique operation named: updateUsingGET_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingHEAD_1
2019-03-25 14:47:21 -Generating unique operation named: removeUsingPOST_3
2019-03-25 14:47:21 -Generating unique operation named: updateUsingPOST_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingPUT_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingPATCH_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingDELETE_1
2019-03-25 14:47:21 -Generating unique operation named: saveUsingPOST_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingGET_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingTRACE_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingHEAD_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingPOST_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingPUT_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingPATCH_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingDELETE_1
2019-03-25 14:47:21 -Generating unique operation named: addUsingGET_2
2019-03-25 14:47:21 -Generating unique operation named: editUsingGET_2
2019-03-25 14:47:21 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-25 14:47:21 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-25 14:47:21 -Generating unique operation named: updateUsingTRACE_1
2019-03-25 14:47:22 -Generating unique operation named: listUsingGET_2
2019-03-25 14:47:22 -Generating unique operation named: removeUsingPOST_4
2019-03-25 14:47:22 -Generating unique operation named: removeUsingPOST_5
2019-03-25 14:47:22 -Generating unique operation named: saveUsingPOST_2
2019-03-25 14:47:22 -Generating unique operation named: addUsingGET_2
2019-03-25 14:47:22 -Generating unique operation named: editUsingGET_2
2019-03-25 14:47:22 -Generating unique operation named: updateUsingGET_2
2019-03-25 14:47:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-25 14:47:22 -Generating unique operation named: updateUsingHEAD_2
2019-03-25 14:47:22 -Generating unique operation named: updateUsingPOST_2
2019-03-25 14:47:22 -Generating unique operation named: updateUsingPUT_2
2019-03-25 14:47:22 -Generating unique operation named: listUsingGET_2
2019-03-25 14:47:22 -Generating unique operation named: updateUsingPATCH_2
2019-03-25 14:47:22 -Generating unique operation named: removeUsingPOST_4
2019-03-25 14:47:22 -Generating unique operation named: updateUsingDELETE_2
2019-03-25 14:47:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-25 14:47:22 -Generating unique operation named: removeUsingPOST_5
2019-03-25 14:47:22 -Generating unique operation named: saveUsingPOST_2
2019-03-25 14:47:22 -Generating unique operation named: updateUsingTRACE_2
2019-03-25 14:47:22 -Generating unique operation named: updateUsingGET_2
2019-03-25 14:47:22 -Generating unique operation named: updateUsingHEAD_2
2019-03-25 14:47:23 -Generating unique operation named: updateUsingPOST_2
2019-03-25 14:47:23 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-25 14:47:23 -Generating unique operation named: updateUsingPUT_2
2019-03-25 14:47:23 -Generating unique operation named: updateUsingPATCH_2
2019-03-25 14:47:23 -Generating unique operation named: updateUsingDELETE_2
2019-03-25 14:47:23 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-25 14:47:23 -Generating unique operation named: addUsingGET_3
2019-03-25 14:47:23 -Generating unique operation named: editUsingGET_3
2019-03-25 14:47:23 -Generating unique operation named: updateUsingTRACE_2
2019-03-25 14:47:23 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-25 14:47:23 -Generating unique operation named: listUsingGET_3
2019-03-25 14:47:23 -Generating unique operation named: removeUsingPOST_6
2019-03-25 14:47:23 -Generating unique operation named: addUsingGET_3
2019-03-25 14:47:23 -Generating unique operation named: removeUsingPOST_7
2019-03-25 14:47:23 -Generating unique operation named: saveUsingPOST_3
2019-03-25 14:47:23 -Generating unique operation named: editUsingGET_3
2019-03-25 14:47:23 -Generating unique operation named: updateUsingGET_3
2019-03-25 14:47:23 -Generating unique operation named: updateUsingHEAD_3
2019-03-25 14:47:23 -Generating unique operation named: updateUsingPOST_3
2019-03-25 14:47:23 -Generating unique operation named: listUsingGET_3
2019-03-25 14:47:23 -Generating unique operation named: updateUsingPUT_3
2019-03-25 14:47:23 -Generating unique operation named: updateUsingPATCH_3
2019-03-25 14:47:23 -Generating unique operation named: updateUsingDELETE_3
2019-03-25 14:47:23 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-25 14:47:23 -Generating unique operation named: updateUsingTRACE_3
2019-03-25 14:47:24 -Generating unique operation named: removeUsingPOST_6
2019-03-25 14:47:24 -Generating unique operation named: removeUsingPOST_7
2019-03-25 14:47:24 -Generating unique operation named: addUsingGET_4
2019-03-25 14:47:24 -Generating unique operation named: saveUsingPOST_3
2019-03-25 14:47:24 -Generating unique operation named: editUsingGET_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingGET_3
2019-03-25 14:47:24 -Generating unique operation named: updateUsingHEAD_3
2019-03-25 14:47:24 -Generating unique operation named: listUsingGET_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPOST_3
2019-03-25 14:47:24 -Generating unique operation named: removeUsingPOST_8
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPUT_3
2019-03-25 14:47:24 -Generating unique operation named: removeUsingPOST_9
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPATCH_3
2019-03-25 14:47:24 -Generating unique operation named: updateUsingDELETE_3
2019-03-25 14:47:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-25 14:47:24 -Generating unique operation named: saveUsingPOST_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingGET_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingTRACE_3
2019-03-25 14:47:24 -Generating unique operation named: updateUsingHEAD_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPOST_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPUT_4
2019-03-25 14:47:24 -Generating unique operation named: addUsingGET_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPATCH_4
2019-03-25 14:47:24 -Generating unique operation named: editUsingGET_4
2019-03-25 14:47:24 -Generating unique operation named: listUsingGET_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingDELETE_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-25 14:47:24 -Generating unique operation named: removeUsingPOST_8
2019-03-25 14:47:24 -Generating unique operation named: updateUsingTRACE_4
2019-03-25 14:47:24 -Generating unique operation named: removeUsingPOST_9
2019-03-25 14:47:24 -Generating unique operation named: ElecUsingGET_1
2019-03-25 14:47:24 -Generating unique operation named: saveUsingPOST_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingGET_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingHEAD_4
2019-03-25 14:47:24 -Generating unique operation named: addUsingGET_5
2019-03-25 14:47:24 -Generating unique operation named: editUsingGET_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPOST_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPUT_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPATCH_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingDELETE_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-25 14:47:24 -Generating unique operation named: updateUsingTRACE_4
2019-03-25 14:47:24 -Generating unique operation named: ElecUsingGET_1
2019-03-25 14:47:24 -Generating unique operation named: listUsingGET_5
2019-03-25 14:47:24 -Generating unique operation named: addUsingGET_5
2019-03-25 14:47:24 -Generating unique operation named: removeUsingPOST_10
2019-03-25 14:47:24 -Generating unique operation named: editUsingGET_5
2019-03-25 14:47:24 -Generating unique operation named: removeUsingPOST_11
2019-03-25 14:47:24 -Generating unique operation named: saveUsingPOST_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingGET_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingHEAD_5
2019-03-25 14:47:24 -Generating unique operation named: listUsingGET_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPOST_5
2019-03-25 14:47:24 -Generating unique operation named: removeUsingPOST_10
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPUT_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPATCH_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingDELETE_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingTRACE_5
2019-03-25 14:47:24 -Generating unique operation named: removeUsingPOST_11
2019-03-25 14:47:24 -Generating unique operation named: saveUsingPOST_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingGET_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingHEAD_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPOST_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPUT_5
2019-03-25 14:47:24 -Generating unique operation named: updateUsingPATCH_5
2019-03-25 14:47:25 -Generating unique operation named: updateUsingDELETE_5
2019-03-25 14:47:25 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-25 14:47:25 -Generating unique operation named: updateUsingTRACE_5
2019-03-25 14:47:25 -Generating unique operation named: editUsingGET_6
2019-03-25 14:47:25 -Generating unique operation named: listUsingGET_6
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPOST_6
2019-03-25 14:47:25 -Generating unique operation named: addUsingGET_6
2019-03-25 14:47:25 -Generating unique operation named: editUsingGET_7
2019-03-25 14:47:25 -Generating unique operation named: editUsingGET_6
2019-03-25 14:47:25 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-25 14:47:25 -Generating unique operation named: listUsingGET_7
2019-03-25 14:47:25 -Generating unique operation named: listUsingGET_6
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPOST_6
2019-03-25 14:47:25 -Generating unique operation named: removeUsingPOST_12
2019-03-25 14:47:25 -Generating unique operation named: addUsingGET_6
2019-03-25 14:47:25 -Generating unique operation named: editUsingGET_7
2019-03-25 14:47:25 -Generating unique operation named: removeUsingPOST_13
2019-03-25 14:47:25 -Generating unique operation named: saveUsingPOST_6
2019-03-25 14:47:25 -Generating unique operation named: updateUsingGET_6
2019-03-25 14:47:25 -Generating unique operation named: updateUsingHEAD_6
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPOST_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPUT_6
2019-03-25 14:47:25 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPATCH_6
2019-03-25 14:47:25 -Generating unique operation named: updateUsingDELETE_6
2019-03-25 14:47:25 -Generating unique operation named: listUsingGET_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-25 14:47:25 -Generating unique operation named: removeUsingPOST_12
2019-03-25 14:47:25 -Generating unique operation named: updateUsingTRACE_6
2019-03-25 14:47:25 -Generating unique operation named: removeUsingPOST_13
2019-03-25 14:47:25 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-25 14:47:25 -Generating unique operation named: saveUsingPOST_6
2019-03-25 14:47:25 -Generating unique operation named: updateUsingGET_6
2019-03-25 14:47:25 -Generating unique operation named: addUsingGET_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingHEAD_6
2019-03-25 14:47:25 -Generating unique operation named: editUsingGET_8
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPOST_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPUT_6
2019-03-25 14:47:25 -Generating unique operation named: listUsingGET_8
2019-03-25 14:47:25 -Generating unique operation named: removeUsingPOST_14
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPATCH_6
2019-03-25 14:47:25 -Generating unique operation named: updateUsingDELETE_6
2019-03-25 14:47:25 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-25 14:47:25 -Generating unique operation named: removeUsingPOST_15
2019-03-25 14:47:25 -Generating unique operation named: updateUsingTRACE_6
2019-03-25 14:47:25 -Generating unique operation named: saveUsingPOST_7
2019-03-25 14:47:25 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-25 14:47:25 -Generating unique operation named: updateUsingGET_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingHEAD_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPOST_8
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPUT_7
2019-03-25 14:47:25 -Generating unique operation named: addUsingGET_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPATCH_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingDELETE_7
2019-03-25 14:47:25 -Generating unique operation named: editUsingGET_8
2019-03-25 14:47:25 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingTRACE_7
2019-03-25 14:47:25 -Generating unique operation named: listUsingGET_8
2019-03-25 14:47:25 -Generating unique operation named: addUsingGET_8
2019-03-25 14:47:25 -Generating unique operation named: removeUsingPOST_14
2019-03-25 14:47:25 -Generating unique operation named: editUsingGET_9
2019-03-25 14:47:25 -Generating unique operation named: removeUsingPOST_15
2019-03-25 14:47:25 -Generating unique operation named: listUsingGET_9
2019-03-25 14:47:25 -Generating unique operation named: saveUsingPOST_7
2019-03-25 14:47:25 -Generating unique operation named: removeUsingPOST_16
2019-03-25 14:47:25 -Generating unique operation named: updateUsingGET_7
2019-03-25 14:47:25 -Generating unique operation named: removeUsingPOST_17
2019-03-25 14:47:25 -Generating unique operation named: updateUsingHEAD_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPOST_8
2019-03-25 14:47:25 -Generating unique operation named: saveUsingPOST_8
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPUT_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPATCH_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingGET_8
2019-03-25 14:47:25 -Generating unique operation named: updateUsingDELETE_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingHEAD_8
2019-03-25 14:47:25 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPOST_9
2019-03-25 14:47:25 -Generating unique operation named: updateUsingTRACE_7
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPUT_8
2019-03-25 14:47:25 -Generating unique operation named: updateUsingPATCH_8
2019-03-25 14:47:25 -Generating unique operation named: addUsingGET_8
2019-03-25 14:47:25 -Generating unique operation named: updateUsingDELETE_8
2019-03-25 14:47:25 -Generating unique operation named: editUsingGET_9
2019-03-25 14:47:25 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-25 14:47:25 -Generating unique operation named: updateUsingTRACE_8
2019-03-25 14:47:25 -Generating unique operation named: listUsingGET_9
2019-03-25 14:47:25 -Generating unique operation named: removeUsingPOST_16
2019-03-25 14:47:25 -Generating unique operation named: removeUsingPOST_17
2019-03-25 14:47:26 -Generating unique operation named: saveUsingPOST_8
2019-03-25 14:47:26 -Generating unique operation named: updateUsingGET_8
2019-03-25 14:47:26 -Generating unique operation named: updateUsingHEAD_8
2019-03-25 14:47:26 -Generating unique operation named: addUsingGET_9
2019-03-25 14:47:26 -Generating unique operation named: updateUsingPOST_9
2019-03-25 14:47:26 -Generating unique operation named: updateUsingPUT_8
2019-03-25 14:47:26 -Generating unique operation named: editUsingGET_10
2019-03-25 14:47:26 -Generating unique operation named: updateUsingPATCH_8
2019-03-25 14:47:26 -Generating unique operation named: updateUsingDELETE_8
2019-03-25 14:47:26 -Generating unique operation named: infoUsingGET_1
2019-03-25 14:47:26 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-25 14:47:26 -Generating unique operation named: infoUsingHEAD_1
2019-03-25 14:47:26 -Generating unique operation named: updateUsingTRACE_8
2019-03-25 14:47:26 -Generating unique operation named: infoUsingPOST_1
2019-03-25 14:47:26 -Generating unique operation named: infoUsingPUT_1
2019-03-25 14:47:26 -Generating unique operation named: infoUsingPATCH_1
2019-03-25 14:47:26 -Generating unique operation named: infoUsingDELETE_1
2019-03-25 14:47:26 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-25 14:47:26 -Generating unique operation named: infoUsingTRACE_1
2019-03-25 14:47:26 -Generating unique operation named: listUsingGET_10
2019-03-25 14:47:26 -Generating unique operation named: removeUsingPOST_18
2019-03-25 14:47:26 -Generating unique operation named: addUsingGET_9
2019-03-25 14:47:26 -Generating unique operation named: removeUsingPOST_19
2019-03-25 14:47:26 -Generating unique operation named: editUsingGET_10
2019-03-25 14:47:26 -Generating unique operation named: infoUsingGET_1
2019-03-25 14:47:26 -Generating unique operation named: infoUsingHEAD_1
2019-03-25 14:47:26 -Generating unique operation named: infoUsingPOST_1
2019-03-25 14:47:26 -Generating unique operation named: saveUsingPOST_9
2019-03-25 14:47:26 -Generating unique operation named: infoUsingPUT_1
2019-03-25 14:47:26 -Generating unique operation named: infoUsingPATCH_1
2019-03-25 14:47:26 -Generating unique operation named: infoUsingDELETE_1
2019-03-25 14:47:26 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-25 14:47:26 -Generating unique operation named: updateUsingPOST_10
2019-03-25 14:47:26 -Generating unique operation named: infoUsingTRACE_1
2019-03-25 14:47:26 -Generating unique operation named: listUsingGET_10
2019-03-25 14:47:26 -Generating unique operation named: listUsingGET_11
2019-03-25 14:47:26 -Generating unique operation named: removeUsingPOST_20
2019-03-25 14:47:26 -Generating unique operation named: removeUsingPOST_18
2019-03-25 14:47:26 -Generating unique operation named: removeUsingPOST_19
2019-03-25 14:47:26 -Generating unique operation named: saveUsingPOST_9
2019-03-25 14:47:26 -Generating unique operation named: updateUsingPOST_10
2019-03-25 14:47:26 -Generating unique operation named: welcomeUsingGET_1
2019-03-25 14:47:26 -Generating unique operation named: listUsingGET_11
2019-03-25 14:47:26 -Generating unique operation named: removeUsingPOST_20
2019-03-25 14:47:26 -Generating unique operation named: welcomeUsingGET_1
2019-03-25 14:47:26 -Generating unique operation named: addUsingGET_10
2019-03-25 14:47:26 -Generating unique operation named: editUsingGET_11
2019-03-25 14:47:26 -Generating unique operation named: listUsingGET_12
2019-03-25 14:47:26 -Generating unique operation named: addUsingGET_10
2019-03-25 14:47:27 -Generating unique operation named: editUsingGET_11
2019-03-25 14:47:27 -Generating unique operation named: listUsingGET_12
2019-03-25 14:47:27 -Generating unique operation named: removeUsingPOST_21
2019-03-25 14:47:27 -Generating unique operation named: removeUsingPOST_21
2019-03-25 14:47:27 -Generating unique operation named: saveUsingPOST_10
2019-03-25 14:47:27 -Generating unique operation named: saveUsingPOST_10
2019-03-25 14:47:27 -Generating unique operation named: treeUsingGET_1
2019-03-25 14:47:27 -Generating unique operation named: treeUsingGET_1
2019-03-25 14:47:27 -Generating unique operation named: treeUsingGET_2
2019-03-25 14:47:27 -Generating unique operation named: treeUsingGET_2
2019-03-25 14:47:27 -Generating unique operation named: updateUsingPOST_11
2019-03-25 14:47:27 -Generating unique operation named: updateUsingPOST_11
2019-03-25 14:47:27 -Generating unique operation named: addUsingGET_11
2019-03-25 14:47:27 -Generating unique operation named: addUsingGET_11
2019-03-25 14:47:27 -Generating unique operation named: editUsingGET_12
2019-03-25 14:47:27 -Generating unique operation named: editUsingGET_12
2019-03-25 14:47:27 -Generating unique operation named: listUsingGET_13
2019-03-25 14:47:27 -Generating unique operation named: listUsingGET_13
2019-03-25 14:47:27 -Generating unique operation named: removeUsingPOST_22
2019-03-25 14:47:27 -Generating unique operation named: removeUsingPOST_22
2019-03-25 14:47:27 -Generating unique operation named: removeUsingPOST_23
2019-03-25 14:47:27 -Generating unique operation named: removeUsingPOST_23
2019-03-25 14:47:27 -Generating unique operation named: saveUsingPOST_11
2019-03-25 14:47:27 -Generating unique operation named: saveUsingPOST_11
2019-03-25 14:47:27 -Generating unique operation named: updateUsingGET_9
2019-03-25 14:47:27 -Generating unique operation named: updateUsingGET_9
2019-03-25 14:47:27 -Generating unique operation named: updateUsingHEAD_9
2019-03-25 14:47:27 -Generating unique operation named: updateUsingHEAD_9
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPOST_12
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPOST_12
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPUT_9
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPUT_9
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPATCH_9
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPATCH_9
2019-03-25 14:47:28 -Generating unique operation named: updateUsingDELETE_9
2019-03-25 14:47:28 -Generating unique operation named: updateUsingDELETE_9
2019-03-25 14:47:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-25 14:47:28 -Generating unique operation named: updateUsingTRACE_9
2019-03-25 14:47:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-25 14:47:28 -Generating unique operation named: addUsingGET_12
2019-03-25 14:47:28 -Generating unique operation named: editUsingGET_13
2019-03-25 14:47:28 -Generating unique operation named: updateUsingTRACE_9
2019-03-25 14:47:28 -Generating unique operation named: addUsingGET_12
2019-03-25 14:47:28 -Generating unique operation named: listUsingGET_14
2019-03-25 14:47:28 -Generating unique operation named: editUsingGET_13
2019-03-25 14:47:28 -Generating unique operation named: removeUsingPOST_24
2019-03-25 14:47:28 -Generating unique operation named: removeUsingPOST_25
2019-03-25 14:47:28 -Generating unique operation named: listUsingGET_14
2019-03-25 14:47:28 -Generating unique operation named: saveUsingPOST_12
2019-03-25 14:47:28 -Generating unique operation named: updateUsingGET_10
2019-03-25 14:47:28 -Generating unique operation named: removeUsingPOST_24
2019-03-25 14:47:28 -Generating unique operation named: updateUsingHEAD_10
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPOST_13
2019-03-25 14:47:28 -Generating unique operation named: removeUsingPOST_25
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPUT_10
2019-03-25 14:47:28 -Generating unique operation named: saveUsingPOST_12
2019-03-25 14:47:28 -Generating unique operation named: updateUsingGET_10
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPATCH_10
2019-03-25 14:47:28 -Generating unique operation named: updateUsingHEAD_10
2019-03-25 14:47:28 -Generating unique operation named: updateUsingDELETE_10
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPOST_13
2019-03-25 14:47:28 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPUT_10
2019-03-25 14:47:28 -Generating unique operation named: updateUsingTRACE_10
2019-03-25 14:47:28 -Generating unique operation named: addUsingGET_13
2019-03-25 14:47:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-25 14:47:28 -Generating unique operation named: editUsingGET_14
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPATCH_10
2019-03-25 14:47:28 -Generating unique operation named: updateUsingDELETE_10
2019-03-25 14:47:28 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-25 14:47:28 -Generating unique operation named: updateUsingTRACE_10
2019-03-25 14:47:28 -Generating unique operation named: addUsingGET_13
2019-03-25 14:47:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingGET_15
2019-03-25 14:47:28 -Generating unique operation named: editUsingGET_14
2019-03-25 14:47:28 -Generating unique operation named: saveUsingPOST_13
2019-03-25 14:47:28 -Generating unique operation named: listUsingGET_15
2019-03-25 14:47:28 -Generating unique operation named: saveUsingPOST_13
2019-03-25 14:47:28 -Generating unique operation named: saveUsingPOST_14
2019-03-25 14:47:28 -Generating unique operation named: saveUsingPOST_14
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPOST_14
2019-03-25 14:47:28 -Generating unique operation named: updateUsingPOST_14
2019-03-25 14:47:28 -Generating unique operation named: listUsingGET_16
2019-03-25 14:47:28 -Generating unique operation named: listUsingHEAD_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingPOST_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingPUT_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingGET_16
2019-03-25 14:47:28 -Generating unique operation named: listUsingHEAD_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingPOST_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingPUT_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingPATCH_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingPATCH_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingDELETE_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingDELETE_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingOPTIONS_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingOPTIONS_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingTRACE_1
2019-03-25 14:47:28 -Generating unique operation named: listUsingTRACE_1
2019-03-25 14:47:28 -Generating unique operation named: addUsingGET_14
2019-03-25 14:47:28 -Generating unique operation named: addUsingGET_14
2019-03-25 14:47:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-25 14:47:29 -Generating unique operation named: editUsingGET_15
2019-03-25 14:47:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-25 14:47:29 -Generating unique operation named: editUsingGET_15
2019-03-25 14:47:29 -Generating unique operation named: listUsingGET_17
2019-03-25 14:47:29 -Generating unique operation named: removeUsingPOST_26
2019-03-25 14:47:29 -Generating unique operation named: listUsingGET_17
2019-03-25 14:47:29 -Generating unique operation named: removeUsingPOST_26
2019-03-25 14:47:29 -Generating unique operation named: saveUsingPOST_15
2019-03-25 14:47:29 -Generating unique operation named: treeUsingGET_3
2019-03-25 14:47:29 -Generating unique operation named: treeViewUsingGET_1
2019-03-25 14:47:29 -Generating unique operation named: saveUsingPOST_15
2019-03-25 14:47:29 -Generating unique operation named: updateUsingPOST_15
2019-03-25 14:47:29 -Generating unique operation named: treeUsingGET_3
2019-03-25 14:47:29 -Generating unique operation named: treeViewUsingGET_1
2019-03-25 14:47:29 -Generating unique operation named: updateUsingPOST_15
2019-03-25 14:47:29 -Generating unique operation named: addUsingGET_15
2019-03-25 14:47:29 -Generating unique operation named: editUsingGET_16
2019-03-25 14:47:29 -Generating unique operation named: addUsingGET_15
2019-03-25 14:47:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-25 14:47:29 -Generating unique operation named: editUsingGET_16
2019-03-25 14:47:29 -Generating unique operation named: listUsingGET_18
2019-03-25 14:47:29 -Generating unique operation named: removeUsingPOST_27
2019-03-25 14:47:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-25 14:47:29 -Generating unique operation named: listUsingGET_18
2019-03-25 14:47:29 -Generating unique operation named: removeUsingPOST_28
2019-03-25 14:47:29 -Generating unique operation named: removeUsingPOST_27
2019-03-25 14:47:29 -Generating unique operation named: saveUsingPOST_16
2019-03-25 14:47:29 -Generating unique operation named: updateUsingGET_11
2019-03-25 14:47:29 -Generating unique operation named: removeUsingPOST_28
2019-03-25 14:47:29 -Generating unique operation named: updateUsingHEAD_11
2019-03-25 14:47:29 -Generating unique operation named: updateUsingPOST_16
2019-03-25 14:47:29 -Generating unique operation named: saveUsingPOST_16
2019-03-25 14:47:29 -Generating unique operation named: updateUsingPUT_11
2019-03-25 14:47:29 -Generating unique operation named: updateUsingPATCH_11
2019-03-25 14:47:29 -Generating unique operation named: updateUsingDELETE_11
2019-03-25 14:47:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-25 14:47:29 -Generating unique operation named: updateUsingTRACE_11
2019-03-25 14:47:29 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-25 14:47:29 -Generating unique operation named: updateUsingGET_11
2019-03-25 14:47:29 -Generating unique operation named: updateUsingHEAD_11
2019-03-25 14:47:29 -Generating unique operation named: updateUsingPOST_16
2019-03-25 14:47:29 -Generating unique operation named: addUsingGET_16
2019-03-25 14:47:30 -Generating unique operation named: editUsingGET_17
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPUT_11
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPATCH_11
2019-03-25 14:47:30 -Generating unique operation named: listUsingGET_19
2019-03-25 14:47:30 -Generating unique operation named: updateUsingDELETE_11
2019-03-25 14:47:30 -Generating unique operation named: removeUsingPOST_29
2019-03-25 14:47:30 -Generating unique operation named: removeUsingPOST_30
2019-03-25 14:47:30 -Generating unique operation named: saveUsingPOST_17
2019-03-25 14:47:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-25 14:47:30 -Generating unique operation named: updateUsingGET_12
2019-03-25 14:47:30 -Generating unique operation named: updateUsingTRACE_11
2019-03-25 14:47:30 -Generating unique operation named: updateUsingHEAD_12
2019-03-25 14:47:30 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPOST_17
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPUT_12
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPATCH_12
2019-03-25 14:47:30 -Generating unique operation named: updateUsingDELETE_12
2019-03-25 14:47:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-25 14:47:30 -Generating unique operation named: updateUsingTRACE_12
2019-03-25 14:47:30 -Generating unique operation named: addUsingGET_16
2019-03-25 14:47:30 -Generating unique operation named: editUsingGET_17
2019-03-25 14:47:30 -Generating unique operation named: addUsingGET_17
2019-03-25 14:47:30 -Generating unique operation named: editUsingGET_18
2019-03-25 14:47:30 -Generating unique operation named: listUsingGET_20
2019-03-25 14:47:30 -Generating unique operation named: listUsingGET_19
2019-03-25 14:47:30 -Generating unique operation named: removeUsingPOST_31
2019-03-25 14:47:30 -Generating unique operation named: removeUsingPOST_32
2019-03-25 14:47:30 -Generating unique operation named: removeUsingPOST_29
2019-03-25 14:47:30 -Generating unique operation named: removeUsingPOST_30
2019-03-25 14:47:30 -Generating unique operation named: saveUsingPOST_17
2019-03-25 14:47:30 -Generating unique operation named: updateUsingGET_12
2019-03-25 14:47:30 -Generating unique operation named: updateUsingHEAD_12
2019-03-25 14:47:30 -Generating unique operation named: saveUsingPOST_18
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPOST_17
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPUT_12
2019-03-25 14:47:30 -Generating unique operation named: updateUsingGET_13
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPATCH_12
2019-03-25 14:47:30 -Generating unique operation named: updateUsingHEAD_13
2019-03-25 14:47:30 -Generating unique operation named: updateUsingDELETE_12
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPOST_18
2019-03-25 14:47:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPUT_13
2019-03-25 14:47:30 -Generating unique operation named: updateUsingTRACE_12
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPATCH_13
2019-03-25 14:47:30 -Generating unique operation named: updateUsingDELETE_13
2019-03-25 14:47:30 -Generating unique operation named: addUsingGET_17
2019-03-25 14:47:30 -Generating unique operation named: editUsingGET_18
2019-03-25 14:47:30 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-25 14:47:30 -Generating unique operation named: listUsingGET_20
2019-03-25 14:47:30 -Generating unique operation named: updateUsingTRACE_13
2019-03-25 14:47:30 -Generating unique operation named: removeUsingPOST_31
2019-03-25 14:47:30 -Generating unique operation named: removeUsingPOST_32
2019-03-25 14:47:30 -Generating unique operation named: saveUsingPOST_18
2019-03-25 14:47:30 -Generating unique operation named: updateUsingGET_13
2019-03-25 14:47:30 -Generating unique operation named: updateUsingHEAD_13
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPOST_18
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPUT_13
2019-03-25 14:47:30 -Generating unique operation named: updateUsingPATCH_13
2019-03-25 14:47:30 -Generating unique operation named: updateUsingDELETE_13
2019-03-25 14:47:30 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-25 14:47:30 -Generating unique operation named: updateUsingTRACE_13
2019-03-25 14:47:30 -Starting Quartz Scheduler now
2019-03-25 14:47:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-25 14:47:30 -Starting...
2019-03-25 14:47:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-25 14:47:30 -Started.
2019-03-25 14:47:30 -Starting Quartz Scheduler now
2019-03-25 14:47:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-25 14:47:30 -Starting...
2019-03-25 14:47:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-25 14:47:30 -Started.
2019-03-25 14:47:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-25 14:47:31 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-25 14:47:31 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-25 14:47:31 -Using a shared selector for servlet write/read
2019-03-25 14:47:31 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-25 14:47:31 -Stopping service [Tomcat]
2019-03-25 14:47:31 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-25 14:47:31 -Started BootdoApplication in 136.282 seconds (JVM running for 139.981)
2019-03-25 14:47:31 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-25 14:47:31 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-25 14:47:31 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-25 14:47:31 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-25 14:47:31 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-25 14:47:31 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cf92cc7: startup date [Mon Mar 25 14:45:34 CST 2019]; root of context hierarchy
2019-03-25 14:47:31 -Stopping beans in phase 2147483647
2019-03-25 14:47:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-25 14:47:31 -Stopping...
2019-03-25 14:47:31 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-25 14:47:31 -Stopped.
2019-03-25 14:47:31 -Unregistering JMX-exposed beans on shutdown
2019-03-25 14:47:31 -Unregistering JMX-exposed beans
2019-03-25 14:47:31 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-25 14:47:31 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-25 14:47:31 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-25 14:47:31 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-25 14:47:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-25 14:47:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-25 14:47:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-25 14:47:31 -Shutting down Quartz Scheduler
2019-03-25 14:47:32 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-25 14:47:33 -==> Parameters: 
2019-03-25 14:47:33 -<==      Total: 1
2019-03-25 14:48:04 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-25 14:48:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-25 14:48:18 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-25 14:48:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 79 ms
2019-03-25 14:48:19 -Enabling session validation scheduler...
2019-03-25 14:48:20 -请求地址 : http://localhost:8081/login;JSESSIONID=e08ce379-d00e-47a1-9516-f4e1983ff30c
2019-03-25 14:48:20 -HTTP METHOD : GET
2019-03-25 14:48:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 14:48:20 -参数 : [{}]
2019-03-25 14:48:20 -耗时 : 5
2019-03-25 14:48:20 -返回值 : login
2019-03-25 14:48:21 -请求地址 : http://localhost:8081/login
2019-03-25 14:48:21 -HTTP METHOD : GET
2019-03-25 14:48:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 14:48:21 -参数 : [{}]
2019-03-25 14:48:21 -耗时 : 1
2019-03-25 14:48:21 -返回值 : login
2019-03-25 14:48:27 -请求地址 : http://localhost:8081/login;JSESSIONID=e08ce379-d00e-47a1-9516-f4e1983ff30c
2019-03-25 14:48:27 -HTTP METHOD : GET
2019-03-25 14:48:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 14:48:27 -参数 : [{}]
2019-03-25 14:48:27 -耗时 : 1
2019-03-25 14:48:27 -返回值 : login
2019-03-25 14:48:30 -请求地址 : http://localhost:8081/getVerify
2019-03-25 14:48:30 -HTTP METHOD : GET
2019-03-25 14:48:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 14:48:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@708c95a1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@687d3226]
2019-03-25 14:48:48 -1557
2019-03-25 14:48:49 -耗时 : 19085
2019-03-25 14:48:49 -返回值 : null
2019-03-25 14:49:44 -请求地址 : http://localhost:8081/login
2019-03-25 14:49:44 -HTTP METHOD : POST
2019-03-25 14:49:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 14:49:44 -参数 : [admin, 111111, 1557, org.apache.shiro.web.servlet.ShiroHttpServletRequest@802a015]
2019-03-25 14:49:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 14:49:44 -==> Parameters: admin(String)
2019-03-25 14:49:45 -<==      Total: 1
2019-03-25 14:49:45 -耗时 : 1015
2019-03-25 14:49:45 -返回值 : {msg=操作成功, code=0}
2019-03-25 14:49:46 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-25 14:49:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 14:49:46 -==> Parameters: 1(Long), admin(String), 登录(String), 1016(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 14:49:46.188(Timestamp)
2019-03-25 14:49:46 -请求地址 : http://localhost:8081/index
2019-03-25 14:49:46 -HTTP METHOD : GET
2019-03-25 14:49:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 14:49:46 -参数 : [{}]
2019-03-25 14:49:47 -<==    Updates: 1
2019-03-25 14:49:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 14:49:48 -==> Parameters: 1(Long)
2019-03-25 14:49:48 -<==      Total: 46
2019-03-25 14:49:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 14:49:48 -==> Parameters: 138(Long)
2019-03-25 14:49:48 -<==      Total: 1
2019-03-25 14:49:48 -耗时 : 2100
2019-03-25 14:49:48 -返回值 : index_v1
2019-03-25 14:49:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 14:49:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 2100(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 14:49:49.125(Timestamp)
2019-03-25 14:49:49 -<==    Updates: 1
2019-03-25 14:49:49 -请求地址 : http://localhost:8081/main
2019-03-25 14:49:49 -HTTP METHOD : GET
2019-03-25 14:49:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 14:49:49 -参数 : []
2019-03-25 14:49:49 -耗时 : 1
2019-03-25 14:49:49 -返回值 : main
2019-03-25 14:49:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 14:49:50 -HTTP METHOD : GET
2019-03-25 14:49:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 14:49:50 -参数 : []
2019-03-25 14:49:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 14:49:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 14:49:50 -请求地址 : http://localhost:8081/main
2019-03-25 14:49:50 -HTTP METHOD : GET
2019-03-25 14:49:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 14:49:50 -参数 : []
2019-03-25 14:49:50 -耗时 : 1
2019-03-25 14:49:50 -返回值 : main
2019-03-25 14:49:50 -<==      Total: 0
2019-03-25 14:49:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 14:49:50 -==> Parameters: 1(Long), 0(String)
2019-03-25 14:49:50 -<==      Total: 1
2019-03-25 14:49:50 -耗时 : 440
2019-03-25 14:49:50 -返回值 : com.bootdo.common.utils.PageUtils@485eed58
2019-03-25 14:50:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 14:50:04 -==> Parameters: 1(Long)
2019-03-25 14:50:04 -<==      Total: 90
2019-03-25 14:50:04 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-25 14:50:04 -HTTP METHOD : GET
2019-03-25 14:50:04 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-25 14:50:04 -参数 : []
2019-03-25 14:50:04 -耗时 : 1
2019-03-25 14:50:04 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-25 14:50:24 -请求地址 : http://localhost:8081/heat/heat
2019-03-25 14:50:24 -HTTP METHOD : GET
2019-03-25 14:50:24 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-25 14:50:24 -参数 : []
2019-03-25 14:50:24 -耗时 : 0
2019-03-25 14:50:24 -返回值 : heat/heat/heat
2019-03-25 14:50:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 14:50:24 -HTTP METHOD : GET
2019-03-25 14:50:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 14:50:24 -参数 : [userType]
2019-03-25 14:50:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 14:50:24 -==> Parameters: userType(String)
2019-03-25 14:50:25 -<==      Total: 2
2019-03-25 14:50:25 -耗时 : 454
2019-03-25 14:50:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 14:50:25 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-25 14:50:25 -HTTP METHOD : GET
2019-03-25 14:50:25 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-25 14:50:25 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-25 14:50:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-25 14:50:25 -==> Parameters: 0(Integer), 3(Integer)
2019-03-25 14:50:25 -<==      Total: 3
2019-03-25 14:50:25 -==>  Preparing: select count(*) from heat 
2019-03-25 14:50:25 -==> Parameters: 
2019-03-25 14:50:26 -<==      Total: 1
2019-03-25 14:50:26 -耗时 : 285
2019-03-25 14:50:26 -返回值 : com.bootdo.common.utils.PageUtils@6d942c38
2019-03-25 14:50:26 -请求地址 : http://localhost:8081/heat/heatInto
2019-03-25 14:50:26 -HTTP METHOD : GET
2019-03-25 14:50:26 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-03-25 14:50:26 -参数 : []
2019-03-25 14:50:26 -耗时 : 1
2019-03-25 14:50:26 -返回值 : heat/heatInto/heatInto
2019-03-25 14:50:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 14:50:38 -HTTP METHOD : GET
2019-03-25 14:50:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 14:50:38 -参数 : []
2019-03-25 14:50:38 -耗时 : 0
2019-03-25 14:50:38 -返回值 : system/dept/deptTree
2019-03-25 14:50:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 14:50:39 -HTTP METHOD : GET
2019-03-25 14:50:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 14:50:39 -参数 : []
2019-03-25 14:50:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 14:50:39 -==> Parameters: 
2019-03-25 14:50:39 -<==      Total: 3
2019-03-25 14:50:39 -耗时 : 13
2019-03-25 14:50:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 14:50:58 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 14:50:58 -HTTP METHOD : POST
2019-03-25 14:50:58 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 14:50:58 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@763dcf5b, 2019-06, 2]
2019-03-25 14:51:03 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 14:51:03 -==> Parameters: 1-0001(String)
2019-03-25 14:51:03 -<==      Total: 1
2019-03-25 14:51:03 -耗时 : 4888
2019-03-25 14:51:03 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 14:51:10 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 14:51:10 -HTTP METHOD : POST
2019-03-25 14:51:10 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 14:51:10 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@32ca91ab, 2019-06, 2]
2019-03-25 14:51:10 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 14:51:10 -==> Parameters: 1-0001(String)
2019-03-25 14:51:10 -<==      Total: 1
2019-03-25 14:51:10 -耗时 : 107
2019-03-25 14:51:10 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 14:51:48 -请求地址 : http://localhost:8081/login;JSESSIONID=78b5eab9-cb49-4f8d-8d42-c08d4ac24ea5
2019-03-25 14:51:48 -HTTP METHOD : GET
2019-03-25 14:51:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 14:51:48 -参数 : [{}]
2019-03-25 14:51:48 -耗时 : 1
2019-03-25 14:51:48 -返回值 : login
2019-03-25 14:51:56 -请求地址 : http://localhost:8081/login
2019-03-25 14:51:56 -HTTP METHOD : GET
2019-03-25 14:51:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 14:51:56 -参数 : [{}]
2019-03-25 14:51:56 -耗时 : 1
2019-03-25 14:51:56 -返回值 : login
2019-03-25 14:51:56 -请求地址 : http://localhost:8081/getVerify
2019-03-25 14:51:56 -HTTP METHOD : GET
2019-03-25 14:51:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 14:51:56 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@22c5499, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7ee5853e]
2019-03-25 14:51:56 -0948
2019-03-25 14:51:56 -耗时 : 55
2019-03-25 14:51:56 -返回值 : null
2019-03-25 14:51:57 -请求地址 : http://localhost:8081/login
2019-03-25 14:51:57 -HTTP METHOD : GET
2019-03-25 14:51:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 14:51:57 -参数 : [{}]
2019-03-25 14:51:57 -耗时 : 0
2019-03-25 14:51:57 -返回值 : login
2019-03-25 14:52:03 -请求地址 : http://localhost:8081/login
2019-03-25 14:52:03 -HTTP METHOD : POST
2019-03-25 14:52:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 14:52:03 -参数 : [admin, 111111, 0948, org.apache.shiro.web.servlet.ShiroHttpServletRequest@619e248e]
2019-03-25 14:52:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 14:52:03 -==> Parameters: admin(String)
2019-03-25 14:52:03 -<==      Total: 1
2019-03-25 14:52:03 -耗时 : 20
2019-03-25 14:52:03 -返回值 : {msg=操作成功, code=0}
2019-03-25 14:52:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 14:52:03 -==> Parameters: 1(Long), admin(String), 登录(String), 21(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 14:52:03.703(Timestamp)
2019-03-25 14:52:03 -请求地址 : http://localhost:8081/index
2019-03-25 14:52:03 -HTTP METHOD : GET
2019-03-25 14:52:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 14:52:03 -参数 : [{}]
2019-03-25 14:52:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 14:52:03 -==> Parameters: 1(Long)
2019-03-25 14:52:04 -<==    Updates: 1
2019-03-25 14:52:05 -<==      Total: 46
2019-03-25 14:52:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 14:52:05 -==> Parameters: 138(Long)
2019-03-25 14:52:05 -<==      Total: 1
2019-03-25 14:52:05 -耗时 : 1652
2019-03-25 14:52:05 -返回值 : index_v1
2019-03-25 14:52:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 14:52:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1653(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 14:52:05.387(Timestamp)
2019-03-25 14:52:05 -请求地址 : http://localhost:8081/main
2019-03-25 14:52:05 -HTTP METHOD : GET
2019-03-25 14:52:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 14:52:05 -参数 : []
2019-03-25 14:52:05 -耗时 : 0
2019-03-25 14:52:05 -返回值 : main
2019-03-25 14:52:09 -<==    Updates: 1
2019-03-25 14:52:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 14:52:09 -HTTP METHOD : GET
2019-03-25 14:52:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 14:52:09 -参数 : []
2019-03-25 14:52:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 14:52:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 14:52:09 -请求地址 : http://localhost:8081/main
2019-03-25 14:52:09 -HTTP METHOD : GET
2019-03-25 14:52:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 14:52:09 -参数 : []
2019-03-25 14:52:09 -耗时 : 0
2019-03-25 14:52:09 -返回值 : main
2019-03-25 14:52:10 -<==      Total: 0
2019-03-25 14:52:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 14:52:10 -==> Parameters: 1(Long), 0(String)
2019-03-25 14:52:10 -<==      Total: 1
2019-03-25 14:52:10 -耗时 : 739
2019-03-25 14:52:10 -返回值 : com.bootdo.common.utils.PageUtils@3b5b0cfa
2019-03-25 14:52:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 14:52:16 -==> Parameters: 1(Long)
2019-03-25 14:52:16 -<==      Total: 90
2019-03-25 14:52:16 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-25 14:52:16 -HTTP METHOD : GET
2019-03-25 14:52:16 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-25 14:52:16 -参数 : []
2019-03-25 14:52:16 -耗时 : 1
2019-03-25 14:52:16 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-25 14:52:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 14:52:23 -HTTP METHOD : GET
2019-03-25 14:52:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 14:52:23 -参数 : []
2019-03-25 14:52:23 -耗时 : 1
2019-03-25 14:52:23 -返回值 : system/dept/deptTree
2019-03-25 14:52:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 14:52:23 -HTTP METHOD : GET
2019-03-25 14:52:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 14:52:23 -参数 : []
2019-03-25 14:52:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 14:52:23 -==> Parameters: 
2019-03-25 14:52:23 -<==      Total: 3
2019-03-25 14:52:23 -耗时 : 45
2019-03-25 14:52:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 14:52:24 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-25 14:52:29 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 14:52:29 -HTTP METHOD : POST
2019-03-25 14:52:29 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 14:52:29 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@784d06c8, 2019-06, 2]
2019-03-25 14:52:29 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 14:52:29 -==> Parameters: 1-0001(String)
2019-03-25 14:52:29 -<==      Total: 1
2019-03-25 14:52:29 -耗时 : 331
2019-03-25 14:52:29 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 14:52:37 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 14:52:37 -HTTP METHOD : POST
2019-03-25 14:52:37 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 14:52:37 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@62aaeb51, 2019-06, 2]
2019-03-25 14:52:37 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 14:52:37 -==> Parameters: 1-0001(String)
2019-03-25 14:52:37 -<==      Total: 1
2019-03-25 14:52:37 -耗时 : 103
2019-03-25 14:52:37 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 15:32:32 -Starting BootdoApplication on ZJZL-20180906VX with PID 232 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 15:32:32 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 15:32:32 -The following profiles are active: dev
2019-03-25 15:32:33 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5357c287: startup date [Mon Mar 25 15:32:33 CST 2019]; root of context hierarchy
2019-03-25 15:32:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 15:32:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$caeb42b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:32:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bd447157] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:32:45 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:32:46 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:32:46 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:32:46 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 15:32:46 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 15:32:46 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:32:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:32:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:32:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:32:47 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 15:32:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 15:32:48 -Starting service [Tomcat]
2019-03-25 15:32:48 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 15:32:48 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 15:32:48 -Initializing Spring embedded WebApplicationContext
2019-03-25 15:32:48 -Root WebApplicationContext: initialization completed in 15193 ms
2019-03-25 15:32:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 15:32:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 15:32:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 15:32:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 15:32:49 -Filter xssFilter was not registered (disabled)
2019-03-25 15:32:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 15:32:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 15:32:49 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 15:32:49 -Servlet dispatcherServlet mapped to [/]
2019-03-25 15:32:52 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2019-03-25 15:32:52 -Stopping service [Tomcat]
2019-03-25 15:32:52 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-25 15:32:52 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 56 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:342)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 67 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:301)
	... 97 common frames omitted
2019-03-25 15:34:36 -Starting BootdoApplication on ZJZL-20180906VX with PID 13168 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 15:34:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 15:34:36 -The following profiles are active: dev
2019-03-25 15:34:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e517165: startup date [Mon Mar 25 15:34:37 CST 2019]; root of context hierarchy
2019-03-25 15:34:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 15:34:48 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a9cf45c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:34:48 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9c28746b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:34:49 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:34:50 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:34:50 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:34:50 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 15:34:50 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 15:34:50 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:34:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:34:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:34:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 15:34:51 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 15:34:51 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 15:34:51 -Starting service [Tomcat]
2019-03-25 15:34:51 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 15:34:51 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 15:34:52 -Initializing Spring embedded WebApplicationContext
2019-03-25 15:34:52 -Root WebApplicationContext: initialization completed in 14993 ms
2019-03-25 15:34:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 15:34:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 15:34:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 15:34:52 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 15:34:52 -Filter xssFilter was not registered (disabled)
2019-03-25 15:34:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 15:34:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 15:34:52 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 15:34:52 -Servlet dispatcherServlet mapped to [/]
2019-03-25 15:34:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e517165: startup date [Mon Mar 25 15:34:37 CST 2019]; root of context hierarchy
2019-03-25 15:34:57 -Using default implementation for ThreadExecutor
2019-03-25 15:34:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-25 15:34:58 -Quartz Scheduler v.2.2.1 created.
2019-03-25 15:34:58 -RAMJobStore initialized.
2019-03-25 15:34:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-25 15:34:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-25 15:34:58 -Quartz scheduler version: 2.2.1
2019-03-25 15:34:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3b046e64
2019-03-25 15:34:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-25 15:34:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-25 15:35:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-25 15:35:02 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-25 15:35:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-25 15:35:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-25 15:35:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-25 15:35:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-25 15:35:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-25 15:35:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-25 15:35:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-25 15:35:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-25 15:35:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-25 15:35:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-25 15:35:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-25 15:35:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-25 15:35:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-25 15:35:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-25 15:35:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-25 15:35:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-25 15:35:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-25 15:35:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-25 15:35:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 15:35:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 15:35:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-25 15:35:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-25 15:35:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-25 15:35:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-25 15:35:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-25 15:35:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-25 15:35:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-25 15:35:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-25 15:35:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-25 15:35:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 15:35:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 15:35:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-25 15:35:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-25 15:35:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-25 15:35:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-25 15:35:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 15:35:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-25 15:35:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-25 15:35:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 15:35:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-25 15:35:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-25 15:35:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-25 15:35:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-25 15:35:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-25 15:35:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-25 15:35:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-25 15:35:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-25 15:35:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-25 15:35:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-25 15:35:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-25 15:35:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-25 15:35:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-25 15:35:02 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 15:35:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-25 15:35:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 15:35:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-25 15:35:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 15:35:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 15:35:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-25 15:35:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-25 15:35:02 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-25 15:35:02 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 15:35:02 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 15:35:02 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-25 15:35:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-25 15:35:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-25 15:35:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-25 15:35:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-25 15:35:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-25 15:35:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-25 15:35:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 15:35:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-25 15:35:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-25 15:35:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-25 15:35:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-25 15:35:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-25 15:35:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-25 15:35:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-25 15:35:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-25 15:35:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-25 15:35:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-25 15:35:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 15:35:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-25 15:35:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-25 15:35:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-25 15:35:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-25 15:35:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-25 15:35:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-25 15:35:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-25 15:35:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-25 15:35:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-25 15:35:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 15:35:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 15:35:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-25 15:35:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-25 15:35:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-25 15:35:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-25 15:35:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-25 15:35:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-25 15:35:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-25 15:35:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-25 15:35:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-25 15:35:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-25 15:35:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-25 15:35:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-25 15:35:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-25 15:35:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-25 15:35:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-25 15:35:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-25 15:35:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 15:35:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 15:35:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 15:35:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-25 15:35:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-25 15:35:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-25 15:35:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-25 15:35:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-25 15:35:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 15:35:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-25 15:35:02 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 15:35:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-25 15:35:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-25 15:35:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-25 15:35:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-25 15:35:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 15:35:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 15:35:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 15:35:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 15:35:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-25 15:35:02 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 15:35:02 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-25 15:35:02 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 15:35:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-25 15:35:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 15:35:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-25 15:35:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-25 15:35:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-25 15:35:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-25 15:35:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-25 15:35:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-25 15:35:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 15:35:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4e517165: startup date [Mon Mar 25 15:34:37 CST 2019]; root of context hierarchy
2019-03-25 15:35:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 15:35:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 15:35:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 15:35:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-25 15:35:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-25 15:35:09 -Registering beans for JMX exposure on startup
2019-03-25 15:35:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-25 15:35:09 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-25 15:35:09 -Starting beans in phase 2147483647
2019-03-25 15:35:09 -Context refreshed
2019-03-25 15:35:09 -Found 1 custom documentation plugin(s)
2019-03-25 15:35:09 -Scanning for api listing references
2019-03-25 15:35:10 -Generating unique operation named: removeUsingPOST_1
2019-03-25 15:35:10 -Generating unique operation named: addUsingGET_1
2019-03-25 15:35:10 -Generating unique operation named: editUsingGET_1
2019-03-25 15:35:10 -Generating unique operation named: listUsingGET_1
2019-03-25 15:35:10 -Generating unique operation named: removeUsingPOST_2
2019-03-25 15:35:10 -Generating unique operation named: removeUsingPOST_3
2019-03-25 15:35:10 -Generating unique operation named: saveUsingPOST_1
2019-03-25 15:35:10 -Generating unique operation named: updateUsingGET_1
2019-03-25 15:35:10 -Generating unique operation named: updateUsingHEAD_1
2019-03-25 15:35:10 -Generating unique operation named: updateUsingPOST_1
2019-03-25 15:35:10 -Generating unique operation named: updateUsingPUT_1
2019-03-25 15:35:10 -Generating unique operation named: updateUsingPATCH_1
2019-03-25 15:35:10 -Generating unique operation named: updateUsingDELETE_1
2019-03-25 15:35:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-25 15:35:10 -Generating unique operation named: updateUsingTRACE_1
2019-03-25 15:35:10 -Generating unique operation named: addUsingGET_2
2019-03-25 15:35:10 -Generating unique operation named: editUsingGET_2
2019-03-25 15:35:10 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-25 15:35:10 -Generating unique operation named: listUsingGET_2
2019-03-25 15:35:10 -Generating unique operation named: removeUsingPOST_4
2019-03-25 15:35:10 -Generating unique operation named: removeUsingPOST_5
2019-03-25 15:35:10 -Generating unique operation named: saveUsingPOST_2
2019-03-25 15:35:10 -Generating unique operation named: updateUsingGET_2
2019-03-25 15:35:10 -Generating unique operation named: updateUsingHEAD_2
2019-03-25 15:35:10 -Generating unique operation named: updateUsingPOST_2
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPUT_2
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPATCH_2
2019-03-25 15:35:11 -Generating unique operation named: updateUsingDELETE_2
2019-03-25 15:35:11 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-25 15:35:11 -Generating unique operation named: updateUsingTRACE_2
2019-03-25 15:35:11 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-25 15:35:11 -Generating unique operation named: addUsingGET_3
2019-03-25 15:35:11 -Generating unique operation named: editUsingGET_3
2019-03-25 15:35:11 -Generating unique operation named: listUsingGET_3
2019-03-25 15:35:11 -Generating unique operation named: removeUsingPOST_6
2019-03-25 15:35:11 -Generating unique operation named: removeUsingPOST_7
2019-03-25 15:35:11 -Generating unique operation named: saveUsingPOST_3
2019-03-25 15:35:11 -Generating unique operation named: updateUsingGET_3
2019-03-25 15:35:11 -Generating unique operation named: updateUsingHEAD_3
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPOST_3
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPUT_3
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPATCH_3
2019-03-25 15:35:11 -Generating unique operation named: updateUsingDELETE_3
2019-03-25 15:35:11 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-25 15:35:11 -Generating unique operation named: updateUsingTRACE_3
2019-03-25 15:35:11 -Generating unique operation named: addUsingGET_4
2019-03-25 15:35:11 -Generating unique operation named: editUsingGET_4
2019-03-25 15:35:11 -Generating unique operation named: listUsingGET_4
2019-03-25 15:35:11 -Generating unique operation named: removeUsingPOST_8
2019-03-25 15:35:11 -Generating unique operation named: removeUsingPOST_9
2019-03-25 15:35:11 -Generating unique operation named: saveUsingPOST_4
2019-03-25 15:35:11 -Generating unique operation named: updateUsingGET_4
2019-03-25 15:35:11 -Generating unique operation named: updateUsingHEAD_4
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPOST_4
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPUT_4
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPATCH_4
2019-03-25 15:35:11 -Generating unique operation named: updateUsingDELETE_4
2019-03-25 15:35:11 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-25 15:35:11 -Generating unique operation named: updateUsingTRACE_4
2019-03-25 15:35:11 -Generating unique operation named: ElecUsingGET_1
2019-03-25 15:35:11 -Generating unique operation named: addUsingGET_5
2019-03-25 15:35:11 -Generating unique operation named: editUsingGET_5
2019-03-25 15:35:11 -Generating unique operation named: listUsingGET_5
2019-03-25 15:35:11 -Generating unique operation named: removeUsingPOST_10
2019-03-25 15:35:11 -Generating unique operation named: removeUsingPOST_11
2019-03-25 15:35:11 -Generating unique operation named: saveUsingPOST_5
2019-03-25 15:35:11 -Generating unique operation named: updateUsingGET_5
2019-03-25 15:35:11 -Generating unique operation named: updateUsingHEAD_5
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPOST_5
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPUT_5
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPATCH_5
2019-03-25 15:35:11 -Generating unique operation named: updateUsingDELETE_5
2019-03-25 15:35:11 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-25 15:35:11 -Generating unique operation named: updateUsingTRACE_5
2019-03-25 15:35:11 -Generating unique operation named: editUsingGET_6
2019-03-25 15:35:11 -Generating unique operation named: listUsingGET_6
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPOST_6
2019-03-25 15:35:11 -Generating unique operation named: addUsingGET_6
2019-03-25 15:35:11 -Generating unique operation named: editUsingGET_7
2019-03-25 15:35:11 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-25 15:35:11 -Generating unique operation named: listUsingGET_7
2019-03-25 15:35:11 -Generating unique operation named: removeUsingPOST_12
2019-03-25 15:35:11 -Generating unique operation named: removeUsingPOST_13
2019-03-25 15:35:11 -Generating unique operation named: saveUsingPOST_6
2019-03-25 15:35:11 -Generating unique operation named: updateUsingGET_6
2019-03-25 15:35:11 -Generating unique operation named: updateUsingHEAD_6
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPOST_7
2019-03-25 15:35:11 -Generating unique operation named: updateUsingPUT_6
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPATCH_6
2019-03-25 15:35:12 -Generating unique operation named: updateUsingDELETE_6
2019-03-25 15:35:12 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-25 15:35:12 -Generating unique operation named: updateUsingTRACE_6
2019-03-25 15:35:12 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-25 15:35:12 -Generating unique operation named: addUsingGET_7
2019-03-25 15:35:12 -Generating unique operation named: editUsingGET_8
2019-03-25 15:35:12 -Generating unique operation named: listUsingGET_8
2019-03-25 15:35:12 -Generating unique operation named: removeUsingPOST_14
2019-03-25 15:35:12 -Generating unique operation named: removeUsingPOST_15
2019-03-25 15:35:12 -Generating unique operation named: saveUsingPOST_7
2019-03-25 15:35:12 -Generating unique operation named: updateUsingGET_7
2019-03-25 15:35:12 -Generating unique operation named: updateUsingHEAD_7
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPOST_8
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPUT_7
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPATCH_7
2019-03-25 15:35:12 -Generating unique operation named: updateUsingDELETE_7
2019-03-25 15:35:12 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-25 15:35:12 -Generating unique operation named: updateUsingTRACE_7
2019-03-25 15:35:12 -Generating unique operation named: addUsingGET_8
2019-03-25 15:35:12 -Generating unique operation named: editUsingGET_9
2019-03-25 15:35:12 -Generating unique operation named: listUsingGET_9
2019-03-25 15:35:12 -Generating unique operation named: removeUsingPOST_16
2019-03-25 15:35:12 -Generating unique operation named: removeUsingPOST_17
2019-03-25 15:35:12 -Generating unique operation named: saveUsingPOST_8
2019-03-25 15:35:12 -Generating unique operation named: updateUsingGET_8
2019-03-25 15:35:12 -Generating unique operation named: updateUsingHEAD_8
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPOST_9
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPUT_8
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPATCH_8
2019-03-25 15:35:12 -Generating unique operation named: updateUsingDELETE_8
2019-03-25 15:35:12 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-25 15:35:12 -Generating unique operation named: updateUsingTRACE_8
2019-03-25 15:35:12 -Generating unique operation named: addUsingGET_9
2019-03-25 15:35:12 -Generating unique operation named: editUsingGET_10
2019-03-25 15:35:12 -Generating unique operation named: infoUsingGET_1
2019-03-25 15:35:12 -Generating unique operation named: infoUsingHEAD_1
2019-03-25 15:35:12 -Generating unique operation named: infoUsingPOST_1
2019-03-25 15:35:12 -Generating unique operation named: infoUsingPUT_1
2019-03-25 15:35:12 -Generating unique operation named: infoUsingPATCH_1
2019-03-25 15:35:12 -Generating unique operation named: infoUsingDELETE_1
2019-03-25 15:35:12 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-25 15:35:12 -Generating unique operation named: infoUsingTRACE_1
2019-03-25 15:35:12 -Generating unique operation named: listUsingGET_10
2019-03-25 15:35:12 -Generating unique operation named: removeUsingPOST_18
2019-03-25 15:35:12 -Generating unique operation named: removeUsingPOST_19
2019-03-25 15:35:12 -Generating unique operation named: saveUsingPOST_9
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPOST_10
2019-03-25 15:35:12 -Generating unique operation named: listUsingGET_11
2019-03-25 15:35:12 -Generating unique operation named: removeUsingPOST_20
2019-03-25 15:35:12 -Generating unique operation named: welcomeUsingGET_1
2019-03-25 15:35:12 -Generating unique operation named: addUsingGET_10
2019-03-25 15:35:12 -Generating unique operation named: editUsingGET_11
2019-03-25 15:35:12 -Generating unique operation named: listUsingGET_12
2019-03-25 15:35:12 -Generating unique operation named: removeUsingPOST_21
2019-03-25 15:35:12 -Generating unique operation named: saveUsingPOST_10
2019-03-25 15:35:12 -Generating unique operation named: treeUsingGET_1
2019-03-25 15:35:12 -Generating unique operation named: treeUsingGET_2
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPOST_11
2019-03-25 15:35:12 -Generating unique operation named: addUsingGET_11
2019-03-25 15:35:12 -Generating unique operation named: editUsingGET_12
2019-03-25 15:35:12 -Generating unique operation named: listUsingGET_13
2019-03-25 15:35:12 -Generating unique operation named: removeUsingPOST_22
2019-03-25 15:35:12 -Generating unique operation named: removeUsingPOST_23
2019-03-25 15:35:12 -Generating unique operation named: saveUsingPOST_11
2019-03-25 15:35:12 -Generating unique operation named: updateUsingGET_9
2019-03-25 15:35:12 -Generating unique operation named: updateUsingHEAD_9
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPOST_12
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPUT_9
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPATCH_9
2019-03-25 15:35:12 -Generating unique operation named: updateUsingDELETE_9
2019-03-25 15:35:12 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-25 15:35:12 -Generating unique operation named: updateUsingTRACE_9
2019-03-25 15:35:12 -Generating unique operation named: addUsingGET_12
2019-03-25 15:35:12 -Generating unique operation named: editUsingGET_13
2019-03-25 15:35:12 -Generating unique operation named: listUsingGET_14
2019-03-25 15:35:12 -Generating unique operation named: removeUsingPOST_24
2019-03-25 15:35:12 -Generating unique operation named: removeUsingPOST_25
2019-03-25 15:35:12 -Generating unique operation named: saveUsingPOST_12
2019-03-25 15:35:12 -Generating unique operation named: updateUsingGET_10
2019-03-25 15:35:12 -Generating unique operation named: updateUsingHEAD_10
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPOST_13
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPUT_10
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPATCH_10
2019-03-25 15:35:12 -Generating unique operation named: updateUsingDELETE_10
2019-03-25 15:35:12 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-25 15:35:12 -Generating unique operation named: updateUsingTRACE_10
2019-03-25 15:35:12 -Generating unique operation named: addUsingGET_13
2019-03-25 15:35:12 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-25 15:35:12 -Generating unique operation named: editUsingGET_14
2019-03-25 15:35:12 -Generating unique operation named: listUsingGET_15
2019-03-25 15:35:12 -Generating unique operation named: saveUsingPOST_13
2019-03-25 15:35:12 -Generating unique operation named: saveUsingPOST_14
2019-03-25 15:35:12 -Generating unique operation named: updateUsingPOST_14
2019-03-25 15:35:12 -Generating unique operation named: listUsingGET_16
2019-03-25 15:35:12 -Generating unique operation named: listUsingHEAD_1
2019-03-25 15:35:12 -Generating unique operation named: listUsingPOST_1
2019-03-25 15:35:12 -Generating unique operation named: listUsingPUT_1
2019-03-25 15:35:12 -Generating unique operation named: listUsingPATCH_1
2019-03-25 15:35:12 -Generating unique operation named: listUsingDELETE_1
2019-03-25 15:35:12 -Generating unique operation named: listUsingOPTIONS_1
2019-03-25 15:35:12 -Generating unique operation named: listUsingTRACE_1
2019-03-25 15:35:12 -Generating unique operation named: addUsingGET_14
2019-03-25 15:35:12 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-25 15:35:12 -Generating unique operation named: editUsingGET_15
2019-03-25 15:35:12 -Generating unique operation named: listUsingGET_17
2019-03-25 15:35:13 -Generating unique operation named: removeUsingPOST_26
2019-03-25 15:35:13 -Generating unique operation named: saveUsingPOST_15
2019-03-25 15:35:13 -Generating unique operation named: treeUsingGET_3
2019-03-25 15:35:13 -Generating unique operation named: treeViewUsingGET_1
2019-03-25 15:35:13 -Generating unique operation named: updateUsingPOST_15
2019-03-25 15:35:13 -Generating unique operation named: addUsingGET_15
2019-03-25 15:35:13 -Generating unique operation named: editUsingGET_16
2019-03-25 15:35:13 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-25 15:35:13 -Generating unique operation named: listUsingGET_18
2019-03-25 15:35:13 -Generating unique operation named: removeUsingPOST_27
2019-03-25 15:35:13 -Generating unique operation named: removeUsingPOST_28
2019-03-25 15:35:13 -Generating unique operation named: saveUsingPOST_16
2019-03-25 15:35:13 -Generating unique operation named: updateUsingGET_11
2019-03-25 15:35:13 -Generating unique operation named: updateUsingHEAD_11
2019-03-25 15:35:13 -Generating unique operation named: updateUsingPOST_16
2019-03-25 15:35:13 -Generating unique operation named: updateUsingPUT_11
2019-03-25 15:35:13 -Generating unique operation named: updateUsingPATCH_11
2019-03-25 15:35:13 -Generating unique operation named: updateUsingDELETE_11
2019-03-25 15:35:13 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-25 15:35:13 -Generating unique operation named: updateUsingTRACE_11
2019-03-25 15:35:13 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-25 15:35:13 -Generating unique operation named: addUsingGET_16
2019-03-25 15:35:13 -Generating unique operation named: editUsingGET_17
2019-03-25 15:35:13 -Generating unique operation named: listUsingGET_19
2019-03-25 15:35:13 -Generating unique operation named: removeUsingPOST_29
2019-03-25 15:35:13 -Generating unique operation named: removeUsingPOST_30
2019-03-25 15:35:13 -Generating unique operation named: saveUsingPOST_17
2019-03-25 15:35:13 -Generating unique operation named: updateUsingGET_12
2019-03-25 15:35:13 -Generating unique operation named: updateUsingHEAD_12
2019-03-25 15:35:13 -Generating unique operation named: updateUsingPOST_17
2019-03-25 15:35:13 -Generating unique operation named: updateUsingPUT_12
2019-03-25 15:35:13 -Generating unique operation named: updateUsingPATCH_12
2019-03-25 15:35:13 -Generating unique operation named: updateUsingDELETE_12
2019-03-25 15:35:13 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-25 15:35:13 -Generating unique operation named: updateUsingTRACE_12
2019-03-25 15:35:13 -Generating unique operation named: addUsingGET_17
2019-03-25 15:35:13 -Generating unique operation named: editUsingGET_18
2019-03-25 15:35:13 -Generating unique operation named: listUsingGET_20
2019-03-25 15:35:13 -Generating unique operation named: removeUsingPOST_31
2019-03-25 15:35:13 -Generating unique operation named: removeUsingPOST_32
2019-03-25 15:35:13 -Generating unique operation named: saveUsingPOST_18
2019-03-25 15:35:13 -Generating unique operation named: updateUsingGET_13
2019-03-25 15:35:13 -Generating unique operation named: updateUsingHEAD_13
2019-03-25 15:35:13 -Generating unique operation named: updateUsingPOST_18
2019-03-25 15:35:13 -Generating unique operation named: updateUsingPUT_13
2019-03-25 15:35:13 -Generating unique operation named: updateUsingPATCH_13
2019-03-25 15:35:13 -Generating unique operation named: updateUsingDELETE_13
2019-03-25 15:35:13 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-25 15:35:13 -Generating unique operation named: updateUsingTRACE_13
2019-03-25 15:35:13 -Starting Quartz Scheduler now
2019-03-25 15:35:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-25 15:35:13 -Starting...
2019-03-25 15:35:13 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-25 15:35:13 -Started.
2019-03-25 15:35:13 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-25 15:35:13 -Using a shared selector for servlet write/read
2019-03-25 15:35:13 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-25 15:35:13 -Started BootdoApplication in 39.404 seconds (JVM running for 41.001)
2019-03-25 15:35:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-25 15:35:14 -==> Parameters: 
2019-03-25 15:35:14 -<==      Total: 1
2019-03-25 15:35:53 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-25 15:35:53 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-25 15:35:54 -FrameworkServlet 'dispatcherServlet': initialization completed in 194 ms
2019-03-25 15:35:54 -Enabling session validation scheduler...
2019-03-25 15:35:54 -请求地址 : http://localhost:8081/
2019-03-25 15:35:54 -HTTP METHOD : GET
2019-03-25 15:35:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-25 15:35:54 -参数 : [{}]
2019-03-25 15:35:54 -耗时 : 4
2019-03-25 15:35:54 -返回值 : redirect:/index
2019-03-25 15:35:54 -请求地址 : http://localhost:8081/login;JSESSIONID=cd47104a-3a5a-45a9-9da0-0d93ae1af9be
2019-03-25 15:35:54 -HTTP METHOD : GET
2019-03-25 15:35:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 15:35:54 -参数 : [{}]
2019-03-25 15:35:54 -耗时 : 2
2019-03-25 15:35:54 -返回值 : login
2019-03-25 15:36:00 -请求地址 : http://localhost:8081/getVerify
2019-03-25 15:36:00 -HTTP METHOD : GET
2019-03-25 15:36:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 15:36:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@37c1d611, org.apache.shiro.web.servlet.ShiroHttpServletResponse@951caef]
2019-03-25 15:36:03 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-25 15:36:06 -0171
2019-03-25 15:36:07 -耗时 : 6300
2019-03-25 15:36:07 -返回值 : null
2019-03-25 15:36:15 -请求地址 : http://localhost:8081/login
2019-03-25 15:36:15 -HTTP METHOD : POST
2019-03-25 15:36:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 15:36:15 -参数 : [admin, 111111, 0171, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6a18a6fc]
2019-03-25 15:36:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 15:36:16 -==> Parameters: admin(String)
2019-03-25 15:36:16 -<==      Total: 1
2019-03-25 15:36:16 -耗时 : 333
2019-03-25 15:36:16 -返回值 : {msg=操作成功, code=0}
2019-03-25 15:36:16 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-25 15:36:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 15:36:16 -==> Parameters: 1(Long), admin(String), 登录(String), 333(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 15:36:16.717(Timestamp)
2019-03-25 15:36:17 -<==    Updates: 1
2019-03-25 15:36:17 -请求地址 : http://localhost:8081/index
2019-03-25 15:36:17 -HTTP METHOD : GET
2019-03-25 15:36:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 15:36:17 -参数 : [{}]
2019-03-25 15:36:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 15:36:17 -==> Parameters: 1(Long)
2019-03-25 15:36:18 -<==      Total: 46
2019-03-25 15:36:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 15:36:18 -==> Parameters: 138(Long)
2019-03-25 15:36:18 -<==      Total: 1
2019-03-25 15:36:18 -耗时 : 1044
2019-03-25 15:36:18 -返回值 : index_v1
2019-03-25 15:36:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 15:36:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1044(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 15:36:18.434(Timestamp)
2019-03-25 15:36:18 -<==    Updates: 1
2019-03-25 15:36:19 -请求地址 : http://localhost:8081/main
2019-03-25 15:36:19 -HTTP METHOD : GET
2019-03-25 15:36:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 15:36:19 -参数 : []
2019-03-25 15:36:19 -耗时 : 0
2019-03-25 15:36:19 -返回值 : main
2019-03-25 15:36:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 15:36:21 -HTTP METHOD : GET
2019-03-25 15:36:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 15:36:21 -参数 : []
2019-03-25 15:36:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 15:36:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 15:36:21 -请求地址 : http://localhost:8081/main
2019-03-25 15:36:21 -HTTP METHOD : GET
2019-03-25 15:36:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 15:36:21 -参数 : []
2019-03-25 15:36:21 -耗时 : 1
2019-03-25 15:36:21 -返回值 : main
2019-03-25 15:36:23 -<==      Total: 0
2019-03-25 15:36:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 15:36:23 -==> Parameters: 1(Long), 0(String)
2019-03-25 15:36:23 -<==      Total: 1
2019-03-25 15:36:23 -耗时 : 1366
2019-03-25 15:36:23 -返回值 : com.bootdo.common.utils.PageUtils@57387c68
2019-03-25 15:36:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 15:36:45 -==> Parameters: 1(Long)
2019-03-25 15:36:45 -<==      Total: 90
2019-03-25 15:36:45 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-25 15:36:45 -HTTP METHOD : GET
2019-03-25 15:36:45 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-25 15:36:45 -参数 : []
2019-03-25 15:36:45 -耗时 : 1
2019-03-25 15:36:45 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-25 15:36:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 15:36:57 -HTTP METHOD : GET
2019-03-25 15:36:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 15:36:57 -参数 : []
2019-03-25 15:36:57 -耗时 : 1
2019-03-25 15:36:57 -返回值 : system/dept/deptTree
2019-03-25 15:36:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 15:36:58 -HTTP METHOD : GET
2019-03-25 15:36:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 15:36:58 -参数 : []
2019-03-25 15:36:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 15:36:58 -==> Parameters: 
2019-03-25 15:36:58 -<==      Total: 3
2019-03-25 15:36:58 -耗时 : 31
2019-03-25 15:36:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 15:37:01 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-03-25 15:37:01 -HTTP METHOD : POST
2019-03-25 15:37:01 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-03-25 15:37:01 -参数 : [com.bootdo.heat.domain.HeatDO@416b4ab1]
2019-03-25 15:37:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-25 15:37:01 -==> Parameters: 2019-05(String), 2(String)
2019-03-25 15:37:01 -<==      Total: 0
2019-03-25 15:37:01 -耗时 : 75
2019-03-25 15:37:01 -返回值 : 
2019-03-25 15:38:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 15:38:20 -HTTP METHOD : GET
2019-03-25 15:38:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 15:38:20 -参数 : []
2019-03-25 15:38:20 -耗时 : 1
2019-03-25 15:38:20 -返回值 : system/dept/deptTree
2019-03-25 15:38:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 15:38:20 -HTTP METHOD : GET
2019-03-25 15:38:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 15:38:20 -参数 : []
2019-03-25 15:38:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 15:38:20 -==> Parameters: 
2019-03-25 15:38:20 -<==      Total: 3
2019-03-25 15:38:20 -耗时 : 9
2019-03-25 15:38:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 15:38:23 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-03-25 15:38:23 -HTTP METHOD : POST
2019-03-25 15:38:23 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-03-25 15:38:23 -参数 : [com.bootdo.heat.domain.HeatDO@75d1096d]
2019-03-25 15:38:23 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-25 15:38:23 -==> Parameters: 2019-05(String), 3(String)
2019-03-25 15:38:23 -<==      Total: 6
2019-03-25 15:38:23 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-25 15:38:23 -==> Parameters: 2019-06(String), 3(String)
2019-03-25 15:38:23 -<==      Total: 0
2019-03-25 15:38:23 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-25 15:38:23 -==> Parameters: 2019-06(String), 3(String)
2019-03-25 15:38:23 -<==      Total: 0
2019-03-25 15:38:23 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 15:38:23 -==> Parameters: 1-003(String), 阿萨德(String), B(String), 3(String), null, 1(String), null, 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -2.00(BigDecimal), 2019-06(String), 1(Long), 2019-03-12 16:14:16.0(Timestamp), 1(Long), null
2019-03-25 15:38:23 -<==    Updates: 1
2019-03-25 15:38:23 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 15:38:23 -==> Parameters: 1-004(String), 话说得(String), B(String), 3(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -2.00(BigDecimal), 2019-06(String), 1(Long), 2019-03-12 16:14:53.0(Timestamp), 1(Long), null
2019-03-25 15:38:23 -<==    Updates: 1
2019-03-25 15:38:23 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 15:38:23 -==> Parameters: 1-005(String), 阿萨德(String), A(String), 3(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -2.00(BigDecimal), 2019-06(String), 1(Long), 2019-03-12 16:15:31.0(Timestamp), 1(Long), null
2019-03-25 15:38:23 -<==    Updates: 1
2019-03-25 15:38:23 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 15:38:23 -==> Parameters: 1-006(String), 是的法定(String), A(String), 3(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -2.00(BigDecimal), 2019-06(String), 1(Long), 2019-03-12 16:16:26.0(Timestamp), 1(Long), null
2019-03-25 15:38:23 -<==    Updates: 1
2019-03-25 15:38:23 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 15:38:23 -==> Parameters: 1-0007(String), 爱仕达(String), B(String), 3(String), null, 0(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -2.00(BigDecimal), 2019-06(String), 1(Long), 2019-03-12 16:17:11.0(Timestamp), 1(Long), null
2019-03-25 15:38:23 -<==    Updates: 1
2019-03-25 15:38:23 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 15:38:23 -==> Parameters: 1-0009(String), 阿斯达(String), A(String), 3(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -2.00(BigDecimal), 2019-06(String), 1(Long), 2019-03-12 16:18:17.0(Timestamp), 1(Long), null
2019-03-25 15:38:23 -<==    Updates: 1
2019-03-25 15:38:23 -耗时 : 454
2019-03-25 15:38:23 -返回值 : success
2019-03-25 15:39:11 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 15:39:11 -HTTP METHOD : GET
2019-03-25 15:39:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 15:39:11 -参数 : []
2019-03-25 15:39:11 -耗时 : 1
2019-03-25 15:39:11 -返回值 : system/dept/deptTree
2019-03-25 15:39:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 15:39:12 -HTTP METHOD : GET
2019-03-25 15:39:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 15:39:12 -参数 : []
2019-03-25 15:39:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 15:39:12 -==> Parameters: 
2019-03-25 15:39:12 -<==      Total: 3
2019-03-25 15:39:12 -耗时 : 5
2019-03-25 15:39:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 15:39:23 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 15:39:23 -HTTP METHOD : POST
2019-03-25 15:39:23 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 15:39:23 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3c301386, 2019-06, 2]
2019-03-25 15:39:27 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 15:39:27 -==> Parameters: 1-0001(String)
2019-03-25 15:39:27 -<==      Total: 1
2019-03-25 15:39:27 -耗时 : 3863
2019-03-25 15:39:27 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 15:40:00 -请求地址 : http://localhost:8081/login;JSESSIONID=19450608-c97d-4305-b609-a57ceeae290b
2019-03-25 15:40:00 -HTTP METHOD : GET
2019-03-25 15:40:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 15:40:00 -参数 : [{}]
2019-03-25 15:40:00 -耗时 : 1
2019-03-25 15:40:00 -返回值 : login
2019-03-25 15:40:00 -请求地址 : http://localhost:8081/getVerify
2019-03-25 15:40:00 -HTTP METHOD : GET
2019-03-25 15:40:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 15:40:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@50103f52, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5eeaa0fd]
2019-03-25 15:40:00 -7373
2019-03-25 15:40:00 -耗时 : 29
2019-03-25 15:40:00 -返回值 : null
2019-03-25 15:40:01 -请求地址 : http://localhost:8081/login
2019-03-25 15:40:01 -HTTP METHOD : GET
2019-03-25 15:40:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 15:40:01 -参数 : [{}]
2019-03-25 15:40:01 -耗时 : 1
2019-03-25 15:40:01 -返回值 : login
2019-03-25 15:40:05 -请求地址 : http://localhost:8081/login
2019-03-25 15:40:05 -HTTP METHOD : POST
2019-03-25 15:40:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 15:40:05 -参数 : [admin, 111111, 7373, org.apache.shiro.web.servlet.ShiroHttpServletRequest@77d4f7f4]
2019-03-25 15:40:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 15:40:05 -==> Parameters: admin(String)
2019-03-25 15:40:05 -<==      Total: 1
2019-03-25 15:40:05 -耗时 : 16
2019-03-25 15:40:05 -返回值 : {msg=操作成功, code=0}
2019-03-25 15:40:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 15:40:05 -==> Parameters: 1(Long), admin(String), 登录(String), 17(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 15:40:05.652(Timestamp)
2019-03-25 15:40:05 -请求地址 : http://localhost:8081/index
2019-03-25 15:40:05 -HTTP METHOD : GET
2019-03-25 15:40:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 15:40:05 -参数 : [{}]
2019-03-25 15:40:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 15:40:05 -==> Parameters: 1(Long)
2019-03-25 15:40:05 -<==      Total: 46
2019-03-25 15:40:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 15:40:05 -==> Parameters: 138(Long)
2019-03-25 15:40:05 -<==      Total: 1
2019-03-25 15:40:05 -耗时 : 46
2019-03-25 15:40:05 -返回值 : index_v1
2019-03-25 15:40:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 15:40:05 -<==    Updates: 1
2019-03-25 15:40:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 48(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 15:40:05.728(Timestamp)
2019-03-25 15:40:05 -请求地址 : http://localhost:8081/main
2019-03-25 15:40:05 -HTTP METHOD : GET
2019-03-25 15:40:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 15:40:05 -参数 : []
2019-03-25 15:40:05 -耗时 : 1
2019-03-25 15:40:05 -返回值 : main
2019-03-25 15:40:06 -<==    Updates: 1
2019-03-25 15:40:06 -请求地址 : http://localhost:8081/main
2019-03-25 15:40:06 -HTTP METHOD : GET
2019-03-25 15:40:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 15:40:06 -参数 : []
2019-03-25 15:40:06 -耗时 : 1
2019-03-25 15:40:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 15:40:06 -返回值 : main
2019-03-25 15:40:06 -HTTP METHOD : GET
2019-03-25 15:40:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 15:40:06 -参数 : []
2019-03-25 15:40:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 15:40:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 15:40:06 -<==      Total: 0
2019-03-25 15:40:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 15:40:06 -==> Parameters: 1(Long), 0(String)
2019-03-25 15:40:06 -<==      Total: 1
2019-03-25 15:40:06 -耗时 : 18
2019-03-25 15:40:06 -返回值 : com.bootdo.common.utils.PageUtils@4838efc4
2019-03-25 15:40:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 15:40:32 -==> Parameters: 1(Long)
2019-03-25 15:40:32 -<==      Total: 90
2019-03-25 15:40:32 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-25 15:40:32 -HTTP METHOD : GET
2019-03-25 15:40:32 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-25 15:40:32 -参数 : []
2019-03-25 15:40:32 -耗时 : 1
2019-03-25 15:40:32 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-25 15:40:34 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-25 15:40:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 15:40:47 -HTTP METHOD : GET
2019-03-25 15:40:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 15:40:47 -参数 : []
2019-03-25 15:40:47 -耗时 : 1
2019-03-25 15:40:47 -返回值 : system/dept/deptTree
2019-03-25 15:40:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 15:40:47 -HTTP METHOD : GET
2019-03-25 15:40:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 15:40:47 -参数 : []
2019-03-25 15:40:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 15:40:47 -==> Parameters: 
2019-03-25 15:40:47 -<==      Total: 3
2019-03-25 15:40:47 -耗时 : 10
2019-03-25 15:40:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 15:40:52 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 15:40:52 -HTTP METHOD : POST
2019-03-25 15:40:52 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 15:40:52 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4c2a0389, 2019-03, 3]
2019-03-25 15:40:52 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 15:40:52 -==> Parameters: 1-0001(String)
2019-03-25 15:40:52 -<==      Total: 1
2019-03-25 15:40:52 -耗时 : 94
2019-03-25 15:40:52 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 15:40:56 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-25 15:40:56 -HTTP METHOD : POST
2019-03-25 15:40:56 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-25 15:40:56 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@30e8b398, 2019-03, 3]
2019-03-25 15:40:56 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-25 15:40:56 -==> Parameters: 1-0001(String)
2019-03-25 15:40:56 -<==      Total: 1
2019-03-25 15:40:56 -耗时 : 101
2019-03-25 15:40:56 -返回值 : 第4行，用户暖费为空，请认真编写
2019-03-25 16:02:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 16:02:21 -==> Parameters: 1(Long)
2019-03-25 16:02:21 -<==      Total: 90
2019-03-25 16:02:21 -请求地址 : http://localhost:8081/heat/heat
2019-03-25 16:02:21 -HTTP METHOD : GET
2019-03-25 16:02:21 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-25 16:02:21 -参数 : []
2019-03-25 16:02:21 -耗时 : 0
2019-03-25 16:02:21 -返回值 : heat/heat/heat
2019-03-25 16:02:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 16:02:21 -HTTP METHOD : GET
2019-03-25 16:02:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:02:21 -参数 : [userType]
2019-03-25 16:02:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:02:21 -==> Parameters: userType(String)
2019-03-25 16:02:21 -<==      Total: 2
2019-03-25 16:02:21 -耗时 : 41
2019-03-25 16:02:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:02:21 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-25 16:02:21 -HTTP METHOD : GET
2019-03-25 16:02:21 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-25 16:02:21 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-25 16:02:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-25 16:02:22 -==> Parameters: 0(Integer), 3(Integer)
2019-03-25 16:02:22 -<==      Total: 3
2019-03-25 16:02:22 -==>  Preparing: select count(*) from heat 
2019-03-25 16:02:22 -==> Parameters: 
2019-03-25 16:02:22 -<==      Total: 1
2019-03-25 16:02:22 -耗时 : 140
2019-03-25 16:02:22 -返回值 : com.bootdo.common.utils.PageUtils@3a7f58ca
2019-03-25 16:02:23 -请求地址 : http://localhost:8081/heat/heatInto
2019-03-25 16:02:23 -HTTP METHOD : GET
2019-03-25 16:02:23 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-03-25 16:02:23 -参数 : []
2019-03-25 16:02:23 -耗时 : 0
2019-03-25 16:02:23 -返回值 : heat/heatInto/heatInto
2019-03-25 16:02:25 -请求地址 : http://localhost:8081/heat/heatPrice
2019-03-25 16:02:25 -HTTP METHOD : GET
2019-03-25 16:02:25 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-03-25 16:02:25 -参数 : []
2019-03-25 16:02:25 -耗时 : 1
2019-03-25 16:02:25 -返回值 : heat/heatPrice/heatPrice
2019-03-25 16:02:25 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-03-25 16:02:25 -HTTP METHOD : GET
2019-03-25 16:02:25 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-03-25 16:02:25 -参数 : [{limit=10, offset=0}]
2019-03-25 16:02:25 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`business_heat`,`civil_heat`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id desc limit ?, ? 
2019-03-25 16:02:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-25 16:02:25 -<==      Total: 2
2019-03-25 16:02:25 -==>  Preparing: select count(*) from heat_price 
2019-03-25 16:02:25 -==> Parameters: 
2019-03-25 16:02:25 -<==      Total: 1
2019-03-25 16:02:25 -耗时 : 38
2019-03-25 16:02:25 -返回值 : com.bootdo.common.utils.PageUtils@43d9624d
2019-03-25 16:03:13 -请求地址 : http://localhost:8081/heat/heat/edit/2
2019-03-25 16:03:13 -HTTP METHOD : GET
2019-03-25 16:03:13 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.edit
2019-03-25 16:03:13 -参数 : [2, {}]
2019-03-25 16:03:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat where id = ? 
2019-03-25 16:03:13 -==> Parameters: 2(Integer)
2019-03-25 16:03:13 -<==      Total: 1
2019-03-25 16:03:13 -耗时 : 7
2019-03-25 16:03:13 -返回值 : heat/heat/edit
2019-03-25 16:03:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 16:03:13 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-03-25 16:03:13 -HTTP METHOD : GET
2019-03-25 16:03:13 -HTTP METHOD : GET
2019-03-25 16:03:13 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-25 16:03:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:03:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:03:13 -HTTP METHOD : GET
2019-03-25 16:03:13 -参数 : [userType]
2019-03-25 16:03:13 -参数 : [heatType]
2019-03-25 16:03:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:03:13 -参数 : [userState]
2019-03-25 16:03:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:03:13 -==> Parameters: userType(String)
2019-03-25 16:03:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:03:13 -==> Parameters: userState(String)
2019-03-25 16:03:13 -<==      Total: 2
2019-03-25 16:03:13 -耗时 : 9
2019-03-25 16:03:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:03:13 -<==      Total: 2
2019-03-25 16:03:13 -耗时 : 11
2019-03-25 16:03:13 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:03:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:03:13 -==> Parameters: heatType(String)
2019-03-25 16:03:13 -<==      Total: 5
2019-03-25 16:03:13 -耗时 : 16
2019-03-25 16:03:13 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:03:23 -请求地址 : http://localhost:8081/heat/heat/update
2019-03-25 16:03:23 -HTTP METHOD : POST
2019-03-25 16:03:23 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.update
2019-03-25 16:03:23 -参数 : [com.bootdo.heat.domain.HeatDO@6444b26d]
2019-03-25 16:03:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 16:03:23 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.update(Unknown Source)
	at com.bootdo.heat.service.impl.HeatServiceImpl.update(HeatServiceImpl.java:39)
	at com.bootdo.heat.controller.HeatController.update(HeatController.java:204)
	at com.bootdo.heat.controller.HeatController$$FastClassBySpringCGLIB$$8914ee44.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.heat.controller.HeatController$$EnhancerBySpringCGLIB$$dcf136ae.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-03-25 16:03:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/heat/heat/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-03-25 16:03:23.374(Timestamp)
2019-03-25 16:03:23 -<==    Updates: 1
2019-03-25 16:06:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]
2019-03-25 16:25:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 16:25:04 -==> Parameters: 1(Long)
2019-03-25 16:25:04 -<==      Total: 90
2019-03-25 16:25:04 -请求地址 : http://localhost:8081/heat/heat/edit/1
2019-03-25 16:25:04 -HTTP METHOD : GET
2019-03-25 16:25:04 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.edit
2019-03-25 16:25:04 -参数 : [1, {}]
2019-03-25 16:25:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat where id = ? 
2019-03-25 16:25:04 -==> Parameters: 1(Integer)
2019-03-25 16:25:04 -<==      Total: 1
2019-03-25 16:25:04 -耗时 : 13
2019-03-25 16:25:04 -返回值 : heat/heat/edit
2019-03-25 16:25:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 16:25:05 -HTTP METHOD : GET
2019-03-25 16:25:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:25:05 -参数 : [userType]
2019-03-25 16:25:05 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-25 16:25:05 -HTTP METHOD : GET
2019-03-25 16:25:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:25:05 -参数 : [userState]
2019-03-25 16:25:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:25:05 -==> Parameters: userType(String)
2019-03-25 16:25:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:25:05 -==> Parameters: userState(String)
2019-03-25 16:25:05 -<==      Total: 2
2019-03-25 16:25:05 -<==      Total: 2
2019-03-25 16:25:05 -耗时 : 6
2019-03-25 16:25:05 -耗时 : 8
2019-03-25 16:25:05 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:25:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:25:05 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-03-25 16:25:05 -HTTP METHOD : GET
2019-03-25 16:25:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:25:05 -参数 : [heatType]
2019-03-25 16:25:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:25:05 -==> Parameters: heatType(String)
2019-03-25 16:25:05 -<==      Total: 5
2019-03-25 16:25:05 -耗时 : 11
2019-03-25 16:25:05 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:35:54 -Validating all active sessions...
2019-03-25 16:35:54 -Finished session validation.  [1] sessions were stopped.
2019-03-25 16:36:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 863]
2019-03-25 16:40:30 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 16:40:30 -==> Parameters: 1(Long)
2019-03-25 16:40:30 -<==      Total: 90
2019-03-25 16:40:30 -请求地址 : http://localhost:8081/heat/heat/edit/1
2019-03-25 16:40:30 -HTTP METHOD : GET
2019-03-25 16:40:30 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.edit
2019-03-25 16:40:30 -参数 : [1, {}]
2019-03-25 16:40:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat where id = ? 
2019-03-25 16:40:30 -==> Parameters: 1(Integer)
2019-03-25 16:40:30 -<==      Total: 1
2019-03-25 16:40:30 -耗时 : 74
2019-03-25 16:40:30 -返回值 : heat/heat/edit
2019-03-25 16:40:32 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-25 16:40:32 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-03-25 16:40:32 -HTTP METHOD : GET
2019-03-25 16:40:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:40:32 -HTTP METHOD : GET
2019-03-25 16:40:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:40:32 -参数 : [userState]
2019-03-25 16:40:32 -参数 : [heatType]
2019-03-25 16:40:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:40:32 -==> Parameters: heatType(String)
2019-03-25 16:40:32 -<==      Total: 5
2019-03-25 16:40:32 -耗时 : 3
2019-03-25 16:40:32 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:40:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 16:40:32 -HTTP METHOD : GET
2019-03-25 16:40:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:40:32 -参数 : [userType]
2019-03-25 16:40:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:40:32 -==> Parameters: userType(String)
2019-03-25 16:40:32 -<==      Total: 2
2019-03-25 16:40:32 -耗时 : 16
2019-03-25 16:40:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:40:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:40:32 -==> Parameters: userState(String)
2019-03-25 16:40:32 -<==      Total: 2
2019-03-25 16:40:32 -耗时 : 163
2019-03-25 16:40:32 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:40:39 -请求地址 : http://localhost:8081/heat/heat/edit/1
2019-03-25 16:40:40 -HTTP METHOD : GET
2019-03-25 16:40:40 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.edit
2019-03-25 16:40:40 -参数 : [1, {}]
2019-03-25 16:40:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat where id = ? 
2019-03-25 16:40:40 -==> Parameters: 1(Integer)
2019-03-25 16:40:40 -<==      Total: 1
2019-03-25 16:40:40 -耗时 : 218
2019-03-25 16:40:40 -返回值 : heat/heat/edit
2019-03-25 16:40:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 16:40:40 -HTTP METHOD : GET
2019-03-25 16:40:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:40:40 -参数 : [userType]
2019-03-25 16:40:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:40:40 -==> Parameters: userType(String)
2019-03-25 16:40:40 -<==      Total: 2
2019-03-25 16:40:40 -耗时 : 6
2019-03-25 16:40:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:40:40 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-03-25 16:40:40 -HTTP METHOD : GET
2019-03-25 16:40:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:40:40 -参数 : [heatType]
2019-03-25 16:40:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:40:40 -==> Parameters: heatType(String)
2019-03-25 16:40:40 -<==      Total: 5
2019-03-25 16:40:40 -耗时 : 7
2019-03-25 16:40:40 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:40:40 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-25 16:40:40 -HTTP METHOD : GET
2019-03-25 16:40:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:40:40 -参数 : [userState]
2019-03-25 16:40:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:40:40 -==> Parameters: userState(String)
2019-03-25 16:40:40 -<==      Total: 2
2019-03-25 16:40:40 -耗时 : 8
2019-03-25 16:40:40 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:48:20 -请求地址 : http://localhost:8081/elec/elec
2019-03-25 16:48:20 -HTTP METHOD : GET
2019-03-25 16:48:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-25 16:48:20 -参数 : []
2019-03-25 16:48:20 -耗时 : 18
2019-03-25 16:48:20 -返回值 : elec/elec/elec
2019-03-25 16:48:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 16:48:21 -HTTP METHOD : GET
2019-03-25 16:48:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:48:21 -参数 : [userType]
2019-03-25 16:48:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:48:21 -==> Parameters: userType(String)
2019-03-25 16:48:21 -<==      Total: 2
2019-03-25 16:48:21 -耗时 : 6
2019-03-25 16:48:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:48:22 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-25 16:48:22 -HTTP METHOD : GET
2019-03-25 16:48:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-25 16:48:22 -参数 : []
2019-03-25 16:48:22 -耗时 : 1
2019-03-25 16:48:22 -返回值 : elec/elecInto/elecInto
2019-03-25 16:48:24 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 16:48:24 -HTTP METHOD : GET
2019-03-25 16:48:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 16:48:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@57952ed4]
2019-03-25 16:48:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-25 16:48:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-25 16:48:39 -<==      Total: 10
2019-03-25 16:48:40 -==>  Preparing: select count(*) from elec 
2019-03-25 16:48:40 -==> Parameters: 
2019-03-25 16:48:40 -<==      Total: 1
2019-03-25 16:48:40 -耗时 : 15891
2019-03-25 16:48:40 -返回值 : com.bootdo.common.utils.PageUtils@6ca8baa4
2019-03-25 16:48:49 -请求地址 : http://localhost:8081/elec/elec/edit/7
2019-03-25 16:48:49 -HTTP METHOD : GET
2019-03-25 16:48:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-25 16:48:49 -参数 : [7, {}]
2019-03-25 16:48:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-25 16:48:49 -==> Parameters: 7(Long)
2019-03-25 16:48:49 -<==      Total: 1
2019-03-25 16:48:49 -耗时 : 42
2019-03-25 16:48:49 -返回值 : elec/elec/edit
2019-03-25 16:48:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 16:48:50 -HTTP METHOD : GET
2019-03-25 16:48:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:48:50 -参数 : [userType]
2019-03-25 16:48:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:48:50 -==> Parameters: userType(String)
2019-03-25 16:48:50 -<==      Total: 2
2019-03-25 16:48:50 -耗时 : 4
2019-03-25 16:48:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:48:50 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-25 16:48:50 -HTTP METHOD : GET
2019-03-25 16:48:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:48:50 -参数 : [elecType]
2019-03-25 16:48:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:48:50 -==> Parameters: elecType(String)
2019-03-25 16:48:50 -<==      Total: 2
2019-03-25 16:48:50 -耗时 : 4
2019-03-25 16:48:50 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-25 16:48:50 -HTTP METHOD : GET
2019-03-25 16:48:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 16:48:50 -参数 : [userState]
2019-03-25 16:48:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 16:48:50 -==> Parameters: userState(String)
2019-03-25 16:48:50 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:48:50 -<==      Total: 2
2019-03-25 16:48:50 -耗时 : 17
2019-03-25 16:48:50 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 16:49:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 16:49:08 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,5]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,5"](String), null, 2019-03-25 16:49:08.245(Timestamp)
2019-03-25 16:49:08 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,5]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,5"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,5]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,5"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-25 16:49:08 -<==    Updates: 1
2019-03-25 17:06:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1296]
2019-03-25 18:11:20 -Starting BootdoApplication on ZJZL-20180906VX with PID 5144 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 18:11:20 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 18:11:20 -The following profiles are active: dev
2019-03-25 18:11:21 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60dce7ea: startup date [Mon Mar 25 18:11:21 CST 2019]; root of context hierarchy
2019-03-25 18:11:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 18:11:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4d1c63b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:11:31 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3f759259] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:11:32 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:11:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:11:32 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:11:32 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 18:11:32 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 18:11:32 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:11:32 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:11:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:11:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:11:34 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 18:11:34 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 18:11:34 -Starting service [Tomcat]
2019-03-25 18:11:34 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 18:11:34 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 18:11:35 -Initializing Spring embedded WebApplicationContext
2019-03-25 18:11:35 -Root WebApplicationContext: initialization completed in 14301 ms
2019-03-25 18:11:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 18:11:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 18:11:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 18:11:36 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 18:11:36 -Filter xssFilter was not registered (disabled)
2019-03-25 18:11:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 18:11:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 18:11:36 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 18:11:36 -Servlet dispatcherServlet mapped to [/]
2019-03-25 18:11:38 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2019-03-25 18:11:38 -Stopping service [Tomcat]
2019-03-25 18:11:38 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-25 18:11:38 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 56 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:342)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 67 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:301)
	... 97 common frames omitted
2019-03-25 18:13:46 -Starting BootdoApplication on ZJZL-20180906VX with PID 10448 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 18:13:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 18:13:46 -The following profiles are active: dev
2019-03-25 18:13:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a5bd950: startup date [Mon Mar 25 18:13:46 CST 2019]; root of context hierarchy
2019-03-25 18:13:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 18:13:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3b00e96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:13:52 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a6093d3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:13:53 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:13:54 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:13:54 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:13:54 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 18:13:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 18:13:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:13:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:13:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:13:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:13:55 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 18:13:55 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 18:13:55 -Starting service [Tomcat]
2019-03-25 18:13:55 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 18:13:55 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 18:13:55 -Initializing Spring embedded WebApplicationContext
2019-03-25 18:13:55 -Root WebApplicationContext: initialization completed in 8875 ms
2019-03-25 18:13:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 18:13:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 18:13:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 18:13:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 18:13:56 -Filter xssFilter was not registered (disabled)
2019-03-25 18:13:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 18:13:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 18:13:56 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 18:13:56 -Servlet dispatcherServlet mapped to [/]
2019-03-25 18:13:59 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a5bd950: startup date [Mon Mar 25 18:13:46 CST 2019]; root of context hierarchy
2019-03-25 18:14:00 -Using default implementation for ThreadExecutor
2019-03-25 18:14:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-25 18:14:00 -Quartz Scheduler v.2.2.1 created.
2019-03-25 18:14:00 -RAMJobStore initialized.
2019-03-25 18:14:00 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-25 18:14:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-25 18:14:00 -Quartz scheduler version: 2.2.1
2019-03-25 18:14:00 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@49f6c25e
2019-03-25 18:14:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-25 18:14:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-25 18:14:03 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-25 18:14:03 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-25 18:14:03 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:14:03 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-25 18:14:03 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-25 18:14:03 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-25 18:14:03 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-25 18:14:03 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-25 18:14:03 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-25 18:14:03 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-25 18:14:03 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-25 18:14:03 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-25 18:14:03 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-25 18:14:03 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-25 18:14:03 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-25 18:14:03 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-25 18:14:03 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-25 18:14:03 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-25 18:14:03 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-25 18:14:03 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-25 18:14:03 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 18:14:03 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 18:14:03 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-25 18:14:03 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-25 18:14:03 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-25 18:14:03 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-25 18:14:03 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-25 18:14:03 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-25 18:14:03 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-25 18:14:03 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-25 18:14:03 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-25 18:14:03 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 18:14:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 18:14:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-25 18:14:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-25 18:14:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-25 18:14:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-25 18:14:03 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:14:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-25 18:14:03 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-25 18:14:03 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:14:03 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-25 18:14:03 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-25 18:14:03 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-25 18:14:03 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-25 18:14:03 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-25 18:14:03 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-25 18:14:03 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-25 18:14:03 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-25 18:14:03 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-25 18:14:03 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-25 18:14:03 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-25 18:14:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-25 18:14:03 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:14:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-25 18:14:03 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:14:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-25 18:14:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-25 18:14:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 18:14:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 18:14:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-25 18:14:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-25 18:14:03 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 18:14:03 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-25 18:14:03 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:14:03 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-25 18:14:03 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-25 18:14:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-25 18:14:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-25 18:14:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-25 18:14:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-25 18:14:03 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-25 18:14:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-25 18:14:03 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 18:14:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-25 18:14:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-25 18:14:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-25 18:14:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-25 18:14:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-25 18:14:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-25 18:14:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-25 18:14:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-25 18:14:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-25 18:14:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 18:14:03 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-25 18:14:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-25 18:14:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-25 18:14:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-25 18:14:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-25 18:14:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-25 18:14:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-25 18:14:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-25 18:14:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-25 18:14:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 18:14:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 18:14:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-25 18:14:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-25 18:14:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-25 18:14:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-25 18:14:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-25 18:14:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-25 18:14:03 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-25 18:14:03 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-25 18:14:03 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-25 18:14:03 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-25 18:14:03 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-25 18:14:03 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-25 18:14:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-25 18:14:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-25 18:14:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-25 18:14:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-25 18:14:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-25 18:14:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 18:14:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 18:14:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 18:14:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-25 18:14:03 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-25 18:14:03 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-25 18:14:03 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-25 18:14:03 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:14:03 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-25 18:14:03 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:14:03 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-25 18:14:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-25 18:14:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-25 18:14:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-25 18:14:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 18:14:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:14:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 18:14:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:14:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-25 18:14:03 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 18:14:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-25 18:14:03 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-25 18:14:03 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:14:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 18:14:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-25 18:14:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-25 18:14:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-25 18:14:04 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-25 18:14:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-25 18:14:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-25 18:14:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 18:14:05 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a5bd950: startup date [Mon Mar 25 18:13:46 CST 2019]; root of context hierarchy
2019-03-25 18:14:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 18:14:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 18:14:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 18:14:05 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-25 18:14:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-25 18:14:08 -Registering beans for JMX exposure on startup
2019-03-25 18:14:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-25 18:14:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-25 18:14:08 -Starting beans in phase 2147483647
2019-03-25 18:14:08 -Context refreshed
2019-03-25 18:14:08 -Found 1 custom documentation plugin(s)
2019-03-25 18:14:08 -Scanning for api listing references
2019-03-25 18:14:08 -Generating unique operation named: removeUsingPOST_1
2019-03-25 18:14:09 -Generating unique operation named: addUsingGET_1
2019-03-25 18:14:09 -Generating unique operation named: editUsingGET_1
2019-03-25 18:14:09 -Generating unique operation named: listUsingGET_1
2019-03-25 18:14:09 -Generating unique operation named: removeUsingPOST_2
2019-03-25 18:14:09 -Generating unique operation named: removeUsingPOST_3
2019-03-25 18:14:09 -Generating unique operation named: saveUsingPOST_1
2019-03-25 18:14:09 -Generating unique operation named: updateUsingGET_1
2019-03-25 18:14:09 -Generating unique operation named: updateUsingHEAD_1
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPOST_1
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPUT_1
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPATCH_1
2019-03-25 18:14:09 -Generating unique operation named: updateUsingDELETE_1
2019-03-25 18:14:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-25 18:14:09 -Generating unique operation named: updateUsingTRACE_1
2019-03-25 18:14:09 -Generating unique operation named: addUsingGET_2
2019-03-25 18:14:09 -Generating unique operation named: editUsingGET_2
2019-03-25 18:14:09 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-25 18:14:09 -Generating unique operation named: listUsingGET_2
2019-03-25 18:14:09 -Generating unique operation named: removeUsingPOST_4
2019-03-25 18:14:09 -Generating unique operation named: removeUsingPOST_5
2019-03-25 18:14:09 -Generating unique operation named: saveUsingPOST_2
2019-03-25 18:14:09 -Generating unique operation named: updateUsingGET_2
2019-03-25 18:14:09 -Generating unique operation named: updateUsingHEAD_2
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPOST_2
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPUT_2
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPATCH_2
2019-03-25 18:14:09 -Generating unique operation named: updateUsingDELETE_2
2019-03-25 18:14:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-25 18:14:09 -Generating unique operation named: updateUsingTRACE_2
2019-03-25 18:14:09 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-25 18:14:09 -Generating unique operation named: addUsingGET_3
2019-03-25 18:14:09 -Generating unique operation named: editUsingGET_3
2019-03-25 18:14:09 -Generating unique operation named: listUsingGET_3
2019-03-25 18:14:09 -Generating unique operation named: removeUsingPOST_6
2019-03-25 18:14:09 -Generating unique operation named: removeUsingPOST_7
2019-03-25 18:14:09 -Generating unique operation named: saveUsingPOST_3
2019-03-25 18:14:09 -Generating unique operation named: updateUsingGET_3
2019-03-25 18:14:09 -Generating unique operation named: updateUsingHEAD_3
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPOST_3
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPUT_3
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPATCH_3
2019-03-25 18:14:09 -Generating unique operation named: updateUsingDELETE_3
2019-03-25 18:14:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-25 18:14:09 -Generating unique operation named: updateUsingTRACE_3
2019-03-25 18:14:09 -Generating unique operation named: addUsingGET_4
2019-03-25 18:14:09 -Generating unique operation named: editUsingGET_4
2019-03-25 18:14:09 -Generating unique operation named: listUsingGET_4
2019-03-25 18:14:09 -Generating unique operation named: removeUsingPOST_8
2019-03-25 18:14:09 -Generating unique operation named: removeUsingPOST_9
2019-03-25 18:14:09 -Generating unique operation named: saveUsingPOST_4
2019-03-25 18:14:09 -Generating unique operation named: updateUsingGET_4
2019-03-25 18:14:09 -Generating unique operation named: updateUsingHEAD_4
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPOST_4
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPUT_4
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPATCH_4
2019-03-25 18:14:09 -Generating unique operation named: updateUsingDELETE_4
2019-03-25 18:14:09 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-25 18:14:09 -Generating unique operation named: updateUsingTRACE_4
2019-03-25 18:14:09 -Generating unique operation named: ElecUsingGET_1
2019-03-25 18:14:09 -Generating unique operation named: addUsingGET_5
2019-03-25 18:14:09 -Generating unique operation named: editUsingGET_5
2019-03-25 18:14:09 -Generating unique operation named: listUsingGET_5
2019-03-25 18:14:09 -Generating unique operation named: removeUsingPOST_10
2019-03-25 18:14:09 -Generating unique operation named: removeUsingPOST_11
2019-03-25 18:14:09 -Generating unique operation named: saveUsingPOST_5
2019-03-25 18:14:09 -Generating unique operation named: updateUsingGET_5
2019-03-25 18:14:09 -Generating unique operation named: updateUsingHEAD_5
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPOST_5
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPUT_5
2019-03-25 18:14:09 -Generating unique operation named: updateUsingPATCH_5
2019-03-25 18:14:09 -Generating unique operation named: updateUsingDELETE_5
2019-03-25 18:14:09 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-25 18:14:09 -Generating unique operation named: updateUsingTRACE_5
2019-03-25 18:14:10 -Generating unique operation named: editUsingGET_6
2019-03-25 18:14:10 -Generating unique operation named: listUsingGET_6
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPOST_6
2019-03-25 18:14:10 -Generating unique operation named: addUsingGET_6
2019-03-25 18:14:10 -Generating unique operation named: editUsingGET_7
2019-03-25 18:14:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-25 18:14:10 -Generating unique operation named: listUsingGET_7
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_12
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_13
2019-03-25 18:14:10 -Generating unique operation named: saveUsingPOST_6
2019-03-25 18:14:10 -Generating unique operation named: updateUsingGET_6
2019-03-25 18:14:10 -Generating unique operation named: updateUsingHEAD_6
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPOST_7
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPUT_6
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPATCH_6
2019-03-25 18:14:10 -Generating unique operation named: updateUsingDELETE_6
2019-03-25 18:14:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-25 18:14:10 -Generating unique operation named: updateUsingTRACE_6
2019-03-25 18:14:10 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-25 18:14:10 -Generating unique operation named: addUsingGET_7
2019-03-25 18:14:10 -Generating unique operation named: editUsingGET_8
2019-03-25 18:14:10 -Generating unique operation named: listUsingGET_8
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_14
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_15
2019-03-25 18:14:10 -Generating unique operation named: saveUsingPOST_7
2019-03-25 18:14:10 -Generating unique operation named: updateUsingGET_7
2019-03-25 18:14:10 -Generating unique operation named: updateUsingHEAD_7
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPOST_8
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPUT_7
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPATCH_7
2019-03-25 18:14:10 -Generating unique operation named: updateUsingDELETE_7
2019-03-25 18:14:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-25 18:14:10 -Generating unique operation named: updateUsingTRACE_7
2019-03-25 18:14:10 -Generating unique operation named: addUsingGET_8
2019-03-25 18:14:10 -Generating unique operation named: editUsingGET_9
2019-03-25 18:14:10 -Generating unique operation named: listUsingGET_9
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_16
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_17
2019-03-25 18:14:10 -Generating unique operation named: saveUsingPOST_8
2019-03-25 18:14:10 -Generating unique operation named: updateUsingGET_8
2019-03-25 18:14:10 -Generating unique operation named: updateUsingHEAD_8
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPOST_9
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPUT_8
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPATCH_8
2019-03-25 18:14:10 -Generating unique operation named: updateUsingDELETE_8
2019-03-25 18:14:10 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-25 18:14:10 -Generating unique operation named: updateUsingTRACE_8
2019-03-25 18:14:10 -Generating unique operation named: addUsingGET_9
2019-03-25 18:14:10 -Generating unique operation named: editUsingGET_10
2019-03-25 18:14:10 -Generating unique operation named: infoUsingGET_1
2019-03-25 18:14:10 -Generating unique operation named: infoUsingHEAD_1
2019-03-25 18:14:10 -Generating unique operation named: infoUsingPOST_1
2019-03-25 18:14:10 -Generating unique operation named: infoUsingPUT_1
2019-03-25 18:14:10 -Generating unique operation named: infoUsingPATCH_1
2019-03-25 18:14:10 -Generating unique operation named: infoUsingDELETE_1
2019-03-25 18:14:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-25 18:14:10 -Generating unique operation named: infoUsingTRACE_1
2019-03-25 18:14:10 -Generating unique operation named: listUsingGET_10
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_18
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_19
2019-03-25 18:14:10 -Generating unique operation named: saveUsingPOST_9
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPOST_10
2019-03-25 18:14:10 -Generating unique operation named: listUsingGET_11
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_20
2019-03-25 18:14:10 -Generating unique operation named: welcomeUsingGET_1
2019-03-25 18:14:10 -Generating unique operation named: addUsingGET_10
2019-03-25 18:14:10 -Generating unique operation named: editUsingGET_11
2019-03-25 18:14:10 -Generating unique operation named: listUsingGET_12
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_21
2019-03-25 18:14:10 -Generating unique operation named: saveUsingPOST_10
2019-03-25 18:14:10 -Generating unique operation named: treeUsingGET_1
2019-03-25 18:14:10 -Generating unique operation named: treeUsingGET_2
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPOST_11
2019-03-25 18:14:10 -Generating unique operation named: addUsingGET_11
2019-03-25 18:14:10 -Generating unique operation named: editUsingGET_12
2019-03-25 18:14:10 -Generating unique operation named: listUsingGET_13
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_22
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_23
2019-03-25 18:14:10 -Generating unique operation named: saveUsingPOST_11
2019-03-25 18:14:10 -Generating unique operation named: updateUsingGET_9
2019-03-25 18:14:10 -Generating unique operation named: updateUsingHEAD_9
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPOST_12
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPUT_9
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPATCH_9
2019-03-25 18:14:10 -Generating unique operation named: updateUsingDELETE_9
2019-03-25 18:14:10 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-25 18:14:10 -Generating unique operation named: updateUsingTRACE_9
2019-03-25 18:14:10 -Generating unique operation named: addUsingGET_12
2019-03-25 18:14:10 -Generating unique operation named: editUsingGET_13
2019-03-25 18:14:10 -Generating unique operation named: listUsingGET_14
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_24
2019-03-25 18:14:10 -Generating unique operation named: removeUsingPOST_25
2019-03-25 18:14:10 -Generating unique operation named: saveUsingPOST_12
2019-03-25 18:14:10 -Generating unique operation named: updateUsingGET_10
2019-03-25 18:14:10 -Generating unique operation named: updateUsingHEAD_10
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPOST_13
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPUT_10
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPATCH_10
2019-03-25 18:14:10 -Generating unique operation named: updateUsingDELETE_10
2019-03-25 18:14:10 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-25 18:14:10 -Generating unique operation named: updateUsingTRACE_10
2019-03-25 18:14:10 -Generating unique operation named: addUsingGET_13
2019-03-25 18:14:10 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-25 18:14:10 -Generating unique operation named: editUsingGET_14
2019-03-25 18:14:10 -Generating unique operation named: listUsingGET_15
2019-03-25 18:14:10 -Generating unique operation named: saveUsingPOST_13
2019-03-25 18:14:10 -Generating unique operation named: saveUsingPOST_14
2019-03-25 18:14:10 -Generating unique operation named: updateUsingPOST_14
2019-03-25 18:14:11 -Generating unique operation named: listUsingGET_16
2019-03-25 18:14:11 -Generating unique operation named: listUsingHEAD_1
2019-03-25 18:14:11 -Generating unique operation named: listUsingPOST_1
2019-03-25 18:14:11 -Generating unique operation named: listUsingPUT_1
2019-03-25 18:14:11 -Generating unique operation named: listUsingPATCH_1
2019-03-25 18:14:11 -Generating unique operation named: listUsingDELETE_1
2019-03-25 18:14:11 -Generating unique operation named: listUsingOPTIONS_1
2019-03-25 18:14:11 -Generating unique operation named: listUsingTRACE_1
2019-03-25 18:14:11 -Generating unique operation named: addUsingGET_14
2019-03-25 18:14:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-25 18:14:11 -Generating unique operation named: editUsingGET_15
2019-03-25 18:14:11 -Generating unique operation named: listUsingGET_17
2019-03-25 18:14:11 -Generating unique operation named: removeUsingPOST_26
2019-03-25 18:14:11 -Generating unique operation named: saveUsingPOST_15
2019-03-25 18:14:11 -Generating unique operation named: treeUsingGET_3
2019-03-25 18:14:11 -Generating unique operation named: treeViewUsingGET_1
2019-03-25 18:14:11 -Generating unique operation named: updateUsingPOST_15
2019-03-25 18:14:11 -Generating unique operation named: addUsingGET_15
2019-03-25 18:14:11 -Generating unique operation named: editUsingGET_16
2019-03-25 18:14:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-25 18:14:11 -Generating unique operation named: listUsingGET_18
2019-03-25 18:14:11 -Generating unique operation named: removeUsingPOST_27
2019-03-25 18:14:11 -Generating unique operation named: removeUsingPOST_28
2019-03-25 18:14:11 -Generating unique operation named: saveUsingPOST_16
2019-03-25 18:14:11 -Generating unique operation named: updateUsingGET_11
2019-03-25 18:14:11 -Generating unique operation named: updateUsingHEAD_11
2019-03-25 18:14:11 -Generating unique operation named: updateUsingPOST_16
2019-03-25 18:14:11 -Generating unique operation named: updateUsingPUT_11
2019-03-25 18:14:11 -Generating unique operation named: updateUsingPATCH_11
2019-03-25 18:14:11 -Generating unique operation named: updateUsingDELETE_11
2019-03-25 18:14:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-25 18:14:11 -Generating unique operation named: updateUsingTRACE_11
2019-03-25 18:14:11 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-25 18:14:11 -Generating unique operation named: addUsingGET_16
2019-03-25 18:14:11 -Generating unique operation named: editUsingGET_17
2019-03-25 18:14:11 -Generating unique operation named: listUsingGET_19
2019-03-25 18:14:11 -Generating unique operation named: removeUsingPOST_29
2019-03-25 18:14:11 -Generating unique operation named: removeUsingPOST_30
2019-03-25 18:14:11 -Generating unique operation named: saveUsingPOST_17
2019-03-25 18:14:11 -Generating unique operation named: updateUsingGET_12
2019-03-25 18:14:11 -Generating unique operation named: updateUsingHEAD_12
2019-03-25 18:14:11 -Generating unique operation named: updateUsingPOST_17
2019-03-25 18:14:11 -Generating unique operation named: updateUsingPUT_12
2019-03-25 18:14:11 -Generating unique operation named: updateUsingPATCH_12
2019-03-25 18:14:11 -Generating unique operation named: updateUsingDELETE_12
2019-03-25 18:14:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-25 18:14:11 -Generating unique operation named: updateUsingTRACE_12
2019-03-25 18:14:11 -Generating unique operation named: addUsingGET_17
2019-03-25 18:14:11 -Generating unique operation named: editUsingGET_18
2019-03-25 18:14:11 -Generating unique operation named: listUsingGET_20
2019-03-25 18:14:11 -Generating unique operation named: removeUsingPOST_31
2019-03-25 18:14:11 -Generating unique operation named: removeUsingPOST_32
2019-03-25 18:14:11 -Generating unique operation named: saveUsingPOST_18
2019-03-25 18:14:11 -Generating unique operation named: updateUsingGET_13
2019-03-25 18:14:11 -Generating unique operation named: updateUsingHEAD_13
2019-03-25 18:14:11 -Generating unique operation named: updateUsingPOST_18
2019-03-25 18:14:11 -Generating unique operation named: updateUsingPUT_13
2019-03-25 18:14:11 -Generating unique operation named: updateUsingPATCH_13
2019-03-25 18:14:11 -Generating unique operation named: updateUsingDELETE_13
2019-03-25 18:14:11 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-25 18:14:11 -Generating unique operation named: updateUsingTRACE_13
2019-03-25 18:14:11 -Starting Quartz Scheduler now
2019-03-25 18:14:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-25 18:14:11 -Starting...
2019-03-25 18:14:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-25 18:14:11 -Started.
2019-03-25 18:14:11 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-25 18:14:11 -Using a shared selector for servlet write/read
2019-03-25 18:14:11 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-25 18:14:11 -Started BootdoApplication in 26.844 seconds (JVM running for 28.66)
2019-03-25 18:14:11 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-25 18:14:12 -==> Parameters: 
2019-03-25 18:14:12 -<==      Total: 1
2019-03-25 18:15:04 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-25 18:15:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-25 18:15:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-25 18:15:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 96 ms
2019-03-25 18:15:06 -Enabling session validation scheduler...
2019-03-25 18:15:06 -请求地址 : http://localhost:8081/
2019-03-25 18:15:06 -HTTP METHOD : GET
2019-03-25 18:15:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-25 18:15:06 -参数 : [{}]
2019-03-25 18:15:06 -耗时 : 5
2019-03-25 18:15:06 -返回值 : redirect:/index
2019-03-25 18:15:07 -请求地址 : http://localhost:8081/login;JSESSIONID=6cbe9ace-d411-48ad-8a01-50b90013a3c2
2019-03-25 18:15:07 -HTTP METHOD : GET
2019-03-25 18:15:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 18:15:07 -参数 : [{}]
2019-03-25 18:15:07 -耗时 : 1
2019-03-25 18:15:07 -返回值 : login
2019-03-25 18:15:11 -请求地址 : http://localhost:8081/getVerify
2019-03-25 18:15:11 -HTTP METHOD : GET
2019-03-25 18:15:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 18:15:11 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@39a8d597, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7caa5cc6]
2019-03-25 18:15:16 -4976
2019-03-25 18:15:16 -耗时 : 4548
2019-03-25 18:15:16 -返回值 : null
2019-03-25 18:15:27 -请求地址 : http://localhost:8081/login
2019-03-25 18:15:27 -HTTP METHOD : POST
2019-03-25 18:15:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 18:15:27 -参数 : [admin, 111111, 4976, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d8bf3ed]
2019-03-25 18:15:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 18:15:27 -==> Parameters: admin(String)
2019-03-25 18:15:27 -<==      Total: 1
2019-03-25 18:15:27 -耗时 : 402
2019-03-25 18:15:27 -返回值 : {msg=操作成功, code=0}
2019-03-25 18:15:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-25 18:15:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 18:15:27 -==> Parameters: 1(Long), admin(String), 登录(String), 403(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 18:15:27.872(Timestamp)
2019-03-25 18:15:28 -请求地址 : http://localhost:8081/index
2019-03-25 18:15:28 -HTTP METHOD : GET
2019-03-25 18:15:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 18:15:28 -参数 : [{}]
2019-03-25 18:15:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 18:15:28 -==> Parameters: 1(Long)
2019-03-25 18:15:28 -<==    Updates: 1
2019-03-25 18:15:28 -<==      Total: 46
2019-03-25 18:15:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 18:15:28 -==> Parameters: 138(Long)
2019-03-25 18:15:28 -<==      Total: 1
2019-03-25 18:15:28 -耗时 : 518
2019-03-25 18:15:28 -返回值 : index_v1
2019-03-25 18:15:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 18:15:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 519(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 18:15:28.864(Timestamp)
2019-03-25 18:15:28 -<==    Updates: 1
2019-03-25 18:15:29 -请求地址 : http://localhost:8081/main
2019-03-25 18:15:29 -HTTP METHOD : GET
2019-03-25 18:15:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 18:15:29 -参数 : []
2019-03-25 18:15:29 -耗时 : 1
2019-03-25 18:15:29 -返回值 : main
2019-03-25 18:15:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 18:15:32 -HTTP METHOD : GET
2019-03-25 18:15:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 18:15:32 -参数 : []
2019-03-25 18:15:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 18:15:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 18:15:32 -请求地址 : http://localhost:8081/main
2019-03-25 18:15:32 -HTTP METHOD : GET
2019-03-25 18:15:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 18:15:32 -参数 : []
2019-03-25 18:15:32 -耗时 : 1
2019-03-25 18:15:32 -返回值 : main
2019-03-25 18:15:32 -<==      Total: 0
2019-03-25 18:15:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 18:15:32 -==> Parameters: 1(Long), 0(String)
2019-03-25 18:15:32 -<==      Total: 1
2019-03-25 18:15:32 -耗时 : 525
2019-03-25 18:15:32 -返回值 : com.bootdo.common.utils.PageUtils@71bfb9d0
2019-03-25 18:15:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 18:15:48 -==> Parameters: 1(Long)
2019-03-25 18:15:48 -<==      Total: 90
2019-03-25 18:15:48 -请求地址 : http://localhost:8081/elec/elec
2019-03-25 18:15:48 -HTTP METHOD : GET
2019-03-25 18:15:48 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-25 18:15:48 -参数 : []
2019-03-25 18:15:48 -耗时 : 1
2019-03-25 18:15:48 -返回值 : elec/elec/elec
2019-03-25 18:15:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 18:15:51 -HTTP METHOD : GET
2019-03-25 18:15:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:15:51 -参数 : [userType]
2019-03-25 18:15:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:15:51 -==> Parameters: userType(String)
2019-03-25 18:15:51 -<==      Total: 2
2019-03-25 18:15:51 -耗时 : 94
2019-03-25 18:15:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:15:51 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:15:51 -HTTP METHOD : GET
2019-03-25 18:15:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:15:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2bb9ed1d]
2019-03-25 18:16:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-25 18:16:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-25 18:16:03 -<==      Total: 10
2019-03-25 18:16:03 -==>  Preparing: select count(*) from elec 
2019-03-25 18:16:03 -==> Parameters: 
2019-03-25 18:16:03 -<==      Total: 1
2019-03-25 18:16:03 -耗时 : 12102
2019-03-25 18:16:03 -返回值 : com.bootdo.common.utils.PageUtils@223af17f
2019-03-25 18:17:14 -Starting BootdoApplication on ZJZL-20180906VX with PID 3832 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-25 18:17:14 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-25 18:17:14 -The following profiles are active: dev
2019-03-25 18:17:14 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon Mar 25 18:17:14 CST 2019]; root of context hierarchy
2019-03-25 18:17:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-25 18:17:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$59706a5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:17:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4bc99901] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:17:20 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:17:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:17:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:17:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-25 18:17:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-25 18:17:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:17:21 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:17:21 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:17:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-25 18:17:21 -Tomcat initialized with port(s): 8081 (http)
2019-03-25 18:17:22 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-25 18:17:22 -Starting service [Tomcat]
2019-03-25 18:17:22 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-25 18:17:22 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-25 18:17:22 -Initializing Spring embedded WebApplicationContext
2019-03-25 18:17:22 -Root WebApplicationContext: initialization completed in 7917 ms
2019-03-25 18:17:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-25 18:17:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-25 18:17:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-25 18:17:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-25 18:17:23 -Filter xssFilter was not registered (disabled)
2019-03-25 18:17:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-25 18:17:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-25 18:17:23 -Servlet statViewServlet mapped to [/druid/*]
2019-03-25 18:17:23 -Servlet dispatcherServlet mapped to [/]
2019-03-25 18:17:25 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon Mar 25 18:17:14 CST 2019]; root of context hierarchy
2019-03-25 18:17:26 -Using default implementation for ThreadExecutor
2019-03-25 18:17:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-25 18:17:26 -Quartz Scheduler v.2.2.1 created.
2019-03-25 18:17:26 -RAMJobStore initialized.
2019-03-25 18:17:26 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-25 18:17:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-25 18:17:26 -Quartz scheduler version: 2.2.1
2019-03-25 18:17:26 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@aca3c85
2019-03-25 18:17:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-25 18:17:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-25 18:17:29 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-25 18:17:29 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:17:29 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-25 18:17:29 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-25 18:17:29 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-25 18:17:29 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-25 18:17:29 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-25 18:17:29 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-25 18:17:29 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-25 18:17:29 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-25 18:17:29 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-25 18:17:29 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-25 18:17:29 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-25 18:17:29 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-25 18:17:29 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-25 18:17:29 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-25 18:17:29 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-25 18:17:29 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-25 18:17:29 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-25 18:17:29 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-25 18:17:29 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 18:17:29 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-25 18:17:29 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-25 18:17:29 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-25 18:17:29 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-25 18:17:29 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-25 18:17:29 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-25 18:17:29 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-25 18:17:29 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-25 18:17:29 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-25 18:17:29 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-25 18:17:29 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 18:17:29 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 18:17:29 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-25 18:17:29 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-25 18:17:29 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-25 18:17:29 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-25 18:17:29 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:17:29 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-25 18:17:29 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:17:29 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-25 18:17:29 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-25 18:17:29 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-25 18:17:29 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-25 18:17:29 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-25 18:17:29 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-25 18:17:29 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-25 18:17:29 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-25 18:17:29 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-25 18:17:29 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-25 18:17:29 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-25 18:17:29 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-25 18:17:29 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-25 18:17:29 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:17:29 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-25 18:17:29 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:17:29 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-25 18:17:29 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-25 18:17:29 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 18:17:29 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-25 18:17:29 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-25 18:17:29 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-25 18:17:29 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 18:17:29 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-25 18:17:29 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:17:29 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-25 18:17:29 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-25 18:17:29 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-25 18:17:29 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-25 18:17:29 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-25 18:17:29 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-25 18:17:29 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-25 18:17:29 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 18:17:29 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-25 18:17:29 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-25 18:17:29 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-25 18:17:29 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-25 18:17:29 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-25 18:17:29 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-25 18:17:29 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-25 18:17:29 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-25 18:17:29 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-25 18:17:29 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-25 18:17:29 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-25 18:17:29 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-25 18:17:29 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-25 18:17:29 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-25 18:17:29 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-25 18:17:29 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-25 18:17:29 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-25 18:17:29 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-25 18:17:29 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-25 18:17:29 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 18:17:29 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-25 18:17:29 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-25 18:17:29 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-25 18:17:29 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-25 18:17:29 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-25 18:17:29 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-25 18:17:29 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-25 18:17:29 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-25 18:17:29 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-25 18:17:29 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-25 18:17:29 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-25 18:17:29 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-25 18:17:29 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-25 18:17:29 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-25 18:17:29 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-25 18:17:29 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-25 18:17:29 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 18:17:29 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 18:17:29 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-25 18:17:29 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-25 18:17:29 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-25 18:17:29 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-25 18:17:29 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-25 18:17:29 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-25 18:17:29 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-25 18:17:29 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:17:29 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-25 18:17:29 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:17:29 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-25 18:17:29 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-25 18:17:29 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-25 18:17:29 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-25 18:17:29 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 18:17:29 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-25 18:17:29 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-25 18:17:29 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-25 18:17:29 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-25 18:17:29 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-25 18:17:29 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-03-25 18:17:29 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-25 18:17:29 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-25 18:17:29 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-25 18:17:29 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-25 18:17:29 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-25 18:17:29 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-25 18:17:30 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-25 18:17:30 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-25 18:17:31 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-25 18:17:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 18:17:32 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon Mar 25 18:17:14 CST 2019]; root of context hierarchy
2019-03-25 18:17:33 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 18:17:33 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 18:17:33 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-25 18:17:33 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-25 18:17:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-25 18:17:36 -Registering beans for JMX exposure on startup
2019-03-25 18:17:36 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-25 18:17:36 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-25 18:17:36 -Starting beans in phase 2147483647
2019-03-25 18:17:36 -Context refreshed
2019-03-25 18:17:36 -Found 1 custom documentation plugin(s)
2019-03-25 18:17:36 -Scanning for api listing references
2019-03-25 18:17:36 -Generating unique operation named: removeUsingPOST_1
2019-03-25 18:17:36 -Generating unique operation named: addUsingGET_1
2019-03-25 18:17:36 -Generating unique operation named: editUsingGET_1
2019-03-25 18:17:36 -Generating unique operation named: listUsingGET_1
2019-03-25 18:17:36 -Generating unique operation named: removeUsingPOST_2
2019-03-25 18:17:36 -Generating unique operation named: removeUsingPOST_3
2019-03-25 18:17:36 -Generating unique operation named: saveUsingPOST_1
2019-03-25 18:17:36 -Generating unique operation named: updateUsingGET_1
2019-03-25 18:17:37 -Generating unique operation named: updateUsingHEAD_1
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPOST_1
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPUT_1
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPATCH_1
2019-03-25 18:17:37 -Generating unique operation named: updateUsingDELETE_1
2019-03-25 18:17:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-25 18:17:37 -Generating unique operation named: updateUsingTRACE_1
2019-03-25 18:17:37 -Generating unique operation named: addUsingGET_2
2019-03-25 18:17:37 -Generating unique operation named: editUsingGET_2
2019-03-25 18:17:37 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-25 18:17:37 -Generating unique operation named: listUsingGET_2
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_4
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_5
2019-03-25 18:17:37 -Generating unique operation named: saveUsingPOST_2
2019-03-25 18:17:37 -Generating unique operation named: updateUsingGET_2
2019-03-25 18:17:37 -Generating unique operation named: updateUsingHEAD_2
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPOST_2
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPUT_2
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPATCH_2
2019-03-25 18:17:37 -Generating unique operation named: updateUsingDELETE_2
2019-03-25 18:17:37 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-25 18:17:37 -Generating unique operation named: updateUsingTRACE_2
2019-03-25 18:17:37 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-25 18:17:37 -Generating unique operation named: addUsingGET_3
2019-03-25 18:17:37 -Generating unique operation named: editUsingGET_3
2019-03-25 18:17:37 -Generating unique operation named: listUsingGET_3
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_6
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_7
2019-03-25 18:17:37 -Generating unique operation named: saveUsingPOST_3
2019-03-25 18:17:37 -Generating unique operation named: updateUsingGET_3
2019-03-25 18:17:37 -Generating unique operation named: updateUsingHEAD_3
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPOST_3
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPUT_3
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPATCH_3
2019-03-25 18:17:37 -Generating unique operation named: updateUsingDELETE_3
2019-03-25 18:17:37 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-25 18:17:37 -Generating unique operation named: updateUsingTRACE_3
2019-03-25 18:17:37 -Generating unique operation named: addUsingGET_4
2019-03-25 18:17:37 -Generating unique operation named: editUsingGET_4
2019-03-25 18:17:37 -Generating unique operation named: listUsingGET_4
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_8
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_9
2019-03-25 18:17:37 -Generating unique operation named: saveUsingPOST_4
2019-03-25 18:17:37 -Generating unique operation named: updateUsingGET_4
2019-03-25 18:17:37 -Generating unique operation named: updateUsingHEAD_4
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPOST_4
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPUT_4
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPATCH_4
2019-03-25 18:17:37 -Generating unique operation named: updateUsingDELETE_4
2019-03-25 18:17:37 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-25 18:17:37 -Generating unique operation named: updateUsingTRACE_4
2019-03-25 18:17:37 -Generating unique operation named: ElecUsingGET_1
2019-03-25 18:17:37 -Generating unique operation named: addUsingGET_5
2019-03-25 18:17:37 -Generating unique operation named: editUsingGET_5
2019-03-25 18:17:37 -Generating unique operation named: listUsingGET_5
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_10
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_11
2019-03-25 18:17:37 -Generating unique operation named: saveUsingPOST_5
2019-03-25 18:17:37 -Generating unique operation named: updateUsingGET_5
2019-03-25 18:17:37 -Generating unique operation named: updateUsingHEAD_5
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPOST_5
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPUT_5
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPATCH_5
2019-03-25 18:17:37 -Generating unique operation named: updateUsingDELETE_5
2019-03-25 18:17:37 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-25 18:17:37 -Generating unique operation named: updateUsingTRACE_5
2019-03-25 18:17:37 -Generating unique operation named: editUsingGET_6
2019-03-25 18:17:37 -Generating unique operation named: listUsingGET_6
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPOST_6
2019-03-25 18:17:37 -Generating unique operation named: addUsingGET_6
2019-03-25 18:17:37 -Generating unique operation named: editUsingGET_7
2019-03-25 18:17:37 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-25 18:17:37 -Generating unique operation named: listUsingGET_7
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_12
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_13
2019-03-25 18:17:37 -Generating unique operation named: saveUsingPOST_6
2019-03-25 18:17:37 -Generating unique operation named: updateUsingGET_6
2019-03-25 18:17:37 -Generating unique operation named: updateUsingHEAD_6
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPOST_7
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPUT_6
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPATCH_6
2019-03-25 18:17:37 -Generating unique operation named: updateUsingDELETE_6
2019-03-25 18:17:37 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-25 18:17:37 -Generating unique operation named: updateUsingTRACE_6
2019-03-25 18:17:37 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-25 18:17:37 -Generating unique operation named: addUsingGET_7
2019-03-25 18:17:37 -Generating unique operation named: editUsingGET_8
2019-03-25 18:17:37 -Generating unique operation named: listUsingGET_8
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_14
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_15
2019-03-25 18:17:37 -Generating unique operation named: saveUsingPOST_7
2019-03-25 18:17:37 -Generating unique operation named: updateUsingGET_7
2019-03-25 18:17:37 -Generating unique operation named: updateUsingHEAD_7
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPOST_8
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPUT_7
2019-03-25 18:17:37 -Generating unique operation named: updateUsingPATCH_7
2019-03-25 18:17:37 -Generating unique operation named: updateUsingDELETE_7
2019-03-25 18:17:37 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-25 18:17:37 -Generating unique operation named: updateUsingTRACE_7
2019-03-25 18:17:37 -Generating unique operation named: addUsingGET_8
2019-03-25 18:17:37 -Generating unique operation named: editUsingGET_9
2019-03-25 18:17:37 -Generating unique operation named: listUsingGET_9
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_16
2019-03-25 18:17:37 -Generating unique operation named: removeUsingPOST_17
2019-03-25 18:17:38 -Generating unique operation named: saveUsingPOST_8
2019-03-25 18:17:38 -Generating unique operation named: updateUsingGET_8
2019-03-25 18:17:38 -Generating unique operation named: updateUsingHEAD_8
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPOST_9
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPUT_8
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPATCH_8
2019-03-25 18:17:38 -Generating unique operation named: updateUsingDELETE_8
2019-03-25 18:17:38 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-25 18:17:38 -Generating unique operation named: updateUsingTRACE_8
2019-03-25 18:17:38 -Generating unique operation named: addUsingGET_9
2019-03-25 18:17:38 -Generating unique operation named: editUsingGET_10
2019-03-25 18:17:38 -Generating unique operation named: infoUsingGET_1
2019-03-25 18:17:38 -Generating unique operation named: infoUsingHEAD_1
2019-03-25 18:17:38 -Generating unique operation named: infoUsingPOST_1
2019-03-25 18:17:38 -Generating unique operation named: infoUsingPUT_1
2019-03-25 18:17:38 -Generating unique operation named: infoUsingPATCH_1
2019-03-25 18:17:38 -Generating unique operation named: infoUsingDELETE_1
2019-03-25 18:17:38 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-25 18:17:38 -Generating unique operation named: infoUsingTRACE_1
2019-03-25 18:17:38 -Generating unique operation named: listUsingGET_10
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_18
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_19
2019-03-25 18:17:38 -Generating unique operation named: saveUsingPOST_9
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPOST_10
2019-03-25 18:17:38 -Generating unique operation named: listUsingGET_11
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_20
2019-03-25 18:17:38 -Generating unique operation named: welcomeUsingGET_1
2019-03-25 18:17:38 -Generating unique operation named: addUsingGET_10
2019-03-25 18:17:38 -Generating unique operation named: editUsingGET_11
2019-03-25 18:17:38 -Generating unique operation named: listUsingGET_12
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_21
2019-03-25 18:17:38 -Generating unique operation named: saveUsingPOST_10
2019-03-25 18:17:38 -Generating unique operation named: treeUsingGET_1
2019-03-25 18:17:38 -Generating unique operation named: treeUsingGET_2
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPOST_11
2019-03-25 18:17:38 -Generating unique operation named: addUsingGET_11
2019-03-25 18:17:38 -Generating unique operation named: editUsingGET_12
2019-03-25 18:17:38 -Generating unique operation named: listUsingGET_13
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_22
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_23
2019-03-25 18:17:38 -Generating unique operation named: saveUsingPOST_11
2019-03-25 18:17:38 -Generating unique operation named: updateUsingGET_9
2019-03-25 18:17:38 -Generating unique operation named: updateUsingHEAD_9
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPOST_12
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPUT_9
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPATCH_9
2019-03-25 18:17:38 -Generating unique operation named: updateUsingDELETE_9
2019-03-25 18:17:38 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-25 18:17:38 -Generating unique operation named: updateUsingTRACE_9
2019-03-25 18:17:38 -Generating unique operation named: addUsingGET_12
2019-03-25 18:17:38 -Generating unique operation named: editUsingGET_13
2019-03-25 18:17:38 -Generating unique operation named: listUsingGET_14
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_24
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_25
2019-03-25 18:17:38 -Generating unique operation named: saveUsingPOST_12
2019-03-25 18:17:38 -Generating unique operation named: updateUsingGET_10
2019-03-25 18:17:38 -Generating unique operation named: updateUsingHEAD_10
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPOST_13
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPUT_10
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPATCH_10
2019-03-25 18:17:38 -Generating unique operation named: updateUsingDELETE_10
2019-03-25 18:17:38 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-25 18:17:38 -Generating unique operation named: updateUsingTRACE_10
2019-03-25 18:17:38 -Generating unique operation named: addUsingGET_13
2019-03-25 18:17:38 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-25 18:17:38 -Generating unique operation named: editUsingGET_14
2019-03-25 18:17:38 -Generating unique operation named: listUsingGET_15
2019-03-25 18:17:38 -Generating unique operation named: saveUsingPOST_13
2019-03-25 18:17:38 -Generating unique operation named: saveUsingPOST_14
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPOST_14
2019-03-25 18:17:38 -Generating unique operation named: listUsingGET_16
2019-03-25 18:17:38 -Generating unique operation named: listUsingHEAD_1
2019-03-25 18:17:38 -Generating unique operation named: listUsingPOST_1
2019-03-25 18:17:38 -Generating unique operation named: listUsingPUT_1
2019-03-25 18:17:38 -Generating unique operation named: listUsingPATCH_1
2019-03-25 18:17:38 -Generating unique operation named: listUsingDELETE_1
2019-03-25 18:17:38 -Generating unique operation named: listUsingOPTIONS_1
2019-03-25 18:17:38 -Generating unique operation named: listUsingTRACE_1
2019-03-25 18:17:38 -Generating unique operation named: addUsingGET_14
2019-03-25 18:17:38 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-25 18:17:38 -Generating unique operation named: editUsingGET_15
2019-03-25 18:17:38 -Generating unique operation named: listUsingGET_17
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_26
2019-03-25 18:17:38 -Generating unique operation named: saveUsingPOST_15
2019-03-25 18:17:38 -Generating unique operation named: treeUsingGET_3
2019-03-25 18:17:38 -Generating unique operation named: treeViewUsingGET_1
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPOST_15
2019-03-25 18:17:38 -Generating unique operation named: addUsingGET_15
2019-03-25 18:17:38 -Generating unique operation named: editUsingGET_16
2019-03-25 18:17:38 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-25 18:17:38 -Generating unique operation named: listUsingGET_18
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_27
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_28
2019-03-25 18:17:38 -Generating unique operation named: saveUsingPOST_16
2019-03-25 18:17:38 -Generating unique operation named: updateUsingGET_11
2019-03-25 18:17:38 -Generating unique operation named: updateUsingHEAD_11
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPOST_16
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPUT_11
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPATCH_11
2019-03-25 18:17:38 -Generating unique operation named: updateUsingDELETE_11
2019-03-25 18:17:38 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-25 18:17:38 -Generating unique operation named: updateUsingTRACE_11
2019-03-25 18:17:38 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-25 18:17:38 -Generating unique operation named: addUsingGET_16
2019-03-25 18:17:38 -Generating unique operation named: editUsingGET_17
2019-03-25 18:17:38 -Generating unique operation named: listUsingGET_19
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_29
2019-03-25 18:17:38 -Generating unique operation named: removeUsingPOST_30
2019-03-25 18:17:38 -Generating unique operation named: saveUsingPOST_17
2019-03-25 18:17:38 -Generating unique operation named: updateUsingGET_12
2019-03-25 18:17:38 -Generating unique operation named: updateUsingHEAD_12
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPOST_17
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPUT_12
2019-03-25 18:17:38 -Generating unique operation named: updateUsingPATCH_12
2019-03-25 18:17:38 -Generating unique operation named: updateUsingDELETE_12
2019-03-25 18:17:38 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-25 18:17:38 -Generating unique operation named: updateUsingTRACE_12
2019-03-25 18:17:38 -Generating unique operation named: addUsingGET_17
2019-03-25 18:17:39 -Generating unique operation named: editUsingGET_18
2019-03-25 18:17:39 -Generating unique operation named: listUsingGET_20
2019-03-25 18:17:39 -Generating unique operation named: removeUsingPOST_31
2019-03-25 18:17:39 -Generating unique operation named: removeUsingPOST_32
2019-03-25 18:17:39 -Generating unique operation named: saveUsingPOST_18
2019-03-25 18:17:39 -Generating unique operation named: updateUsingGET_13
2019-03-25 18:17:39 -Generating unique operation named: updateUsingHEAD_13
2019-03-25 18:17:39 -Generating unique operation named: updateUsingPOST_18
2019-03-25 18:17:39 -Generating unique operation named: updateUsingPUT_13
2019-03-25 18:17:39 -Generating unique operation named: updateUsingPATCH_13
2019-03-25 18:17:39 -Generating unique operation named: updateUsingDELETE_13
2019-03-25 18:17:39 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-25 18:17:39 -Generating unique operation named: updateUsingTRACE_13
2019-03-25 18:17:39 -Starting Quartz Scheduler now
2019-03-25 18:17:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-25 18:17:39 -Starting...
2019-03-25 18:17:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-25 18:17:39 -Started.
2019-03-25 18:17:39 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-25 18:17:39 -Using a shared selector for servlet write/read
2019-03-25 18:17:39 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-25 18:17:39 -Started BootdoApplication in 26.09 seconds (JVM running for 26.948)
2019-03-25 18:17:39 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-25 18:17:39 -==> Parameters: 
2019-03-25 18:17:39 -<==      Total: 1
2019-03-25 18:18:31 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-25 18:21:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-25 18:21:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-25 18:21:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 80 ms
2019-03-25 18:21:06 -Enabling session validation scheduler...
2019-03-25 18:21:06 -请求地址 : http://localhost:8081/login;JSESSIONID=5452154e-bf04-4f15-a19f-fdaa2e465a27
2019-03-25 18:21:06 -HTTP METHOD : GET
2019-03-25 18:21:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 18:21:06 -参数 : [{}]
2019-03-25 18:21:06 -耗时 : 3
2019-03-25 18:21:06 -返回值 : login
2019-03-25 18:21:08 -请求地址 : http://localhost:8081/getVerify
2019-03-25 18:21:08 -HTTP METHOD : GET
2019-03-25 18:21:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 18:21:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@38a49dbe, org.apache.shiro.web.servlet.ShiroHttpServletResponse@415e728d]
2019-03-25 18:21:08 -6747
2019-03-25 18:21:08 -耗时 : 617
2019-03-25 18:21:08 -返回值 : null
2019-03-25 18:21:08 -请求地址 : http://localhost:8081/login
2019-03-25 18:21:08 -HTTP METHOD : GET
2019-03-25 18:21:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 18:21:08 -参数 : [{}]
2019-03-25 18:21:08 -耗时 : 1
2019-03-25 18:21:08 -返回值 : login
2019-03-25 18:21:12 -请求地址 : http://localhost:8081/login
2019-03-25 18:21:12 -HTTP METHOD : POST
2019-03-25 18:21:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 18:21:12 -参数 : [admin, 111111, 6747, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1dec591d]
2019-03-25 18:21:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 18:21:12 -==> Parameters: admin(String)
2019-03-25 18:21:12 -<==      Total: 1
2019-03-25 18:21:12 -耗时 : 117
2019-03-25 18:21:12 -返回值 : {msg=操作成功, code=0}
2019-03-25 18:21:12 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-25 18:21:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 18:21:12 -==> Parameters: 1(Long), admin(String), 登录(String), 118(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 18:21:12.366(Timestamp)
2019-03-25 18:21:12 -请求地址 : http://localhost:8081/index
2019-03-25 18:21:12 -HTTP METHOD : GET
2019-03-25 18:21:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 18:21:12 -参数 : [{}]
2019-03-25 18:21:12 -<==    Updates: 1
2019-03-25 18:21:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 18:21:12 -==> Parameters: 1(Long)
2019-03-25 18:21:12 -<==      Total: 46
2019-03-25 18:21:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 18:21:12 -==> Parameters: 138(Long)
2019-03-25 18:21:12 -<==      Total: 1
2019-03-25 18:21:12 -耗时 : 187
2019-03-25 18:21:12 -返回值 : index_v1
2019-03-25 18:21:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 18:21:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 188(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 18:21:12.695(Timestamp)
2019-03-25 18:21:12 -请求地址 : http://localhost:8081/main
2019-03-25 18:21:12 -HTTP METHOD : GET
2019-03-25 18:21:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 18:21:12 -参数 : []
2019-03-25 18:21:12 -耗时 : 0
2019-03-25 18:21:12 -返回值 : main
2019-03-25 18:21:13 -<==    Updates: 1
2019-03-25 18:21:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 18:21:13 -HTTP METHOD : GET
2019-03-25 18:21:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 18:21:13 -参数 : []
2019-03-25 18:21:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 18:21:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 18:21:13 -<==      Total: 0
2019-03-25 18:21:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 18:21:13 -==> Parameters: 1(Long), 0(String)
2019-03-25 18:21:13 -<==      Total: 1
2019-03-25 18:21:13 -耗时 : 60
2019-03-25 18:21:13 -返回值 : com.bootdo.common.utils.PageUtils@1bc50cfc
2019-03-25 18:21:13 -请求地址 : http://localhost:8081/main
2019-03-25 18:21:13 -HTTP METHOD : GET
2019-03-25 18:21:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 18:21:13 -参数 : []
2019-03-25 18:21:13 -耗时 : 1
2019-03-25 18:21:13 -返回值 : main
2019-03-25 18:21:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 18:21:43 -==> Parameters: 1(Long)
2019-03-25 18:21:43 -<==      Total: 90
2019-03-25 18:21:43 -请求地址 : http://localhost:8081/elec/elec
2019-03-25 18:21:43 -HTTP METHOD : GET
2019-03-25 18:21:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-25 18:21:43 -参数 : []
2019-03-25 18:21:43 -耗时 : 0
2019-03-25 18:21:43 -返回值 : elec/elec/elec
2019-03-25 18:21:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 18:21:44 -HTTP METHOD : GET
2019-03-25 18:21:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:21:44 -参数 : [userType]
2019-03-25 18:21:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:21:44 -==> Parameters: userType(String)
2019-03-25 18:21:44 -<==      Total: 2
2019-03-25 18:21:44 -耗时 : 36
2019-03-25 18:21:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:21:44 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:21:44 -HTTP METHOD : GET
2019-03-25 18:21:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:21:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@4b662209]
2019-03-25 18:21:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-25 18:21:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-25 18:21:44 -<==      Total: 10
2019-03-25 18:21:44 -==>  Preparing: select count(*) from elec 
2019-03-25 18:21:44 -==> Parameters: 
2019-03-25 18:21:44 -<==      Total: 1
2019-03-25 18:21:44 -耗时 : 74
2019-03-25 18:21:44 -返回值 : com.bootdo.common.utils.PageUtils@47381ed0
2019-03-25 18:21:50 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-25 18:21:50 -HTTP METHOD : GET
2019-03-25 18:21:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-25 18:21:50 -参数 : [1, {}]
2019-03-25 18:21:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-25 18:21:50 -==> Parameters: 1(Long)
2019-03-25 18:21:50 -<==      Total: 1
2019-03-25 18:21:50 -耗时 : 11
2019-03-25 18:21:50 -返回值 : elec/elec/edit
2019-03-25 18:21:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 18:21:50 -HTTP METHOD : GET
2019-03-25 18:21:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:21:50 -参数 : [userType]
2019-03-25 18:21:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:21:50 -==> Parameters: userType(String)
2019-03-25 18:21:50 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-25 18:21:50 -HTTP METHOD : GET
2019-03-25 18:21:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:21:50 -参数 : [userState]
2019-03-25 18:21:50 -<==      Total: 2
2019-03-25 18:21:50 -耗时 : 7
2019-03-25 18:21:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:21:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:21:50 -==> Parameters: userState(String)
2019-03-25 18:21:50 -<==      Total: 2
2019-03-25 18:21:50 -耗时 : 19
2019-03-25 18:21:50 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:21:50 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-25 18:21:50 -HTTP METHOD : GET
2019-03-25 18:21:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:21:50 -参数 : [elecType]
2019-03-25 18:21:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:21:50 -==> Parameters: elecType(String)
2019-03-25 18:21:50 -<==      Total: 2
2019-03-25 18:21:50 -耗时 : 12
2019-03-25 18:21:50 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:22:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 18:22:02 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-25 18:22:02.361(Timestamp)
2019-03-25 18:22:02 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-25 18:22:02 -<==    Updates: 1
2019-03-25 18:23:41 -请求地址 : http://localhost:8081/index
2019-03-25 18:23:41 -HTTP METHOD : GET
2019-03-25 18:23:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 18:23:41 -参数 : [{}]
2019-03-25 18:23:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 18:23:41 -==> Parameters: 1(Long)
2019-03-25 18:23:41 -<==      Total: 46
2019-03-25 18:23:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 18:23:41 -==> Parameters: 138(Long)
2019-03-25 18:23:41 -<==      Total: 1
2019-03-25 18:23:41 -耗时 : 35
2019-03-25 18:23:41 -返回值 : index_v1
2019-03-25 18:23:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 18:23:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 18:23:41.459(Timestamp)
2019-03-25 18:23:41 -请求地址 : http://localhost:8081/main
2019-03-25 18:23:41 -<==    Updates: 1
2019-03-25 18:23:41 -HTTP METHOD : GET
2019-03-25 18:23:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 18:23:41 -参数 : []
2019-03-25 18:23:41 -耗时 : 34
2019-03-25 18:23:41 -返回值 : main
2019-03-25 18:23:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 18:23:41 -HTTP METHOD : GET
2019-03-25 18:23:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 18:23:41 -参数 : []
2019-03-25 18:23:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 18:23:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 18:23:41 -<==      Total: 0
2019-03-25 18:23:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 18:23:41 -==> Parameters: 1(Long), 0(String)
2019-03-25 18:23:41 -<==      Total: 1
2019-03-25 18:23:41 -耗时 : 8
2019-03-25 18:23:41 -返回值 : com.bootdo.common.utils.PageUtils@3793b5a8
2019-03-25 18:23:42 -请求地址 : http://localhost:8081/main
2019-03-25 18:23:42 -HTTP METHOD : GET
2019-03-25 18:23:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 18:23:42 -参数 : []
2019-03-25 18:23:42 -耗时 : 1
2019-03-25 18:23:42 -返回值 : main
2019-03-25 18:23:44 -请求地址 : http://localhost:8081/elec/elec
2019-03-25 18:23:44 -HTTP METHOD : GET
2019-03-25 18:23:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-25 18:23:44 -参数 : []
2019-03-25 18:23:44 -耗时 : 0
2019-03-25 18:23:44 -返回值 : elec/elec/elec
2019-03-25 18:23:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 18:23:45 -HTTP METHOD : GET
2019-03-25 18:23:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:23:45 -参数 : [userType]
2019-03-25 18:23:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:23:45 -==> Parameters: userType(String)
2019-03-25 18:23:45 -<==      Total: 2
2019-03-25 18:23:45 -耗时 : 8
2019-03-25 18:23:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:23:45 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:23:45 -HTTP METHOD : GET
2019-03-25 18:23:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:23:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@4a5e9308]
2019-03-25 18:23:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-25 18:23:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-25 18:23:45 -<==      Total: 10
2019-03-25 18:23:45 -==>  Preparing: select count(*) from elec 
2019-03-25 18:23:45 -==> Parameters: 
2019-03-25 18:23:45 -<==      Total: 1
2019-03-25 18:23:45 -耗时 : 39
2019-03-25 18:23:45 -返回值 : com.bootdo.common.utils.PageUtils@31cd77df
2019-03-25 18:23:52 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-25 18:23:52 -HTTP METHOD : GET
2019-03-25 18:23:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-25 18:23:52 -参数 : [1, {}]
2019-03-25 18:23:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-25 18:23:52 -==> Parameters: 1(Long)
2019-03-25 18:23:52 -<==      Total: 1
2019-03-25 18:23:52 -耗时 : 5
2019-03-25 18:23:52 -返回值 : elec/elec/edit
2019-03-25 18:23:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 18:23:52 -HTTP METHOD : GET
2019-03-25 18:23:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:23:52 -参数 : [userType]
2019-03-25 18:23:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:23:52 -==> Parameters: userType(String)
2019-03-25 18:23:52 -<==      Total: 2
2019-03-25 18:23:52 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-25 18:23:52 -HTTP METHOD : GET
2019-03-25 18:23:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:23:52 -参数 : [elecType]
2019-03-25 18:23:52 -耗时 : 7
2019-03-25 18:23:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:23:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:23:52 -==> Parameters: elecType(String)
2019-03-25 18:23:52 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-25 18:23:52 -HTTP METHOD : GET
2019-03-25 18:23:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:23:52 -参数 : [userState]
2019-03-25 18:23:52 -<==      Total: 2
2019-03-25 18:23:52 -耗时 : 8
2019-03-25 18:23:52 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:23:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:23:52 -==> Parameters: userState(String)
2019-03-25 18:23:52 -<==      Total: 2
2019-03-25 18:23:52 -耗时 : 19
2019-03-25 18:23:52 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:23:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 18:23:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-25 18:23:59.816(Timestamp)
2019-03-25 18:23:59 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-25 18:23:59 -<==    Updates: 1
2019-03-25 18:47:30 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 18:47:30 -==> Parameters: 1(Long)
2019-03-25 18:47:30 -<==      Total: 90
2019-03-25 18:47:30 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-25 18:47:30 -HTTP METHOD : GET
2019-03-25 18:47:30 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-25 18:47:30 -参数 : [1, {}]
2019-03-25 18:47:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-25 18:47:30 -==> Parameters: 1(Long)
2019-03-25 18:47:30 -<==      Total: 1
2019-03-25 18:47:30 -耗时 : 11
2019-03-25 18:47:30 -返回值 : elec/elec/edit
2019-03-25 18:47:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 18:47:30 -HTTP METHOD : GET
2019-03-25 18:47:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:47:30 -参数 : [userType]
2019-03-25 18:47:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:47:30 -==> Parameters: userType(String)
2019-03-25 18:47:30 -<==      Total: 2
2019-03-25 18:47:30 -耗时 : 5
2019-03-25 18:47:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:47:30 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-25 18:47:30 -HTTP METHOD : GET
2019-03-25 18:47:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:47:30 -参数 : [userState]
2019-03-25 18:47:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:47:30 -==> Parameters: userState(String)
2019-03-25 18:47:30 -<==      Total: 2
2019-03-25 18:47:30 -耗时 : 9
2019-03-25 18:47:30 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:47:30 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-25 18:47:30 -HTTP METHOD : GET
2019-03-25 18:47:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:47:30 -参数 : [elecType]
2019-03-25 18:47:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:47:30 -==> Parameters: elecType(String)
2019-03-25 18:47:30 -<==      Total: 2
2019-03-25 18:47:30 -耗时 : 6
2019-03-25 18:47:30 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:48:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 393]
2019-03-25 18:49:12 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:49:12 -HTTP METHOD : GET
2019-03-25 18:49:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:49:12 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, queryType=1, type=A}, com.bootdo.elec.domain.ElecDO@6856c0ff]
2019-03-25 18:49:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:49:12 -==> Parameters: A(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-25 18:49:12 -<==      Total: 6
2019-03-25 18:49:12 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-25 18:49:12 -==> Parameters: A(String), 2019-03(String)
2019-03-25 18:49:12 -<==      Total: 1
2019-03-25 18:49:12 -耗时 : 14
2019-03-25 18:49:12 -返回值 : com.bootdo.common.utils.PageUtils@62071965
2019-03-25 18:49:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 18:49:12 -HTTP METHOD : GET
2019-03-25 18:49:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 18:49:12 -参数 : []
2019-03-25 18:49:12 -耗时 : 1
2019-03-25 18:49:12 -返回值 : system/dept/deptTree
2019-03-25 18:49:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 18:49:12 -HTTP METHOD : GET
2019-03-25 18:49:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 18:49:12 -参数 : []
2019-03-25 18:49:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 18:49:12 -==> Parameters: 
2019-03-25 18:49:12 -<==      Total: 3
2019-03-25 18:49:12 -耗时 : 22
2019-03-25 18:49:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 18:49:15 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:49:15 -HTTP METHOD : GET
2019-03-25 18:49:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:49:15 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@45a6c9c5]
2019-03-25 18:49:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:49:15 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-25 18:49:15 -<==      Total: 6
2019-03-25 18:49:15 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:49:15 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-25 18:49:15 -<==      Total: 1
2019-03-25 18:49:15 -耗时 : 17
2019-03-25 18:49:15 -返回值 : com.bootdo.common.utils.PageUtils@67cf1c22
2019-03-25 18:49:18 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-25 18:49:18 -HTTP METHOD : GET
2019-03-25 18:49:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-25 18:49:18 -参数 : [com.bootdo.elec.vo.ElecVo@3bd24746, org.apache.shiro.web.servlet.ShiroHttpServletResponse@21013624]
2019-03-25 18:49:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:49:18 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-25 18:49:18 -<==      Total: 6
2019-03-25 18:49:19 -耗时 : 909
2019-03-25 18:49:19 -返回值 : null
2019-03-25 18:49:58 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:49:58 -HTTP METHOD : GET
2019-03-25 18:49:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:49:58 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@3c087ce2]
2019-03-25 18:49:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:49:58 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-25 18:49:58 -<==      Total: 0
2019-03-25 18:49:58 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:49:58 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-25 18:49:58 -<==      Total: 1
2019-03-25 18:49:58 -耗时 : 115
2019-03-25 18:49:58 -返回值 : com.bootdo.common.utils.PageUtils@48de9dff
2019-03-25 18:49:59 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:49:59 -HTTP METHOD : GET
2019-03-25 18:49:59 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:49:59 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@24a58368]
2019-03-25 18:49:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:49:59 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-25 18:49:59 -<==      Total: 0
2019-03-25 18:49:59 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:49:59 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-25 18:49:59 -<==      Total: 1
2019-03-25 18:49:59 -耗时 : 8
2019-03-25 18:49:59 -返回值 : com.bootdo.common.utils.PageUtils@7d988f0c
2019-03-25 18:50:04 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:50:04 -HTTP METHOD : GET
2019-03-25 18:50:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:50:04 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03, queryType=2, type=B}, com.bootdo.elec.domain.ElecDO@608972d4]
2019-03-25 18:50:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:50:04 -==> Parameters: B(String), 2(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-25 18:50:04 -<==      Total: 0
2019-03-25 18:50:04 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:50:04 -==> Parameters: B(String), 2(String), 2019-03(String)
2019-03-25 18:50:04 -<==      Total: 1
2019-03-25 18:50:04 -耗时 : 20
2019-03-25 18:50:04 -返回值 : com.bootdo.common.utils.PageUtils@5848439c
2019-03-25 18:50:09 -请求地址 : http://localhost:8081/index
2019-03-25 18:50:09 -HTTP METHOD : GET
2019-03-25 18:50:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 18:50:09 -参数 : [{}]
2019-03-25 18:50:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 18:50:09 -==> Parameters: 1(Long)
2019-03-25 18:50:09 -<==      Total: 46
2019-03-25 18:50:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 18:50:09 -==> Parameters: 138(Long)
2019-03-25 18:50:09 -<==      Total: 1
2019-03-25 18:50:09 -耗时 : 42
2019-03-25 18:50:09 -返回值 : index_v1
2019-03-25 18:50:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 18:50:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 18:50:09.702(Timestamp)
2019-03-25 18:50:09 -请求地址 : http://localhost:8081/main
2019-03-25 18:50:09 -HTTP METHOD : GET
2019-03-25 18:50:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 18:50:09 -参数 : []
2019-03-25 18:50:09 -耗时 : 1
2019-03-25 18:50:09 -返回值 : main
2019-03-25 18:50:09 -<==    Updates: 1
2019-03-25 18:50:10 -请求地址 : http://localhost:8081/main
2019-03-25 18:50:10 -HTTP METHOD : GET
2019-03-25 18:50:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 18:50:10 -参数 : []
2019-03-25 18:50:10 -耗时 : 0
2019-03-25 18:50:10 -返回值 : main
2019-03-25 18:50:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 18:50:10 -HTTP METHOD : GET
2019-03-25 18:50:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 18:50:10 -参数 : []
2019-03-25 18:50:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 18:50:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 18:50:10 -<==      Total: 0
2019-03-25 18:50:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 18:50:10 -==> Parameters: 1(Long), 0(String)
2019-03-25 18:50:10 -<==      Total: 1
2019-03-25 18:50:10 -耗时 : 21
2019-03-25 18:50:10 -返回值 : com.bootdo.common.utils.PageUtils@32a64b3f
2019-03-25 18:50:11 -请求地址 : http://localhost:8081/elec/elec
2019-03-25 18:50:11 -HTTP METHOD : GET
2019-03-25 18:50:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-25 18:50:11 -参数 : []
2019-03-25 18:50:11 -耗时 : 0
2019-03-25 18:50:11 -返回值 : elec/elec/elec
2019-03-25 18:50:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 18:50:11 -HTTP METHOD : GET
2019-03-25 18:50:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:50:11 -参数 : [userType]
2019-03-25 18:50:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:50:11 -==> Parameters: userType(String)
2019-03-25 18:50:12 -<==      Total: 2
2019-03-25 18:50:12 -耗时 : 6
2019-03-25 18:50:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:50:12 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:50:12 -HTTP METHOD : GET
2019-03-25 18:50:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:50:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@5d273ac5]
2019-03-25 18:50:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-25 18:50:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-25 18:50:12 -<==      Total: 10
2019-03-25 18:50:12 -==>  Preparing: select count(*) from elec 
2019-03-25 18:50:12 -==> Parameters: 
2019-03-25 18:50:12 -<==      Total: 1
2019-03-25 18:50:12 -耗时 : 15
2019-03-25 18:50:12 -返回值 : com.bootdo.common.utils.PageUtils@30f34248
2019-03-25 18:50:13 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:50:13 -HTTP METHOD : GET
2019-03-25 18:50:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:50:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@7a6e2e74]
2019-03-25 18:50:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-25 18:50:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-25 18:50:13 -<==      Total: 2
2019-03-25 18:50:13 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-25 18:50:13 -==> Parameters: 
2019-03-25 18:50:13 -<==      Total: 1
2019-03-25 18:50:13 -耗时 : 17
2019-03-25 18:50:13 -返回值 : com.bootdo.common.utils.PageUtils@dbc0c48
2019-03-25 18:51:23 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:51:23 -HTTP METHOD : GET
2019-03-25 18:51:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:51:23 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, queryType=2, type=A}, com.bootdo.elec.domain.ElecDO@1b007a25]
2019-03-25 18:51:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:51:23 -==> Parameters: A(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-25 18:51:23 -<==      Total: 0
2019-03-25 18:51:23 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and CREATE_TIME = ? 
2019-03-25 18:51:23 -==> Parameters: A(String), 2019-03(String)
2019-03-25 18:51:23 -<==      Total: 1
2019-03-25 18:51:23 -耗时 : 17
2019-03-25 18:51:23 -返回值 : com.bootdo.common.utils.PageUtils@7c1d97d
2019-03-25 18:51:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 18:51:24 -HTTP METHOD : GET
2019-03-25 18:51:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 18:51:24 -参数 : []
2019-03-25 18:51:24 -耗时 : 0
2019-03-25 18:51:24 -返回值 : system/dept/deptTree
2019-03-25 18:51:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 18:51:24 -HTTP METHOD : GET
2019-03-25 18:51:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 18:51:24 -参数 : []
2019-03-25 18:51:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 18:51:24 -==> Parameters: 
2019-03-25 18:51:24 -<==      Total: 3
2019-03-25 18:51:24 -耗时 : 7
2019-03-25 18:51:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 18:51:28 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:51:28 -HTTP METHOD : GET
2019-03-25 18:51:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:51:28 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=1}, com.bootdo.elec.domain.ElecDO@6aa9e05]
2019-03-25 18:51:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:51:28 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-25 18:51:28 -<==      Total: 6
2019-03-25 18:51:28 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:51:28 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-25 18:51:28 -<==      Total: 1
2019-03-25 18:51:28 -耗时 : 10
2019-03-25 18:51:28 -返回值 : com.bootdo.common.utils.PageUtils@4d4f87af
2019-03-25 18:51:39 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:51:39 -HTTP METHOD : GET
2019-03-25 18:51:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:51:39 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, queryType=2}, com.bootdo.elec.domain.ElecDO@50de8377]
2019-03-25 18:51:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:51:39 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-25 18:51:39 -<==      Total: 0
2019-03-25 18:51:39 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:51:39 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-25 18:51:39 -<==      Total: 1
2019-03-25 18:51:39 -耗时 : 11
2019-03-25 18:51:39 -返回值 : com.bootdo.common.utils.PageUtils@7a802534
2019-03-25 18:51:42 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:51:42 -HTTP METHOD : GET
2019-03-25 18:51:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:51:42 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03, queryType=2, type=B}, com.bootdo.elec.domain.ElecDO@199864]
2019-03-25 18:51:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:51:42 -==> Parameters: B(String), 2(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-25 18:51:42 -<==      Total: 0
2019-03-25 18:51:42 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:51:42 -==> Parameters: B(String), 2(String), 2019-03(String)
2019-03-25 18:51:42 -<==      Total: 1
2019-03-25 18:51:42 -耗时 : 14
2019-03-25 18:51:42 -返回值 : com.bootdo.common.utils.PageUtils@4f91fb2d
2019-03-25 18:51:50 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:51:50 -HTTP METHOD : GET
2019-03-25 18:51:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:51:50 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=2019-02, queryType=2}, com.bootdo.elec.domain.ElecDO@778b0b65]
2019-03-25 18:51:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:51:50 -==> Parameters: B(String), 2(String), 2019-02(String), 0(Integer), 10(Integer)
2019-03-25 18:51:50 -<==      Total: 0
2019-03-25 18:51:50 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:51:50 -==> Parameters: B(String), 2(String), 2019-02(String)
2019-03-25 18:51:50 -<==      Total: 1
2019-03-25 18:51:50 -耗时 : 8
2019-03-25 18:51:50 -返回值 : com.bootdo.common.utils.PageUtils@f265aeb
2019-03-25 18:51:50 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:51:50 -HTTP METHOD : GET
2019-03-25 18:51:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:51:50 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=2019-02, queryType=2}, com.bootdo.elec.domain.ElecDO@2449bcc4]
2019-03-25 18:51:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:51:50 -==> Parameters: B(String), 2(String), 2019-02(String), 0(Integer), 10(Integer)
2019-03-25 18:51:50 -<==      Total: 0
2019-03-25 18:51:50 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:51:50 -==> Parameters: B(String), 2(String), 2019-02(String)
2019-03-25 18:51:50 -<==      Total: 1
2019-03-25 18:51:50 -耗时 : 8
2019-03-25 18:51:50 -返回值 : com.bootdo.common.utils.PageUtils@77f536c2
2019-03-25 18:51:51 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:51:51 -HTTP METHOD : GET
2019-03-25 18:51:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:51:51 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=2019-02, queryType=2}, com.bootdo.elec.domain.ElecDO@3cb8e45b]
2019-03-25 18:51:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:51:51 -==> Parameters: B(String), 2(String), 2019-02(String), 0(Integer), 10(Integer)
2019-03-25 18:51:51 -<==      Total: 0
2019-03-25 18:51:51 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:51:51 -==> Parameters: B(String), 2(String), 2019-02(String)
2019-03-25 18:51:51 -<==      Total: 1
2019-03-25 18:51:51 -耗时 : 6
2019-03-25 18:51:51 -返回值 : com.bootdo.common.utils.PageUtils@457006b6
2019-03-25 18:51:51 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:51:51 -HTTP METHOD : GET
2019-03-25 18:51:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:51:51 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=2019-02, queryType=2}, com.bootdo.elec.domain.ElecDO@1f4762b5]
2019-03-25 18:51:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:51:51 -==> Parameters: B(String), 2(String), 2019-02(String), 0(Integer), 10(Integer)
2019-03-25 18:51:51 -<==      Total: 0
2019-03-25 18:51:51 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:51:51 -==> Parameters: B(String), 2(String), 2019-02(String)
2019-03-25 18:51:51 -<==      Total: 1
2019-03-25 18:51:51 -耗时 : 7
2019-03-25 18:51:51 -返回值 : com.bootdo.common.utils.PageUtils@4334ca81
2019-03-25 18:51:54 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:51:54 -HTTP METHOD : GET
2019-03-25 18:51:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:51:54 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-02, queryType=2, type=A}, com.bootdo.elec.domain.ElecDO@38f5a70b]
2019-03-25 18:51:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:51:54 -==> Parameters: A(String), 2(String), 2019-02(String), 0(Integer), 10(Integer)
2019-03-25 18:51:54 -<==      Total: 1
2019-03-25 18:51:54 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:51:54 -==> Parameters: A(String), 2(String), 2019-02(String)
2019-03-25 18:51:54 -<==      Total: 1
2019-03-25 18:51:54 -耗时 : 20
2019-03-25 18:51:54 -返回值 : com.bootdo.common.utils.PageUtils@5d1cc2bf
2019-03-25 18:52:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 18:52:06 -HTTP METHOD : GET
2019-03-25 18:52:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 18:52:06 -参数 : []
2019-03-25 18:52:06 -耗时 : 3
2019-03-25 18:52:06 -返回值 : system/dept/deptTree
2019-03-25 18:52:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 18:52:06 -HTTP METHOD : GET
2019-03-25 18:52:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 18:52:06 -参数 : []
2019-03-25 18:52:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 18:52:06 -==> Parameters: 
2019-03-25 18:52:06 -<==      Total: 3
2019-03-25 18:52:06 -耗时 : 4
2019-03-25 18:52:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 18:52:09 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:52:09 -HTTP METHOD : GET
2019-03-25 18:52:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:52:09 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, createTime=2019-02, queryType=1}, com.bootdo.elec.domain.ElecDO@20d9b849]
2019-03-25 18:52:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:52:09 -==> Parameters: A(String), 3(String), 2019-02(String), 0(Integer), 10(Integer)
2019-03-25 18:52:09 -<==      Total: 1
2019-03-25 18:52:09 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:52:09 -==> Parameters: A(String), 3(String), 2019-02(String)
2019-03-25 18:52:09 -<==      Total: 1
2019-03-25 18:52:09 -耗时 : 10
2019-03-25 18:52:09 -返回值 : com.bootdo.common.utils.PageUtils@68361178
2019-03-25 18:52:19 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:52:19 -HTTP METHOD : GET
2019-03-25 18:52:19 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:52:19 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, createTime=2019-02, queryType=2}, com.bootdo.elec.domain.ElecDO@1e331b64]
2019-03-25 18:52:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:52:19 -==> Parameters: A(String), 3(String), 2019-02(String), 0(Integer), 10(Integer)
2019-03-25 18:52:19 -<==      Total: 0
2019-03-25 18:52:19 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:52:19 -==> Parameters: A(String), 3(String), 2019-02(String)
2019-03-25 18:52:19 -<==      Total: 1
2019-03-25 18:52:19 -耗时 : 8
2019-03-25 18:52:19 -返回值 : com.bootdo.common.utils.PageUtils@35b638bc
2019-03-25 18:52:20 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:52:20 -HTTP METHOD : GET
2019-03-25 18:52:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:52:20 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, createTime=2019-02, queryType=2}, com.bootdo.elec.domain.ElecDO@67425a98]
2019-03-25 18:52:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:52:20 -==> Parameters: A(String), 3(String), 2019-02(String), 0(Integer), 10(Integer)
2019-03-25 18:52:20 -<==      Total: 0
2019-03-25 18:52:20 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:52:20 -==> Parameters: A(String), 3(String), 2019-02(String)
2019-03-25 18:52:20 -<==      Total: 1
2019-03-25 18:52:20 -耗时 : 8
2019-03-25 18:52:20 -返回值 : com.bootdo.common.utils.PageUtils@488a54de
2019-03-25 18:52:21 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:52:21 -HTTP METHOD : GET
2019-03-25 18:52:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:52:21 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, createTime=2019-02, queryType=2}, com.bootdo.elec.domain.ElecDO@4844fbe8]
2019-03-25 18:52:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:52:21 -==> Parameters: A(String), 3(String), 2019-02(String), 0(Integer), 10(Integer)
2019-03-25 18:52:21 -<==      Total: 0
2019-03-25 18:52:21 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:52:21 -==> Parameters: A(String), 3(String), 2019-02(String)
2019-03-25 18:52:21 -<==      Total: 1
2019-03-25 18:52:21 -耗时 : 7
2019-03-25 18:52:21 -返回值 : com.bootdo.common.utils.PageUtils@5957a4e2
2019-03-25 18:52:24 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:52:24 -HTTP METHOD : GET
2019-03-25 18:52:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:52:24 -参数 : [{limit=10, offset=0, userType=B, userOrg=3, userId=, createTime=2019-02, queryType=2, type=B}, com.bootdo.elec.domain.ElecDO@7c592323]
2019-03-25 18:52:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:52:24 -==> Parameters: B(String), 3(String), 2019-02(String), 0(Integer), 10(Integer)
2019-03-25 18:52:24 -<==      Total: 1
2019-03-25 18:52:24 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:52:24 -==> Parameters: B(String), 3(String), 2019-02(String)
2019-03-25 18:52:24 -<==      Total: 1
2019-03-25 18:52:24 -耗时 : 23
2019-03-25 18:52:24 -返回值 : com.bootdo.common.utils.PageUtils@44c65de2
2019-03-25 18:52:34 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:52:34 -HTTP METHOD : GET
2019-03-25 18:52:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:52:34 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, createTime=2019-03, queryType=2, type=A}, com.bootdo.elec.domain.ElecDO@426266fb]
2019-03-25 18:52:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:52:34 -==> Parameters: A(String), 3(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-25 18:52:34 -<==      Total: 0
2019-03-25 18:52:34 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 and user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:52:34 -==> Parameters: A(String), 3(String), 2019-03(String)
2019-03-25 18:52:34 -<==      Total: 1
2019-03-25 18:52:34 -耗时 : 13
2019-03-25 18:52:34 -返回值 : com.bootdo.common.utils.PageUtils@4764b748
2019-03-25 18:52:37 -请求地址 : http://localhost:8081/index
2019-03-25 18:52:37 -HTTP METHOD : GET
2019-03-25 18:52:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 18:52:37 -参数 : [{}]
2019-03-25 18:52:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 18:52:37 -==> Parameters: 1(Long)
2019-03-25 18:52:37 -<==      Total: 46
2019-03-25 18:52:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 18:52:37 -==> Parameters: 138(Long)
2019-03-25 18:52:37 -<==      Total: 1
2019-03-25 18:52:37 -耗时 : 22
2019-03-25 18:52:37 -返回值 : index_v1
2019-03-25 18:52:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 18:52:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 18:52:37.686(Timestamp)
2019-03-25 18:52:37 -请求地址 : http://localhost:8081/main
2019-03-25 18:52:37 -HTTP METHOD : GET
2019-03-25 18:52:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 18:52:37 -参数 : []
2019-03-25 18:52:37 -耗时 : 1
2019-03-25 18:52:37 -返回值 : main
2019-03-25 18:52:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 18:52:37 -HTTP METHOD : GET
2019-03-25 18:52:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 18:52:37 -参数 : []
2019-03-25 18:52:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 18:52:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 18:52:37 -<==      Total: 0
2019-03-25 18:52:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 18:52:37 -==> Parameters: 1(Long), 0(String)
2019-03-25 18:52:37 -<==      Total: 1
2019-03-25 18:52:37 -耗时 : 8
2019-03-25 18:52:37 -返回值 : com.bootdo.common.utils.PageUtils@4e7bfd38
2019-03-25 18:52:37 -<==    Updates: 1
2019-03-25 18:52:37 -请求地址 : http://localhost:8081/main
2019-03-25 18:52:37 -HTTP METHOD : GET
2019-03-25 18:52:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 18:52:37 -参数 : []
2019-03-25 18:52:37 -耗时 : 1
2019-03-25 18:52:37 -返回值 : main
2019-03-25 18:52:39 -请求地址 : http://localhost:8081/elec/elec
2019-03-25 18:52:39 -HTTP METHOD : GET
2019-03-25 18:52:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-25 18:52:39 -参数 : []
2019-03-25 18:52:39 -耗时 : 1
2019-03-25 18:52:39 -返回值 : elec/elec/elec
2019-03-25 18:52:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 18:52:40 -HTTP METHOD : GET
2019-03-25 18:52:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:52:40 -参数 : [userType]
2019-03-25 18:52:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:52:40 -==> Parameters: userType(String)
2019-03-25 18:52:40 -<==      Total: 2
2019-03-25 18:52:40 -耗时 : 4
2019-03-25 18:52:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:52:40 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:52:40 -HTTP METHOD : GET
2019-03-25 18:52:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:52:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1573d72b]
2019-03-25 18:52:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-25 18:52:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-25 18:52:40 -<==      Total: 10
2019-03-25 18:52:40 -==>  Preparing: select count(*) from elec 
2019-03-25 18:52:40 -==> Parameters: 
2019-03-25 18:52:40 -<==      Total: 1
2019-03-25 18:52:40 -耗时 : 12
2019-03-25 18:52:40 -返回值 : com.bootdo.common.utils.PageUtils@6ee6ae93
2019-03-25 18:52:51 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 18:52:51 -HTTP METHOD : GET
2019-03-25 18:52:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 18:52:51 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, queryType=1, type=A}, com.bootdo.elec.domain.ElecDO@3d6951cd]
2019-03-25 18:52:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-25 18:52:51 -==> Parameters: A(String), 2019-03(String), 0(Integer), 10(Integer)
2019-03-25 18:52:51 -<==      Total: 6
2019-03-25 18:52:51 -==>  Preparing: select count(*) from elec WHERE user_type = ? and CREATE_TIME = ? 
2019-03-25 18:52:51 -==> Parameters: A(String), 2019-03(String)
2019-03-25 18:52:51 -<==      Total: 1
2019-03-25 18:52:51 -耗时 : 23
2019-03-25 18:52:51 -返回值 : com.bootdo.common.utils.PageUtils@73cc0ddd
2019-03-25 18:52:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 18:52:51 -HTTP METHOD : GET
2019-03-25 18:52:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 18:52:51 -参数 : []
2019-03-25 18:52:51 -耗时 : 0
2019-03-25 18:52:51 -返回值 : system/dept/deptTree
2019-03-25 18:52:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 18:52:52 -HTTP METHOD : GET
2019-03-25 18:52:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 18:52:52 -参数 : []
2019-03-25 18:52:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 18:52:52 -==> Parameters: 
2019-03-25 18:52:52 -<==      Total: 3
2019-03-25 18:52:52 -耗时 : 3
2019-03-25 18:52:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 18:52:56 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-25 18:52:56 -HTTP METHOD : GET
2019-03-25 18:52:56 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-25 18:52:56 -参数 : [com.bootdo.elec.vo.ElecVo@2e8157af, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3a5259d2]
2019-03-25 18:52:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-25 18:52:56 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-25 18:52:56 -<==      Total: 6
2019-03-25 18:52:56 -耗时 : 17
2019-03-25 18:52:56 -返回值 : null
2019-03-25 18:53:53 -请求地址 : http://localhost:8081/charts/countDD
2019-03-25 18:53:53 -HTTP METHOD : GET
2019-03-25 18:53:53 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-25 18:53:53 -参数 : []
2019-03-25 18:53:53 -耗时 : 0
2019-03-25 18:53:53 -返回值 : charts/countDD
2019-03-25 18:57:46 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 18:57:46 -==> Parameters: 1(Long)
2019-03-25 18:57:46 -<==      Total: 90
2019-03-25 18:57:46 -请求地址 : http://localhost:8081/heat/heat
2019-03-25 18:57:46 -HTTP METHOD : GET
2019-03-25 18:57:46 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-25 18:57:46 -参数 : []
2019-03-25 18:57:46 -耗时 : 0
2019-03-25 18:57:46 -返回值 : heat/heat/heat
2019-03-25 18:57:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 18:57:47 -HTTP METHOD : GET
2019-03-25 18:57:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 18:57:47 -参数 : [userType]
2019-03-25 18:57:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 18:57:47 -==> Parameters: userType(String)
2019-03-25 18:57:47 -<==      Total: 2
2019-03-25 18:57:47 -耗时 : 4
2019-03-25 18:57:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 18:57:47 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-25 18:57:47 -HTTP METHOD : GET
2019-03-25 18:57:47 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-25 18:57:47 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-25 18:57:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-25 18:57:47 -==> Parameters: 0(Integer), 3(Integer)
2019-03-25 18:57:47 -<==      Total: 3
2019-03-25 18:57:47 -==>  Preparing: select count(*) from heat 
2019-03-25 18:57:47 -==> Parameters: 
2019-03-25 18:57:47 -<==      Total: 1
2019-03-25 18:57:47 -耗时 : 41
2019-03-25 18:57:47 -返回值 : com.bootdo.common.utils.PageUtils@5337095
2019-03-25 18:57:48 -请求地址 : http://localhost:8081/heat/heatInto
2019-03-25 18:57:48 -HTTP METHOD : GET
2019-03-25 18:57:48 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-03-25 18:57:48 -参数 : []
2019-03-25 18:57:48 -耗时 : 1
2019-03-25 18:57:48 -返回值 : heat/heatInto/heatInto
2019-03-25 18:57:49 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-25 18:57:49 -HTTP METHOD : GET
2019-03-25 18:57:49 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-25 18:57:49 -参数 : []
2019-03-25 18:57:49 -耗时 : 0
2019-03-25 18:57:49 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-25 18:57:50 -请求地址 : http://localhost:8081/heat/heatPrice
2019-03-25 18:57:50 -HTTP METHOD : GET
2019-03-25 18:57:50 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-03-25 18:57:50 -参数 : []
2019-03-25 18:57:50 -耗时 : 0
2019-03-25 18:57:50 -返回值 : heat/heatPrice/heatPrice
2019-03-25 18:57:50 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-03-25 18:57:50 -HTTP METHOD : GET
2019-03-25 18:57:50 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-03-25 18:57:50 -参数 : [{limit=10, offset=0}]
2019-03-25 18:57:50 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`business_heat`,`civil_heat`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id desc limit ?, ? 
2019-03-25 18:57:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-25 18:57:50 -<==      Total: 2
2019-03-25 18:57:50 -==>  Preparing: select count(*) from heat_price 
2019-03-25 18:57:50 -==> Parameters: 
2019-03-25 18:57:50 -<==      Total: 1
2019-03-25 18:57:50 -耗时 : 30
2019-03-25 18:57:50 -返回值 : com.bootdo.common.utils.PageUtils@1869d084
2019-03-25 19:18:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 825]
2019-03-25 19:21:06 -Validating all active sessions...
2019-03-25 19:21:06 -Finished session validation.  No sessions were stopped.
2019-03-25 19:45:25 -请求地址 : http://localhost:8081/login;JSESSIONID=2240fab8-f810-4eee-8875-96dbe543d739
2019-03-25 19:45:25 -HTTP METHOD : GET
2019-03-25 19:45:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 19:45:25 -参数 : [{}]
2019-03-25 19:45:25 -耗时 : 2
2019-03-25 19:45:25 -返回值 : login
2019-03-25 19:45:29 -请求地址 : http://localhost:8081/getVerify
2019-03-25 19:45:29 -HTTP METHOD : GET
2019-03-25 19:45:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 19:45:29 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@37c7d16a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1e830738]
2019-03-25 19:45:31 -7622
2019-03-25 19:45:32 -耗时 : 2812
2019-03-25 19:45:32 -返回值 : null
2019-03-25 19:45:32 -请求地址 : http://localhost:8081/login
2019-03-25 19:45:32 -HTTP METHOD : GET
2019-03-25 19:45:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 19:45:32 -参数 : [{}]
2019-03-25 19:45:32 -耗时 : 1
2019-03-25 19:45:32 -返回值 : login
2019-03-25 19:47:45 -请求地址 : http://localhost:8081/login
2019-03-25 19:47:45 -HTTP METHOD : POST
2019-03-25 19:47:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 19:47:45 -参数 : [admin, 111111, 7622, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4bd8d03]
2019-03-25 19:47:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 19:47:47 -==> Parameters: admin(String)
2019-03-25 19:47:49 -<==      Total: 1
2019-03-25 19:47:49 -耗时 : 4581
2019-03-25 19:47:49 -返回值 : {msg=操作成功, code=0}
2019-03-25 19:47:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 19:47:50 -==> Parameters: 1(Long), admin(String), 登录(String), 4581(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 19:47:49.824(Timestamp)
2019-03-25 19:47:51 -请求地址 : http://localhost:8081/index
2019-03-25 19:47:51 -HTTP METHOD : GET
2019-03-25 19:47:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 19:47:51 -参数 : [{}]
2019-03-25 19:47:52 -<==    Updates: 1
2019-03-25 19:47:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 19:47:52 -==> Parameters: 1(Long)
2019-03-25 19:47:54 -<==      Total: 46
2019-03-25 19:47:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 19:47:55 -==> Parameters: 138(Long)
2019-03-25 19:47:55 -<==      Total: 1
2019-03-25 19:47:55 -耗时 : 3181
2019-03-25 19:47:55 -返回值 : index_v1
2019-03-25 19:47:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 19:47:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 3182(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 19:47:55.112(Timestamp)
2019-03-25 19:47:56 -<==    Updates: 1
2019-03-25 19:47:56 -请求地址 : http://localhost:8081/main
2019-03-25 19:47:56 -HTTP METHOD : GET
2019-03-25 19:47:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 19:47:56 -参数 : []
2019-03-25 19:47:56 -耗时 : 2
2019-03-25 19:47:56 -返回值 : main
2019-03-25 19:48:01 -请求地址 : http://localhost:8081/main
2019-03-25 19:48:01 -HTTP METHOD : GET
2019-03-25 19:48:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 19:48:01 -参数 : []
2019-03-25 19:48:01 -耗时 : 2
2019-03-25 19:48:01 -返回值 : main
2019-03-25 19:48:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 19:48:01 -HTTP METHOD : GET
2019-03-25 19:48:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 19:48:01 -参数 : []
2019-03-25 19:48:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 19:48:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 19:48:01 -<==      Total: 0
2019-03-25 19:48:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 19:48:01 -==> Parameters: 1(Long), 0(String)
2019-03-25 19:48:01 -<==      Total: 1
2019-03-25 19:48:01 -耗时 : 292
2019-03-25 19:48:01 -返回值 : com.bootdo.common.utils.PageUtils@3f20d288
2019-03-25 19:48:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1251]
2019-03-25 19:48:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 19:48:52 -==> Parameters: 1(Long)
2019-03-25 19:48:52 -<==      Total: 90
2019-03-25 19:48:52 -请求地址 : http://localhost:8081/elec/elec
2019-03-25 19:48:52 -HTTP METHOD : GET
2019-03-25 19:48:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-25 19:48:52 -参数 : []
2019-03-25 19:48:52 -耗时 : 0
2019-03-25 19:48:52 -返回值 : elec/elec/elec
2019-03-25 19:48:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 19:48:53 -HTTP METHOD : GET
2019-03-25 19:48:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 19:48:53 -参数 : [userType]
2019-03-25 19:48:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 19:48:53 -==> Parameters: userType(String)
2019-03-25 19:48:53 -<==      Total: 2
2019-03-25 19:48:53 -耗时 : 26
2019-03-25 19:48:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 19:48:53 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 19:48:53 -HTTP METHOD : GET
2019-03-25 19:48:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 19:48:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3c4ed610]
2019-03-25 19:48:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-25 19:48:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-25 19:48:53 -<==      Total: 10
2019-03-25 19:48:53 -==>  Preparing: select count(*) from elec 
2019-03-25 19:48:53 -==> Parameters: 
2019-03-25 19:48:53 -<==      Total: 1
2019-03-25 19:48:53 -耗时 : 142
2019-03-25 19:48:53 -返回值 : com.bootdo.common.utils.PageUtils@48b3fd58
2019-03-25 19:48:57 -请求地址 : http://localhost:8081/elec/elec/edit/3
2019-03-25 19:48:57 -HTTP METHOD : GET
2019-03-25 19:48:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-25 19:48:57 -参数 : [3, {}]
2019-03-25 19:48:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-25 19:48:57 -==> Parameters: 3(Long)
2019-03-25 19:48:57 -<==      Total: 1
2019-03-25 19:48:57 -耗时 : 78
2019-03-25 19:48:57 -返回值 : elec/elec/edit
2019-03-25 19:48:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 19:48:57 -HTTP METHOD : GET
2019-03-25 19:48:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 19:48:57 -参数 : [userType]
2019-03-25 19:48:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 19:48:57 -==> Parameters: userType(String)
2019-03-25 19:48:57 -<==      Total: 2
2019-03-25 19:48:57 -耗时 : 11
2019-03-25 19:48:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 19:48:57 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-25 19:48:57 -HTTP METHOD : GET
2019-03-25 19:48:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 19:48:57 -参数 : [userState]
2019-03-25 19:48:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 19:48:57 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-25 19:48:57 -HTTP METHOD : GET
2019-03-25 19:48:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 19:48:57 -参数 : [elecType]
2019-03-25 19:48:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 19:48:57 -==> Parameters: elecType(String)
2019-03-25 19:48:57 -<==      Total: 2
2019-03-25 19:48:57 -耗时 : 5
2019-03-25 19:48:57 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 19:48:57 -==> Parameters: userState(String)
2019-03-25 19:48:57 -<==      Total: 2
2019-03-25 19:48:57 -耗时 : 32
2019-03-25 19:48:57 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 19:49:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 19:49:03 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"](String), null, 2019-03-25 19:49:03.365(Timestamp)
2019-03-25 19:49:03 -<==    Updates: 1
2019-03-25 19:49:03 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-25 19:54:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-25 19:54:01 -HTTP METHOD : GET
2019-03-25 19:54:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-25 19:54:01 -参数 : []
2019-03-25 19:54:01 -耗时 : 0
2019-03-25 19:54:01 -返回值 : system/dept/deptTree
2019-03-25 19:54:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-25 19:54:01 -HTTP METHOD : GET
2019-03-25 19:54:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-25 19:54:01 -参数 : []
2019-03-25 19:54:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-25 19:54:01 -==> Parameters: 
2019-03-25 19:54:01 -<==      Total: 3
2019-03-25 19:54:01 -耗时 : 5
2019-03-25 19:54:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-25 19:56:17 -请求地址 : http://localhost:8081/login;JSESSIONID=ac0532e7-490a-471b-89bd-394b086f96ca
2019-03-25 19:56:17 -HTTP METHOD : GET
2019-03-25 19:56:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 19:56:17 -参数 : [{}]
2019-03-25 19:56:17 -耗时 : 1
2019-03-25 19:56:17 -返回值 : login
2019-03-25 19:56:18 -请求地址 : http://localhost:8081/getVerify
2019-03-25 19:56:18 -HTTP METHOD : GET
2019-03-25 19:56:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-25 19:56:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6056527e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1f8c48c0]
2019-03-25 19:56:18 -1756
2019-03-25 19:56:18 -耗时 : 61
2019-03-25 19:56:18 -返回值 : null
2019-03-25 19:56:18 -请求地址 : http://localhost:8081/login
2019-03-25 19:56:18 -HTTP METHOD : GET
2019-03-25 19:56:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-25 19:56:18 -参数 : [{}]
2019-03-25 19:56:18 -耗时 : 1
2019-03-25 19:56:18 -返回值 : login
2019-03-25 19:56:23 -请求地址 : http://localhost:8081/login
2019-03-25 19:56:23 -HTTP METHOD : POST
2019-03-25 19:56:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-25 19:56:23 -参数 : [admin, 111111, 1756, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5198242f]
2019-03-25 19:56:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-25 19:56:23 -==> Parameters: admin(String)
2019-03-25 19:56:23 -<==      Total: 1
2019-03-25 19:56:23 -耗时 : 7
2019-03-25 19:56:23 -返回值 : {msg=操作成功, code=0}
2019-03-25 19:56:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 19:56:23 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-25 19:56:23.051(Timestamp)
2019-03-25 19:56:23 -请求地址 : http://localhost:8081/index
2019-03-25 19:56:23 -HTTP METHOD : GET
2019-03-25 19:56:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-25 19:56:23 -参数 : [{}]
2019-03-25 19:56:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-25 19:56:23 -==> Parameters: 1(Long)
2019-03-25 19:56:23 -<==    Updates: 1
2019-03-25 19:56:23 -<==      Total: 46
2019-03-25 19:56:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-25 19:56:23 -==> Parameters: 138(Long)
2019-03-25 19:56:23 -<==      Total: 1
2019-03-25 19:56:23 -耗时 : 269
2019-03-25 19:56:23 -返回值 : index_v1
2019-03-25 19:56:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 19:56:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 269(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-25 19:56:23.364(Timestamp)
2019-03-25 19:56:23 -<==    Updates: 1
2019-03-25 19:56:23 -请求地址 : http://localhost:8081/main
2019-03-25 19:56:23 -HTTP METHOD : GET
2019-03-25 19:56:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 19:56:23 -参数 : []
2019-03-25 19:56:23 -耗时 : 1
2019-03-25 19:56:23 -返回值 : main
2019-03-25 19:56:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-25 19:56:29 -HTTP METHOD : GET
2019-03-25 19:56:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-25 19:56:29 -参数 : []
2019-03-25 19:56:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-25 19:56:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-25 19:56:29 -<==      Total: 0
2019-03-25 19:56:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-25 19:56:29 -==> Parameters: 1(Long), 0(String)
2019-03-25 19:56:29 -<==      Total: 1
2019-03-25 19:56:29 -耗时 : 10
2019-03-25 19:56:29 -返回值 : com.bootdo.common.utils.PageUtils@50990cc
2019-03-25 19:56:29 -请求地址 : http://localhost:8081/main
2019-03-25 19:56:29 -HTTP METHOD : GET
2019-03-25 19:56:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-25 19:56:29 -参数 : []
2019-03-25 19:56:29 -耗时 : 1
2019-03-25 19:56:29 -返回值 : main
2019-03-25 19:56:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-25 19:56:32 -==> Parameters: 1(Long)
2019-03-25 19:56:32 -<==      Total: 90
2019-03-25 19:56:32 -请求地址 : http://localhost:8081/elec/elec
2019-03-25 19:56:32 -HTTP METHOD : GET
2019-03-25 19:56:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-25 19:56:32 -参数 : []
2019-03-25 19:56:32 -耗时 : 0
2019-03-25 19:56:32 -返回值 : elec/elec/elec
2019-03-25 19:56:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 19:56:34 -HTTP METHOD : GET
2019-03-25 19:56:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 19:56:34 -参数 : [userType]
2019-03-25 19:56:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 19:56:34 -==> Parameters: userType(String)
2019-03-25 19:56:34 -<==      Total: 2
2019-03-25 19:56:34 -耗时 : 3
2019-03-25 19:56:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 19:56:34 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-25 19:56:34 -HTTP METHOD : GET
2019-03-25 19:56:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-25 19:56:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@5435e752]
2019-03-25 19:56:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-25 19:56:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-25 19:56:35 -<==      Total: 10
2019-03-25 19:56:35 -==>  Preparing: select count(*) from elec 
2019-03-25 19:56:35 -==> Parameters: 
2019-03-25 19:56:35 -<==      Total: 1
2019-03-25 19:56:35 -耗时 : 14
2019-03-25 19:56:35 -返回值 : com.bootdo.common.utils.PageUtils@5badb3bc
2019-03-25 19:56:38 -请求地址 : http://localhost:8081/elec/elec/edit/6
2019-03-25 19:56:38 -HTTP METHOD : GET
2019-03-25 19:56:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-25 19:56:38 -参数 : [6, {}]
2019-03-25 19:56:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-25 19:56:38 -==> Parameters: 6(Long)
2019-03-25 19:56:38 -<==      Total: 1
2019-03-25 19:56:38 -耗时 : 5
2019-03-25 19:56:38 -返回值 : elec/elec/edit
2019-03-25 19:56:39 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-25 19:56:39 -HTTP METHOD : GET
2019-03-25 19:56:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 19:56:39 -参数 : [userState]
2019-03-25 19:56:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 19:56:39 -==> Parameters: userState(String)
2019-03-25 19:56:39 -<==      Total: 2
2019-03-25 19:56:39 -耗时 : 39
2019-03-25 19:56:39 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 19:56:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-25 19:56:39 -HTTP METHOD : GET
2019-03-25 19:56:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 19:56:39 -参数 : [userType]
2019-03-25 19:56:39 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-25 19:56:39 -HTTP METHOD : GET
2019-03-25 19:56:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-25 19:56:39 -参数 : [elecType]
2019-03-25 19:56:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 19:56:39 -==> Parameters: elecType(String)
2019-03-25 19:56:39 -<==      Total: 2
2019-03-25 19:56:39 -耗时 : 58
2019-03-25 19:56:39 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 19:56:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-25 19:56:39 -==> Parameters: userType(String)
2019-03-25 19:56:39 -<==      Total: 2
2019-03-25 19:56:39 -耗时 : 187
2019-03-25 19:56:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-25 19:56:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-25 19:56:45 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"](String), null, 2019-03-25 19:56:45.252(Timestamp)
2019-03-25 19:56:45 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-25 19:56:45 -<==    Updates: 1
2019-03-25 20:18:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1682]
2019-03-25 20:21:06 -Validating all active sessions...
2019-03-25 20:21:06 -Finished session validation.  No sessions were stopped.
2019-03-25 20:48:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2115]

2019-04-29 14:16:22 -Starting BootdoApplication on ZJZL-20180906VX with PID 10488 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-29 14:16:22 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-29 14:16:22 -The following profiles are active: dev
2019-04-29 14:16:22 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 29 14:16:22 CST 2019]; root of context hierarchy
2019-04-29 14:16:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-29 14:16:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d18241bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:16:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3db7064] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:16:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:16:31 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:16:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:16:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-29 14:16:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-29 14:16:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:16:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:16:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:16:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:16:32 -Tomcat initialized with port(s): 8081 (http)
2019-04-29 14:16:32 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-29 14:16:33 -Starting service [Tomcat]
2019-04-29 14:16:33 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-29 14:16:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-29 14:16:33 -Initializing Spring embedded WebApplicationContext
2019-04-29 14:16:33 -Root WebApplicationContext: initialization completed in 11292 ms
2019-04-29 14:16:34 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-29 14:16:34 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-29 14:16:34 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-29 14:16:34 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-29 14:16:34 -Filter xssFilter was not registered (disabled)
2019-04-29 14:16:34 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-29 14:16:34 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-29 14:16:34 -Servlet statViewServlet mapped to [/druid/*]
2019-04-29 14:16:34 -Servlet dispatcherServlet mapped to [/]
2019-04-29 14:16:44 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 29 14:16:22 CST 2019]; root of context hierarchy
2019-04-29 14:16:45 -Using default implementation for ThreadExecutor
2019-04-29 14:16:45 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-29 14:16:45 -Quartz Scheduler v.2.2.1 created.
2019-04-29 14:16:45 -RAMJobStore initialized.
2019-04-29 14:16:45 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-29 14:16:45 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-29 14:16:45 -Quartz scheduler version: 2.2.1
2019-04-29 14:16:45 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@65844c96
2019-04-29 14:16:46 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-29 14:16:46 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-29 14:16:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:16:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-29 14:16:50 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:16:50 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-29 14:16:50 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-29 14:16:50 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-29 14:16:50 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-29 14:16:50 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:16:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-29 14:16:50 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:16:50 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-29 14:16:50 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:16:50 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-29 14:16:50 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-29 14:16:50 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-29 14:16:50 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-29 14:16:50 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:16:50 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-29 14:16:50 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:16:50 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-29 14:16:50 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-29 14:16:50 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-29 14:16:50 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-29 14:16:50 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-29 14:16:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-29 14:16:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-29 14:16:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-29 14:16:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-29 14:16:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-29 14:16:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-29 14:16:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-29 14:16:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-29 14:16:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-29 14:16:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-29 14:16:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-29 14:16:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-29 14:16:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-29 14:16:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-29 14:16:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-29 14:16:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-29 14:16:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-29 14:16:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-29 14:16:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-29 14:16:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-29 14:16:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-29 14:16:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-29 14:16:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-29 14:16:50 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-29 14:16:50 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-29 14:16:50 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-29 14:16:50 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-29 14:16:50 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-29 14:16:50 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-29 14:16:50 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-29 14:16:50 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 14:16:50 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-29 14:16:50 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-29 14:16:50 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-29 14:16:50 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-29 14:16:50 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-29 14:16:50 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-29 14:16:50 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-29 14:16:50 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-29 14:16:50 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-29 14:16:50 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-29 14:16:50 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-29 14:16:50 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-29 14:16:50 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-29 14:16:50 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 14:16:50 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-29 14:16:50 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-29 14:16:50 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-29 14:16:50 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-29 14:16:50 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-29 14:16:50 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-29 14:16:50 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-29 14:16:50 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-29 14:16:50 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 14:16:50 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 14:16:50 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-29 14:16:50 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-29 14:16:50 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-29 14:16:50 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-29 14:16:50 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-29 14:16:50 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-29 14:16:50 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-29 14:16:50 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-29 14:16:50 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-29 14:16:50 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-29 14:16:50 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-29 14:16:50 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-29 14:16:50 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-29 14:16:50 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-29 14:16:50 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-29 14:16:50 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-29 14:16:50 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-29 14:16:50 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-29 14:16:50 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-29 14:16:50 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-29 14:16:50 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-29 14:16:50 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-29 14:16:50 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-29 14:16:50 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-29 14:16:50 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-29 14:16:50 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-29 14:16:50 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-29 14:16:50 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-29 14:16:50 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-29 14:16:50 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-29 14:16:50 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-29 14:16:50 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-29 14:16:50 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-29 14:16:50 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-29 14:16:50 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-29 14:16:50 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-29 14:16:50 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-29 14:16:50 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-29 14:16:50 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-29 14:16:50 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-29 14:16:50 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-29 14:16:50 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-29 14:16:50 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-29 14:16:50 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-29 14:16:50 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-29 14:16:50 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-29 14:16:50 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-29 14:16:50 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-29 14:16:50 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-29 14:16:50 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-29 14:16:50 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 14:16:50 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-29 14:16:50 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-29 14:16:50 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-29 14:16:50 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-29 14:16:50 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:16:50 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-29 14:16:50 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-29 14:16:50 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:16:50 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:16:50 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-29 14:16:50 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-29 14:16:50 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-29 14:16:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 14:16:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-29 14:16:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-29 14:16:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-29 14:16:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-29 14:16:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-29 14:16:51 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-29 14:16:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 14:16:52 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 29 14:16:22 CST 2019]; root of context hierarchy
2019-04-29 14:16:52 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 14:16:52 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 14:16:52 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 14:16:52 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-29 14:16:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-29 14:16:56 -Registering beans for JMX exposure on startup
2019-04-29 14:16:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-29 14:16:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-29 14:16:56 -Starting beans in phase 2147483647
2019-04-29 14:16:56 -Context refreshed
2019-04-29 14:16:57 -Found 1 custom documentation plugin(s)
2019-04-29 14:16:57 -Scanning for api listing references
2019-04-29 14:16:58 -Generating unique operation named: getCountDUsingPOST_1
2019-04-29 14:16:58 -Generating unique operation named: removeUsingPOST_1
2019-04-29 14:16:58 -Generating unique operation named: addUsingGET_1
2019-04-29 14:16:58 -Generating unique operation named: editUsingGET_1
2019-04-29 14:16:58 -Generating unique operation named: listUsingGET_1
2019-04-29 14:16:58 -Generating unique operation named: removeUsingPOST_2
2019-04-29 14:16:58 -Generating unique operation named: removeUsingPOST_3
2019-04-29 14:16:58 -Generating unique operation named: saveUsingPOST_1
2019-04-29 14:16:58 -Generating unique operation named: updateUsingGET_1
2019-04-29 14:16:58 -Generating unique operation named: updateUsingHEAD_1
2019-04-29 14:16:58 -Generating unique operation named: updateUsingPOST_1
2019-04-29 14:16:58 -Generating unique operation named: updateUsingPUT_1
2019-04-29 14:16:58 -Generating unique operation named: updateUsingPATCH_1
2019-04-29 14:16:58 -Generating unique operation named: updateUsingDELETE_1
2019-04-29 14:16:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-29 14:16:58 -Generating unique operation named: updateUsingTRACE_1
2019-04-29 14:16:59 -Generating unique operation named: addUsingGET_2
2019-04-29 14:16:59 -Generating unique operation named: editUsingGET_2
2019-04-29 14:16:59 -Generating unique operation named: listUsingGET_2
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_4
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_5
2019-04-29 14:16:59 -Generating unique operation named: saveUsingPOST_2
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPOST_2
2019-04-29 14:16:59 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-29 14:16:59 -Generating unique operation named: addUsingGET_3
2019-04-29 14:16:59 -Generating unique operation named: editUsingGET_3
2019-04-29 14:16:59 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-29 14:16:59 -Generating unique operation named: listUsingGET_3
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_6
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_7
2019-04-29 14:16:59 -Generating unique operation named: saveUsingPOST_3
2019-04-29 14:16:59 -Generating unique operation named: updateUsingGET_2
2019-04-29 14:16:59 -Generating unique operation named: updateUsingHEAD_2
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPOST_3
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPUT_2
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPATCH_2
2019-04-29 14:16:59 -Generating unique operation named: updateUsingDELETE_2
2019-04-29 14:16:59 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-29 14:16:59 -Generating unique operation named: updateUsingTRACE_2
2019-04-29 14:16:59 -Generating unique operation named: addUsingGET_4
2019-04-29 14:16:59 -Generating unique operation named: editUsingGET_4
2019-04-29 14:16:59 -Generating unique operation named: listUsingGET_4
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_8
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_9
2019-04-29 14:16:59 -Generating unique operation named: saveUsingPOST_4
2019-04-29 14:16:59 -Generating unique operation named: updateUsingGET_3
2019-04-29 14:16:59 -Generating unique operation named: updateUsingHEAD_3
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPOST_4
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPUT_3
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPATCH_3
2019-04-29 14:16:59 -Generating unique operation named: updateUsingDELETE_3
2019-04-29 14:16:59 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-29 14:16:59 -Generating unique operation named: updateUsingTRACE_3
2019-04-29 14:16:59 -Generating unique operation named: ElecUsingGET_1
2019-04-29 14:16:59 -Generating unique operation named: addUsingGET_5
2019-04-29 14:16:59 -Generating unique operation named: editUsingGET_5
2019-04-29 14:16:59 -Generating unique operation named: listUsingGET_5
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_10
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_11
2019-04-29 14:16:59 -Generating unique operation named: saveUsingPOST_5
2019-04-29 14:16:59 -Generating unique operation named: updateUsingGET_4
2019-04-29 14:16:59 -Generating unique operation named: updateUsingHEAD_4
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPOST_5
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPUT_4
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPATCH_4
2019-04-29 14:16:59 -Generating unique operation named: updateUsingDELETE_4
2019-04-29 14:16:59 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-29 14:16:59 -Generating unique operation named: updateUsingTRACE_4
2019-04-29 14:16:59 -Generating unique operation named: editUsingGET_6
2019-04-29 14:16:59 -Generating unique operation named: listUsingGET_6
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPOST_6
2019-04-29 14:16:59 -Generating unique operation named: addUsingGET_6
2019-04-29 14:16:59 -Generating unique operation named: editUsingGET_7
2019-04-29 14:16:59 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-29 14:16:59 -Generating unique operation named: listUsingGET_7
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_12
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_13
2019-04-29 14:16:59 -Generating unique operation named: saveUsingPOST_6
2019-04-29 14:16:59 -Generating unique operation named: updateUsingGET_5
2019-04-29 14:16:59 -Generating unique operation named: updateUsingHEAD_5
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPOST_7
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPUT_5
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPATCH_5
2019-04-29 14:16:59 -Generating unique operation named: updateUsingDELETE_5
2019-04-29 14:16:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-29 14:16:59 -Generating unique operation named: updateUsingTRACE_5
2019-04-29 14:16:59 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-29 14:16:59 -Generating unique operation named: addUsingGET_7
2019-04-29 14:16:59 -Generating unique operation named: editUsingGET_8
2019-04-29 14:16:59 -Generating unique operation named: listUsingGET_8
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_14
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_15
2019-04-29 14:16:59 -Generating unique operation named: saveUsingPOST_7
2019-04-29 14:16:59 -Generating unique operation named: updateUsingGET_6
2019-04-29 14:16:59 -Generating unique operation named: updateUsingHEAD_6
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPOST_8
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPUT_6
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPATCH_6
2019-04-29 14:16:59 -Generating unique operation named: updateUsingDELETE_6
2019-04-29 14:16:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-29 14:16:59 -Generating unique operation named: updateUsingTRACE_6
2019-04-29 14:16:59 -Generating unique operation named: addUsingGET_8
2019-04-29 14:16:59 -Generating unique operation named: editUsingGET_9
2019-04-29 14:16:59 -Generating unique operation named: listUsingGET_9
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_16
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_17
2019-04-29 14:16:59 -Generating unique operation named: saveUsingPOST_8
2019-04-29 14:16:59 -Generating unique operation named: updateUsingGET_7
2019-04-29 14:16:59 -Generating unique operation named: updateUsingHEAD_7
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPOST_9
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPUT_7
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPATCH_7
2019-04-29 14:16:59 -Generating unique operation named: updateUsingDELETE_7
2019-04-29 14:16:59 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-29 14:16:59 -Generating unique operation named: updateUsingTRACE_7
2019-04-29 14:16:59 -Generating unique operation named: addUsingGET_9
2019-04-29 14:16:59 -Generating unique operation named: editUsingGET_10
2019-04-29 14:16:59 -Generating unique operation named: infoUsingGET_1
2019-04-29 14:16:59 -Generating unique operation named: infoUsingHEAD_1
2019-04-29 14:16:59 -Generating unique operation named: infoUsingPOST_1
2019-04-29 14:16:59 -Generating unique operation named: infoUsingPUT_1
2019-04-29 14:16:59 -Generating unique operation named: infoUsingPATCH_1
2019-04-29 14:16:59 -Generating unique operation named: infoUsingDELETE_1
2019-04-29 14:16:59 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-29 14:16:59 -Generating unique operation named: infoUsingTRACE_1
2019-04-29 14:16:59 -Generating unique operation named: listUsingGET_10
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_18
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_19
2019-04-29 14:16:59 -Generating unique operation named: saveUsingPOST_9
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPOST_10
2019-04-29 14:16:59 -Generating unique operation named: listUsingGET_11
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_20
2019-04-29 14:16:59 -Generating unique operation named: welcomeUsingGET_1
2019-04-29 14:16:59 -Generating unique operation named: addUsingGET_10
2019-04-29 14:16:59 -Generating unique operation named: editUsingGET_11
2019-04-29 14:16:59 -Generating unique operation named: listUsingGET_12
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_21
2019-04-29 14:16:59 -Generating unique operation named: saveUsingPOST_10
2019-04-29 14:16:59 -Generating unique operation named: treeUsingGET_1
2019-04-29 14:16:59 -Generating unique operation named: treeUsingGET_2
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPOST_11
2019-04-29 14:16:59 -Generating unique operation named: addUsingGET_11
2019-04-29 14:16:59 -Generating unique operation named: editUsingGET_12
2019-04-29 14:16:59 -Generating unique operation named: listUsingGET_13
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_22
2019-04-29 14:16:59 -Generating unique operation named: removeUsingPOST_23
2019-04-29 14:16:59 -Generating unique operation named: saveUsingPOST_11
2019-04-29 14:16:59 -Generating unique operation named: updateUsingGET_8
2019-04-29 14:16:59 -Generating unique operation named: updateUsingHEAD_8
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPOST_12
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPUT_8
2019-04-29 14:16:59 -Generating unique operation named: updateUsingPATCH_8
2019-04-29 14:16:59 -Generating unique operation named: updateUsingDELETE_8
2019-04-29 14:16:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-29 14:16:59 -Generating unique operation named: updateUsingTRACE_8
2019-04-29 14:16:59 -Generating unique operation named: addUsingGET_12
2019-04-29 14:17:00 -Generating unique operation named: editUsingGET_13
2019-04-29 14:17:00 -Generating unique operation named: listUsingGET_14
2019-04-29 14:17:00 -Generating unique operation named: removeUsingPOST_24
2019-04-29 14:17:00 -Generating unique operation named: removeUsingPOST_25
2019-04-29 14:17:00 -Generating unique operation named: saveUsingPOST_12
2019-04-29 14:17:00 -Generating unique operation named: updateUsingGET_9
2019-04-29 14:17:00 -Generating unique operation named: updateUsingHEAD_9
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPOST_13
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPUT_9
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPATCH_9
2019-04-29 14:17:00 -Generating unique operation named: updateUsingDELETE_9
2019-04-29 14:17:00 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-29 14:17:00 -Generating unique operation named: updateUsingTRACE_9
2019-04-29 14:17:00 -Generating unique operation named: addUsingGET_13
2019-04-29 14:17:00 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-29 14:17:00 -Generating unique operation named: editUsingGET_14
2019-04-29 14:17:00 -Generating unique operation named: listUsingGET_15
2019-04-29 14:17:00 -Generating unique operation named: saveUsingPOST_13
2019-04-29 14:17:00 -Generating unique operation named: saveUsingPOST_14
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPOST_14
2019-04-29 14:17:00 -Generating unique operation named: listUsingGET_16
2019-04-29 14:17:00 -Generating unique operation named: listUsingHEAD_1
2019-04-29 14:17:00 -Generating unique operation named: listUsingPOST_1
2019-04-29 14:17:00 -Generating unique operation named: listUsingPUT_1
2019-04-29 14:17:00 -Generating unique operation named: listUsingPATCH_1
2019-04-29 14:17:00 -Generating unique operation named: listUsingDELETE_1
2019-04-29 14:17:00 -Generating unique operation named: listUsingOPTIONS_1
2019-04-29 14:17:00 -Generating unique operation named: listUsingTRACE_1
2019-04-29 14:17:00 -Generating unique operation named: countDDUsingGET_1
2019-04-29 14:17:00 -Generating unique operation named: exportDDUsingGET_1
2019-04-29 14:17:00 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-29 14:17:00 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-29 14:17:00 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-29 14:17:00 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-29 14:17:00 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-29 14:17:00 -Generating unique operation named: addUsingGET_14
2019-04-29 14:17:00 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-29 14:17:00 -Generating unique operation named: editUsingGET_15
2019-04-29 14:17:00 -Generating unique operation named: listUsingGET_17
2019-04-29 14:17:00 -Generating unique operation named: removeUsingPOST_26
2019-04-29 14:17:00 -Generating unique operation named: saveUsingPOST_15
2019-04-29 14:17:00 -Generating unique operation named: treeUsingGET_3
2019-04-29 14:17:00 -Generating unique operation named: treeViewUsingGET_1
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPOST_15
2019-04-29 14:17:00 -Generating unique operation named: addUsingGET_15
2019-04-29 14:17:00 -Generating unique operation named: editUsingGET_16
2019-04-29 14:17:00 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-29 14:17:00 -Generating unique operation named: listUsingGET_18
2019-04-29 14:17:00 -Generating unique operation named: removeUsingPOST_27
2019-04-29 14:17:00 -Generating unique operation named: removeUsingPOST_28
2019-04-29 14:17:00 -Generating unique operation named: saveUsingPOST_16
2019-04-29 14:17:00 -Generating unique operation named: updateUsingGET_10
2019-04-29 14:17:00 -Generating unique operation named: updateUsingHEAD_10
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPOST_16
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPUT_10
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPATCH_10
2019-04-29 14:17:00 -Generating unique operation named: updateUsingDELETE_10
2019-04-29 14:17:00 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-29 14:17:00 -Generating unique operation named: updateUsingTRACE_10
2019-04-29 14:17:00 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-29 14:17:00 -Generating unique operation named: addUsingGET_16
2019-04-29 14:17:00 -Generating unique operation named: editUsingGET_17
2019-04-29 14:17:00 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-29 14:17:00 -Generating unique operation named: listUsingGET_19
2019-04-29 14:17:00 -Generating unique operation named: removeUsingPOST_29
2019-04-29 14:17:00 -Generating unique operation named: removeUsingPOST_30
2019-04-29 14:17:00 -Generating unique operation named: saveUsingPOST_17
2019-04-29 14:17:00 -Generating unique operation named: updateUsingGET_11
2019-04-29 14:17:00 -Generating unique operation named: updateUsingHEAD_11
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPOST_17
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPUT_11
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPATCH_11
2019-04-29 14:17:00 -Generating unique operation named: updateUsingDELETE_11
2019-04-29 14:17:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-29 14:17:00 -Generating unique operation named: updateUsingTRACE_11
2019-04-29 14:17:00 -Generating unique operation named: addUsingGET_17
2019-04-29 14:17:00 -Generating unique operation named: editUsingGET_18
2019-04-29 14:17:00 -Generating unique operation named: listUsingGET_20
2019-04-29 14:17:00 -Generating unique operation named: removeUsingPOST_31
2019-04-29 14:17:00 -Generating unique operation named: removeUsingPOST_32
2019-04-29 14:17:00 -Generating unique operation named: saveUsingPOST_18
2019-04-29 14:17:00 -Generating unique operation named: updateUsingGET_12
2019-04-29 14:17:00 -Generating unique operation named: updateUsingHEAD_12
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPOST_18
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPUT_12
2019-04-29 14:17:00 -Generating unique operation named: updateUsingPATCH_12
2019-04-29 14:17:00 -Generating unique operation named: updateUsingDELETE_12
2019-04-29 14:17:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-29 14:17:00 -Generating unique operation named: updateUsingTRACE_12
2019-04-29 14:17:00 -Starting Quartz Scheduler now
2019-04-29 14:17:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-29 14:17:00 -Starting...
2019-04-29 14:17:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-29 14:17:00 -Started.
2019-04-29 14:17:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-29 14:17:01 -Using a shared selector for servlet write/read
2019-04-29 14:17:02 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-29 14:17:02 -Started BootdoApplication in 40.984 seconds (JVM running for 41.855)
2019-04-29 14:17:04 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-29 14:17:08 -==> Parameters: 
2019-04-29 14:17:08 -<==      Total: 1
2019-04-29 14:17:51 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-29 14:25:36 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-29 14:25:36 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-29 14:25:36 -FrameworkServlet 'dispatcherServlet': initialization completed in 156 ms
2019-04-29 14:25:36 -Enabling session validation scheduler...
2019-04-29 14:25:36 -请求地址 : http://localhost:8081/login;JSESSIONID=25f7665b-7941-4421-8c28-67da31451b08
2019-04-29 14:25:36 -HTTP METHOD : GET
2019-04-29 14:25:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 14:25:36 -参数 : [{}]
2019-04-29 14:25:36 -耗时 : 5
2019-04-29 14:25:36 -返回值 : login
2019-04-29 14:25:43 -请求地址 : http://localhost:8081/getVerify
2019-04-29 14:25:43 -HTTP METHOD : GET
2019-04-29 14:25:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 14:25:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6f40884d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@61877bd5]
2019-04-29 14:25:46 -5897
2019-04-29 14:25:46 -耗时 : 3749
2019-04-29 14:25:46 -返回值 : null
2019-04-29 14:25:58 -请求地址 : http://localhost:8081/login
2019-04-29 14:25:58 -HTTP METHOD : POST
2019-04-29 14:25:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 14:25:58 -参数 : [admin, 111111, 5897, org.apache.shiro.web.servlet.ShiroHttpServletRequest@24deac7c]
2019-04-29 14:25:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 14:25:58 -==> Parameters: admin(String)
2019-04-29 14:25:59 -<==      Total: 1
2019-04-29 14:25:59 -耗时 : 872
2019-04-29 14:25:59 -返回值 : {msg=操作成功, code=0}
2019-04-29 14:25:59 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-29 14:25:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 14:25:59 -==> Parameters: 1(Long), admin(String), 登录(String), 873(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 14:25:59.378(Timestamp)
2019-04-29 14:25:59 -请求地址 : http://localhost:8081/index
2019-04-29 14:25:59 -HTTP METHOD : GET
2019-04-29 14:25:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 14:25:59 -参数 : [{}]
2019-04-29 14:26:00 -<==    Updates: 1
2019-04-29 14:26:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 14:26:00 -==> Parameters: 1(Long)
2019-04-29 14:26:01 -<==      Total: 49
2019-04-29 14:26:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 14:26:02 -==> Parameters: 138(Long)
2019-04-29 14:26:02 -<==      Total: 1
2019-04-29 14:26:02 -耗时 : 2320
2019-04-29 14:26:02 -返回值 : index_v1
2019-04-29 14:26:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 14:26:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 2321(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 14:26:02.549(Timestamp)
2019-04-29 14:26:02 -请求地址 : http://localhost:8081/main
2019-04-29 14:26:02 -HTTP METHOD : GET
2019-04-29 14:26:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 14:26:02 -参数 : []
2019-04-29 14:26:02 -耗时 : 1
2019-04-29 14:26:02 -返回值 : main
2019-04-29 14:26:03 -<==    Updates: 1
2019-04-29 14:26:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 14:26:03 -HTTP METHOD : GET
2019-04-29 14:26:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 14:26:03 -参数 : []
2019-04-29 14:26:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 14:26:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 14:26:03 -请求地址 : http://localhost:8081/main
2019-04-29 14:26:03 -HTTP METHOD : GET
2019-04-29 14:26:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 14:26:03 -参数 : []
2019-04-29 14:26:03 -耗时 : 0
2019-04-29 14:26:03 -返回值 : main
2019-04-29 14:26:05 -<==      Total: 0
2019-04-29 14:26:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 14:26:05 -==> Parameters: 1(Long), 0(String)
2019-04-29 14:26:05 -<==      Total: 1
2019-04-29 14:26:05 -耗时 : 1428
2019-04-29 14:26:05 -返回值 : com.bootdo.common.utils.PageUtils@3fecc618
2019-04-29 14:26:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 14:26:15 -==> Parameters: 1(Long)
2019-04-29 14:26:15 -<==      Total: 93
2019-04-29 14:26:15 -请求地址 : http://localhost:8081/charts/countYY
2019-04-29 14:26:15 -HTTP METHOD : GET
2019-04-29 14:26:15 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-29 14:26:15 -参数 : []
2019-04-29 14:26:15 -耗时 : 1
2019-04-29 14:26:15 -返回值 : charts/countYY
2019-04-29 14:26:17 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-29 14:26:17 -HTTP METHOD : GET
2019-04-29 14:26:17 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-29 14:26:17 -参数 : []
2019-04-29 14:26:17 -耗时 : 15
2019-04-29 14:26:17 -返回值 : charts/tableElecYY
2019-04-29 14:26:19 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 14:26:19 -HTTP METHOD : GET
2019-04-29 14:26:19 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 14:26:19 -参数 : []
2019-04-29 14:26:19 -耗时 : 17
2019-04-29 14:26:19 -返回值 : charts/tableElecMM
2019-04-29 14:26:20 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-29 14:26:20 -HTTP METHOD : GET
2019-04-29 14:26:20 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-29 14:26:20 -参数 : []
2019-04-29 14:26:20 -耗时 : 9
2019-04-29 14:26:20 -返回值 : charts/tableWaterMM
2019-04-29 14:26:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 14:26:25 -HTTP METHOD : GET
2019-04-29 14:26:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 14:26:25 -参数 : []
2019-04-29 14:26:25 -耗时 : 0
2019-04-29 14:26:25 -返回值 : system/dept/deptTree
2019-04-29 14:26:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 14:26:25 -HTTP METHOD : GET
2019-04-29 14:26:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 14:26:25 -参数 : []
2019-04-29 14:26:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 14:26:25 -==> Parameters: 
2019-04-29 14:26:25 -<==      Total: 3
2019-04-29 14:26:25 -耗时 : 97
2019-04-29 14:26:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 14:26:27 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-29 14:26:27 -HTTP METHOD : POST
2019-04-29 14:26:27 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-29 14:26:27 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@73df3cd0, com.bootdo.water.vo.WaterVo@4ad774ce]
2019-04-29 14:26:27 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:27 -<==      Total: 1
2019-04-29 14:26:28 -耗时 : 532
2019-04-29 14:26:28 -返回值 : {CountPrehu=2, CountAllhu=4, CountCostyu=2, Stotalhu=2, CountPrice=3, CountSWaterLog=1, SWaterCountOwe=1, CountOweyu=1, MWaterCountOwe=1, MWaterCostCount=2, SumSWaterLog=60, CountPreyu=1, SWaterSumOwe=0, CountCosthu=4, SWaterCostSum=1, CountLogyu=160, MWaterSumPre=0, Mtotalhu=2, Stotalyu=1, CountOwehu=2, MWaterCostSum=1, SWaterPrice=2, CountMWaterLog=2, MWaterPrice=1, MWaterCountPre=1, CountLoghu=3, Mtotalyu=1, SWaterSumPre=1, SWaterCountPre=1, SWaterCostCount=2, CountAllyu=2, MWaterSumOwe=1, SumMWaterLog=100}
2019-04-29 14:26:30 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 14:26:30 -HTTP METHOD : GET
2019-04-29 14:26:30 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 14:26:30 -参数 : []
2019-04-29 14:26:30 -耗时 : 12
2019-04-29 14:26:30 -返回值 : charts/tableHeatMM
2019-04-29 14:26:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 14:26:37 -HTTP METHOD : GET
2019-04-29 14:26:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 14:26:37 -参数 : []
2019-04-29 14:26:37 -耗时 : 0
2019-04-29 14:26:37 -返回值 : system/dept/deptTree
2019-04-29 14:26:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 14:26:37 -HTTP METHOD : GET
2019-04-29 14:26:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 14:26:37 -参数 : []
2019-04-29 14:26:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 14:26:37 -==> Parameters: 
2019-04-29 14:26:37 -<==      Total: 3
2019-04-29 14:26:37 -耗时 : 5
2019-04-29 14:26:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 14:26:38 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-04-29 14:26:38 -HTTP METHOD : POST
2019-04-29 14:26:38 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 14:26:38 -参数 : [com.bootdo.heat.vo.HeatVo@5ba51a61, com.bootdo.moneyLog.vo.HeatLogVo@6c0612f]
2019-04-29 14:26:38 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:26:38 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 1
2019-04-29 14:26:39 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:26:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:26:39 -<==      Total: 0
2019-04-29 14:26:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 14:26:39 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatMM/tableHeatMM(String), java.lang.NullPointerException(String), null, 2019-04-29 14:26:39.213(Timestamp)
2019-04-29 14:26:39 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(tableHeatMMController.java:68)
	at com.bootdo.charts.controller.tableHeatMMController$$FastClassBySpringCGLIB$$52df86fd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatMMController$$EnhancerBySpringCGLIB$$d1302a57.tableHeatMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 14:26:39 -<==    Updates: 1
2019-04-29 14:30:25 -请求地址 : http://localhost:8081/index
2019-04-29 14:30:25 -HTTP METHOD : GET
2019-04-29 14:30:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 14:30:25 -参数 : [{}]
2019-04-29 14:30:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 14:30:25 -==> Parameters: 1(Long)
2019-04-29 14:30:25 -<==      Total: 49
2019-04-29 14:30:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 14:30:25 -==> Parameters: 138(Long)
2019-04-29 14:30:25 -<==      Total: 1
2019-04-29 14:30:25 -耗时 : 157
2019-04-29 14:30:25 -返回值 : index_v1
2019-04-29 14:30:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 14:30:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 157(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 14:30:25.203(Timestamp)
2019-04-29 14:30:25 -请求地址 : http://localhost:8081/main
2019-04-29 14:30:25 -HTTP METHOD : GET
2019-04-29 14:30:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 14:30:25 -参数 : []
2019-04-29 14:30:25 -耗时 : 0
2019-04-29 14:30:25 -返回值 : main
2019-04-29 14:30:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 14:30:25 -HTTP METHOD : GET
2019-04-29 14:30:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 14:30:25 -参数 : []
2019-04-29 14:30:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 14:30:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 14:30:25 -<==    Updates: 1
2019-04-29 14:30:25 -请求地址 : http://localhost:8081/main
2019-04-29 14:30:25 -HTTP METHOD : GET
2019-04-29 14:30:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 14:30:25 -参数 : []
2019-04-29 14:30:25 -耗时 : 1
2019-04-29 14:30:25 -返回值 : main
2019-04-29 14:30:25 -<==      Total: 0
2019-04-29 14:30:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 14:30:25 -==> Parameters: 1(Long), 0(String)
2019-04-29 14:30:25 -<==      Total: 1
2019-04-29 14:30:25 -耗时 : 187
2019-04-29 14:30:25 -返回值 : com.bootdo.common.utils.PageUtils@58f16c75
2019-04-29 14:30:33 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 14:30:33 -HTTP METHOD : GET
2019-04-29 14:30:33 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 14:30:33 -参数 : []
2019-04-29 14:30:33 -耗时 : 1
2019-04-29 14:30:33 -返回值 : charts/tableElecMM
2019-04-29 14:30:34 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 14:30:34 -HTTP METHOD : GET
2019-04-29 14:30:34 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 14:30:34 -参数 : []
2019-04-29 14:30:34 -耗时 : 0
2019-04-29 14:30:34 -返回值 : charts/tableHeatMM
2019-04-29 14:30:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 14:30:40 -HTTP METHOD : GET
2019-04-29 14:30:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 14:30:40 -参数 : []
2019-04-29 14:30:40 -耗时 : 0
2019-04-29 14:30:40 -返回值 : system/dept/deptTree
2019-04-29 14:30:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 14:30:41 -HTTP METHOD : GET
2019-04-29 14:30:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 14:30:41 -参数 : []
2019-04-29 14:30:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 14:30:41 -==> Parameters: 
2019-04-29 14:30:41 -<==      Total: 3
2019-04-29 14:30:41 -耗时 : 143
2019-04-29 14:30:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 14:30:42 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-04-29 14:30:42 -HTTP METHOD : POST
2019-04-29 14:30:42 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 14:30:42 -参数 : [com.bootdo.heat.vo.HeatVo@23833d69, com.bootdo.moneyLog.vo.HeatLogVo@363599f9]
2019-04-29 14:30:42 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:30:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:30:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:30:43 -<==      Total: 1
2019-04-29 14:30:43 -耗时 : 562
2019-04-29 14:30:43 -返回值 : {GSHeatCountPre=6, MHeatCostCount=7, GMHeatArea=1, SHeatCostCount=7, GSHeatSumPre=1, GMHeatCountPre=6, CountPrehu=24, MHeatCountPre=6, SumSHeatLog=40, MHeatPrice=1, CountOweyu=1, SHeatPrice=1, GMHeatPrice=1, CountPreyu=6, SumGMHeatLog=0, CountLogyu=240, CountGSHeatLog=1, SHeatSumPre=1, GMHeatCountOwe=1, CountOwehu=4, GMtotalhu=7, CountGMHeatLog=0, GStotalhu=7, CountLoghu=4, GSHeatSumOwe=0, GSHeatPrice=1, MHeatSumOwe=1, SHeatCountPre=6, GSHeatCountOwe=1, GMtotalyu=1, CountAllyu=7, GStotalyu=1, CountSHeatLog=1, GSHeatCostSum=1, MHeatCostSum=103, SHeatCostSum=1, CountAllhu=28, CountCostyu=106, MHeatArea=103, SHeatSumOwe=0, MHeatSumPre=3, GMHeatSumPre=1, Stotalhu=7, CountPrice=4, GMHeatCostCount=7, GMHeatCostSum=1, GSHeatCostCount=7, SumGSHeatLog=80, CountCosthu=28, SHeatCountOwe=1, CountMHeatLog=2, Mtotalhu=7, Stotalyu=1, CountArea=106, GMHeatSumOwe=0, GSHeatArea=1, SumMHeatLog=120, SHeatArea=1, Mtotalyu=4, MHeatCountOwe=1}
2019-04-29 14:31:05 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 14:34:22 -请求地址 : http://localhost:8081/login;JSESSIONID=c7a42953-46fa-463a-85eb-ac44e38cc27f
2019-04-29 14:34:22 -HTTP METHOD : GET
2019-04-29 14:34:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 14:34:22 -参数 : [{}]
2019-04-29 14:34:22 -耗时 : 1
2019-04-29 14:34:22 -返回值 : login
2019-04-29 14:34:23 -请求地址 : http://localhost:8081/getVerify
2019-04-29 14:34:23 -HTTP METHOD : GET
2019-04-29 14:34:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 14:34:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@648a18ef, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4ee9fca]
2019-04-29 14:34:23 -1147
2019-04-29 14:34:23 -耗时 : 17
2019-04-29 14:34:23 -返回值 : null
2019-04-29 14:34:23 -请求地址 : http://localhost:8081/login
2019-04-29 14:34:23 -HTTP METHOD : GET
2019-04-29 14:34:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 14:34:23 -参数 : [{}]
2019-04-29 14:34:23 -耗时 : 1
2019-04-29 14:34:23 -返回值 : login
2019-04-29 14:34:28 -请求地址 : http://localhost:8081/login
2019-04-29 14:34:28 -HTTP METHOD : POST
2019-04-29 14:34:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 14:34:28 -参数 : [admin, 111111, 1147, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2b7c60d5]
2019-04-29 14:34:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 14:34:28 -==> Parameters: admin(String)
2019-04-29 14:34:29 -<==      Total: 1
2019-04-29 14:34:29 -耗时 : 241
2019-04-29 14:34:29 -返回值 : {msg=操作成功, code=0}
2019-04-29 14:34:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 14:34:29 -==> Parameters: 1(Long), admin(String), 登录(String), 241(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 14:34:29.132(Timestamp)
2019-04-29 14:34:29 -请求地址 : http://localhost:8081/index
2019-04-29 14:34:29 -HTTP METHOD : GET
2019-04-29 14:34:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 14:34:29 -参数 : [{}]
2019-04-29 14:34:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 14:34:29 -==> Parameters: 1(Long)
2019-04-29 14:34:29 -<==      Total: 49
2019-04-29 14:34:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 14:34:29 -==> Parameters: 138(Long)
2019-04-29 14:34:29 -<==      Total: 1
2019-04-29 14:34:29 -耗时 : 443
2019-04-29 14:34:29 -返回值 : index_v1
2019-04-29 14:34:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 14:34:29 -<==    Updates: 1
2019-04-29 14:34:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 528(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 14:34:29.746(Timestamp)
2019-04-29 14:34:30 -<==    Updates: 1
2019-04-29 14:34:30 -请求地址 : http://localhost:8081/main
2019-04-29 14:34:30 -HTTP METHOD : GET
2019-04-29 14:34:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 14:34:30 -参数 : []
2019-04-29 14:34:30 -耗时 : 0
2019-04-29 14:34:30 -返回值 : main
2019-04-29 14:34:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 14:34:34 -HTTP METHOD : GET
2019-04-29 14:34:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 14:34:34 -参数 : []
2019-04-29 14:34:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 14:34:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 14:34:34 -<==      Total: 0
2019-04-29 14:34:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 14:34:34 -==> Parameters: 1(Long), 0(String)
2019-04-29 14:34:34 -<==      Total: 1
2019-04-29 14:34:34 -耗时 : 32
2019-04-29 14:34:34 -返回值 : com.bootdo.common.utils.PageUtils@4007a3f6
2019-04-29 14:34:34 -请求地址 : http://localhost:8081/main
2019-04-29 14:34:34 -HTTP METHOD : GET
2019-04-29 14:34:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 14:34:34 -参数 : []
2019-04-29 14:34:34 -耗时 : 20
2019-04-29 14:34:34 -返回值 : main
2019-04-29 14:34:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 14:34:53 -==> Parameters: 1(Long)
2019-04-29 14:34:53 -<==      Total: 93
2019-04-29 14:34:53 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 14:34:53 -HTTP METHOD : GET
2019-04-29 14:34:53 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 14:34:53 -参数 : []
2019-04-29 14:34:53 -耗时 : 0
2019-04-29 14:34:53 -返回值 : charts/tableElecMM
2019-04-29 14:34:55 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 14:34:55 -HTTP METHOD : GET
2019-04-29 14:34:55 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 14:34:55 -参数 : []
2019-04-29 14:34:55 -耗时 : 0
2019-04-29 14:34:55 -返回值 : charts/tableHeatMM
2019-04-29 14:34:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 14:34:59 -HTTP METHOD : GET
2019-04-29 14:34:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 14:34:59 -参数 : []
2019-04-29 14:34:59 -耗时 : 0
2019-04-29 14:34:59 -返回值 : system/dept/deptTree
2019-04-29 14:35:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 14:35:00 -HTTP METHOD : GET
2019-04-29 14:35:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 14:35:00 -参数 : []
2019-04-29 14:35:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 14:35:00 -==> Parameters: 
2019-04-29 14:35:00 -<==      Total: 3
2019-04-29 14:35:00 -耗时 : 5
2019-04-29 14:35:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 14:35:01 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-04-29 14:35:01 -HTTP METHOD : POST
2019-04-29 14:35:01 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 14:35:01 -参数 : [com.bootdo.heat.vo.HeatVo@3e663d9f, com.bootdo.moneyLog.vo.HeatLogVo@5333c134]
2019-04-29 14:35:01 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:01 -<==      Total: 1
2019-04-29 14:35:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:01 -<==      Total: 1
2019-04-29 14:35:01 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:01 -<==      Total: 1
2019-04-29 14:35:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:01 -<==      Total: 1
2019-04-29 14:35:01 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:01 -<==      Total: 1
2019-04-29 14:35:01 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:01 -<==      Total: 1
2019-04-29 14:35:01 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:01 -<==      Total: 1
2019-04-29 14:35:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:01 -<==      Total: 1
2019-04-29 14:35:01 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:01 -<==      Total: 1
2019-04-29 14:35:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:35:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:35:02 -<==      Total: 1
2019-04-29 14:35:02 -耗时 : 324
2019-04-29 14:35:02 -返回值 : {GSHeatCountPre=6, MHeatCostCount=7, GMHeatArea=1, SHeatCostCount=7, GSHeatSumPre=1, GMHeatCountPre=6, CountPrehu=24, MHeatCountPre=6, SumSHeatLog=40, MHeatPrice=1, CountOweyu=1, SHeatPrice=1, GMHeatPrice=1, CountPreyu=6, SumGMHeatLog=0, CountLogyu=240, CountGSHeatLog=1, SHeatSumPre=1, GMHeatCountOwe=1, CountOwehu=4, GMtotalhu=7, CountGMHeatLog=0, GStotalhu=7, CountLoghu=4, GSHeatSumOwe=0, GSHeatPrice=1, MHeatSumOwe=1, SHeatCountPre=6, GSHeatCountOwe=1, GMtotalyu=1, CountAllyu=7, GStotalyu=1, CountSHeatLog=1, GSHeatCostSum=1, MHeatCostSum=103, SHeatCostSum=1, CountAllhu=28, CountCostyu=106, MHeatArea=103, SHeatSumOwe=0, MHeatSumPre=3, GMHeatSumPre=1, Stotalhu=7, CountPrice=4, GMHeatCostCount=7, GMHeatCostSum=1, GSHeatCostCount=7, SumGSHeatLog=80, CountCosthu=28, SHeatCountOwe=1, CountMHeatLog=2, Mtotalhu=7, Stotalyu=1, CountArea=106, GMHeatSumOwe=0, GSHeatArea=1, SumMHeatLog=120, SHeatArea=1, Mtotalyu=4, MHeatCountOwe=1}
2019-04-29 14:37:14 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 14:37:14 -HTTP METHOD : GET
2019-04-29 14:37:14 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 14:37:14 -参数 : []
2019-04-29 14:37:14 -耗时 : 1
2019-04-29 14:37:14 -返回值 : charts/tableElecMM
2019-04-29 14:37:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 14:37:19 -HTTP METHOD : GET
2019-04-29 14:37:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 14:37:19 -参数 : []
2019-04-29 14:37:19 -耗时 : 1
2019-04-29 14:37:19 -返回值 : system/dept/deptTree
2019-04-29 14:37:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 14:37:19 -HTTP METHOD : GET
2019-04-29 14:37:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 14:37:19 -参数 : []
2019-04-29 14:37:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 14:37:19 -==> Parameters: 
2019-04-29 14:37:19 -<==      Total: 3
2019-04-29 14:37:19 -耗时 : 6
2019-04-29 14:37:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 14:37:22 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 14:37:22 -HTTP METHOD : POST
2019-04-29 14:37:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 14:37:22 -参数 : [com.bootdo.elec.vo.ElecVo@327d268f, com.bootdo.moneyLog.vo.ElecLogVo@186d7298]
2019-04-29 14:37:22 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:37:22 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:37:22 -<==      Total: 1
2019-04-29 14:37:23 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:37:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:37:23 -<==      Total: 1
2019-04-29 14:37:23 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:37:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:37:23 -<==      Total: 1
2019-04-29 14:37:23 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:37:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:37:23 -<==      Total: 1
2019-04-29 14:37:23 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:37:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:37:23 -<==      Total: 1
2019-04-29 14:37:23 -==>  Preparing: SELECT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:37:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:37:23 -<==      Total: 3
2019-04-29 14:37:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 14:37:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 3(String), null, 2019-04-29 14:37:23.115(Timestamp)
2019-04-29 14:37:23 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 3
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 3
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy105.MElecPrice(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.MElecPrice(ElecServiceImpl.java:113)
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:61)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$e1da4fdb.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 3
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-04-29 14:37:23 -<==    Updates: 1
2019-04-29 14:38:45 -请求地址 : http://localhost:8081/index
2019-04-29 14:38:45 -HTTP METHOD : GET
2019-04-29 14:38:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 14:38:45 -参数 : [{}]
2019-04-29 14:38:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 14:38:45 -==> Parameters: 1(Long)
2019-04-29 14:38:45 -<==      Total: 49
2019-04-29 14:38:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 14:38:45 -==> Parameters: 138(Long)
2019-04-29 14:38:45 -<==      Total: 1
2019-04-29 14:38:45 -耗时 : 27
2019-04-29 14:38:45 -返回值 : index_v1
2019-04-29 14:38:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 14:38:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 14:38:45.338(Timestamp)
2019-04-29 14:38:45 -请求地址 : http://localhost:8081/main
2019-04-29 14:38:45 -HTTP METHOD : GET
2019-04-29 14:38:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 14:38:45 -参数 : []
2019-04-29 14:38:45 -耗时 : 0
2019-04-29 14:38:45 -返回值 : main
2019-04-29 14:38:45 -<==    Updates: 1
2019-04-29 14:38:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 14:38:45 -HTTP METHOD : GET
2019-04-29 14:38:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 14:38:45 -参数 : []
2019-04-29 14:38:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 14:38:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 14:38:45 -<==      Total: 0
2019-04-29 14:38:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 14:38:45 -==> Parameters: 1(Long), 0(String)
2019-04-29 14:38:45 -<==      Total: 1
2019-04-29 14:38:45 -耗时 : 9
2019-04-29 14:38:45 -返回值 : com.bootdo.common.utils.PageUtils@4ce212b
2019-04-29 14:38:45 -请求地址 : http://localhost:8081/main
2019-04-29 14:38:45 -HTTP METHOD : GET
2019-04-29 14:38:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 14:38:45 -参数 : []
2019-04-29 14:38:45 -耗时 : 1
2019-04-29 14:38:45 -返回值 : main
2019-04-29 14:44:19 -请求地址 : http://localhost:8081/index
2019-04-29 14:44:19 -HTTP METHOD : GET
2019-04-29 14:44:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 14:44:19 -参数 : [{}]
2019-04-29 14:44:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 14:44:19 -==> Parameters: 1(Long)
2019-04-29 14:44:19 -<==      Total: 49
2019-04-29 14:44:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 14:44:19 -==> Parameters: 138(Long)
2019-04-29 14:44:19 -<==      Total: 1
2019-04-29 14:44:19 -耗时 : 254
2019-04-29 14:44:19 -返回值 : index_v1
2019-04-29 14:44:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 14:44:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 255(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 14:44:19.337(Timestamp)
2019-04-29 14:44:19 -<==    Updates: 1
2019-04-29 14:44:19 -请求地址 : http://localhost:8081/main
2019-04-29 14:44:19 -HTTP METHOD : GET
2019-04-29 14:44:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 14:44:19 -参数 : []
2019-04-29 14:44:19 -耗时 : 1
2019-04-29 14:44:19 -返回值 : main
2019-04-29 14:44:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 14:44:20 -HTTP METHOD : GET
2019-04-29 14:44:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 14:44:20 -参数 : []
2019-04-29 14:44:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 14:44:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 14:44:20 -<==      Total: 0
2019-04-29 14:44:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 14:44:20 -==> Parameters: 1(Long), 0(String)
2019-04-29 14:44:20 -<==      Total: 1
2019-04-29 14:44:20 -耗时 : 9
2019-04-29 14:44:20 -返回值 : com.bootdo.common.utils.PageUtils@64c8ffce
2019-04-29 14:44:20 -请求地址 : http://localhost:8081/main
2019-04-29 14:44:20 -HTTP METHOD : GET
2019-04-29 14:44:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 14:44:20 -参数 : []
2019-04-29 14:44:20 -耗时 : 6
2019-04-29 14:44:20 -返回值 : main
2019-04-29 14:44:24 -请求地址 : http://localhost:8081/charts/countMM
2019-04-29 14:44:24 -HTTP METHOD : GET
2019-04-29 14:44:24 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-29 14:44:24 -参数 : []
2019-04-29 14:44:24 -耗时 : 87
2019-04-29 14:44:24 -返回值 : charts/countMM
2019-04-29 14:44:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-29 14:44:25 -HTTP METHOD : GET
2019-04-29 14:44:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-29 14:44:25 -参数 : [userType]
2019-04-29 14:44:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-29 14:44:25 -==> Parameters: userType(String)
2019-04-29 14:44:25 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 14:44:25 -HTTP METHOD : GET
2019-04-29 14:44:25 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 14:44:25 -参数 : []
2019-04-29 14:44:25 -耗时 : 0
2019-04-29 14:44:25 -返回值 : charts/tableElecMM
2019-04-29 14:44:25 -<==      Total: 4
2019-04-29 14:44:25 -耗时 : 613
2019-04-29 14:44:25 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-29 14:44:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 14:44:30 -HTTP METHOD : GET
2019-04-29 14:44:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 14:44:30 -参数 : []
2019-04-29 14:44:30 -耗时 : 0
2019-04-29 14:44:30 -返回值 : system/dept/deptTree
2019-04-29 14:44:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 14:44:31 -HTTP METHOD : GET
2019-04-29 14:44:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 14:44:31 -参数 : []
2019-04-29 14:44:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 14:44:31 -==> Parameters: 
2019-04-29 14:44:31 -<==      Total: 3
2019-04-29 14:44:31 -耗时 : 5
2019-04-29 14:44:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 14:44:34 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 14:44:34 -HTTP METHOD : POST
2019-04-29 14:44:34 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 14:44:34 -参数 : [com.bootdo.elec.vo.ElecVo@130921c1, com.bootdo.moneyLog.vo.ElecLogVo@2d6087b8]
2019-04-29 14:44:34 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:44:34 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:44:34 -<==      Total: 1
2019-04-29 14:44:34 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:44:34 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:44:34 -<==      Total: 1
2019-04-29 14:44:34 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:44:34 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:44:34 -<==      Total: 1
2019-04-29 14:44:34 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:44:34 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:44:34 -<==      Total: 1
2019-04-29 14:44:34 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:44:34 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:44:34 -<==      Total: 1
2019-04-29 14:44:34 -==>  Preparing: SELECT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:44:34 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:44:34 -<==      Total: 0
2019-04-29 14:44:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 14:44:34 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-04-29 14:44:34.214(Timestamp)
2019-04-29 14:44:34 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:61)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$e1da4fdb.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 14:44:34 -<==    Updates: 1
2019-04-29 14:47:51 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 315]
2019-04-29 14:52:14 -Starting BootdoApplication on ZJZL-20180906VX with PID 10304 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-29 14:52:14 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-29 14:52:14 -The following profiles are active: dev
2019-04-29 14:52:14 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 29 14:52:14 CST 2019]; root of context hierarchy
2019-04-29 14:52:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-29 14:52:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1702bab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:52:20 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f3c95a52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:52:23 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:52:23 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:52:23 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:52:23 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-29 14:52:23 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-29 14:52:23 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:52:23 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:52:23 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:52:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 14:52:25 -Tomcat initialized with port(s): 8081 (http)
2019-04-29 14:52:25 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-29 14:52:25 -Starting service [Tomcat]
2019-04-29 14:52:25 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-29 14:52:25 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-29 14:52:25 -Initializing Spring embedded WebApplicationContext
2019-04-29 14:52:25 -Root WebApplicationContext: initialization completed in 10802 ms
2019-04-29 14:52:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-29 14:52:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-29 14:52:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-29 14:52:26 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-29 14:52:26 -Filter xssFilter was not registered (disabled)
2019-04-29 14:52:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-29 14:52:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-29 14:52:26 -Servlet statViewServlet mapped to [/druid/*]
2019-04-29 14:52:26 -Servlet dispatcherServlet mapped to [/]
2019-04-29 14:52:39 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 29 14:52:14 CST 2019]; root of context hierarchy
2019-04-29 14:52:40 -Using default implementation for ThreadExecutor
2019-04-29 14:52:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-29 14:52:40 -Quartz Scheduler v.2.2.1 created.
2019-04-29 14:52:40 -RAMJobStore initialized.
2019-04-29 14:52:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-29 14:52:40 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-29 14:52:40 -Quartz scheduler version: 2.2.1
2019-04-29 14:52:40 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3a0896b3
2019-04-29 14:52:41 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-29 14:52:41 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-29 14:52:44 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-29 14:52:44 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:52:44 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:52:44 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-29 14:52:44 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-29 14:52:44 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-29 14:52:44 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:44 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-29 14:52:44 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:52:44 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-29 14:52:44 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:52:44 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:52:44 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-29 14:52:44 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-29 14:52:44 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-29 14:52:44 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-29 14:52:44 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:44 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-29 14:52:44 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-29 14:52:44 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:52:44 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-29 14:52:44 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:44 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 14:52:44 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-29 14:52:44 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-29 14:52:44 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-29 14:52:44 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:44 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-29 14:52:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-29 14:52:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-29 14:52:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-29 14:52:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-29 14:52:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-29 14:52:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-29 14:52:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-29 14:52:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-29 14:52:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-29 14:52:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-29 14:52:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-29 14:52:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-29 14:52:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-29 14:52:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-29 14:52:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-29 14:52:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-29 14:52:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-29 14:52:44 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-29 14:52:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-29 14:52:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-29 14:52:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-29 14:52:44 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-29 14:52:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-29 14:52:44 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-29 14:52:44 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-29 14:52:44 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-29 14:52:44 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-29 14:52:44 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-29 14:52:44 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-29 14:52:44 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 14:52:44 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-29 14:52:44 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-29 14:52:44 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-29 14:52:44 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-29 14:52:44 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-29 14:52:44 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-29 14:52:44 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-29 14:52:44 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-29 14:52:44 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-29 14:52:44 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-29 14:52:44 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-29 14:52:44 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-29 14:52:44 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-29 14:52:44 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-29 14:52:44 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 14:52:44 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-29 14:52:44 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-29 14:52:44 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-29 14:52:44 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-29 14:52:44 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-29 14:52:44 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-29 14:52:44 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-29 14:52:44 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 14:52:44 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 14:52:44 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-29 14:52:44 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-29 14:52:44 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-29 14:52:44 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-29 14:52:44 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-29 14:52:44 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-29 14:52:44 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-29 14:52:44 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-29 14:52:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-29 14:52:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-29 14:52:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-29 14:52:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-29 14:52:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-29 14:52:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-29 14:52:44 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-29 14:52:44 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-29 14:52:44 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-29 14:52:44 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-29 14:52:44 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:44 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-29 14:52:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-29 14:52:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-29 14:52:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-29 14:52:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-29 14:52:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-29 14:52:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-29 14:52:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-29 14:52:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-29 14:52:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-29 14:52:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-29 14:52:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-29 14:52:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-29 14:52:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-29 14:52:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-29 14:52:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-29 14:52:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-29 14:52:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-29 14:52:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-29 14:52:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-29 14:52:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-29 14:52:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-29 14:52:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-29 14:52:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-29 14:52:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-29 14:52:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-29 14:52:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-29 14:52:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-29 14:52:44 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-29 14:52:44 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-29 14:52:44 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-29 14:52:44 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-29 14:52:44 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-29 14:52:44 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 14:52:44 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-29 14:52:44 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-29 14:52:44 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-29 14:52:44 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-29 14:52:44 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 14:52:44 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-29 14:52:44 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-29 14:52:44 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 14:52:44 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-29 14:52:44 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-29 14:52:44 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 14:52:44 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-29 14:52:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 14:52:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-29 14:52:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-29 14:52:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-29 14:52:45 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-29 14:52:45 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-29 14:52:45 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-29 14:52:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 14:52:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 29 14:52:14 CST 2019]; root of context hierarchy
2019-04-29 14:52:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 14:52:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 14:52:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 14:52:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-29 14:52:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-29 14:52:50 -Registering beans for JMX exposure on startup
2019-04-29 14:52:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-29 14:52:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-29 14:52:50 -Starting beans in phase 2147483647
2019-04-29 14:52:50 -Context refreshed
2019-04-29 14:52:50 -Found 1 custom documentation plugin(s)
2019-04-29 14:52:50 -Scanning for api listing references
2019-04-29 14:52:50 -Generating unique operation named: getCountDUsingPOST_1
2019-04-29 14:52:50 -Generating unique operation named: removeUsingPOST_1
2019-04-29 14:52:50 -Generating unique operation named: addUsingGET_1
2019-04-29 14:52:50 -Generating unique operation named: editUsingGET_1
2019-04-29 14:52:50 -Generating unique operation named: listUsingGET_1
2019-04-29 14:52:50 -Generating unique operation named: removeUsingPOST_2
2019-04-29 14:52:50 -Generating unique operation named: removeUsingPOST_3
2019-04-29 14:52:50 -Generating unique operation named: saveUsingPOST_1
2019-04-29 14:52:50 -Generating unique operation named: updateUsingGET_1
2019-04-29 14:52:50 -Generating unique operation named: updateUsingHEAD_1
2019-04-29 14:52:50 -Generating unique operation named: updateUsingPOST_1
2019-04-29 14:52:50 -Generating unique operation named: updateUsingPUT_1
2019-04-29 14:52:50 -Generating unique operation named: updateUsingPATCH_1
2019-04-29 14:52:50 -Generating unique operation named: updateUsingDELETE_1
2019-04-29 14:52:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-29 14:52:50 -Generating unique operation named: updateUsingTRACE_1
2019-04-29 14:52:51 -Generating unique operation named: addUsingGET_2
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_2
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_2
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_4
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_5
2019-04-29 14:52:51 -Generating unique operation named: saveUsingPOST_2
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPOST_2
2019-04-29 14:52:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-29 14:52:51 -Generating unique operation named: addUsingGET_3
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_3
2019-04-29 14:52:51 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_3
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_6
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_7
2019-04-29 14:52:51 -Generating unique operation named: saveUsingPOST_3
2019-04-29 14:52:51 -Generating unique operation named: updateUsingGET_2
2019-04-29 14:52:51 -Generating unique operation named: updateUsingHEAD_2
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPOST_3
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPUT_2
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPATCH_2
2019-04-29 14:52:51 -Generating unique operation named: updateUsingDELETE_2
2019-04-29 14:52:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-29 14:52:51 -Generating unique operation named: updateUsingTRACE_2
2019-04-29 14:52:51 -Generating unique operation named: addUsingGET_4
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_4
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_4
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_8
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_9
2019-04-29 14:52:51 -Generating unique operation named: saveUsingPOST_4
2019-04-29 14:52:51 -Generating unique operation named: updateUsingGET_3
2019-04-29 14:52:51 -Generating unique operation named: updateUsingHEAD_3
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPOST_4
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPUT_3
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPATCH_3
2019-04-29 14:52:51 -Generating unique operation named: updateUsingDELETE_3
2019-04-29 14:52:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-29 14:52:51 -Generating unique operation named: updateUsingTRACE_3
2019-04-29 14:52:51 -Generating unique operation named: ElecUsingGET_1
2019-04-29 14:52:51 -Generating unique operation named: addUsingGET_5
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_5
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_5
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_10
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_11
2019-04-29 14:52:51 -Generating unique operation named: saveUsingPOST_5
2019-04-29 14:52:51 -Generating unique operation named: updateUsingGET_4
2019-04-29 14:52:51 -Generating unique operation named: updateUsingHEAD_4
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPOST_5
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPUT_4
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPATCH_4
2019-04-29 14:52:51 -Generating unique operation named: updateUsingDELETE_4
2019-04-29 14:52:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-29 14:52:51 -Generating unique operation named: updateUsingTRACE_4
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_6
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_6
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPOST_6
2019-04-29 14:52:51 -Generating unique operation named: addUsingGET_6
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_7
2019-04-29 14:52:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_7
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_12
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_13
2019-04-29 14:52:51 -Generating unique operation named: saveUsingPOST_6
2019-04-29 14:52:51 -Generating unique operation named: updateUsingGET_5
2019-04-29 14:52:51 -Generating unique operation named: updateUsingHEAD_5
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPOST_7
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPUT_5
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPATCH_5
2019-04-29 14:52:51 -Generating unique operation named: updateUsingDELETE_5
2019-04-29 14:52:51 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-29 14:52:51 -Generating unique operation named: updateUsingTRACE_5
2019-04-29 14:52:51 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-29 14:52:51 -Generating unique operation named: addUsingGET_7
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_8
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_8
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_14
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_15
2019-04-29 14:52:51 -Generating unique operation named: saveUsingPOST_7
2019-04-29 14:52:51 -Generating unique operation named: updateUsingGET_6
2019-04-29 14:52:51 -Generating unique operation named: updateUsingHEAD_6
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPOST_8
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPUT_6
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPATCH_6
2019-04-29 14:52:51 -Generating unique operation named: updateUsingDELETE_6
2019-04-29 14:52:51 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-29 14:52:51 -Generating unique operation named: updateUsingTRACE_6
2019-04-29 14:52:51 -Generating unique operation named: addUsingGET_8
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_9
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_9
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_16
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_17
2019-04-29 14:52:51 -Generating unique operation named: saveUsingPOST_8
2019-04-29 14:52:51 -Generating unique operation named: updateUsingGET_7
2019-04-29 14:52:51 -Generating unique operation named: updateUsingHEAD_7
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPOST_9
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPUT_7
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPATCH_7
2019-04-29 14:52:51 -Generating unique operation named: updateUsingDELETE_7
2019-04-29 14:52:51 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-29 14:52:51 -Generating unique operation named: updateUsingTRACE_7
2019-04-29 14:52:51 -Generating unique operation named: addUsingGET_9
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_10
2019-04-29 14:52:51 -Generating unique operation named: infoUsingGET_1
2019-04-29 14:52:51 -Generating unique operation named: infoUsingHEAD_1
2019-04-29 14:52:51 -Generating unique operation named: infoUsingPOST_1
2019-04-29 14:52:51 -Generating unique operation named: infoUsingPUT_1
2019-04-29 14:52:51 -Generating unique operation named: infoUsingPATCH_1
2019-04-29 14:52:51 -Generating unique operation named: infoUsingDELETE_1
2019-04-29 14:52:51 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-29 14:52:51 -Generating unique operation named: infoUsingTRACE_1
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_10
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_18
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_19
2019-04-29 14:52:51 -Generating unique operation named: saveUsingPOST_9
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPOST_10
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_11
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_20
2019-04-29 14:52:51 -Generating unique operation named: welcomeUsingGET_1
2019-04-29 14:52:51 -Generating unique operation named: addUsingGET_10
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_11
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_12
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_21
2019-04-29 14:52:51 -Generating unique operation named: saveUsingPOST_10
2019-04-29 14:52:51 -Generating unique operation named: treeUsingGET_1
2019-04-29 14:52:51 -Generating unique operation named: treeUsingGET_2
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPOST_11
2019-04-29 14:52:51 -Generating unique operation named: addUsingGET_11
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_12
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_13
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_22
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_23
2019-04-29 14:52:51 -Generating unique operation named: saveUsingPOST_11
2019-04-29 14:52:51 -Generating unique operation named: updateUsingGET_8
2019-04-29 14:52:51 -Generating unique operation named: updateUsingHEAD_8
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPOST_12
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPUT_8
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPATCH_8
2019-04-29 14:52:51 -Generating unique operation named: updateUsingDELETE_8
2019-04-29 14:52:51 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-29 14:52:51 -Generating unique operation named: updateUsingTRACE_8
2019-04-29 14:52:51 -Generating unique operation named: addUsingGET_12
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_13
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_14
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_24
2019-04-29 14:52:51 -Generating unique operation named: removeUsingPOST_25
2019-04-29 14:52:51 -Generating unique operation named: saveUsingPOST_12
2019-04-29 14:52:51 -Generating unique operation named: updateUsingGET_9
2019-04-29 14:52:51 -Generating unique operation named: updateUsingHEAD_9
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPOST_13
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPUT_9
2019-04-29 14:52:51 -Generating unique operation named: updateUsingPATCH_9
2019-04-29 14:52:51 -Generating unique operation named: updateUsingDELETE_9
2019-04-29 14:52:51 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-29 14:52:51 -Generating unique operation named: updateUsingTRACE_9
2019-04-29 14:52:51 -Generating unique operation named: addUsingGET_13
2019-04-29 14:52:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-29 14:52:51 -Generating unique operation named: editUsingGET_14
2019-04-29 14:52:51 -Generating unique operation named: listUsingGET_15
2019-04-29 14:52:52 -Generating unique operation named: saveUsingPOST_13
2019-04-29 14:52:52 -Generating unique operation named: saveUsingPOST_14
2019-04-29 14:52:52 -Generating unique operation named: updateUsingPOST_14
2019-04-29 14:52:52 -Generating unique operation named: listUsingGET_16
2019-04-29 14:52:52 -Generating unique operation named: listUsingHEAD_1
2019-04-29 14:52:52 -Generating unique operation named: listUsingPOST_1
2019-04-29 14:52:52 -Generating unique operation named: listUsingPUT_1
2019-04-29 14:52:52 -Generating unique operation named: listUsingPATCH_1
2019-04-29 14:52:52 -Generating unique operation named: listUsingDELETE_1
2019-04-29 14:52:52 -Generating unique operation named: listUsingOPTIONS_1
2019-04-29 14:52:52 -Generating unique operation named: listUsingTRACE_1
2019-04-29 14:52:52 -Generating unique operation named: countDDUsingGET_1
2019-04-29 14:52:52 -Generating unique operation named: exportDDUsingGET_1
2019-04-29 14:52:52 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-29 14:52:52 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-29 14:52:52 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-29 14:52:52 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-29 14:52:52 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-29 14:52:52 -Generating unique operation named: addUsingGET_14
2019-04-29 14:52:52 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-29 14:52:52 -Generating unique operation named: editUsingGET_15
2019-04-29 14:52:52 -Generating unique operation named: listUsingGET_17
2019-04-29 14:52:52 -Generating unique operation named: removeUsingPOST_26
2019-04-29 14:52:52 -Generating unique operation named: saveUsingPOST_15
2019-04-29 14:52:52 -Generating unique operation named: treeUsingGET_3
2019-04-29 14:52:52 -Generating unique operation named: treeViewUsingGET_1
2019-04-29 14:52:52 -Generating unique operation named: updateUsingPOST_15
2019-04-29 14:52:52 -Generating unique operation named: addUsingGET_15
2019-04-29 14:52:52 -Generating unique operation named: editUsingGET_16
2019-04-29 14:52:52 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-29 14:52:52 -Generating unique operation named: listUsingGET_18
2019-04-29 14:52:52 -Generating unique operation named: removeUsingPOST_27
2019-04-29 14:52:52 -Generating unique operation named: removeUsingPOST_28
2019-04-29 14:52:52 -Generating unique operation named: saveUsingPOST_16
2019-04-29 14:52:52 -Generating unique operation named: updateUsingGET_10
2019-04-29 14:52:52 -Generating unique operation named: updateUsingHEAD_10
2019-04-29 14:52:52 -Generating unique operation named: updateUsingPOST_16
2019-04-29 14:52:52 -Generating unique operation named: updateUsingPUT_10
2019-04-29 14:52:52 -Generating unique operation named: updateUsingPATCH_10
2019-04-29 14:52:52 -Generating unique operation named: updateUsingDELETE_10
2019-04-29 14:52:52 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-29 14:52:52 -Generating unique operation named: updateUsingTRACE_10
2019-04-29 14:52:52 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-29 14:52:52 -Generating unique operation named: addUsingGET_16
2019-04-29 14:52:52 -Generating unique operation named: editUsingGET_17
2019-04-29 14:52:52 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-29 14:52:52 -Generating unique operation named: listUsingGET_19
2019-04-29 14:52:52 -Generating unique operation named: removeUsingPOST_29
2019-04-29 14:52:52 -Generating unique operation named: removeUsingPOST_30
2019-04-29 14:52:52 -Generating unique operation named: saveUsingPOST_17
2019-04-29 14:52:52 -Generating unique operation named: updateUsingGET_11
2019-04-29 14:52:52 -Generating unique operation named: updateUsingHEAD_11
2019-04-29 14:52:52 -Generating unique operation named: updateUsingPOST_17
2019-04-29 14:52:52 -Generating unique operation named: updateUsingPUT_11
2019-04-29 14:52:52 -Generating unique operation named: updateUsingPATCH_11
2019-04-29 14:52:52 -Generating unique operation named: updateUsingDELETE_11
2019-04-29 14:52:52 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-29 14:52:52 -Generating unique operation named: updateUsingTRACE_11
2019-04-29 14:52:52 -Generating unique operation named: addUsingGET_17
2019-04-29 14:52:52 -Generating unique operation named: editUsingGET_18
2019-04-29 14:52:52 -Generating unique operation named: listUsingGET_20
2019-04-29 14:52:52 -Generating unique operation named: removeUsingPOST_31
2019-04-29 14:52:52 -Generating unique operation named: removeUsingPOST_32
2019-04-29 14:52:52 -Generating unique operation named: saveUsingPOST_18
2019-04-29 14:52:52 -Generating unique operation named: updateUsingGET_12
2019-04-29 14:52:52 -Generating unique operation named: updateUsingHEAD_12
2019-04-29 14:52:52 -Generating unique operation named: updateUsingPOST_18
2019-04-29 14:52:52 -Generating unique operation named: updateUsingPUT_12
2019-04-29 14:52:52 -Generating unique operation named: updateUsingPATCH_12
2019-04-29 14:52:52 -Generating unique operation named: updateUsingDELETE_12
2019-04-29 14:52:52 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-29 14:52:52 -Generating unique operation named: updateUsingTRACE_12
2019-04-29 14:52:52 -Starting Quartz Scheduler now
2019-04-29 14:52:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-29 14:52:52 -Starting...
2019-04-29 14:52:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-29 14:52:52 -Started.
2019-04-29 14:52:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-29 14:52:52 -Using a shared selector for servlet write/read
2019-04-29 14:52:52 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-29 14:52:52 -Started BootdoApplication in 39.138 seconds (JVM running for 39.966)
2019-04-29 14:52:52 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-29 14:52:53 -==> Parameters: 
2019-04-29 14:52:53 -<==      Total: 1
2019-04-29 14:52:58 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-29 14:52:58 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-29 14:52:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 89 ms
2019-04-29 14:52:58 -Enabling session validation scheduler...
2019-04-29 14:52:58 -请求地址 : http://localhost:8081/login;JSESSIONID=bc62475a-cb05-4e06-a125-05e78fb41ac9
2019-04-29 14:52:58 -HTTP METHOD : GET
2019-04-29 14:52:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 14:52:58 -参数 : [{}]
2019-04-29 14:52:58 -耗时 : 8
2019-04-29 14:52:58 -返回值 : login
2019-04-29 14:53:00 -请求地址 : http://localhost:8081/getVerify
2019-04-29 14:53:00 -HTTP METHOD : GET
2019-04-29 14:53:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 14:53:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@34302954, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3af7c1a2]
2019-04-29 14:53:06 -2018
2019-04-29 14:53:07 -耗时 : 6958
2019-04-29 14:53:07 -返回值 : null
2019-04-29 14:53:12 -请求地址 : http://localhost:8081/login
2019-04-29 14:53:12 -HTTP METHOD : POST
2019-04-29 14:53:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 14:53:12 -参数 : [admin, 111111, 2018, org.apache.shiro.web.servlet.ShiroHttpServletRequest@548d8f0c]
2019-04-29 14:53:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 14:53:12 -==> Parameters: admin(String)
2019-04-29 14:53:12 -<==      Total: 1
2019-04-29 14:53:12 -耗时 : 220
2019-04-29 14:53:12 -返回值 : {msg=操作成功, code=0}
2019-04-29 14:53:12 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-29 14:53:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 14:53:13 -==> Parameters: 1(Long), admin(String), 登录(String), 220(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 14:53:12.975(Timestamp)
2019-04-29 14:53:13 -<==    Updates: 1
2019-04-29 14:53:13 -请求地址 : http://localhost:8081/index
2019-04-29 14:53:13 -HTTP METHOD : GET
2019-04-29 14:53:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 14:53:13 -参数 : [{}]
2019-04-29 14:53:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 14:53:13 -==> Parameters: 1(Long)
2019-04-29 14:53:14 -<==      Total: 49
2019-04-29 14:53:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 14:53:14 -==> Parameters: 138(Long)
2019-04-29 14:53:14 -<==      Total: 1
2019-04-29 14:53:14 -耗时 : 1057
2019-04-29 14:53:14 -返回值 : index_v1
2019-04-29 14:53:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 14:53:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1057(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 14:53:14.66(Timestamp)
2019-04-29 14:53:14 -<==    Updates: 1
2019-04-29 14:53:14 -请求地址 : http://localhost:8081/main
2019-04-29 14:53:14 -HTTP METHOD : GET
2019-04-29 14:53:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 14:53:14 -参数 : []
2019-04-29 14:53:14 -耗时 : 0
2019-04-29 14:53:14 -返回值 : main
2019-04-29 14:53:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 14:53:15 -HTTP METHOD : GET
2019-04-29 14:53:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 14:53:15 -参数 : []
2019-04-29 14:53:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 14:53:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 14:53:15 -<==      Total: 0
2019-04-29 14:53:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 14:53:15 -==> Parameters: 1(Long), 0(String)
2019-04-29 14:53:15 -请求地址 : http://localhost:8081/main
2019-04-29 14:53:15 -HTTP METHOD : GET
2019-04-29 14:53:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 14:53:15 -参数 : []
2019-04-29 14:53:15 -耗时 : 1
2019-04-29 14:53:15 -返回值 : main
2019-04-29 14:53:15 -<==      Total: 1
2019-04-29 14:53:15 -耗时 : 101
2019-04-29 14:53:15 -返回值 : com.bootdo.common.utils.PageUtils@6a71a4db
2019-04-29 14:53:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 14:53:18 -==> Parameters: 1(Long)
2019-04-29 14:53:18 -<==      Total: 93
2019-04-29 14:53:18 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 14:53:18 -HTTP METHOD : GET
2019-04-29 14:53:18 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 14:53:18 -参数 : []
2019-04-29 14:53:18 -耗时 : 13
2019-04-29 14:53:18 -返回值 : charts/tableElecMM
2019-04-29 14:53:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 14:53:25 -HTTP METHOD : GET
2019-04-29 14:53:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 14:53:25 -参数 : []
2019-04-29 14:53:25 -耗时 : 0
2019-04-29 14:53:25 -返回值 : system/dept/deptTree
2019-04-29 14:53:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 14:53:25 -HTTP METHOD : GET
2019-04-29 14:53:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 14:53:25 -参数 : []
2019-04-29 14:53:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 14:53:25 -==> Parameters: 
2019-04-29 14:53:25 -<==      Total: 3
2019-04-29 14:53:25 -耗时 : 23
2019-04-29 14:53:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 14:53:27 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 14:53:27 -HTTP METHOD : POST
2019-04-29 14:53:27 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 14:53:27 -参数 : [com.bootdo.elec.vo.ElecVo@1726c5d, com.bootdo.moneyLog.vo.ElecLogVo@506437a1]
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:27 -<==      Total: 1
2019-04-29 14:53:27 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:27 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 14:53:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 14:53:28 -<==      Total: 1
2019-04-29 14:53:28 -耗时 : 541
2019-04-29 14:53:28 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 14:53:45 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-29 15:23:45 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 440]
2019-04-29 15:30:02 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 15:39:08 -请求地址 : http://localhost:8081/login;JSESSIONID=51f4b93a-6b92-4df2-87b7-6087bcbe730f
2019-04-29 15:39:08 -HTTP METHOD : GET
2019-04-29 15:39:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 15:39:08 -参数 : [{}]
2019-04-29 15:39:08 -耗时 : 0
2019-04-29 15:39:08 -返回值 : login
2019-04-29 15:39:09 -请求地址 : http://localhost:8081/getVerify
2019-04-29 15:39:09 -HTTP METHOD : GET
2019-04-29 15:39:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 15:39:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6dc2699a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@19f534d4]
2019-04-29 15:39:10 -2028
2019-04-29 15:39:10 -耗时 : 1095
2019-04-29 15:39:10 -返回值 : null
2019-04-29 15:39:14 -请求地址 : http://localhost:8081/login
2019-04-29 15:39:14 -HTTP METHOD : POST
2019-04-29 15:39:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 15:39:14 -参数 : [admin, 111111, 2028, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1559a83f]
2019-04-29 15:39:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 15:39:14 -==> Parameters: admin(String)
2019-04-29 15:39:14 -<==      Total: 1
2019-04-29 15:39:14 -耗时 : 242
2019-04-29 15:39:14 -返回值 : {msg=操作成功, code=0}
2019-04-29 15:39:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:39:14 -请求地址 : http://localhost:8081/index
2019-04-29 15:39:14 -HTTP METHOD : GET
2019-04-29 15:39:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 15:39:14 -参数 : [{}]
2019-04-29 15:39:14 -==> Parameters: 1(Long), admin(String), 登录(String), 242(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 15:39:14.789(Timestamp)
2019-04-29 15:39:15 -<==    Updates: 1
2019-04-29 15:39:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 15:39:15 -==> Parameters: 1(Long)
2019-04-29 15:39:15 -<==      Total: 49
2019-04-29 15:39:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 15:39:15 -==> Parameters: 138(Long)
2019-04-29 15:39:15 -<==      Total: 1
2019-04-29 15:39:15 -耗时 : 806
2019-04-29 15:39:15 -返回值 : index_v1
2019-04-29 15:39:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:39:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 806(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 15:39:15.706(Timestamp)
2019-04-29 15:39:16 -<==    Updates: 1
2019-04-29 15:39:16 -请求地址 : http://localhost:8081/main
2019-04-29 15:39:16 -HTTP METHOD : GET
2019-04-29 15:39:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:39:16 -参数 : []
2019-04-29 15:39:16 -耗时 : 1
2019-04-29 15:39:16 -返回值 : main
2019-04-29 15:39:16 -请求地址 : http://localhost:8081/main
2019-04-29 15:39:16 -HTTP METHOD : GET
2019-04-29 15:39:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:39:16 -参数 : []
2019-04-29 15:39:16 -耗时 : 1
2019-04-29 15:39:16 -返回值 : main
2019-04-29 15:39:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 15:39:16 -HTTP METHOD : GET
2019-04-29 15:39:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 15:39:17 -参数 : []
2019-04-29 15:39:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 15:39:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 15:39:17 -<==      Total: 0
2019-04-29 15:39:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 15:39:17 -==> Parameters: 1(Long), 0(String)
2019-04-29 15:39:17 -<==      Total: 1
2019-04-29 15:39:17 -耗时 : 182
2019-04-29 15:39:17 -返回值 : com.bootdo.common.utils.PageUtils@1ed51e5d
2019-04-29 15:39:30 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 15:39:30 -==> Parameters: 1(Long)
2019-04-29 15:39:30 -<==      Total: 93
2019-04-29 15:39:30 -请求地址 : http://localhost:8081/charts/countMM
2019-04-29 15:39:30 -HTTP METHOD : GET
2019-04-29 15:39:30 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-29 15:39:30 -参数 : []
2019-04-29 15:39:30 -耗时 : 137
2019-04-29 15:39:30 -返回值 : charts/countMM
2019-04-29 15:39:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-29 15:39:32 -HTTP METHOD : GET
2019-04-29 15:39:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-29 15:39:32 -参数 : [userType]
2019-04-29 15:39:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-29 15:39:32 -==> Parameters: userType(String)
2019-04-29 15:39:33 -<==      Total: 4
2019-04-29 15:39:33 -耗时 : 421
2019-04-29 15:39:33 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-29 15:39:38 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 15:39:38 -HTTP METHOD : GET
2019-04-29 15:39:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:39:38 -参数 : []
2019-04-29 15:39:38 -耗时 : 1
2019-04-29 15:39:38 -返回值 : charts/tableElecMM
2019-04-29 15:39:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 15:39:44 -HTTP METHOD : GET
2019-04-29 15:39:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 15:39:44 -参数 : []
2019-04-29 15:39:44 -耗时 : 1
2019-04-29 15:39:44 -返回值 : system/dept/deptTree
2019-04-29 15:39:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 15:39:44 -HTTP METHOD : GET
2019-04-29 15:39:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 15:39:44 -参数 : []
2019-04-29 15:39:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 15:39:44 -==> Parameters: 
2019-04-29 15:39:44 -<==      Total: 3
2019-04-29 15:39:44 -耗时 : 117
2019-04-29 15:39:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 15:39:46 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 15:39:46 -HTTP METHOD : POST
2019-04-29 15:39:46 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:39:46 -参数 : [com.bootdo.elec.vo.ElecVo@635457f2, com.bootdo.moneyLog.vo.ElecLogVo@5cb87e6]
2019-04-29 15:39:46 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:47 -<==      Total: 1
2019-04-29 15:39:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:39:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:39:48 -<==      Total: 1
2019-04-29 15:39:48 -耗时 : 1160
2019-04-29 15:39:48 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 15:42:01 -请求地址 : http://localhost:8081/index
2019-04-29 15:42:01 -HTTP METHOD : GET
2019-04-29 15:42:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 15:42:01 -参数 : [{}]
2019-04-29 15:42:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 15:42:01 -==> Parameters: 1(Long)
2019-04-29 15:42:01 -<==      Total: 49
2019-04-29 15:42:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 15:42:01 -==> Parameters: 138(Long)
2019-04-29 15:42:01 -<==      Total: 1
2019-04-29 15:42:01 -耗时 : 347
2019-04-29 15:42:01 -返回值 : index_v1
2019-04-29 15:42:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:42:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 347(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 15:42:01.602(Timestamp)
2019-04-29 15:42:01 -请求地址 : http://localhost:8081/main
2019-04-29 15:42:01 -HTTP METHOD : GET
2019-04-29 15:42:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:42:01 -参数 : []
2019-04-29 15:42:01 -耗时 : 1
2019-04-29 15:42:01 -返回值 : main
2019-04-29 15:42:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 15:42:01 -HTTP METHOD : GET
2019-04-29 15:42:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 15:42:01 -参数 : []
2019-04-29 15:42:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 15:42:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 15:42:01 -<==      Total: 0
2019-04-29 15:42:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 15:42:01 -==> Parameters: 1(Long), 0(String)
2019-04-29 15:42:01 -<==      Total: 1
2019-04-29 15:42:01 -耗时 : 17
2019-04-29 15:42:01 -返回值 : com.bootdo.common.utils.PageUtils@1ebc8266
2019-04-29 15:42:02 -<==    Updates: 1
2019-04-29 15:42:02 -请求地址 : http://localhost:8081/main
2019-04-29 15:42:02 -HTTP METHOD : GET
2019-04-29 15:42:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:42:02 -参数 : []
2019-04-29 15:42:02 -耗时 : 2
2019-04-29 15:42:02 -返回值 : main
2019-04-29 15:42:07 -请求地址 : http://localhost:8081/charts/countMM
2019-04-29 15:42:07 -HTTP METHOD : GET
2019-04-29 15:42:07 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-29 15:42:07 -参数 : []
2019-04-29 15:42:07 -耗时 : 0
2019-04-29 15:42:07 -返回值 : charts/countMM
2019-04-29 15:42:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-29 15:42:07 -HTTP METHOD : GET
2019-04-29 15:42:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-29 15:42:07 -参数 : [userType]
2019-04-29 15:42:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-29 15:42:07 -==> Parameters: userType(String)
2019-04-29 15:42:07 -<==      Total: 4
2019-04-29 15:42:07 -耗时 : 18
2019-04-29 15:42:07 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-29 15:42:09 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 15:42:09 -HTTP METHOD : GET
2019-04-29 15:42:09 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:42:09 -参数 : []
2019-04-29 15:42:09 -耗时 : 1
2019-04-29 15:42:09 -返回值 : charts/tableElecMM
2019-04-29 15:42:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 15:42:19 -HTTP METHOD : GET
2019-04-29 15:42:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 15:42:19 -参数 : []
2019-04-29 15:42:19 -耗时 : 0
2019-04-29 15:42:19 -返回值 : system/dept/deptTree
2019-04-29 15:42:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 15:42:21 -HTTP METHOD : GET
2019-04-29 15:42:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 15:42:21 -参数 : []
2019-04-29 15:42:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 15:42:21 -==> Parameters: 
2019-04-29 15:42:21 -<==      Total: 3
2019-04-29 15:42:21 -耗时 : 3
2019-04-29 15:42:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 15:42:23 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 15:42:23 -HTTP METHOD : POST
2019-04-29 15:42:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:42:23 -参数 : [com.bootdo.elec.vo.ElecVo@622d4b7, com.bootdo.moneyLog.vo.ElecLogVo@131e5984]
2019-04-29 15:42:23 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:23 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:24 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:25 -<==      Total: 1
2019-04-29 15:42:25 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:25 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:42:26 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:42:26 -<==      Total: 1
2019-04-29 15:42:26 -耗时 : 2240
2019-04-29 15:42:26 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 15:43:08 -请求地址 : http://localhost:8081/login;JSESSIONID=e93dfa60-5103-415f-aeae-4887cb11e0ae
2019-04-29 15:43:08 -HTTP METHOD : GET
2019-04-29 15:43:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 15:43:08 -参数 : [{}]
2019-04-29 15:43:08 -耗时 : 1
2019-04-29 15:43:08 -返回值 : login
2019-04-29 15:43:09 -请求地址 : http://localhost:8081/getVerify
2019-04-29 15:43:09 -HTTP METHOD : GET
2019-04-29 15:43:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 15:43:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2b799117, org.apache.shiro.web.servlet.ShiroHttpServletResponse@469c2975]
2019-04-29 15:43:09 -2977
2019-04-29 15:43:09 -耗时 : 251
2019-04-29 15:43:09 -返回值 : null
2019-04-29 15:43:09 -请求地址 : http://localhost:8081/login
2019-04-29 15:43:09 -HTTP METHOD : GET
2019-04-29 15:43:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 15:43:09 -参数 : [{}]
2019-04-29 15:43:09 -耗时 : 1
2019-04-29 15:43:09 -返回值 : login
2019-04-29 15:43:14 -请求地址 : http://localhost:8081/login
2019-04-29 15:43:14 -HTTP METHOD : POST
2019-04-29 15:43:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 15:43:14 -参数 : [admin, 111111, 2977, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ee3a7b1]
2019-04-29 15:43:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 15:43:14 -==> Parameters: admin(String)
2019-04-29 15:43:15 -<==      Total: 1
2019-04-29 15:43:15 -耗时 : 130
2019-04-29 15:43:15 -返回值 : {msg=操作成功, code=0}
2019-04-29 15:43:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:43:15 -==> Parameters: 1(Long), admin(String), 登录(String), 131(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 15:43:15.083(Timestamp)
2019-04-29 15:43:15 -请求地址 : http://localhost:8081/index
2019-04-29 15:43:15 -HTTP METHOD : GET
2019-04-29 15:43:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 15:43:15 -参数 : [{}]
2019-04-29 15:43:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 15:43:15 -==> Parameters: 1(Long)
2019-04-29 15:43:15 -<==    Updates: 1
2019-04-29 15:43:15 -<==      Total: 49
2019-04-29 15:43:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 15:43:15 -==> Parameters: 138(Long)
2019-04-29 15:43:15 -<==      Total: 1
2019-04-29 15:43:15 -耗时 : 172
2019-04-29 15:43:15 -返回值 : index_v1
2019-04-29 15:43:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:43:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 172(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 15:43:15.317(Timestamp)
2019-04-29 15:43:15 -请求地址 : http://localhost:8081/main
2019-04-29 15:43:15 -<==    Updates: 1
2019-04-29 15:43:15 -HTTP METHOD : GET
2019-04-29 15:43:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:43:15 -参数 : []
2019-04-29 15:43:15 -耗时 : 129
2019-04-29 15:43:15 -返回值 : main
2019-04-29 15:43:18 -请求地址 : http://localhost:8081/main
2019-04-29 15:43:18 -HTTP METHOD : GET
2019-04-29 15:43:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:43:18 -参数 : []
2019-04-29 15:43:18 -耗时 : 4
2019-04-29 15:43:18 -返回值 : main
2019-04-29 15:43:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 15:43:18 -HTTP METHOD : GET
2019-04-29 15:43:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 15:43:18 -参数 : []
2019-04-29 15:43:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 15:43:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 15:43:18 -<==      Total: 0
2019-04-29 15:43:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 15:43:18 -==> Parameters: 1(Long), 0(String)
2019-04-29 15:43:18 -<==      Total: 1
2019-04-29 15:43:18 -耗时 : 38
2019-04-29 15:43:18 -返回值 : com.bootdo.common.utils.PageUtils@ac3bc8
2019-04-29 15:43:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 15:43:27 -==> Parameters: 1(Long)
2019-04-29 15:43:27 -<==      Total: 93
2019-04-29 15:43:27 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 15:43:27 -HTTP METHOD : GET
2019-04-29 15:43:27 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:43:27 -参数 : []
2019-04-29 15:43:27 -耗时 : 1
2019-04-29 15:43:27 -返回值 : charts/tableElecMM
2019-04-29 15:43:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 15:43:33 -HTTP METHOD : GET
2019-04-29 15:43:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 15:43:33 -参数 : []
2019-04-29 15:43:33 -耗时 : 589
2019-04-29 15:43:33 -返回值 : system/dept/deptTree
2019-04-29 15:43:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 15:43:34 -HTTP METHOD : GET
2019-04-29 15:43:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 15:43:34 -参数 : []
2019-04-29 15:43:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 15:43:34 -==> Parameters: 
2019-04-29 15:43:34 -<==      Total: 3
2019-04-29 15:43:34 -耗时 : 4
2019-04-29 15:43:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 15:43:35 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 15:43:35 -HTTP METHOD : POST
2019-04-29 15:43:35 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:43:35 -参数 : [com.bootdo.elec.vo.ElecVo@5b9461db, com.bootdo.moneyLog.vo.ElecLogVo@217d986f]
2019-04-29 15:43:35 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:35 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:35 -<==      Total: 1
2019-04-29 15:43:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:35 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:35 -<==      Total: 1
2019-04-29 15:43:35 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:35 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:43:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:43:36 -<==      Total: 1
2019-04-29 15:43:36 -耗时 : 596
2019-04-29 15:43:36 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 15:45:08 -请求地址 : http://localhost:8081/index
2019-04-29 15:45:08 -HTTP METHOD : GET
2019-04-29 15:45:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 15:45:08 -参数 : [{}]
2019-04-29 15:45:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 15:45:08 -==> Parameters: 1(Long)
2019-04-29 15:45:08 -<==      Total: 49
2019-04-29 15:45:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 15:45:08 -==> Parameters: 138(Long)
2019-04-29 15:45:08 -<==      Total: 1
2019-04-29 15:45:08 -耗时 : 55
2019-04-29 15:45:08 -返回值 : index_v1
2019-04-29 15:45:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:45:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 55(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 15:45:08.509(Timestamp)
2019-04-29 15:45:08 -<==    Updates: 1
2019-04-29 15:45:09 -请求地址 : http://localhost:8081/main
2019-04-29 15:45:09 -HTTP METHOD : GET
2019-04-29 15:45:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:45:09 -参数 : []
2019-04-29 15:45:09 -耗时 : 6
2019-04-29 15:45:09 -返回值 : main
2019-04-29 15:45:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 15:45:11 -HTTP METHOD : GET
2019-04-29 15:45:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 15:45:11 -参数 : []
2019-04-29 15:45:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 15:45:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 15:45:11 -<==      Total: 0
2019-04-29 15:45:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 15:45:11 -==> Parameters: 1(Long), 0(String)
2019-04-29 15:45:11 -<==      Total: 1
2019-04-29 15:45:11 -耗时 : 21
2019-04-29 15:45:11 -返回值 : com.bootdo.common.utils.PageUtils@5279b330
2019-04-29 15:45:11 -请求地址 : http://localhost:8081/main
2019-04-29 15:45:11 -HTTP METHOD : GET
2019-04-29 15:45:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:45:11 -参数 : []
2019-04-29 15:45:11 -耗时 : 22
2019-04-29 15:45:11 -返回值 : main
2019-04-29 15:45:16 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 15:45:16 -HTTP METHOD : GET
2019-04-29 15:45:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:45:16 -参数 : []
2019-04-29 15:45:16 -耗时 : 0
2019-04-29 15:45:16 -返回值 : charts/tableElecMM
2019-04-29 15:45:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 15:45:22 -HTTP METHOD : GET
2019-04-29 15:45:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 15:45:22 -参数 : []
2019-04-29 15:45:22 -耗时 : 1
2019-04-29 15:45:22 -返回值 : system/dept/deptTree
2019-04-29 15:45:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 15:45:22 -HTTP METHOD : GET
2019-04-29 15:45:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 15:45:22 -参数 : []
2019-04-29 15:45:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 15:45:22 -==> Parameters: 
2019-04-29 15:45:22 -<==      Total: 3
2019-04-29 15:45:22 -耗时 : 3
2019-04-29 15:45:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 15:45:24 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 15:45:24 -HTTP METHOD : POST
2019-04-29 15:45:24 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:45:24 -参数 : [com.bootdo.elec.vo.ElecVo@d292eef, com.bootdo.moneyLog.vo.ElecLogVo@47ca2140]
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:24 -<==      Total: 1
2019-04-29 15:45:24 -耗时 : 664
2019-04-29 15:45:24 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 15:45:38 -请求地址 : http://localhost:8081/index
2019-04-29 15:45:38 -HTTP METHOD : GET
2019-04-29 15:45:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 15:45:38 -参数 : [{}]
2019-04-29 15:45:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 15:45:38 -==> Parameters: 1(Long)
2019-04-29 15:45:38 -<==      Total: 49
2019-04-29 15:45:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 15:45:38 -==> Parameters: 138(Long)
2019-04-29 15:45:38 -<==      Total: 1
2019-04-29 15:45:38 -耗时 : 69
2019-04-29 15:45:38 -返回值 : index_v1
2019-04-29 15:45:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:45:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 70(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 15:45:38.977(Timestamp)
2019-04-29 15:45:39 -<==    Updates: 1
2019-04-29 15:45:42 -请求地址 : http://localhost:8081/main
2019-04-29 15:45:42 -HTTP METHOD : GET
2019-04-29 15:45:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:45:42 -请求地址 : http://localhost:8081/main
2019-04-29 15:45:42 -HTTP METHOD : GET
2019-04-29 15:45:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:45:42 -参数 : []
2019-04-29 15:45:42 -耗时 : 3
2019-04-29 15:45:42 -返回值 : main
2019-04-29 15:45:42 -请求地址 : http://localhost:8081/charts/countMM
2019-04-29 15:45:42 -HTTP METHOD : GET
2019-04-29 15:45:42 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-29 15:45:42 -参数 : []
2019-04-29 15:45:42 -耗时 : 0
2019-04-29 15:45:42 -返回值 : charts/countMM
2019-04-29 15:45:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 15:45:42 -HTTP METHOD : GET
2019-04-29 15:45:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 15:45:42 -参数 : []
2019-04-29 15:45:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 15:45:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 15:45:42 -参数 : []
2019-04-29 15:45:42 -耗时 : 41
2019-04-29 15:45:42 -返回值 : main
2019-04-29 15:45:42 -<==      Total: 0
2019-04-29 15:45:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 15:45:42 -==> Parameters: 1(Long), 0(String)
2019-04-29 15:45:42 -<==      Total: 1
2019-04-29 15:45:42 -耗时 : 20
2019-04-29 15:45:42 -返回值 : com.bootdo.common.utils.PageUtils@4c5fde96
2019-04-29 15:45:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-29 15:45:43 -HTTP METHOD : GET
2019-04-29 15:45:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-29 15:45:43 -参数 : [userType]
2019-04-29 15:45:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-29 15:45:43 -==> Parameters: userType(String)
2019-04-29 15:45:44 -<==      Total: 4
2019-04-29 15:45:44 -耗时 : 1149
2019-04-29 15:45:44 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-29 15:45:45 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 15:45:45 -HTTP METHOD : GET
2019-04-29 15:45:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:45:45 -参数 : []
2019-04-29 15:45:45 -耗时 : 0
2019-04-29 15:45:45 -返回值 : charts/tableElecMM
2019-04-29 15:45:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 15:45:52 -HTTP METHOD : GET
2019-04-29 15:45:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 15:45:52 -参数 : []
2019-04-29 15:45:52 -耗时 : 1
2019-04-29 15:45:52 -返回值 : system/dept/deptTree
2019-04-29 15:45:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 15:45:52 -HTTP METHOD : GET
2019-04-29 15:45:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 15:45:52 -参数 : []
2019-04-29 15:45:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 15:45:52 -==> Parameters: 
2019-04-29 15:45:52 -<==      Total: 3
2019-04-29 15:45:52 -耗时 : 7
2019-04-29 15:45:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 15:45:54 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 15:45:54 -HTTP METHOD : POST
2019-04-29 15:45:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:45:54 -参数 : [com.bootdo.elec.vo.ElecVo@2a75508e, com.bootdo.moneyLog.vo.ElecLogVo@354ccc54]
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:45:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:45:54 -<==      Total: 1
2019-04-29 15:45:54 -耗时 : 268
2019-04-29 15:45:54 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 15:50:58 -请求地址 : http://localhost:8081/index
2019-04-29 15:50:58 -HTTP METHOD : GET
2019-04-29 15:50:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 15:50:58 -参数 : [{}]
2019-04-29 15:50:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 15:50:58 -==> Parameters: 1(Long)
2019-04-29 15:50:58 -<==      Total: 49
2019-04-29 15:50:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 15:50:58 -==> Parameters: 138(Long)
2019-04-29 15:50:58 -<==      Total: 1
2019-04-29 15:50:58 -耗时 : 17
2019-04-29 15:50:58 -返回值 : index_v1
2019-04-29 15:50:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:50:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 15:50:58.196(Timestamp)
2019-04-29 15:50:58 -请求地址 : http://localhost:8081/main
2019-04-29 15:50:58 -HTTP METHOD : GET
2019-04-29 15:50:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:50:58 -参数 : []
2019-04-29 15:50:58 -耗时 : 0
2019-04-29 15:50:58 -返回值 : main
2019-04-29 15:50:58 -<==    Updates: 1
2019-04-29 15:50:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 15:50:59 -HTTP METHOD : GET
2019-04-29 15:50:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 15:50:59 -参数 : []
2019-04-29 15:50:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 15:50:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 15:50:59 -<==      Total: 0
2019-04-29 15:50:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 15:50:59 -==> Parameters: 1(Long), 0(String)
2019-04-29 15:50:59 -<==      Total: 1
2019-04-29 15:50:59 -耗时 : 8
2019-04-29 15:50:59 -返回值 : com.bootdo.common.utils.PageUtils@332de272
2019-04-29 15:50:59 -请求地址 : http://localhost:8081/main
2019-04-29 15:50:59 -HTTP METHOD : GET
2019-04-29 15:50:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:50:59 -参数 : []
2019-04-29 15:50:59 -耗时 : 0
2019-04-29 15:50:59 -返回值 : main
2019-04-29 15:51:11 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 15:51:11 -HTTP METHOD : GET
2019-04-29 15:51:11 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:51:11 -参数 : []
2019-04-29 15:51:11 -耗时 : 1
2019-04-29 15:51:11 -返回值 : charts/tableElecMM
2019-04-29 15:51:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 15:51:17 -HTTP METHOD : GET
2019-04-29 15:51:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 15:51:17 -参数 : []
2019-04-29 15:51:17 -耗时 : 1
2019-04-29 15:51:17 -返回值 : system/dept/deptTree
2019-04-29 15:51:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 15:51:17 -HTTP METHOD : GET
2019-04-29 15:51:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 15:51:17 -参数 : []
2019-04-29 15:51:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 15:51:17 -==> Parameters: 
2019-04-29 15:51:17 -<==      Total: 3
2019-04-29 15:51:17 -耗时 : 5
2019-04-29 15:51:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 15:51:18 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 15:51:18 -HTTP METHOD : POST
2019-04-29 15:51:18 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:51:18 -参数 : [com.bootdo.elec.vo.ElecVo@6f9d9953, com.bootdo.moneyLog.vo.ElecLogVo@511313fb]
2019-04-29 15:51:18 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:18 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:18 -<==      Total: 1
2019-04-29 15:51:18 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:18 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:18 -<==      Total: 1
2019-04-29 15:51:18 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:18 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:18 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:51:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:51:19 -<==      Total: 1
2019-04-29 15:51:19 -耗时 : 520
2019-04-29 15:51:19 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 15:52:03 -请求地址 : http://localhost:8081/login;JSESSIONID=028cd3d8-973b-4f3d-9590-546d8653bde3
2019-04-29 15:52:03 -HTTP METHOD : GET
2019-04-29 15:52:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 15:52:03 -参数 : [{}]
2019-04-29 15:52:03 -耗时 : 1
2019-04-29 15:52:03 -返回值 : login
2019-04-29 15:52:04 -请求地址 : http://localhost:8081/getVerify
2019-04-29 15:52:04 -HTTP METHOD : GET
2019-04-29 15:52:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 15:52:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@37dfdef1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@29205ce2]
2019-04-29 15:52:04 -7900
2019-04-29 15:52:04 -耗时 : 20
2019-04-29 15:52:04 -返回值 : null
2019-04-29 15:52:04 -请求地址 : http://localhost:8081/login
2019-04-29 15:52:04 -HTTP METHOD : GET
2019-04-29 15:52:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 15:52:04 -参数 : [{}]
2019-04-29 15:52:04 -耗时 : 1
2019-04-29 15:52:04 -返回值 : login
2019-04-29 15:52:12 -请求地址 : http://localhost:8081/login
2019-04-29 15:52:12 -HTTP METHOD : POST
2019-04-29 15:52:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 15:52:12 -参数 : [admin, 111111, 7900, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1d5109ec]
2019-04-29 15:52:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 15:52:12 -==> Parameters: admin(String)
2019-04-29 15:52:12 -<==      Total: 1
2019-04-29 15:52:12 -耗时 : 7
2019-04-29 15:52:12 -返回值 : {msg=操作成功, code=0}
2019-04-29 15:52:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:52:12 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 15:52:12.731(Timestamp)
2019-04-29 15:52:12 -请求地址 : http://localhost:8081/index
2019-04-29 15:52:12 -HTTP METHOD : GET
2019-04-29 15:52:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 15:52:12 -参数 : [{}]
2019-04-29 15:52:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 15:52:12 -==> Parameters: 1(Long)
2019-04-29 15:52:12 -<==    Updates: 1
2019-04-29 15:52:12 -<==      Total: 49
2019-04-29 15:52:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 15:52:12 -==> Parameters: 138(Long)
2019-04-29 15:52:12 -<==      Total: 1
2019-04-29 15:52:12 -耗时 : 119
2019-04-29 15:52:12 -返回值 : index_v1
2019-04-29 15:52:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:52:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 119(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 15:52:12.906(Timestamp)
2019-04-29 15:52:13 -请求地址 : http://localhost:8081/main
2019-04-29 15:52:13 -HTTP METHOD : GET
2019-04-29 15:52:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:52:13 -参数 : []
2019-04-29 15:52:13 -耗时 : 1
2019-04-29 15:52:13 -返回值 : main
2019-04-29 15:52:13 -<==    Updates: 1
2019-04-29 15:52:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 15:52:13 -HTTP METHOD : GET
2019-04-29 15:52:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 15:52:13 -参数 : []
2019-04-29 15:52:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 15:52:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 15:52:13 -请求地址 : http://localhost:8081/main
2019-04-29 15:52:13 -HTTP METHOD : GET
2019-04-29 15:52:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:52:13 -参数 : []
2019-04-29 15:52:13 -耗时 : 0
2019-04-29 15:52:13 -返回值 : main
2019-04-29 15:52:13 -<==      Total: 0
2019-04-29 15:52:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 15:52:13 -==> Parameters: 1(Long), 0(String)
2019-04-29 15:52:13 -<==      Total: 1
2019-04-29 15:52:13 -耗时 : 130
2019-04-29 15:52:13 -返回值 : com.bootdo.common.utils.PageUtils@58b78ea2
2019-04-29 15:52:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 15:52:21 -==> Parameters: 1(Long)
2019-04-29 15:52:21 -<==      Total: 93
2019-04-29 15:52:21 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 15:52:21 -HTTP METHOD : GET
2019-04-29 15:52:21 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:52:21 -参数 : []
2019-04-29 15:52:21 -耗时 : 0
2019-04-29 15:52:21 -返回值 : charts/tableElecMM
2019-04-29 15:52:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 15:52:26 -HTTP METHOD : GET
2019-04-29 15:52:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 15:52:26 -参数 : []
2019-04-29 15:52:26 -耗时 : 1
2019-04-29 15:52:26 -返回值 : system/dept/deptTree
2019-04-29 15:52:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 15:52:26 -HTTP METHOD : GET
2019-04-29 15:52:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 15:52:26 -参数 : []
2019-04-29 15:52:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 15:52:26 -==> Parameters: 
2019-04-29 15:52:26 -<==      Total: 3
2019-04-29 15:52:26 -耗时 : 3
2019-04-29 15:52:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 15:52:28 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 15:52:28 -HTTP METHOD : POST
2019-04-29 15:52:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:52:28 -参数 : [com.bootdo.elec.vo.ElecVo@2345f372, com.bootdo.moneyLog.vo.ElecLogVo@5342af3e]
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:52:28 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:52:28 -<==      Total: 1
2019-04-29 15:52:28 -耗时 : 586
2019-04-29 15:52:28 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 15:53:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(8)-CONNECTED(8)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 96], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 16], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 847]
2019-04-29 15:54:30 -请求地址 : http://localhost:8081/index
2019-04-29 15:54:30 -HTTP METHOD : GET
2019-04-29 15:54:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 15:54:30 -参数 : [{}]
2019-04-29 15:54:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 15:54:30 -==> Parameters: 1(Long)
2019-04-29 15:54:30 -<==      Total: 49
2019-04-29 15:54:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 15:54:30 -==> Parameters: 138(Long)
2019-04-29 15:54:30 -<==      Total: 1
2019-04-29 15:54:30 -耗时 : 42
2019-04-29 15:54:30 -返回值 : index_v1
2019-04-29 15:54:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:54:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 15:54:30.631(Timestamp)
2019-04-29 15:54:30 -<==    Updates: 1
2019-04-29 15:54:30 -请求地址 : http://localhost:8081/main
2019-04-29 15:54:30 -HTTP METHOD : GET
2019-04-29 15:54:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:54:30 -参数 : []
2019-04-29 15:54:30 -耗时 : 0
2019-04-29 15:54:30 -返回值 : main
2019-04-29 15:54:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 15:54:31 -HTTP METHOD : GET
2019-04-29 15:54:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 15:54:31 -参数 : []
2019-04-29 15:54:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 15:54:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 15:54:31 -<==      Total: 0
2019-04-29 15:54:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 15:54:31 -==> Parameters: 1(Long), 0(String)
2019-04-29 15:54:31 -<==      Total: 1
2019-04-29 15:54:31 -耗时 : 5
2019-04-29 15:54:31 -返回值 : com.bootdo.common.utils.PageUtils@b1f725
2019-04-29 15:54:31 -请求地址 : http://localhost:8081/main
2019-04-29 15:54:31 -HTTP METHOD : GET
2019-04-29 15:54:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:54:31 -参数 : []
2019-04-29 15:54:31 -耗时 : 0
2019-04-29 15:54:31 -返回值 : main
2019-04-29 15:54:36 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 15:54:36 -HTTP METHOD : GET
2019-04-29 15:54:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:54:36 -参数 : []
2019-04-29 15:54:36 -耗时 : 18
2019-04-29 15:54:36 -返回值 : charts/tableElecMM
2019-04-29 15:54:38 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 15:54:38 -HTTP METHOD : GET
2019-04-29 15:54:38 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 15:54:38 -参数 : []
2019-04-29 15:54:39 -耗时 : 629
2019-04-29 15:54:39 -返回值 : charts/tableHeatMM
2019-04-29 15:54:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 15:54:44 -HTTP METHOD : GET
2019-04-29 15:54:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 15:54:44 -参数 : []
2019-04-29 15:54:44 -耗时 : 1
2019-04-29 15:54:44 -返回值 : system/dept/deptTree
2019-04-29 15:54:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 15:54:44 -HTTP METHOD : GET
2019-04-29 15:54:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 15:54:44 -参数 : []
2019-04-29 15:54:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 15:54:44 -==> Parameters: 
2019-04-29 15:54:45 -<==      Total: 3
2019-04-29 15:54:45 -耗时 : 39
2019-04-29 15:54:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 15:54:48 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-04-29 15:54:48 -HTTP METHOD : POST
2019-04-29 15:54:48 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 15:54:48 -参数 : [com.bootdo.heat.vo.HeatVo@6b7acd32, com.bootdo.moneyLog.vo.HeatLogVo@19a8a07f]
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:48 -<==      Total: 1
2019-04-29 15:54:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:54:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:54:49 -<==      Total: 1
2019-04-29 15:54:49 -耗时 : 951
2019-04-29 15:54:49 -返回值 : {GSHeatCountPre=6, MHeatCostCount=7, GMHeatArea=1, SHeatCostCount=7, GSHeatSumPre=1, GMHeatCountPre=6, CountPrehu=24, MHeatCountPre=6, SumSHeatLog=40, MHeatPrice=1, CountOweyu=1, SHeatPrice=1, GMHeatPrice=1, CountPreyu=6, SumGMHeatLog=0, CountLogyu=240, CountGSHeatLog=1, SHeatSumPre=1, GMHeatCountOwe=1, CountOwehu=4, GMtotalhu=7, CountGMHeatLog=0, GStotalhu=7, CountLoghu=4, GSHeatSumOwe=0, GSHeatPrice=1, MHeatSumOwe=1, SHeatCountPre=6, GSHeatCountOwe=1, GMtotalyu=1, CountAllyu=7, GStotalyu=1, CountSHeatLog=1, GSHeatCostSum=1, MHeatCostSum=103, SHeatCostSum=1, CountAllhu=28, CountCostyu=106, MHeatArea=103, SHeatSumOwe=0, MHeatSumPre=3, GMHeatSumPre=1, Stotalhu=7, CountPrice=4, GMHeatCostCount=7, GMHeatCostSum=1, GSHeatCostCount=7, SumGSHeatLog=80, CountCosthu=28, SHeatCountOwe=1, CountMHeatLog=2, Mtotalhu=7, Stotalyu=1, CountArea=106, GMHeatSumOwe=0, GSHeatArea=1, SumMHeatLog=120, SHeatArea=1, Mtotalyu=4, MHeatCountOwe=1}
2019-04-29 15:57:03 -请求地址 : http://localhost:8081/index
2019-04-29 15:57:03 -HTTP METHOD : GET
2019-04-29 15:57:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 15:57:03 -参数 : [{}]
2019-04-29 15:57:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 15:57:04 -==> Parameters: 1(Long)
2019-04-29 15:57:04 -<==      Total: 49
2019-04-29 15:57:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 15:57:04 -==> Parameters: 138(Long)
2019-04-29 15:57:04 -<==      Total: 1
2019-04-29 15:57:04 -耗时 : 73
2019-04-29 15:57:04 -返回值 : index_v1
2019-04-29 15:57:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:57:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 73(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 15:57:04.024(Timestamp)
2019-04-29 15:57:04 -<==    Updates: 1
2019-04-29 15:57:04 -请求地址 : http://localhost:8081/main
2019-04-29 15:57:04 -HTTP METHOD : GET
2019-04-29 15:57:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:57:04 -参数 : []
2019-04-29 15:57:04 -耗时 : 1
2019-04-29 15:57:04 -返回值 : main
2019-04-29 15:57:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 15:57:04 -HTTP METHOD : GET
2019-04-29 15:57:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 15:57:04 -参数 : []
2019-04-29 15:57:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 15:57:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 15:57:04 -<==      Total: 0
2019-04-29 15:57:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 15:57:04 -==> Parameters: 1(Long), 0(String)
2019-04-29 15:57:04 -<==      Total: 1
2019-04-29 15:57:04 -耗时 : 6
2019-04-29 15:57:04 -返回值 : com.bootdo.common.utils.PageUtils@4789a7f
2019-04-29 15:57:04 -请求地址 : http://localhost:8081/main
2019-04-29 15:57:04 -HTTP METHOD : GET
2019-04-29 15:57:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:57:04 -参数 : []
2019-04-29 15:57:04 -耗时 : 17
2019-04-29 15:57:04 -返回值 : main
2019-04-29 15:57:07 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 15:57:07 -HTTP METHOD : GET
2019-04-29 15:57:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:57:07 -参数 : []
2019-04-29 15:57:07 -耗时 : 1
2019-04-29 15:57:07 -返回值 : charts/tableElecMM
2019-04-29 15:57:09 -请求地址 : http://localhost:8081/charts/countYY
2019-04-29 15:57:09 -HTTP METHOD : GET
2019-04-29 15:57:09 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-29 15:57:09 -参数 : []
2019-04-29 15:57:09 -耗时 : 0
2019-04-29 15:57:09 -返回值 : charts/countYY
2019-04-29 15:57:11 -请求地址 : http://localhost:8081/index
2019-04-29 15:57:11 -HTTP METHOD : GET
2019-04-29 15:57:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 15:57:11 -参数 : [{}]
2019-04-29 15:57:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 15:57:11 -==> Parameters: 1(Long)
2019-04-29 15:57:11 -<==      Total: 49
2019-04-29 15:57:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 15:57:11 -==> Parameters: 138(Long)
2019-04-29 15:57:11 -<==      Total: 1
2019-04-29 15:57:11 -耗时 : 20
2019-04-29 15:57:11 -返回值 : index_v1
2019-04-29 15:57:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:57:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 15:57:11.454(Timestamp)
2019-04-29 15:57:11 -请求地址 : http://localhost:8081/main
2019-04-29 15:57:11 -HTTP METHOD : GET
2019-04-29 15:57:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:57:11 -参数 : []
2019-04-29 15:57:11 -耗时 : 0
2019-04-29 15:57:11 -返回值 : main
2019-04-29 15:57:11 -<==    Updates: 1
2019-04-29 15:57:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 15:57:11 -HTTP METHOD : GET
2019-04-29 15:57:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 15:57:11 -参数 : []
2019-04-29 15:57:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 15:57:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 15:57:11 -<==      Total: 0
2019-04-29 15:57:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 15:57:11 -==> Parameters: 1(Long), 0(String)
2019-04-29 15:57:11 -<==      Total: 1
2019-04-29 15:57:11 -耗时 : 5
2019-04-29 15:57:11 -返回值 : com.bootdo.common.utils.PageUtils@18d7827
2019-04-29 15:57:11 -请求地址 : http://localhost:8081/main
2019-04-29 15:57:11 -HTTP METHOD : GET
2019-04-29 15:57:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:57:11 -参数 : []
2019-04-29 15:57:11 -耗时 : 1
2019-04-29 15:57:11 -返回值 : main
2019-04-29 15:57:14 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 15:57:14 -HTTP METHOD : GET
2019-04-29 15:57:14 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:57:14 -参数 : []
2019-04-29 15:57:14 -耗时 : 1
2019-04-29 15:57:14 -返回值 : charts/tableElecMM
2019-04-29 15:57:16 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 15:57:16 -HTTP METHOD : GET
2019-04-29 15:57:16 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 15:57:16 -参数 : []
2019-04-29 15:57:16 -耗时 : 1
2019-04-29 15:57:16 -返回值 : charts/tableHeatMM
2019-04-29 15:57:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 15:57:22 -HTTP METHOD : GET
2019-04-29 15:57:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 15:57:22 -参数 : []
2019-04-29 15:57:22 -耗时 : 15
2019-04-29 15:57:22 -返回值 : system/dept/deptTree
2019-04-29 15:57:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 15:57:22 -HTTP METHOD : GET
2019-04-29 15:57:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 15:57:22 -参数 : []
2019-04-29 15:57:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 15:57:22 -==> Parameters: 
2019-04-29 15:57:22 -<==      Total: 3
2019-04-29 15:57:22 -耗时 : 2
2019-04-29 15:57:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 15:57:24 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-04-29 15:57:24 -HTTP METHOD : POST
2019-04-29 15:57:24 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 15:57:24 -参数 : [com.bootdo.heat.vo.HeatVo@5863bec8, com.bootdo.moneyLog.vo.HeatLogVo@1c344c09]
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:57:24 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:57:24 -<==      Total: 1
2019-04-29 15:57:24 -耗时 : 146
2019-04-29 15:57:24 -返回值 : {GSHeatCountPre=6, MHeatCostCount=7, GMHeatArea=1, SHeatCostCount=7, GSHeatSumPre=1, GMHeatCountPre=6, CountPrehu=24, MHeatCountPre=6, SumSHeatLog=40, MHeatPrice=1, CountOweyu=1, SHeatPrice=1, GMHeatPrice=1, CountPreyu=6, SumGMHeatLog=0, CountLogyu=240, CountGSHeatLog=1, SHeatSumPre=1, GMHeatCountOwe=1, CountOwehu=4, GMtotalhu=7, CountGMHeatLog=0, GStotalhu=7, CountLoghu=4, GSHeatSumOwe=0, GSHeatPrice=1, MHeatSumOwe=1, SHeatCountPre=6, GSHeatCountOwe=1, GMtotalyu=1, CountAllyu=7, GStotalyu=1, CountSHeatLog=1, GSHeatCostSum=1, MHeatCostSum=103, SHeatCostSum=1, CountAllhu=28, CountCostyu=106, MHeatArea=103, SHeatSumOwe=0, MHeatSumPre=3, GMHeatSumPre=1, Stotalhu=7, CountPrice=4, GMHeatCostCount=7, GMHeatCostSum=1, GSHeatCostCount=7, SumGSHeatLog=80, CountCosthu=28, SHeatCountOwe=1, CountMHeatLog=2, Mtotalhu=7, Stotalyu=1, CountArea=106, GMHeatSumOwe=0, GSHeatArea=1, SumMHeatLog=120, SHeatArea=1, Mtotalyu=4, MHeatCountOwe=1}
2019-04-29 15:57:46 -请求地址 : http://localhost:8081/login;JSESSIONID=8b57f7ea-5a39-49bf-a03d-abe18e7358bd
2019-04-29 15:57:46 -HTTP METHOD : GET
2019-04-29 15:57:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 15:57:46 -参数 : [{}]
2019-04-29 15:57:46 -耗时 : 0
2019-04-29 15:57:46 -返回值 : login
2019-04-29 15:57:46 -请求地址 : http://localhost:8081/getVerify
2019-04-29 15:57:46 -HTTP METHOD : GET
2019-04-29 15:57:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 15:57:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ffcc2d3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3b1ed468]
2019-04-29 15:57:46 -3835
2019-04-29 15:57:46 -耗时 : 17
2019-04-29 15:57:46 -返回值 : null
2019-04-29 15:57:46 -请求地址 : http://localhost:8081/login
2019-04-29 15:57:46 -HTTP METHOD : GET
2019-04-29 15:57:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 15:57:46 -参数 : [{}]
2019-04-29 15:57:46 -耗时 : 1
2019-04-29 15:57:46 -返回值 : login
2019-04-29 15:57:52 -请求地址 : http://localhost:8081/login
2019-04-29 15:57:52 -HTTP METHOD : POST
2019-04-29 15:57:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 15:57:52 -参数 : [admin, 111111, 3835, org.apache.shiro.web.servlet.ShiroHttpServletRequest@638231df]
2019-04-29 15:57:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 15:57:52 -==> Parameters: admin(String)
2019-04-29 15:57:52 -<==      Total: 1
2019-04-29 15:57:52 -耗时 : 8
2019-04-29 15:57:52 -返回值 : {msg=操作成功, code=0}
2019-04-29 15:57:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:57:52 -请求地址 : http://localhost:8081/index
2019-04-29 15:57:52 -HTTP METHOD : GET
2019-04-29 15:57:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 15:57:52 -参数 : [{}]
2019-04-29 15:57:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 15:57:52 -==> Parameters: 1(Long)
2019-04-29 15:57:52 -==> Parameters: 1(Long), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 15:57:52.134(Timestamp)
2019-04-29 15:57:52 -<==      Total: 49
2019-04-29 15:57:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 15:57:52 -==> Parameters: 138(Long)
2019-04-29 15:57:52 -<==      Total: 1
2019-04-29 15:57:52 -耗时 : 63
2019-04-29 15:57:52 -返回值 : index_v1
2019-04-29 15:57:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 15:57:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 63(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 15:57:52.223(Timestamp)
2019-04-29 15:57:52 -<==    Updates: 1
2019-04-29 15:57:52 -<==    Updates: 1
2019-04-29 15:57:52 -请求地址 : http://localhost:8081/main
2019-04-29 15:57:52 -HTTP METHOD : GET
2019-04-29 15:57:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:57:52 -参数 : []
2019-04-29 15:57:52 -耗时 : 1
2019-04-29 15:57:52 -返回值 : main
2019-04-29 15:57:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 15:57:52 -HTTP METHOD : GET
2019-04-29 15:57:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 15:57:52 -参数 : []
2019-04-29 15:57:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 15:57:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 15:57:52 -<==      Total: 0
2019-04-29 15:57:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 15:57:52 -==> Parameters: 1(Long), 0(String)
2019-04-29 15:57:52 -<==      Total: 1
2019-04-29 15:57:52 -耗时 : 5
2019-04-29 15:57:52 -返回值 : com.bootdo.common.utils.PageUtils@1b1729cd
2019-04-29 15:57:52 -请求地址 : http://localhost:8081/main
2019-04-29 15:57:52 -HTTP METHOD : GET
2019-04-29 15:57:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 15:57:52 -参数 : []
2019-04-29 15:57:52 -耗时 : 0
2019-04-29 15:57:52 -返回值 : main
2019-04-29 15:57:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 15:57:59 -==> Parameters: 1(Long)
2019-04-29 15:57:59 -<==      Total: 93
2019-04-29 15:57:59 -请求地址 : http://localhost:8081/heat/heatInto
2019-04-29 15:57:59 -HTTP METHOD : GET
2019-04-29 15:57:59 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-04-29 15:57:59 -参数 : []
2019-04-29 15:57:59 -耗时 : 18
2019-04-29 15:57:59 -返回值 : heat/heatInto/heatInto
2019-04-29 15:58:02 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 15:58:02 -HTTP METHOD : GET
2019-04-29 15:58:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:58:02 -参数 : []
2019-04-29 15:58:02 -耗时 : 1
2019-04-29 15:58:02 -返回值 : charts/tableElecMM
2019-04-29 15:58:03 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 15:58:03 -HTTP METHOD : GET
2019-04-29 15:58:03 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 15:58:03 -参数 : []
2019-04-29 15:58:03 -耗时 : 1
2019-04-29 15:58:03 -返回值 : charts/tableHeatMM
2019-04-29 15:58:07 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 15:58:07 -HTTP METHOD : GET
2019-04-29 15:58:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 15:58:07 -参数 : []
2019-04-29 15:58:07 -耗时 : 0
2019-04-29 15:58:07 -返回值 : system/dept/deptTree
2019-04-29 15:58:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 15:58:07 -HTTP METHOD : GET
2019-04-29 15:58:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 15:58:07 -参数 : []
2019-04-29 15:58:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 15:58:07 -==> Parameters: 
2019-04-29 15:58:07 -<==      Total: 3
2019-04-29 15:58:07 -耗时 : 3
2019-04-29 15:58:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 15:58:09 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-04-29 15:58:09 -HTTP METHOD : POST
2019-04-29 15:58:09 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 15:58:09 -参数 : [com.bootdo.heat.vo.HeatVo@590f1d74, com.bootdo.moneyLog.vo.HeatLogVo@4258701c]
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:58:09 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:58:09 -<==      Total: 1
2019-04-29 15:58:09 -耗时 : 184
2019-04-29 15:58:09 -返回值 : {GSHeatCountPre=6, MHeatCostCount=7, GMHeatArea=1, SHeatCostCount=7, GSHeatSumPre=1, GMHeatCountPre=6, CountPrehu=24, MHeatCountPre=6, SumSHeatLog=40, MHeatPrice=1, CountOweyu=1, SHeatPrice=1, GMHeatPrice=1, CountPreyu=6, SumGMHeatLog=0, CountLogyu=240, CountGSHeatLog=1, SHeatSumPre=1, GMHeatCountOwe=1, CountOwehu=4, GMtotalhu=7, CountGMHeatLog=0, GStotalhu=7, CountLoghu=4, GSHeatSumOwe=0, GSHeatPrice=1, MHeatSumOwe=1, SHeatCountPre=6, GSHeatCountOwe=1, GMtotalyu=1, CountAllyu=7, GStotalyu=1, CountSHeatLog=1, GSHeatCostSum=1, MHeatCostSum=103, SHeatCostSum=1, CountAllhu=28, CountCostyu=106, MHeatArea=103, SHeatSumOwe=0, MHeatSumPre=3, GMHeatSumPre=1, Stotalhu=7, CountPrice=4, GMHeatCostCount=7, GMHeatCostSum=1, GSHeatCostCount=7, SumGSHeatLog=80, CountCosthu=28, SHeatCountOwe=1, CountMHeatLog=2, Mtotalhu=7, Stotalyu=1, CountArea=106, GMHeatSumOwe=0, GSHeatArea=1, SumMHeatLog=120, SHeatArea=1, Mtotalyu=4, MHeatCountOwe=1}
2019-04-29 15:59:17 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 15:59:17 -HTTP METHOD : GET
2019-04-29 15:59:17 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:59:17 -参数 : []
2019-04-29 15:59:17 -耗时 : 0
2019-04-29 15:59:17 -返回值 : charts/tableElecMM
2019-04-29 15:59:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 15:59:30 -HTTP METHOD : GET
2019-04-29 15:59:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 15:59:30 -参数 : []
2019-04-29 15:59:30 -耗时 : 0
2019-04-29 15:59:30 -返回值 : system/dept/deptTree
2019-04-29 15:59:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 15:59:30 -HTTP METHOD : GET
2019-04-29 15:59:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 15:59:30 -参数 : []
2019-04-29 15:59:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 15:59:30 -==> Parameters: 
2019-04-29 15:59:30 -<==      Total: 3
2019-04-29 15:59:30 -耗时 : 6
2019-04-29 15:59:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 15:59:32 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 15:59:32 -HTTP METHOD : POST
2019-04-29 15:59:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 15:59:32 -参数 : [com.bootdo.elec.vo.ElecVo@35108ed9, com.bootdo.moneyLog.vo.ElecLogVo@760d9de7]
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 15:59:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 15:59:32 -<==      Total: 1
2019-04-29 15:59:32 -耗时 : 218
2019-04-29 15:59:32 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:00:19 -Validating all active sessions...
2019-04-29 16:00:19 -Finished session validation.  No sessions were stopped.
2019-04-29 16:02:42 -请求地址 : http://localhost:8081/index
2019-04-29 16:02:42 -HTTP METHOD : GET
2019-04-29 16:02:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:02:42 -参数 : [{}]
2019-04-29 16:02:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:02:42 -==> Parameters: 1(Long)
2019-04-29 16:02:42 -<==      Total: 49
2019-04-29 16:02:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:02:42 -==> Parameters: 138(Long)
2019-04-29 16:02:42 -<==      Total: 1
2019-04-29 16:02:42 -耗时 : 27
2019-04-29 16:02:42 -返回值 : index_v1
2019-04-29 16:02:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:02:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:02:42.697(Timestamp)
2019-04-29 16:02:42 -请求地址 : http://localhost:8081/main
2019-04-29 16:02:42 -HTTP METHOD : GET
2019-04-29 16:02:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:02:42 -参数 : []
2019-04-29 16:02:42 -耗时 : 0
2019-04-29 16:02:42 -返回值 : main
2019-04-29 16:02:43 -<==    Updates: 1
2019-04-29 16:02:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:02:43 -HTTP METHOD : GET
2019-04-29 16:02:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:02:43 -参数 : []
2019-04-29 16:02:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:02:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:02:43 -<==      Total: 0
2019-04-29 16:02:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:02:43 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:02:43 -<==      Total: 1
2019-04-29 16:02:43 -耗时 : 5
2019-04-29 16:02:43 -返回值 : com.bootdo.common.utils.PageUtils@7f1fa66
2019-04-29 16:02:43 -请求地址 : http://localhost:8081/main
2019-04-29 16:02:43 -HTTP METHOD : GET
2019-04-29 16:02:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:02:43 -参数 : []
2019-04-29 16:02:43 -耗时 : 1
2019-04-29 16:02:43 -返回值 : main
2019-04-29 16:02:46 -请求地址 : http://localhost:8081/charts/countMM
2019-04-29 16:02:46 -HTTP METHOD : GET
2019-04-29 16:02:46 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-29 16:02:46 -参数 : []
2019-04-29 16:02:46 -耗时 : 0
2019-04-29 16:02:46 -返回值 : charts/countMM
2019-04-29 16:02:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-29 16:02:46 -HTTP METHOD : GET
2019-04-29 16:02:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-29 16:02:46 -参数 : [userType]
2019-04-29 16:02:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-29 16:02:46 -==> Parameters: userType(String)
2019-04-29 16:02:46 -<==      Total: 4
2019-04-29 16:02:46 -耗时 : 12
2019-04-29 16:02:46 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-29 16:02:48 -请求地址 : http://localhost:8081/charts/countYY
2019-04-29 16:02:48 -HTTP METHOD : GET
2019-04-29 16:02:48 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-29 16:02:48 -参数 : []
2019-04-29 16:02:48 -耗时 : 3
2019-04-29 16:02:48 -返回值 : charts/countYY
2019-04-29 16:02:48 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:02:48 -HTTP METHOD : GET
2019-04-29 16:02:48 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:02:48 -参数 : []
2019-04-29 16:02:48 -耗时 : 0
2019-04-29 16:02:48 -返回值 : charts/tableElecMM
2019-04-29 16:02:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:02:54 -HTTP METHOD : GET
2019-04-29 16:02:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:02:54 -参数 : []
2019-04-29 16:02:54 -耗时 : 0
2019-04-29 16:02:54 -返回值 : system/dept/deptTree
2019-04-29 16:02:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:02:54 -HTTP METHOD : GET
2019-04-29 16:02:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:02:54 -参数 : []
2019-04-29 16:02:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:02:54 -==> Parameters: 
2019-04-29 16:02:54 -<==      Total: 3
2019-04-29 16:02:54 -耗时 : 2
2019-04-29 16:02:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:02:57 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:02:57 -HTTP METHOD : POST
2019-04-29 16:02:57 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:02:57 -参数 : [com.bootdo.elec.vo.ElecVo@4d0d6d6, com.bootdo.moneyLog.vo.ElecLogVo@68f4095f]
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:02:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:02:57 -<==      Total: 1
2019-04-29 16:02:57 -耗时 : 286
2019-04-29 16:02:57 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:04:50 -请求地址 : http://localhost:8081/index
2019-04-29 16:04:50 -HTTP METHOD : GET
2019-04-29 16:04:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:04:50 -参数 : [{}]
2019-04-29 16:04:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:04:50 -==> Parameters: 1(Long)
2019-04-29 16:04:50 -<==      Total: 49
2019-04-29 16:04:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:04:50 -==> Parameters: 138(Long)
2019-04-29 16:04:50 -<==      Total: 1
2019-04-29 16:04:50 -耗时 : 38
2019-04-29 16:04:50 -返回值 : index_v1
2019-04-29 16:04:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:04:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:04:50.607(Timestamp)
2019-04-29 16:04:50 -请求地址 : http://localhost:8081/main
2019-04-29 16:04:50 -HTTP METHOD : GET
2019-04-29 16:04:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:04:50 -参数 : []
2019-04-29 16:04:50 -耗时 : 1
2019-04-29 16:04:50 -返回值 : main
2019-04-29 16:04:50 -<==    Updates: 1
2019-04-29 16:04:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:04:50 -HTTP METHOD : GET
2019-04-29 16:04:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:04:50 -参数 : []
2019-04-29 16:04:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:04:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:04:50 -<==      Total: 0
2019-04-29 16:04:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:04:50 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:04:50 -<==      Total: 1
2019-04-29 16:04:50 -耗时 : 4
2019-04-29 16:04:50 -返回值 : com.bootdo.common.utils.PageUtils@1f8bf801
2019-04-29 16:04:50 -请求地址 : http://localhost:8081/main
2019-04-29 16:04:50 -HTTP METHOD : GET
2019-04-29 16:04:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:04:50 -参数 : []
2019-04-29 16:04:50 -耗时 : 0
2019-04-29 16:04:50 -返回值 : main
2019-04-29 16:04:53 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:04:53 -HTTP METHOD : GET
2019-04-29 16:04:53 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:04:53 -参数 : []
2019-04-29 16:04:53 -耗时 : 0
2019-04-29 16:04:53 -返回值 : charts/tableElecMM
2019-04-29 16:04:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:04:58 -HTTP METHOD : GET
2019-04-29 16:04:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:04:58 -参数 : []
2019-04-29 16:04:58 -耗时 : 0
2019-04-29 16:04:58 -返回值 : system/dept/deptTree
2019-04-29 16:04:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:04:58 -HTTP METHOD : GET
2019-04-29 16:04:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:04:58 -参数 : []
2019-04-29 16:04:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:04:58 -==> Parameters: 
2019-04-29 16:04:58 -<==      Total: 3
2019-04-29 16:04:58 -耗时 : 2
2019-04-29 16:04:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:05:01 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:05:01 -HTTP METHOD : POST
2019-04-29 16:05:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:05:01 -参数 : [com.bootdo.elec.vo.ElecVo@507ae9b, com.bootdo.moneyLog.vo.ElecLogVo@76381d55]
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:05:01 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:05:01 -<==      Total: 1
2019-04-29 16:05:01 -耗时 : 413
2019-04-29 16:05:01 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:07:30 -请求地址 : http://localhost:8081/index
2019-04-29 16:07:30 -HTTP METHOD : GET
2019-04-29 16:07:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:07:30 -参数 : [{}]
2019-04-29 16:07:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:07:30 -==> Parameters: 1(Long)
2019-04-29 16:07:30 -<==      Total: 49
2019-04-29 16:07:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:07:30 -==> Parameters: 138(Long)
2019-04-29 16:07:30 -<==      Total: 1
2019-04-29 16:07:30 -耗时 : 48
2019-04-29 16:07:30 -返回值 : index_v1
2019-04-29 16:07:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:07:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 48(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:07:30.524(Timestamp)
2019-04-29 16:07:30 -请求地址 : http://localhost:8081/main
2019-04-29 16:07:30 -HTTP METHOD : GET
2019-04-29 16:07:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:07:30 -参数 : []
2019-04-29 16:07:30 -耗时 : 0
2019-04-29 16:07:30 -返回值 : main
2019-04-29 16:07:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:07:30 -HTTP METHOD : GET
2019-04-29 16:07:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:07:30 -参数 : []
2019-04-29 16:07:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:07:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:07:30 -<==      Total: 0
2019-04-29 16:07:30 -<==    Updates: 1
2019-04-29 16:07:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:07:30 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:07:31 -<==      Total: 1
2019-04-29 16:07:31 -耗时 : 481
2019-04-29 16:07:31 -返回值 : com.bootdo.common.utils.PageUtils@2ba0b6c0
2019-04-29 16:07:31 -请求地址 : http://localhost:8081/main
2019-04-29 16:07:31 -HTTP METHOD : GET
2019-04-29 16:07:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:07:31 -参数 : []
2019-04-29 16:07:31 -耗时 : 0
2019-04-29 16:07:31 -返回值 : main
2019-04-29 16:07:35 -请求地址 : http://localhost:8081/charts/countMM
2019-04-29 16:07:35 -HTTP METHOD : GET
2019-04-29 16:07:35 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-29 16:07:35 -参数 : []
2019-04-29 16:07:35 -耗时 : 1
2019-04-29 16:07:35 -返回值 : charts/countMM
2019-04-29 16:07:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-29 16:07:36 -HTTP METHOD : GET
2019-04-29 16:07:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-29 16:07:36 -参数 : [userType]
2019-04-29 16:07:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-29 16:07:36 -==> Parameters: userType(String)
2019-04-29 16:07:36 -<==      Total: 4
2019-04-29 16:07:36 -耗时 : 3
2019-04-29 16:07:36 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-29 16:07:37 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:07:37 -HTTP METHOD : GET
2019-04-29 16:07:37 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:07:37 -参数 : []
2019-04-29 16:07:37 -耗时 : 1
2019-04-29 16:07:37 -返回值 : charts/tableElecMM
2019-04-29 16:07:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:07:45 -HTTP METHOD : GET
2019-04-29 16:07:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:07:45 -参数 : []
2019-04-29 16:07:45 -耗时 : 1
2019-04-29 16:07:45 -返回值 : system/dept/deptTree
2019-04-29 16:07:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:07:45 -HTTP METHOD : GET
2019-04-29 16:07:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:07:45 -参数 : []
2019-04-29 16:07:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:07:45 -==> Parameters: 
2019-04-29 16:07:45 -<==      Total: 3
2019-04-29 16:07:45 -耗时 : 2
2019-04-29 16:07:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:07:47 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:07:47 -HTTP METHOD : POST
2019-04-29 16:07:47 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:07:47 -参数 : [com.bootdo.elec.vo.ElecVo@44869d2e, com.bootdo.moneyLog.vo.ElecLogVo@637d0433]
2019-04-29 16:07:47 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:47 -<==      Total: 1
2019-04-29 16:07:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:47 -<==      Total: 1
2019-04-29 16:07:47 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:47 -<==      Total: 1
2019-04-29 16:07:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:47 -<==      Total: 1
2019-04-29 16:07:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:47 -<==      Total: 1
2019-04-29 16:07:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:47 -<==      Total: 1
2019-04-29 16:07:47 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:07:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:47 -<==      Total: 1
2019-04-29 16:07:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:47 -<==      Total: 1
2019-04-29 16:07:47 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:47 -<==      Total: 1
2019-04-29 16:07:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:47 -<==      Total: 1
2019-04-29 16:07:47 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:07:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:07:48 -<==      Total: 1
2019-04-29 16:07:48 -耗时 : 181
2019-04-29 16:07:48 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:09:46 -请求地址 : http://localhost:8081/index
2019-04-29 16:09:46 -HTTP METHOD : GET
2019-04-29 16:09:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:09:46 -参数 : [{}]
2019-04-29 16:09:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:09:46 -==> Parameters: 1(Long)
2019-04-29 16:09:46 -<==      Total: 49
2019-04-29 16:09:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:09:46 -==> Parameters: 138(Long)
2019-04-29 16:09:46 -<==      Total: 1
2019-04-29 16:09:46 -耗时 : 36
2019-04-29 16:09:46 -返回值 : index_v1
2019-04-29 16:09:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:09:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:09:46.662(Timestamp)
2019-04-29 16:09:46 -<==    Updates: 1
2019-04-29 16:09:46 -请求地址 : http://localhost:8081/main
2019-04-29 16:09:46 -HTTP METHOD : GET
2019-04-29 16:09:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:09:46 -参数 : []
2019-04-29 16:09:46 -耗时 : 0
2019-04-29 16:09:46 -返回值 : main
2019-04-29 16:09:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:09:46 -HTTP METHOD : GET
2019-04-29 16:09:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:09:46 -参数 : []
2019-04-29 16:09:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:09:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:09:46 -<==      Total: 0
2019-04-29 16:09:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:09:46 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:09:46 -<==      Total: 1
2019-04-29 16:09:46 -耗时 : 3
2019-04-29 16:09:46 -返回值 : com.bootdo.common.utils.PageUtils@56595336
2019-04-29 16:09:46 -请求地址 : http://localhost:8081/main
2019-04-29 16:09:46 -HTTP METHOD : GET
2019-04-29 16:09:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:09:46 -参数 : []
2019-04-29 16:09:46 -耗时 : 1
2019-04-29 16:09:46 -返回值 : main
2019-04-29 16:09:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 16:09:48 -==> Parameters: 1(Long)
2019-04-29 16:09:48 -<==      Total: 93
2019-04-29 16:09:48 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:09:48 -HTTP METHOD : GET
2019-04-29 16:09:48 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:09:48 -参数 : []
2019-04-29 16:09:48 -耗时 : 1
2019-04-29 16:09:48 -返回值 : charts/tableElecMM
2019-04-29 16:09:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:09:53 -HTTP METHOD : GET
2019-04-29 16:09:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:09:53 -参数 : []
2019-04-29 16:09:53 -耗时 : 1
2019-04-29 16:09:53 -返回值 : system/dept/deptTree
2019-04-29 16:09:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:09:53 -HTTP METHOD : GET
2019-04-29 16:09:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:09:53 -参数 : []
2019-04-29 16:09:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:09:53 -==> Parameters: 
2019-04-29 16:09:53 -<==      Total: 3
2019-04-29 16:09:53 -耗时 : 2
2019-04-29 16:09:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:09:57 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:09:57 -HTTP METHOD : POST
2019-04-29 16:09:57 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:09:57 -参数 : [com.bootdo.elec.vo.ElecVo@442c43e9, com.bootdo.moneyLog.vo.ElecLogVo@5a657c96]
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:09:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:09:57 -<==      Total: 1
2019-04-29 16:09:57 -耗时 : 255
2019-04-29 16:09:57 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:10:03 -请求地址 : http://localhost:8081/index
2019-04-29 16:10:03 -HTTP METHOD : GET
2019-04-29 16:10:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:10:03 -参数 : [{}]
2019-04-29 16:10:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:10:03 -==> Parameters: 1(Long)
2019-04-29 16:10:03 -<==      Total: 49
2019-04-29 16:10:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:10:03 -==> Parameters: 138(Long)
2019-04-29 16:10:03 -<==      Total: 1
2019-04-29 16:10:03 -耗时 : 78
2019-04-29 16:10:03 -返回值 : index_v1
2019-04-29 16:10:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:10:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 78(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:10:03.319(Timestamp)
2019-04-29 16:10:03 -<==    Updates: 1
2019-04-29 16:10:03 -请求地址 : http://localhost:8081/main
2019-04-29 16:10:03 -HTTP METHOD : GET
2019-04-29 16:10:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:10:03 -参数 : []
2019-04-29 16:10:03 -耗时 : 0
2019-04-29 16:10:03 -返回值 : main
2019-04-29 16:10:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:10:03 -HTTP METHOD : GET
2019-04-29 16:10:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:10:03 -参数 : []
2019-04-29 16:10:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:10:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:10:03 -<==      Total: 0
2019-04-29 16:10:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:10:03 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:10:03 -<==      Total: 1
2019-04-29 16:10:03 -耗时 : 4
2019-04-29 16:10:03 -返回值 : com.bootdo.common.utils.PageUtils@b430f6
2019-04-29 16:10:03 -请求地址 : http://localhost:8081/main
2019-04-29 16:10:03 -HTTP METHOD : GET
2019-04-29 16:10:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:10:03 -参数 : []
2019-04-29 16:10:03 -耗时 : 0
2019-04-29 16:10:03 -返回值 : main
2019-04-29 16:10:06 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:10:06 -HTTP METHOD : GET
2019-04-29 16:10:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:10:06 -参数 : []
2019-04-29 16:10:06 -耗时 : 0
2019-04-29 16:10:06 -返回值 : charts/tableElecMM
2019-04-29 16:10:07 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 16:10:07 -HTTP METHOD : GET
2019-04-29 16:10:07 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 16:10:07 -参数 : []
2019-04-29 16:10:07 -耗时 : 0
2019-04-29 16:10:07 -返回值 : charts/tableHeatMM
2019-04-29 16:10:11 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:10:11 -HTTP METHOD : GET
2019-04-29 16:10:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:10:11 -参数 : []
2019-04-29 16:10:11 -耗时 : 1
2019-04-29 16:10:11 -返回值 : system/dept/deptTree
2019-04-29 16:10:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:10:11 -HTTP METHOD : GET
2019-04-29 16:10:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:10:11 -参数 : []
2019-04-29 16:10:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:10:11 -==> Parameters: 
2019-04-29 16:10:11 -<==      Total: 3
2019-04-29 16:10:11 -耗时 : 2
2019-04-29 16:10:11 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:10:20 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-04-29 16:10:20 -HTTP METHOD : POST
2019-04-29 16:10:20 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 16:10:20 -参数 : [com.bootdo.heat.vo.HeatVo@594e6afa, com.bootdo.moneyLog.vo.HeatLogVo@3efe3477]
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:10:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:10:20 -<==      Total: 1
2019-04-29 16:10:20 -耗时 : 74
2019-04-29 16:10:20 -返回值 : {GSHeatCountPre=6, MHeatCostCount=7, GMHeatArea=1, SHeatCostCount=7, GSHeatSumPre=1, GMHeatCountPre=6, CountPrehu=24, MHeatCountPre=6, SumSHeatLog=40, MHeatPrice=1, CountOweyu=1, SHeatPrice=1, GMHeatPrice=1, CountPreyu=6, SumGMHeatLog=0, CountLogyu=240, CountGSHeatLog=1, SHeatSumPre=1, GMHeatCountOwe=1, CountOwehu=4, GMtotalhu=7, CountGMHeatLog=0, GStotalhu=7, CountLoghu=4, GSHeatSumOwe=0, GSHeatPrice=1, MHeatSumOwe=1, SHeatCountPre=6, GSHeatCountOwe=1, GMtotalyu=1, CountAllyu=7, GStotalyu=1, CountSHeatLog=1, GSHeatCostSum=1, MHeatCostSum=103, SHeatCostSum=1, CountAllhu=28, CountCostyu=106, MHeatArea=103, SHeatSumOwe=0, MHeatSumPre=3, GMHeatSumPre=1, Stotalhu=7, CountPrice=4, GMHeatCostCount=7, GMHeatCostSum=1, GSHeatCostCount=7, SumGSHeatLog=80, CountCosthu=28, SHeatCountOwe=1, CountMHeatLog=2, Mtotalhu=7, Stotalyu=1, CountArea=106, GMHeatSumOwe=0, GSHeatArea=1, SumMHeatLog=120, SHeatArea=1, Mtotalyu=4, MHeatCountOwe=1}
2019-04-29 16:13:39 -请求地址 : http://localhost:8081/index
2019-04-29 16:13:39 -HTTP METHOD : GET
2019-04-29 16:13:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:13:39 -参数 : [{}]
2019-04-29 16:13:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:13:39 -==> Parameters: 1(Long)
2019-04-29 16:13:39 -<==      Total: 49
2019-04-29 16:13:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:13:39 -==> Parameters: 138(Long)
2019-04-29 16:13:39 -<==      Total: 1
2019-04-29 16:13:39 -耗时 : 16
2019-04-29 16:13:39 -返回值 : index_v1
2019-04-29 16:13:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:13:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:13:39.585(Timestamp)
2019-04-29 16:13:39 -<==    Updates: 1
2019-04-29 16:13:39 -请求地址 : http://localhost:8081/main
2019-04-29 16:13:39 -HTTP METHOD : GET
2019-04-29 16:13:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:13:39 -参数 : []
2019-04-29 16:13:39 -耗时 : 1
2019-04-29 16:13:39 -返回值 : main
2019-04-29 16:13:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:13:39 -HTTP METHOD : GET
2019-04-29 16:13:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:13:39 -参数 : []
2019-04-29 16:13:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:13:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:13:39 -<==      Total: 0
2019-04-29 16:13:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:13:39 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:13:39 -<==      Total: 1
2019-04-29 16:13:39 -耗时 : 6
2019-04-29 16:13:39 -返回值 : com.bootdo.common.utils.PageUtils@5179025c
2019-04-29 16:13:39 -请求地址 : http://localhost:8081/main
2019-04-29 16:13:39 -HTTP METHOD : GET
2019-04-29 16:13:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:13:39 -参数 : []
2019-04-29 16:13:39 -耗时 : 0
2019-04-29 16:13:39 -返回值 : main
2019-04-29 16:13:42 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:13:42 -HTTP METHOD : GET
2019-04-29 16:13:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:13:42 -参数 : []
2019-04-29 16:13:42 -耗时 : 2
2019-04-29 16:13:42 -返回值 : charts/tableElecMM
2019-04-29 16:13:43 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 16:13:43 -HTTP METHOD : GET
2019-04-29 16:13:43 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 16:13:43 -参数 : []
2019-04-29 16:13:43 -耗时 : 0
2019-04-29 16:13:43 -返回值 : charts/tableHeatMM
2019-04-29 16:13:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:13:47 -HTTP METHOD : GET
2019-04-29 16:13:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:13:47 -参数 : []
2019-04-29 16:13:47 -耗时 : 0
2019-04-29 16:13:47 -返回值 : system/dept/deptTree
2019-04-29 16:13:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:13:47 -HTTP METHOD : GET
2019-04-29 16:13:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:13:47 -参数 : []
2019-04-29 16:13:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:13:47 -==> Parameters: 
2019-04-29 16:13:47 -<==      Total: 3
2019-04-29 16:13:47 -耗时 : 4
2019-04-29 16:13:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:13:54 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-04-29 16:13:54 -HTTP METHOD : POST
2019-04-29 16:13:54 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 16:13:54 -参数 : [com.bootdo.heat.vo.HeatVo@463d580f, com.bootdo.moneyLog.vo.HeatLogVo@6ac3e34c]
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:13:54 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:13:54 -<==      Total: 1
2019-04-29 16:13:54 -耗时 : 68
2019-04-29 16:13:54 -返回值 : {GSHeatCountPre=6, MHeatCostCount=7, GMHeatArea=1, SHeatCostCount=7, GSHeatSumPre=1, GMHeatCountPre=6, CountPrehu=24, MHeatCountPre=6, SumSHeatLog=40, MHeatPrice=1, CountOweyu=1, SHeatPrice=1, GMHeatPrice=1, CountPreyu=6, SumGMHeatLog=0, CountLogyu=240, CountGSHeatLog=1, SHeatSumPre=1, GMHeatCountOwe=1, CountOwehu=4, GMtotalhu=7, CountGMHeatLog=0, GStotalhu=7, CountLoghu=4, GSHeatSumOwe=0, GSHeatPrice=1, MHeatSumOwe=1, SHeatCountPre=6, GSHeatCountOwe=1, GMtotalyu=1, CountAllyu=7, GStotalyu=1, CountSHeatLog=1, GSHeatCostSum=1, MHeatCostSum=103, SHeatCostSum=1, CountAllhu=28, CountCostyu=106, MHeatArea=103, SHeatSumOwe=0, MHeatSumPre=3, GMHeatSumPre=1, Stotalhu=7, CountPrice=4, GMHeatCostCount=7, GMHeatCostSum=1, GSHeatCostCount=7, SumGSHeatLog=80, CountCosthu=28, SHeatCountOwe=1, CountMHeatLog=2, Mtotalhu=7, Stotalyu=1, CountArea=106, GMHeatSumOwe=0, GSHeatArea=1, SumMHeatLog=120, SHeatArea=1, Mtotalyu=4, MHeatCountOwe=1}
2019-04-29 16:13:54 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:13:54 -HTTP METHOD : GET
2019-04-29 16:13:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:13:54 -参数 : []
2019-04-29 16:13:54 -耗时 : 1
2019-04-29 16:13:54 -返回值 : charts/tableElecMM
2019-04-29 16:13:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:13:59 -HTTP METHOD : GET
2019-04-29 16:13:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:13:59 -参数 : []
2019-04-29 16:13:59 -耗时 : 0
2019-04-29 16:13:59 -返回值 : system/dept/deptTree
2019-04-29 16:13:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:13:59 -HTTP METHOD : GET
2019-04-29 16:13:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:13:59 -参数 : []
2019-04-29 16:13:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:13:59 -==> Parameters: 
2019-04-29 16:13:59 -<==      Total: 3
2019-04-29 16:13:59 -耗时 : 2
2019-04-29 16:13:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:14:05 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:14:05 -HTTP METHOD : POST
2019-04-29 16:14:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:14:05 -参数 : [com.bootdo.elec.vo.ElecVo@1477b240, com.bootdo.moneyLog.vo.ElecLogVo@5f5b88c3]
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:05 -<==      Total: 1
2019-04-29 16:14:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:14:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:14:06 -<==      Total: 1
2019-04-29 16:14:06 -耗时 : 197
2019-04-29 16:14:06 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:25:25 -Starting BootdoApplication on ZJZL-20180906VX with PID 2440 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-29 16:25:25 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-29 16:25:25 -The following profiles are active: dev
2019-04-29 16:25:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 29 16:25:26 CST 2019]; root of context hierarchy
2019-04-29 16:25:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-29 16:25:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$918fd747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 16:25:32 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$83e905ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 16:25:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 16:25:34 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 16:25:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 16:25:34 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-29 16:25:34 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-29 16:25:34 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 16:25:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 16:25:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 16:25:34 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 16:25:35 -Tomcat initialized with port(s): 8081 (http)
2019-04-29 16:25:36 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-29 16:25:36 -Starting service [Tomcat]
2019-04-29 16:25:36 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-29 16:25:36 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-29 16:25:36 -Initializing Spring embedded WebApplicationContext
2019-04-29 16:25:36 -Root WebApplicationContext: initialization completed in 10209 ms
2019-04-29 16:25:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-29 16:25:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-29 16:25:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-29 16:25:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-29 16:25:37 -Filter xssFilter was not registered (disabled)
2019-04-29 16:25:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-29 16:25:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-29 16:25:37 -Servlet statViewServlet mapped to [/druid/*]
2019-04-29 16:25:37 -Servlet dispatcherServlet mapped to [/]
2019-04-29 16:25:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 29 16:25:26 CST 2019]; root of context hierarchy
2019-04-29 16:25:46 -Using default implementation for ThreadExecutor
2019-04-29 16:25:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-29 16:25:47 -Quartz Scheduler v.2.2.1 created.
2019-04-29 16:25:47 -RAMJobStore initialized.
2019-04-29 16:25:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-29 16:25:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-29 16:25:47 -Quartz scheduler version: 2.2.1
2019-04-29 16:25:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@305b43ca
2019-04-29 16:25:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-29 16:25:47 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-29 16:25:50 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-29 16:25:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 16:25:50 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-29 16:25:50 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 16:25:50 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-29 16:25:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-29 16:25:50 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:50 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:50 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 16:25:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-29 16:25:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-29 16:25:50 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:50 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 16:25:50 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:50 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-29 16:25:50 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 16:25:50 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-29 16:25:50 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-29 16:25:50 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:50 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:50 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-29 16:25:50 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-29 16:25:50 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 16:25:50 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-29 16:25:50 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:50 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-29 16:25:50 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:50 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 16:25:50 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:50 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-29 16:25:50 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-29 16:25:50 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-29 16:25:50 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:50 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-29 16:25:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-29 16:25:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-29 16:25:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-29 16:25:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-29 16:25:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-29 16:25:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-29 16:25:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-29 16:25:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-29 16:25:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-29 16:25:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-29 16:25:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-29 16:25:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-29 16:25:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-29 16:25:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-29 16:25:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-29 16:25:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-29 16:25:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-29 16:25:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-29 16:25:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-29 16:25:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-29 16:25:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-29 16:25:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-29 16:25:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-29 16:25:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-29 16:25:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-29 16:25:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-29 16:25:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-29 16:25:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-29 16:25:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-29 16:25:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-29 16:25:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-29 16:25:50 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-29 16:25:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-29 16:25:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:51 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-29 16:25:51 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-29 16:25:51 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-29 16:25:51 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-29 16:25:51 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-29 16:25:51 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-29 16:25:51 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:51 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-29 16:25:51 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:51 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-29 16:25:51 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 16:25:51 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-29 16:25:51 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-29 16:25:51 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-29 16:25:51 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-29 16:25:51 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-29 16:25:51 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:51 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-29 16:25:51 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-29 16:25:51 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-29 16:25:51 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-29 16:25:51 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-29 16:25:51 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-29 16:25:51 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:51 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-29 16:25:51 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:51 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-29 16:25:51 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 16:25:51 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-29 16:25:51 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-29 16:25:51 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-29 16:25:51 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-29 16:25:51 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:51 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-29 16:25:51 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-29 16:25:51 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-29 16:25:51 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 16:25:51 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 16:25:51 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-29 16:25:51 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-29 16:25:51 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-29 16:25:51 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-29 16:25:51 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-29 16:25:51 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-29 16:25:51 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-29 16:25:51 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-29 16:25:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-29 16:25:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-29 16:25:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-29 16:25:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-29 16:25:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-29 16:25:51 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-29 16:25:51 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-29 16:25:51 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-29 16:25:51 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-29 16:25:51 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-29 16:25:51 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:51 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-29 16:25:51 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-29 16:25:51 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-29 16:25:51 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-29 16:25:51 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-29 16:25:51 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-29 16:25:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-29 16:25:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-29 16:25:51 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:51 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-29 16:25:51 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-29 16:25:51 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-29 16:25:51 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-29 16:25:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-29 16:25:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-29 16:25:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-29 16:25:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-29 16:25:51 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-29 16:25:51 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-29 16:25:51 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-29 16:25:51 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-29 16:25:51 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-29 16:25:51 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-29 16:25:51 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-29 16:25:51 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-29 16:25:51 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-29 16:25:51 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-29 16:25:51 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:51 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-29 16:25:51 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-29 16:25:51 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-29 16:25:51 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-29 16:25:51 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-29 16:25:51 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:51 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-29 16:25:51 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:51 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-29 16:25:51 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 16:25:51 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-29 16:25:51 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-29 16:25:51 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-29 16:25:51 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-29 16:25:51 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 16:25:51 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-29 16:25:51 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 16:25:51 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-29 16:25:51 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-29 16:25:51 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-29 16:25:51 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-29 16:25:51 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 16:25:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 16:25:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-29 16:25:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-29 16:25:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-29 16:25:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-29 16:25:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-29 16:25:51 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-29 16:25:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 16:25:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 29 16:25:26 CST 2019]; root of context hierarchy
2019-04-29 16:25:56 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 16:25:56 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 16:25:56 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 16:25:56 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-29 16:25:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-29 16:26:04 -Registering beans for JMX exposure on startup
2019-04-29 16:26:04 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-29 16:26:04 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-29 16:26:04 -Starting beans in phase 2147483647
2019-04-29 16:26:04 -Context refreshed
2019-04-29 16:26:04 -Found 1 custom documentation plugin(s)
2019-04-29 16:26:04 -Scanning for api listing references
2019-04-29 16:26:05 -Generating unique operation named: getCountDUsingPOST_1
2019-04-29 16:26:05 -Generating unique operation named: removeUsingPOST_1
2019-04-29 16:26:05 -Generating unique operation named: addUsingGET_1
2019-04-29 16:26:05 -Generating unique operation named: editUsingGET_1
2019-04-29 16:26:05 -Generating unique operation named: listUsingGET_1
2019-04-29 16:26:05 -Generating unique operation named: removeUsingPOST_2
2019-04-29 16:26:05 -Generating unique operation named: removeUsingPOST_3
2019-04-29 16:26:05 -Generating unique operation named: saveUsingPOST_1
2019-04-29 16:26:05 -Generating unique operation named: updateUsingGET_1
2019-04-29 16:26:05 -Generating unique operation named: updateUsingHEAD_1
2019-04-29 16:26:05 -Generating unique operation named: updateUsingPOST_1
2019-04-29 16:26:05 -Generating unique operation named: updateUsingPUT_1
2019-04-29 16:26:05 -Generating unique operation named: updateUsingPATCH_1
2019-04-29 16:26:05 -Generating unique operation named: updateUsingDELETE_1
2019-04-29 16:26:05 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-29 16:26:05 -Generating unique operation named: updateUsingTRACE_1
2019-04-29 16:26:06 -Generating unique operation named: addUsingGET_2
2019-04-29 16:26:06 -Generating unique operation named: editUsingGET_2
2019-04-29 16:26:06 -Generating unique operation named: listUsingGET_2
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_4
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_5
2019-04-29 16:26:06 -Generating unique operation named: saveUsingPOST_2
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPOST_2
2019-04-29 16:26:06 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-29 16:26:06 -Generating unique operation named: addUsingGET_3
2019-04-29 16:26:06 -Generating unique operation named: editUsingGET_3
2019-04-29 16:26:06 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-29 16:26:06 -Generating unique operation named: listUsingGET_3
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_6
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_7
2019-04-29 16:26:06 -Generating unique operation named: saveUsingPOST_3
2019-04-29 16:26:06 -Generating unique operation named: updateUsingGET_2
2019-04-29 16:26:06 -Generating unique operation named: updateUsingHEAD_2
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPOST_3
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPUT_2
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPATCH_2
2019-04-29 16:26:06 -Generating unique operation named: updateUsingDELETE_2
2019-04-29 16:26:06 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-29 16:26:06 -Generating unique operation named: updateUsingTRACE_2
2019-04-29 16:26:06 -Generating unique operation named: addUsingGET_4
2019-04-29 16:26:06 -Generating unique operation named: editUsingGET_4
2019-04-29 16:26:06 -Generating unique operation named: listUsingGET_4
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_8
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_9
2019-04-29 16:26:06 -Generating unique operation named: saveUsingPOST_4
2019-04-29 16:26:06 -Generating unique operation named: updateUsingGET_3
2019-04-29 16:26:06 -Generating unique operation named: updateUsingHEAD_3
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPOST_4
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPUT_3
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPATCH_3
2019-04-29 16:26:06 -Generating unique operation named: updateUsingDELETE_3
2019-04-29 16:26:06 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-29 16:26:06 -Generating unique operation named: updateUsingTRACE_3
2019-04-29 16:26:06 -Generating unique operation named: ElecUsingGET_1
2019-04-29 16:26:06 -Generating unique operation named: addUsingGET_5
2019-04-29 16:26:06 -Generating unique operation named: editUsingGET_5
2019-04-29 16:26:06 -Generating unique operation named: listUsingGET_5
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_10
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_11
2019-04-29 16:26:06 -Generating unique operation named: saveUsingPOST_5
2019-04-29 16:26:06 -Generating unique operation named: updateUsingGET_4
2019-04-29 16:26:06 -Generating unique operation named: updateUsingHEAD_4
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPOST_5
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPUT_4
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPATCH_4
2019-04-29 16:26:06 -Generating unique operation named: updateUsingDELETE_4
2019-04-29 16:26:06 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-29 16:26:06 -Generating unique operation named: updateUsingTRACE_4
2019-04-29 16:26:06 -Generating unique operation named: editUsingGET_6
2019-04-29 16:26:06 -Generating unique operation named: listUsingGET_6
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPOST_6
2019-04-29 16:26:06 -Generating unique operation named: addUsingGET_6
2019-04-29 16:26:06 -Generating unique operation named: editUsingGET_7
2019-04-29 16:26:06 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-29 16:26:06 -Generating unique operation named: listUsingGET_7
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_12
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_13
2019-04-29 16:26:06 -Generating unique operation named: saveUsingPOST_6
2019-04-29 16:26:06 -Generating unique operation named: updateUsingGET_5
2019-04-29 16:26:06 -Generating unique operation named: updateUsingHEAD_5
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPOST_7
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPUT_5
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPATCH_5
2019-04-29 16:26:06 -Generating unique operation named: updateUsingDELETE_5
2019-04-29 16:26:06 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-29 16:26:06 -Generating unique operation named: updateUsingTRACE_5
2019-04-29 16:26:06 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-29 16:26:06 -Generating unique operation named: addUsingGET_7
2019-04-29 16:26:06 -Generating unique operation named: editUsingGET_8
2019-04-29 16:26:06 -Generating unique operation named: listUsingGET_8
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_14
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_15
2019-04-29 16:26:06 -Generating unique operation named: saveUsingPOST_7
2019-04-29 16:26:06 -Generating unique operation named: updateUsingGET_6
2019-04-29 16:26:06 -Generating unique operation named: updateUsingHEAD_6
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPOST_8
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPUT_6
2019-04-29 16:26:06 -Generating unique operation named: updateUsingPATCH_6
2019-04-29 16:26:06 -Generating unique operation named: updateUsingDELETE_6
2019-04-29 16:26:06 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-29 16:26:06 -Generating unique operation named: updateUsingTRACE_6
2019-04-29 16:26:06 -Generating unique operation named: addUsingGET_8
2019-04-29 16:26:06 -Generating unique operation named: editUsingGET_9
2019-04-29 16:26:06 -Generating unique operation named: listUsingGET_9
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_16
2019-04-29 16:26:06 -Generating unique operation named: removeUsingPOST_17
2019-04-29 16:26:06 -Generating unique operation named: saveUsingPOST_8
2019-04-29 16:26:06 -Generating unique operation named: updateUsingGET_7
2019-04-29 16:26:06 -Generating unique operation named: updateUsingHEAD_7
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPOST_9
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPUT_7
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPATCH_7
2019-04-29 16:26:07 -Generating unique operation named: updateUsingDELETE_7
2019-04-29 16:26:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-29 16:26:07 -Generating unique operation named: updateUsingTRACE_7
2019-04-29 16:26:07 -Generating unique operation named: addUsingGET_9
2019-04-29 16:26:07 -Generating unique operation named: editUsingGET_10
2019-04-29 16:26:07 -Generating unique operation named: infoUsingGET_1
2019-04-29 16:26:07 -Generating unique operation named: infoUsingHEAD_1
2019-04-29 16:26:07 -Generating unique operation named: infoUsingPOST_1
2019-04-29 16:26:07 -Generating unique operation named: infoUsingPUT_1
2019-04-29 16:26:07 -Generating unique operation named: infoUsingPATCH_1
2019-04-29 16:26:07 -Generating unique operation named: infoUsingDELETE_1
2019-04-29 16:26:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-29 16:26:07 -Generating unique operation named: infoUsingTRACE_1
2019-04-29 16:26:07 -Generating unique operation named: listUsingGET_10
2019-04-29 16:26:07 -Generating unique operation named: removeUsingPOST_18
2019-04-29 16:26:07 -Generating unique operation named: removeUsingPOST_19
2019-04-29 16:26:07 -Generating unique operation named: saveUsingPOST_9
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPOST_10
2019-04-29 16:26:07 -Generating unique operation named: listUsingGET_11
2019-04-29 16:26:07 -Generating unique operation named: removeUsingPOST_20
2019-04-29 16:26:07 -Generating unique operation named: welcomeUsingGET_1
2019-04-29 16:26:07 -Generating unique operation named: addUsingGET_10
2019-04-29 16:26:07 -Generating unique operation named: editUsingGET_11
2019-04-29 16:26:07 -Generating unique operation named: listUsingGET_12
2019-04-29 16:26:07 -Generating unique operation named: removeUsingPOST_21
2019-04-29 16:26:07 -Generating unique operation named: saveUsingPOST_10
2019-04-29 16:26:07 -Generating unique operation named: treeUsingGET_1
2019-04-29 16:26:07 -Generating unique operation named: treeUsingGET_2
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPOST_11
2019-04-29 16:26:07 -Generating unique operation named: addUsingGET_11
2019-04-29 16:26:07 -Generating unique operation named: editUsingGET_12
2019-04-29 16:26:07 -Generating unique operation named: listUsingGET_13
2019-04-29 16:26:07 -Generating unique operation named: removeUsingPOST_22
2019-04-29 16:26:07 -Generating unique operation named: removeUsingPOST_23
2019-04-29 16:26:07 -Generating unique operation named: saveUsingPOST_11
2019-04-29 16:26:07 -Generating unique operation named: updateUsingGET_8
2019-04-29 16:26:07 -Generating unique operation named: updateUsingHEAD_8
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPOST_12
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPUT_8
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPATCH_8
2019-04-29 16:26:07 -Generating unique operation named: updateUsingDELETE_8
2019-04-29 16:26:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-29 16:26:07 -Generating unique operation named: updateUsingTRACE_8
2019-04-29 16:26:07 -Generating unique operation named: addUsingGET_12
2019-04-29 16:26:07 -Generating unique operation named: editUsingGET_13
2019-04-29 16:26:07 -Generating unique operation named: listUsingGET_14
2019-04-29 16:26:07 -Generating unique operation named: removeUsingPOST_24
2019-04-29 16:26:07 -Generating unique operation named: removeUsingPOST_25
2019-04-29 16:26:07 -Generating unique operation named: saveUsingPOST_12
2019-04-29 16:26:07 -Generating unique operation named: updateUsingGET_9
2019-04-29 16:26:07 -Generating unique operation named: updateUsingHEAD_9
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPOST_13
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPUT_9
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPATCH_9
2019-04-29 16:26:07 -Generating unique operation named: updateUsingDELETE_9
2019-04-29 16:26:07 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-29 16:26:07 -Generating unique operation named: updateUsingTRACE_9
2019-04-29 16:26:07 -Generating unique operation named: addUsingGET_13
2019-04-29 16:26:07 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-29 16:26:07 -Generating unique operation named: editUsingGET_14
2019-04-29 16:26:07 -Generating unique operation named: listUsingGET_15
2019-04-29 16:26:07 -Generating unique operation named: saveUsingPOST_13
2019-04-29 16:26:07 -Generating unique operation named: saveUsingPOST_14
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPOST_14
2019-04-29 16:26:07 -Generating unique operation named: listUsingGET_16
2019-04-29 16:26:07 -Generating unique operation named: listUsingHEAD_1
2019-04-29 16:26:07 -Generating unique operation named: listUsingPOST_1
2019-04-29 16:26:07 -Generating unique operation named: listUsingPUT_1
2019-04-29 16:26:07 -Generating unique operation named: listUsingPATCH_1
2019-04-29 16:26:07 -Generating unique operation named: listUsingDELETE_1
2019-04-29 16:26:07 -Generating unique operation named: listUsingOPTIONS_1
2019-04-29 16:26:07 -Generating unique operation named: listUsingTRACE_1
2019-04-29 16:26:07 -Generating unique operation named: countDDUsingGET_1
2019-04-29 16:26:07 -Generating unique operation named: exportDDUsingGET_1
2019-04-29 16:26:07 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-29 16:26:07 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-29 16:26:07 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-29 16:26:07 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-29 16:26:07 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-29 16:26:07 -Generating unique operation named: addUsingGET_14
2019-04-29 16:26:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-29 16:26:07 -Generating unique operation named: editUsingGET_15
2019-04-29 16:26:07 -Generating unique operation named: listUsingGET_17
2019-04-29 16:26:07 -Generating unique operation named: removeUsingPOST_26
2019-04-29 16:26:07 -Generating unique operation named: saveUsingPOST_15
2019-04-29 16:26:07 -Generating unique operation named: treeUsingGET_3
2019-04-29 16:26:07 -Generating unique operation named: treeViewUsingGET_1
2019-04-29 16:26:07 -Generating unique operation named: updateUsingPOST_15
2019-04-29 16:26:07 -Generating unique operation named: addUsingGET_15
2019-04-29 16:26:07 -Generating unique operation named: editUsingGET_16
2019-04-29 16:26:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-29 16:26:07 -Generating unique operation named: listUsingGET_18
2019-04-29 16:26:07 -Generating unique operation named: removeUsingPOST_27
2019-04-29 16:26:07 -Generating unique operation named: removeUsingPOST_28
2019-04-29 16:26:07 -Generating unique operation named: saveUsingPOST_16
2019-04-29 16:26:07 -Generating unique operation named: updateUsingGET_10
2019-04-29 16:26:08 -Generating unique operation named: updateUsingHEAD_10
2019-04-29 16:26:08 -Generating unique operation named: updateUsingPOST_16
2019-04-29 16:26:08 -Generating unique operation named: updateUsingPUT_10
2019-04-29 16:26:08 -Generating unique operation named: updateUsingPATCH_10
2019-04-29 16:26:08 -Generating unique operation named: updateUsingDELETE_10
2019-04-29 16:26:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-29 16:26:08 -Generating unique operation named: updateUsingTRACE_10
2019-04-29 16:26:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-29 16:26:08 -Generating unique operation named: addUsingGET_16
2019-04-29 16:26:08 -Generating unique operation named: editUsingGET_17
2019-04-29 16:26:08 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-29 16:26:08 -Generating unique operation named: listUsingGET_19
2019-04-29 16:26:08 -Generating unique operation named: removeUsingPOST_29
2019-04-29 16:26:08 -Generating unique operation named: removeUsingPOST_30
2019-04-29 16:26:08 -Generating unique operation named: saveUsingPOST_17
2019-04-29 16:26:08 -Generating unique operation named: updateUsingGET_11
2019-04-29 16:26:08 -Generating unique operation named: updateUsingHEAD_11
2019-04-29 16:26:08 -Generating unique operation named: updateUsingPOST_17
2019-04-29 16:26:08 -Generating unique operation named: updateUsingPUT_11
2019-04-29 16:26:08 -Generating unique operation named: updateUsingPATCH_11
2019-04-29 16:26:08 -Generating unique operation named: updateUsingDELETE_11
2019-04-29 16:26:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-29 16:26:08 -Generating unique operation named: updateUsingTRACE_11
2019-04-29 16:26:08 -Generating unique operation named: addUsingGET_17
2019-04-29 16:26:08 -Generating unique operation named: editUsingGET_18
2019-04-29 16:26:08 -Generating unique operation named: listUsingGET_20
2019-04-29 16:26:08 -Generating unique operation named: removeUsingPOST_31
2019-04-29 16:26:08 -Generating unique operation named: removeUsingPOST_32
2019-04-29 16:26:08 -Generating unique operation named: saveUsingPOST_18
2019-04-29 16:26:08 -Generating unique operation named: updateUsingGET_12
2019-04-29 16:26:08 -Generating unique operation named: updateUsingHEAD_12
2019-04-29 16:26:08 -Generating unique operation named: updateUsingPOST_18
2019-04-29 16:26:08 -Generating unique operation named: updateUsingPUT_12
2019-04-29 16:26:08 -Generating unique operation named: updateUsingPATCH_12
2019-04-29 16:26:08 -Generating unique operation named: updateUsingDELETE_12
2019-04-29 16:26:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-29 16:26:08 -Generating unique operation named: updateUsingTRACE_12
2019-04-29 16:26:08 -Starting Quartz Scheduler now
2019-04-29 16:26:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-29 16:26:08 -Starting...
2019-04-29 16:26:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-29 16:26:08 -Started.
2019-04-29 16:26:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-29 16:26:08 -Using a shared selector for servlet write/read
2019-04-29 16:26:08 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-29 16:26:08 -Started BootdoApplication in 43.85 seconds (JVM running for 44.665)
2019-04-29 16:26:08 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-29 16:26:08 -==> Parameters: 
2019-04-29 16:26:09 -<==      Total: 1
2019-04-29 16:26:25 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-29 16:26:25 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-29 16:26:25 -FrameworkServlet 'dispatcherServlet': initialization completed in 228 ms
2019-04-29 16:26:25 -Enabling session validation scheduler...
2019-04-29 16:26:25 -请求地址 : http://localhost:8081/login;JSESSIONID=7d886806-6c2b-4e9e-b260-e01bd61fdb7a
2019-04-29 16:26:25 -HTTP METHOD : GET
2019-04-29 16:26:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 16:26:25 -参数 : [{}]
2019-04-29 16:26:25 -耗时 : 6
2019-04-29 16:26:25 -返回值 : login
2019-04-29 16:26:28 -请求地址 : http://localhost:8081/getVerify
2019-04-29 16:26:28 -HTTP METHOD : GET
2019-04-29 16:26:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 16:26:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@f955cee, org.apache.shiro.web.servlet.ShiroHttpServletResponse@152b36c]
2019-04-29 16:26:51 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-29 16:26:54 -8257
2019-04-29 16:26:55 -耗时 : 26902
2019-04-29 16:26:55 -返回值 : null
2019-04-29 16:27:02 -请求地址 : http://localhost:8081/login
2019-04-29 16:27:02 -HTTP METHOD : POST
2019-04-29 16:27:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 16:27:02 -参数 : [admin, 111111, 8257, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d8da5f2]
2019-04-29 16:27:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 16:27:03 -==> Parameters: admin(String)
2019-04-29 16:27:03 -<==      Total: 1
2019-04-29 16:27:03 -耗时 : 494
2019-04-29 16:27:03 -返回值 : {msg=操作成功, code=0}
2019-04-29 16:27:03 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-29 16:27:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:27:03 -==> Parameters: 1(Long), admin(String), 登录(String), 494(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 16:27:03.805(Timestamp)
2019-04-29 16:27:04 -<==    Updates: 1
2019-04-29 16:27:04 -请求地址 : http://localhost:8081/index
2019-04-29 16:27:04 -HTTP METHOD : GET
2019-04-29 16:27:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:27:04 -参数 : [{}]
2019-04-29 16:27:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:27:05 -==> Parameters: 1(Long)
2019-04-29 16:27:05 -<==      Total: 49
2019-04-29 16:27:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:27:05 -==> Parameters: 138(Long)
2019-04-29 16:27:05 -<==      Total: 1
2019-04-29 16:27:05 -耗时 : 753
2019-04-29 16:27:05 -返回值 : index_v1
2019-04-29 16:27:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:27:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 753(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:27:05.515(Timestamp)
2019-04-29 16:27:06 -<==    Updates: 1
2019-04-29 16:27:06 -请求地址 : http://localhost:8081/main
2019-04-29 16:27:06 -HTTP METHOD : GET
2019-04-29 16:27:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:27:06 -参数 : []
2019-04-29 16:27:06 -耗时 : 1
2019-04-29 16:27:06 -返回值 : main
2019-04-29 16:27:09 -请求地址 : http://localhost:8081/main
2019-04-29 16:27:09 -HTTP METHOD : GET
2019-04-29 16:27:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:27:09 -参数 : []
2019-04-29 16:27:09 -耗时 : 0
2019-04-29 16:27:09 -返回值 : main
2019-04-29 16:27:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:27:09 -HTTP METHOD : GET
2019-04-29 16:27:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:27:09 -参数 : []
2019-04-29 16:27:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:27:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:27:09 -<==      Total: 0
2019-04-29 16:27:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:27:09 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:27:09 -<==      Total: 1
2019-04-29 16:27:09 -耗时 : 208
2019-04-29 16:27:09 -返回值 : com.bootdo.common.utils.PageUtils@5b1de548
2019-04-29 16:27:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 16:27:22 -==> Parameters: 1(Long)
2019-04-29 16:27:22 -<==      Total: 93
2019-04-29 16:27:22 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:27:22 -HTTP METHOD : GET
2019-04-29 16:27:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:27:22 -参数 : []
2019-04-29 16:27:22 -耗时 : 11
2019-04-29 16:27:22 -返回值 : charts/tableElecMM
2019-04-29 16:27:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:27:30 -HTTP METHOD : GET
2019-04-29 16:27:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:27:30 -参数 : []
2019-04-29 16:27:30 -耗时 : 1
2019-04-29 16:27:30 -返回值 : system/dept/deptTree
2019-04-29 16:27:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:27:30 -HTTP METHOD : GET
2019-04-29 16:27:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:27:30 -参数 : []
2019-04-29 16:27:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:27:30 -==> Parameters: 
2019-04-29 16:27:30 -<==      Total: 3
2019-04-29 16:27:30 -耗时 : 70
2019-04-29 16:27:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:27:32 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:27:32 -HTTP METHOD : POST
2019-04-29 16:27:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:27:32 -参数 : [com.bootdo.elec.vo.ElecVo@47234a8d, com.bootdo.moneyLog.vo.ElecLogVo@621b9fb0]
2019-04-29 16:27:32 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:32 -<==      Total: 1
2019-04-29 16:27:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:32 -<==      Total: 1
2019-04-29 16:27:32 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:32 -<==      Total: 1
2019-04-29 16:27:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:32 -<==      Total: 1
2019-04-29 16:27:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:32 -<==      Total: 1
2019-04-29 16:27:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:32 -<==      Total: 1
2019-04-29 16:27:32 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:27:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:32 -<==      Total: 1
2019-04-29 16:27:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:32 -<==      Total: 1
2019-04-29 16:27:32 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:32 -<==      Total: 1
2019-04-29 16:27:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:32 -<==      Total: 1
2019-04-29 16:27:32 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:27:33 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:27:33 -<==      Total: 1
2019-04-29 16:27:33 -耗时 : 984
2019-04-29 16:27:33 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:29:07 -请求地址 : http://localhost:8081/index
2019-04-29 16:29:07 -HTTP METHOD : GET
2019-04-29 16:29:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:29:07 -参数 : [{}]
2019-04-29 16:29:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:29:07 -==> Parameters: 1(Long)
2019-04-29 16:29:07 -<==      Total: 49
2019-04-29 16:29:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:29:07 -==> Parameters: 138(Long)
2019-04-29 16:29:07 -<==      Total: 1
2019-04-29 16:29:07 -耗时 : 142
2019-04-29 16:29:07 -返回值 : index_v1
2019-04-29 16:29:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:29:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 143(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:29:07.492(Timestamp)
2019-04-29 16:29:07 -<==    Updates: 1
2019-04-29 16:29:07 -请求地址 : http://localhost:8081/main
2019-04-29 16:29:07 -HTTP METHOD : GET
2019-04-29 16:29:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:29:07 -参数 : []
2019-04-29 16:29:07 -耗时 : 1
2019-04-29 16:29:07 -返回值 : main
2019-04-29 16:29:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:29:07 -HTTP METHOD : GET
2019-04-29 16:29:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:29:07 -参数 : []
2019-04-29 16:29:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:29:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:29:08 -<==      Total: 0
2019-04-29 16:29:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:29:08 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:29:08 -<==      Total: 1
2019-04-29 16:29:08 -耗时 : 27
2019-04-29 16:29:08 -返回值 : com.bootdo.common.utils.PageUtils@7ceef3c6
2019-04-29 16:29:08 -请求地址 : http://localhost:8081/main
2019-04-29 16:29:08 -HTTP METHOD : GET
2019-04-29 16:29:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:29:08 -参数 : []
2019-04-29 16:29:08 -耗时 : 1
2019-04-29 16:29:08 -返回值 : main
2019-04-29 16:29:38 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 16:32:06 -请求地址 : http://localhost:8081/login;JSESSIONID=4f164394-6e36-42c5-9d12-ee532763ab76
2019-04-29 16:32:06 -HTTP METHOD : GET
2019-04-29 16:32:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 16:32:06 -参数 : [{}]
2019-04-29 16:32:06 -耗时 : 1
2019-04-29 16:32:06 -返回值 : login
2019-04-29 16:32:06 -请求地址 : http://localhost:8081/login;JSESSIONID=4f164394-6e36-42c5-9d12-ee532763ab76
2019-04-29 16:32:06 -HTTP METHOD : GET
2019-04-29 16:32:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 16:32:06 -参数 : [{}]
2019-04-29 16:32:06 -耗时 : 1
2019-04-29 16:32:06 -返回值 : login
2019-04-29 16:32:07 -请求地址 : http://localhost:8081/getVerify
2019-04-29 16:32:07 -HTTP METHOD : GET
2019-04-29 16:32:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 16:32:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@300e2b29, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1ba04728]
2019-04-29 16:32:07 -9745
2019-04-29 16:32:07 -耗时 : 23
2019-04-29 16:32:07 -返回值 : null
2019-04-29 16:32:07 -请求地址 : http://localhost:8081/getVerify
2019-04-29 16:32:07 -HTTP METHOD : GET
2019-04-29 16:32:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 16:32:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@516675fd, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5afff5da]
2019-04-29 16:32:07 -6201
2019-04-29 16:32:07 -耗时 : 14
2019-04-29 16:32:07 -返回值 : null
2019-04-29 16:32:07 -请求地址 : http://localhost:8081/login
2019-04-29 16:32:07 -HTTP METHOD : GET
2019-04-29 16:32:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 16:32:07 -参数 : [{}]
2019-04-29 16:32:07 -耗时 : 1
2019-04-29 16:32:07 -返回值 : login
2019-04-29 16:32:14 -请求地址 : http://localhost:8081/login
2019-04-29 16:32:14 -HTTP METHOD : POST
2019-04-29 16:32:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 16:32:14 -参数 : [admin, 111111, 6201, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1fd23b6d]
2019-04-29 16:32:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 16:32:14 -==> Parameters: admin(String)
2019-04-29 16:32:14 -<==      Total: 1
2019-04-29 16:32:14 -耗时 : 7
2019-04-29 16:32:14 -返回值 : {msg=操作成功, code=0}
2019-04-29 16:32:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:32:14 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 16:32:14.069(Timestamp)
2019-04-29 16:32:14 -请求地址 : http://localhost:8081/index
2019-04-29 16:32:14 -HTTP METHOD : GET
2019-04-29 16:32:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:32:14 -参数 : [{}]
2019-04-29 16:32:14 -<==    Updates: 1
2019-04-29 16:32:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:32:14 -==> Parameters: 1(Long)
2019-04-29 16:32:14 -<==      Total: 49
2019-04-29 16:32:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:32:14 -==> Parameters: 138(Long)
2019-04-29 16:32:14 -<==      Total: 1
2019-04-29 16:32:14 -耗时 : 177
2019-04-29 16:32:14 -返回值 : index_v1
2019-04-29 16:32:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:32:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 177(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:32:14.282(Timestamp)
2019-04-29 16:32:14 -请求地址 : http://localhost:8081/main
2019-04-29 16:32:14 -HTTP METHOD : GET
2019-04-29 16:32:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:32:14 -参数 : []
2019-04-29 16:32:14 -耗时 : 0
2019-04-29 16:32:14 -返回值 : main
2019-04-29 16:32:14 -<==    Updates: 1
2019-04-29 16:32:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:32:15 -HTTP METHOD : GET
2019-04-29 16:32:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:32:15 -参数 : []
2019-04-29 16:32:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:32:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:32:15 -<==      Total: 0
2019-04-29 16:32:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:32:15 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:32:15 -<==      Total: 1
2019-04-29 16:32:15 -耗时 : 66
2019-04-29 16:32:15 -返回值 : com.bootdo.common.utils.PageUtils@43ed4d76
2019-04-29 16:32:15 -请求地址 : http://localhost:8081/main
2019-04-29 16:32:15 -HTTP METHOD : GET
2019-04-29 16:32:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:32:15 -参数 : []
2019-04-29 16:32:15 -耗时 : 0
2019-04-29 16:32:15 -返回值 : main
2019-04-29 16:36:24 -请求地址 : http://localhost:8081/index
2019-04-29 16:36:24 -HTTP METHOD : GET
2019-04-29 16:36:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:36:24 -参数 : [{}]
2019-04-29 16:36:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:36:24 -==> Parameters: 1(Long)
2019-04-29 16:36:24 -<==      Total: 49
2019-04-29 16:36:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:36:24 -==> Parameters: 138(Long)
2019-04-29 16:36:24 -<==      Total: 1
2019-04-29 16:36:24 -耗时 : 219
2019-04-29 16:36:24 -返回值 : index_v1
2019-04-29 16:36:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:36:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 219(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:36:24.958(Timestamp)
2019-04-29 16:36:25 -请求地址 : http://localhost:8081/main
2019-04-29 16:36:25 -HTTP METHOD : GET
2019-04-29 16:36:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:36:25 -参数 : []
2019-04-29 16:36:25 -耗时 : 0
2019-04-29 16:36:25 -返回值 : main
2019-04-29 16:36:25 -<==    Updates: 1
2019-04-29 16:36:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:36:25 -HTTP METHOD : GET
2019-04-29 16:36:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:36:25 -参数 : []
2019-04-29 16:36:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:36:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:36:25 -<==      Total: 0
2019-04-29 16:36:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:36:25 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:36:25 -<==      Total: 1
2019-04-29 16:36:25 -耗时 : 65
2019-04-29 16:36:25 -返回值 : com.bootdo.common.utils.PageUtils@6a541ce0
2019-04-29 16:36:25 -请求地址 : http://localhost:8081/main
2019-04-29 16:36:25 -HTTP METHOD : GET
2019-04-29 16:36:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:36:25 -参数 : []
2019-04-29 16:36:25 -耗时 : 1
2019-04-29 16:36:25 -返回值 : main
2019-04-29 16:36:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 16:36:49 -==> Parameters: 1(Long)
2019-04-29 16:36:49 -<==      Total: 93
2019-04-29 16:36:49 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:36:49 -HTTP METHOD : GET
2019-04-29 16:36:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:36:49 -参数 : []
2019-04-29 16:36:49 -耗时 : 1
2019-04-29 16:36:49 -返回值 : charts/tableElecMM
2019-04-29 16:36:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:36:55 -HTTP METHOD : GET
2019-04-29 16:36:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:36:55 -参数 : []
2019-04-29 16:36:55 -耗时 : 0
2019-04-29 16:36:55 -返回值 : system/dept/deptTree
2019-04-29 16:36:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:36:55 -HTTP METHOD : GET
2019-04-29 16:36:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:36:55 -参数 : []
2019-04-29 16:36:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:36:55 -==> Parameters: 
2019-04-29 16:36:55 -<==      Total: 3
2019-04-29 16:36:55 -耗时 : 66
2019-04-29 16:36:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:37:20 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:37:20 -HTTP METHOD : POST
2019-04-29 16:37:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:37:20 -参数 : [com.bootdo.elec.vo.ElecVo@6b3f1ca, com.bootdo.moneyLog.vo.ElecLogVo@45c35ae8]
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:20 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:20 -<==      Total: 1
2019-04-29 16:37:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:21 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:21 -<==      Total: 1
2019-04-29 16:37:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:21 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:21 -<==      Total: 1
2019-04-29 16:37:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:21 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:21 -<==      Total: 1
2019-04-29 16:37:21 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:37:21 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:37:21 -<==      Total: 1
2019-04-29 16:37:21 -耗时 : 500
2019-04-29 16:37:21 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:38:48 -请求地址 : http://localhost:8081/index
2019-04-29 16:38:48 -HTTP METHOD : GET
2019-04-29 16:38:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:38:48 -参数 : [{}]
2019-04-29 16:38:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:38:48 -==> Parameters: 1(Long)
2019-04-29 16:38:48 -<==      Total: 49
2019-04-29 16:38:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:38:48 -==> Parameters: 138(Long)
2019-04-29 16:38:48 -<==      Total: 1
2019-04-29 16:38:48 -耗时 : 29
2019-04-29 16:38:48 -返回值 : index_v1
2019-04-29 16:38:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:38:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:38:48.855(Timestamp)
2019-04-29 16:38:48 -请求地址 : http://localhost:8081/main
2019-04-29 16:38:48 -HTTP METHOD : GET
2019-04-29 16:38:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:38:48 -参数 : []
2019-04-29 16:38:48 -耗时 : 0
2019-04-29 16:38:48 -返回值 : main
2019-04-29 16:38:48 -<==    Updates: 1
2019-04-29 16:38:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:38:49 -HTTP METHOD : GET
2019-04-29 16:38:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:38:49 -参数 : []
2019-04-29 16:38:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:38:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:38:49 -<==      Total: 0
2019-04-29 16:38:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:38:49 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:38:49 -<==      Total: 1
2019-04-29 16:38:49 -耗时 : 9
2019-04-29 16:38:49 -返回值 : com.bootdo.common.utils.PageUtils@7399b828
2019-04-29 16:38:49 -请求地址 : http://localhost:8081/main
2019-04-29 16:38:49 -HTTP METHOD : GET
2019-04-29 16:38:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:38:49 -参数 : []
2019-04-29 16:38:49 -耗时 : 0
2019-04-29 16:38:49 -返回值 : main
2019-04-29 16:38:53 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-29 16:38:53 -HTTP METHOD : GET
2019-04-29 16:38:53 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-29 16:38:53 -参数 : []
2019-04-29 16:38:53 -耗时 : 12
2019-04-29 16:38:53 -返回值 : charts/tableDD
2019-04-29 16:38:54 -请求地址 : http://localhost:8081/charts/countMM
2019-04-29 16:38:54 -HTTP METHOD : GET
2019-04-29 16:38:54 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-29 16:38:54 -参数 : []
2019-04-29 16:38:54 -耗时 : 10
2019-04-29 16:38:54 -返回值 : charts/countMM
2019-04-29 16:38:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-29 16:38:54 -HTTP METHOD : GET
2019-04-29 16:38:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-29 16:38:54 -参数 : [userType]
2019-04-29 16:38:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-29 16:38:54 -==> Parameters: userType(String)
2019-04-29 16:38:54 -<==      Total: 4
2019-04-29 16:38:54 -耗时 : 91
2019-04-29 16:38:54 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-29 16:38:55 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:38:55 -HTTP METHOD : GET
2019-04-29 16:38:55 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:38:55 -参数 : []
2019-04-29 16:38:55 -耗时 : 0
2019-04-29 16:38:55 -返回值 : charts/tableElecMM
2019-04-29 16:39:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:39:01 -HTTP METHOD : GET
2019-04-29 16:39:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:39:01 -参数 : []
2019-04-29 16:39:01 -耗时 : 1
2019-04-29 16:39:01 -返回值 : system/dept/deptTree
2019-04-29 16:39:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:39:02 -HTTP METHOD : GET
2019-04-29 16:39:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:39:02 -参数 : []
2019-04-29 16:39:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:39:02 -==> Parameters: 
2019-04-29 16:39:02 -<==      Total: 3
2019-04-29 16:39:02 -耗时 : 4
2019-04-29 16:39:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:39:04 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:39:04 -HTTP METHOD : POST
2019-04-29 16:39:04 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:39:04 -参数 : [com.bootdo.elec.vo.ElecVo@45d44d41, com.bootdo.moneyLog.vo.ElecLogVo@321e3223]
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:04 -<==      Total: 1
2019-04-29 16:39:04 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:04 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:39:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:39:05 -<==      Total: 1
2019-04-29 16:39:05 -耗时 : 317
2019-04-29 16:39:05 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:39:58 -请求地址 : http://localhost:8081/index
2019-04-29 16:39:58 -HTTP METHOD : GET
2019-04-29 16:39:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:39:58 -参数 : [{}]
2019-04-29 16:39:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:39:58 -==> Parameters: 1(Long)
2019-04-29 16:39:58 -<==      Total: 49
2019-04-29 16:39:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:39:58 -==> Parameters: 138(Long)
2019-04-29 16:39:58 -<==      Total: 1
2019-04-29 16:39:58 -耗时 : 51
2019-04-29 16:39:58 -返回值 : index_v1
2019-04-29 16:39:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:39:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 51(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:39:58.26(Timestamp)
2019-04-29 16:39:58 -<==    Updates: 1
2019-04-29 16:39:58 -请求地址 : http://localhost:8081/main
2019-04-29 16:39:58 -HTTP METHOD : GET
2019-04-29 16:39:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:39:58 -参数 : []
2019-04-29 16:39:58 -耗时 : 0
2019-04-29 16:39:58 -返回值 : main
2019-04-29 16:39:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:39:58 -HTTP METHOD : GET
2019-04-29 16:39:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:39:58 -参数 : []
2019-04-29 16:39:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:39:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:39:58 -<==      Total: 0
2019-04-29 16:39:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:39:58 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:39:58 -<==      Total: 1
2019-04-29 16:39:58 -耗时 : 6
2019-04-29 16:39:58 -返回值 : com.bootdo.common.utils.PageUtils@5ceb3017
2019-04-29 16:39:58 -请求地址 : http://localhost:8081/main
2019-04-29 16:39:58 -HTTP METHOD : GET
2019-04-29 16:39:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:39:58 -参数 : []
2019-04-29 16:39:58 -耗时 : 2
2019-04-29 16:39:58 -返回值 : main
2019-04-29 16:40:00 -请求地址 : http://localhost:8081/charts/countMM
2019-04-29 16:40:00 -HTTP METHOD : GET
2019-04-29 16:40:00 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-29 16:40:00 -参数 : []
2019-04-29 16:40:00 -耗时 : 0
2019-04-29 16:40:00 -返回值 : charts/countMM
2019-04-29 16:40:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-29 16:40:01 -HTTP METHOD : GET
2019-04-29 16:40:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-29 16:40:01 -参数 : [userType]
2019-04-29 16:40:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-29 16:40:01 -==> Parameters: userType(String)
2019-04-29 16:40:01 -<==      Total: 4
2019-04-29 16:40:01 -耗时 : 5
2019-04-29 16:40:01 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-29 16:40:02 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:40:02 -HTTP METHOD : GET
2019-04-29 16:40:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:40:02 -参数 : []
2019-04-29 16:40:02 -耗时 : 1
2019-04-29 16:40:02 -返回值 : charts/tableElecMM
2019-04-29 16:40:03 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 16:40:03 -HTTP METHOD : GET
2019-04-29 16:40:03 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 16:40:03 -参数 : []
2019-04-29 16:40:03 -耗时 : 12
2019-04-29 16:40:03 -返回值 : charts/tableHeatMM
2019-04-29 16:40:07 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:40:07 -HTTP METHOD : GET
2019-04-29 16:40:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:40:07 -参数 : []
2019-04-29 16:40:07 -耗时 : 0
2019-04-29 16:40:07 -返回值 : system/dept/deptTree
2019-04-29 16:40:08 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:40:08 -HTTP METHOD : GET
2019-04-29 16:40:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:40:08 -参数 : []
2019-04-29 16:40:08 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:40:08 -==> Parameters: 
2019-04-29 16:40:08 -<==      Total: 3
2019-04-29 16:40:08 -耗时 : 4
2019-04-29 16:40:08 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:41:39 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-04-29 16:41:39 -HTTP METHOD : POST
2019-04-29 16:41:39 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 16:41:39 -参数 : [com.bootdo.heat.vo.HeatVo@12afa6f2, com.bootdo.moneyLog.vo.HeatLogVo@d0cbb1b]
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:41:39 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:41:39 -<==      Total: 1
2019-04-29 16:41:39 -耗时 : 330
2019-04-29 16:41:39 -返回值 : {GSHeatCountPre=6, MHeatCostCount=7, GMHeatArea=1, SHeatCostCount=7, GSHeatSumPre=1, GMHeatCountPre=6, CountPrehu=24, MHeatCountPre=6, SumSHeatLog=40, MHeatPrice=1, CountOweyu=1, SHeatPrice=1, GMHeatPrice=1, CountPreyu=6, SumGMHeatLog=0, CountLogyu=240, CountGSHeatLog=1, SHeatSumPre=1, GMHeatCountOwe=1, CountOwehu=4, GMtotalhu=7, CountGMHeatLog=0, GStotalhu=7, CountLoghu=4, GSHeatSumOwe=0, GSHeatPrice=1, MHeatSumOwe=1, SHeatCountPre=6, GSHeatCountOwe=1, GMtotalyu=1, CountAllyu=7, GStotalyu=1, CountSHeatLog=1, GSHeatCostSum=1, MHeatCostSum=103, SHeatCostSum=1, CountAllhu=28, CountCostyu=106, MHeatArea=103, SHeatSumOwe=0, MHeatSumPre=3, GMHeatSumPre=1, Stotalhu=7, CountPrice=4, GMHeatCostCount=7, GMHeatCostSum=1, GSHeatCostCount=7, SumGSHeatLog=80, CountCosthu=28, SHeatCountOwe=1, CountMHeatLog=2, Mtotalhu=7, Stotalyu=1, CountArea=106, GMHeatSumOwe=0, GSHeatArea=1, SumMHeatLog=120, SHeatArea=1, Mtotalyu=4, MHeatCountOwe=1}
2019-04-29 16:47:54 -请求地址 : http://localhost:8081/index
2019-04-29 16:47:54 -HTTP METHOD : GET
2019-04-29 16:47:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:47:54 -参数 : [{}]
2019-04-29 16:47:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:47:54 -==> Parameters: 1(Long)
2019-04-29 16:47:54 -<==      Total: 49
2019-04-29 16:47:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:47:54 -==> Parameters: 138(Long)
2019-04-29 16:47:54 -<==      Total: 1
2019-04-29 16:47:54 -耗时 : 19
2019-04-29 16:47:54 -返回值 : index_v1
2019-04-29 16:47:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:47:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:47:54.286(Timestamp)
2019-04-29 16:47:54 -请求地址 : http://localhost:8081/main
2019-04-29 16:47:54 -HTTP METHOD : GET
2019-04-29 16:47:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:47:54 -参数 : []
2019-04-29 16:47:54 -耗时 : 0
2019-04-29 16:47:54 -返回值 : main
2019-04-29 16:47:54 -<==    Updates: 1
2019-04-29 16:47:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:47:54 -HTTP METHOD : GET
2019-04-29 16:47:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:47:54 -参数 : []
2019-04-29 16:47:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:47:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:47:54 -<==      Total: 0
2019-04-29 16:47:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:47:54 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:47:54 -<==      Total: 1
2019-04-29 16:47:54 -耗时 : 9
2019-04-29 16:47:54 -返回值 : com.bootdo.common.utils.PageUtils@55260373
2019-04-29 16:47:54 -请求地址 : http://localhost:8081/main
2019-04-29 16:47:54 -HTTP METHOD : GET
2019-04-29 16:47:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:47:54 -参数 : []
2019-04-29 16:47:54 -耗时 : 0
2019-04-29 16:47:54 -返回值 : main
2019-04-29 16:47:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 16:47:57 -==> Parameters: 1(Long)
2019-04-29 16:47:57 -<==      Total: 93
2019-04-29 16:47:57 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:47:57 -HTTP METHOD : GET
2019-04-29 16:47:57 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:47:57 -参数 : []
2019-04-29 16:47:57 -耗时 : 0
2019-04-29 16:47:57 -返回值 : charts/tableElecMM
2019-04-29 16:48:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:48:03 -HTTP METHOD : GET
2019-04-29 16:48:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:48:03 -参数 : []
2019-04-29 16:48:03 -耗时 : 1
2019-04-29 16:48:03 -返回值 : system/dept/deptTree
2019-04-29 16:48:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:48:04 -HTTP METHOD : GET
2019-04-29 16:48:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:48:04 -参数 : []
2019-04-29 16:48:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:48:04 -==> Parameters: 
2019-04-29 16:48:04 -<==      Total: 3
2019-04-29 16:48:04 -耗时 : 3
2019-04-29 16:48:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:48:06 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:48:06 -HTTP METHOD : POST
2019-04-29 16:48:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:48:06 -参数 : [com.bootdo.elec.vo.ElecVo@70e080ea, com.bootdo.moneyLog.vo.ElecLogVo@7c2dd913]
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:06 -<==      Total: 1
2019-04-29 16:48:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:07 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:07 -<==      Total: 1
2019-04-29 16:48:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:07 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:07 -<==      Total: 1
2019-04-29 16:48:07 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:48:07 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:48:07 -<==      Total: 1
2019-04-29 16:48:07 -耗时 : 320
2019-04-29 16:48:07 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:49:36 -请求地址 : http://localhost:8081/index
2019-04-29 16:49:36 -HTTP METHOD : GET
2019-04-29 16:49:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:49:36 -参数 : [{}]
2019-04-29 16:49:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:49:36 -==> Parameters: 1(Long)
2019-04-29 16:49:36 -<==      Total: 49
2019-04-29 16:49:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:49:37 -==> Parameters: 138(Long)
2019-04-29 16:49:37 -<==      Total: 1
2019-04-29 16:49:37 -耗时 : 32
2019-04-29 16:49:37 -返回值 : index_v1
2019-04-29 16:49:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:49:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:49:37.016(Timestamp)
2019-04-29 16:49:37 -请求地址 : http://localhost:8081/main
2019-04-29 16:49:37 -HTTP METHOD : GET
2019-04-29 16:49:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:49:37 -参数 : []
2019-04-29 16:49:37 -耗时 : 2
2019-04-29 16:49:37 -返回值 : main
2019-04-29 16:49:37 -<==    Updates: 1
2019-04-29 16:49:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:49:37 -HTTP METHOD : GET
2019-04-29 16:49:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:49:37 -参数 : []
2019-04-29 16:49:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:49:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:49:37 -<==      Total: 0
2019-04-29 16:49:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:49:37 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:49:37 -<==      Total: 1
2019-04-29 16:49:37 -耗时 : 6
2019-04-29 16:49:37 -返回值 : com.bootdo.common.utils.PageUtils@6b207ec
2019-04-29 16:49:37 -请求地址 : http://localhost:8081/main
2019-04-29 16:49:37 -HTTP METHOD : GET
2019-04-29 16:49:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:49:37 -参数 : []
2019-04-29 16:49:37 -耗时 : 0
2019-04-29 16:49:37 -返回值 : main
2019-04-29 16:49:40 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:49:40 -HTTP METHOD : GET
2019-04-29 16:49:40 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:49:40 -参数 : []
2019-04-29 16:49:40 -耗时 : 2
2019-04-29 16:49:40 -返回值 : charts/tableElecMM
2019-04-29 16:49:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:49:58 -HTTP METHOD : GET
2019-04-29 16:49:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:49:58 -参数 : []
2019-04-29 16:49:58 -耗时 : 1
2019-04-29 16:49:58 -返回值 : system/dept/deptTree
2019-04-29 16:49:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:49:58 -HTTP METHOD : GET
2019-04-29 16:49:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:49:58 -参数 : []
2019-04-29 16:49:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:49:58 -==> Parameters: 
2019-04-29 16:49:58 -<==      Total: 3
2019-04-29 16:49:58 -耗时 : 6
2019-04-29 16:49:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:50:15 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:50:15 -HTTP METHOD : POST
2019-04-29 16:50:15 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:50:15 -参数 : [com.bootdo.elec.vo.ElecVo@7b3f3350, com.bootdo.moneyLog.vo.ElecLogVo@3f5c55fa]
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:50:15 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:50:15 -<==      Total: 1
2019-04-29 16:50:15 -耗时 : 339
2019-04-29 16:50:15 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:52:29 -请求地址 : http://localhost:8081/index
2019-04-29 16:52:29 -HTTP METHOD : GET
2019-04-29 16:52:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:52:29 -参数 : [{}]
2019-04-29 16:52:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:52:29 -==> Parameters: 1(Long)
2019-04-29 16:52:29 -<==      Total: 49
2019-04-29 16:52:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:52:29 -==> Parameters: 138(Long)
2019-04-29 16:52:29 -<==      Total: 1
2019-04-29 16:52:29 -耗时 : 48
2019-04-29 16:52:29 -返回值 : index_v1
2019-04-29 16:52:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:52:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 48(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:52:29.941(Timestamp)
2019-04-29 16:52:30 -请求地址 : http://localhost:8081/main
2019-04-29 16:52:30 -HTTP METHOD : GET
2019-04-29 16:52:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:52:30 -参数 : []
2019-04-29 16:52:30 -耗时 : 1
2019-04-29 16:52:30 -返回值 : main
2019-04-29 16:52:30 -<==    Updates: 1
2019-04-29 16:52:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:52:30 -HTTP METHOD : GET
2019-04-29 16:52:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:52:30 -参数 : []
2019-04-29 16:52:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:52:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:52:30 -<==      Total: 0
2019-04-29 16:52:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:52:30 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:52:30 -<==      Total: 1
2019-04-29 16:52:30 -耗时 : 12
2019-04-29 16:52:30 -返回值 : com.bootdo.common.utils.PageUtils@73b92484
2019-04-29 16:52:30 -请求地址 : http://localhost:8081/main
2019-04-29 16:52:30 -HTTP METHOD : GET
2019-04-29 16:52:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:52:30 -参数 : []
2019-04-29 16:52:30 -耗时 : 2
2019-04-29 16:52:30 -返回值 : main
2019-04-29 16:52:33 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:52:33 -HTTP METHOD : GET
2019-04-29 16:52:33 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:52:33 -参数 : []
2019-04-29 16:52:33 -耗时 : 1
2019-04-29 16:52:33 -返回值 : charts/tableElecMM
2019-04-29 16:52:34 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 16:52:34 -HTTP METHOD : GET
2019-04-29 16:52:34 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 16:52:34 -参数 : []
2019-04-29 16:52:34 -耗时 : 0
2019-04-29 16:52:34 -返回值 : charts/tableHeatMM
2019-04-29 16:52:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:52:38 -HTTP METHOD : GET
2019-04-29 16:52:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:52:38 -参数 : []
2019-04-29 16:52:38 -耗时 : 1
2019-04-29 16:52:38 -返回值 : system/dept/deptTree
2019-04-29 16:52:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:52:38 -HTTP METHOD : GET
2019-04-29 16:52:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:52:38 -参数 : []
2019-04-29 16:52:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:52:38 -==> Parameters: 
2019-04-29 16:52:38 -<==      Total: 3
2019-04-29 16:52:38 -耗时 : 5
2019-04-29 16:52:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:54:46 -请求地址 : http://localhost:8081/index
2019-04-29 16:54:46 -HTTP METHOD : GET
2019-04-29 16:54:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:54:46 -参数 : [{}]
2019-04-29 16:54:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:54:46 -==> Parameters: 1(Long)
2019-04-29 16:54:46 -<==      Total: 49
2019-04-29 16:54:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:54:46 -==> Parameters: 138(Long)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -耗时 : 23
2019-04-29 16:54:46 -返回值 : index_v1
2019-04-29 16:54:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:54:46 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-04-29 16:54:46 -HTTP METHOD : POST
2019-04-29 16:54:46 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 16:54:46 -参数 : [com.bootdo.heat.vo.HeatVo@3db6343a, com.bootdo.moneyLog.vo.HeatLogVo@58f6769e]
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:54:46.452(Timestamp)
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==    Updates: 1
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:54:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:54:46 -<==      Total: 1
2019-04-29 16:54:46 -耗时 : 379
2019-04-29 16:54:46 -返回值 : {GSHeatCountPre=6, MHeatCostCount=7, GMHeatArea=1, SHeatCostCount=7, GSHeatSumPre=1, GMHeatCountPre=6, CountPrehu=24, MHeatCountPre=6, SumSHeatLog=40, MHeatPrice=1, CountOweyu=1, SHeatPrice=1, GMHeatPrice=1, CountPreyu=6, SumGMHeatLog=0, CountLogyu=240, CountGSHeatLog=1, SHeatSumPre=1, GMHeatCountOwe=1, CountOwehu=4, GMtotalhu=7, CountGMHeatLog=0, GStotalhu=7, CountLoghu=4, GSHeatSumOwe=0, GSHeatPrice=1, MHeatSumOwe=1, SHeatCountPre=6, GSHeatCountOwe=1, GMtotalyu=1, CountAllyu=7, GStotalyu=1, CountSHeatLog=1, GSHeatCostSum=1, MHeatCostSum=103, SHeatCostSum=1, CountAllhu=28, CountCostyu=106, MHeatArea=103, SHeatSumOwe=0, MHeatSumPre=3, GMHeatSumPre=1, Stotalhu=7, CountPrice=4, GMHeatCostCount=7, GMHeatCostSum=1, GSHeatCostCount=7, SumGSHeatLog=80, CountCosthu=28, SHeatCountOwe=1, CountMHeatLog=2, Mtotalhu=7, Stotalyu=1, CountArea=106, GMHeatSumOwe=0, GSHeatArea=1, SumMHeatLog=120, SHeatArea=1, Mtotalyu=4, MHeatCountOwe=1}
2019-04-29 16:54:47 -请求地址 : http://localhost:8081/main
2019-04-29 16:54:47 -HTTP METHOD : GET
2019-04-29 16:54:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:54:47 -参数 : []
2019-04-29 16:54:47 -耗时 : 1
2019-04-29 16:54:47 -返回值 : main
2019-04-29 16:54:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:54:47 -HTTP METHOD : GET
2019-04-29 16:54:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:54:47 -参数 : []
2019-04-29 16:54:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:54:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:54:47 -<==      Total: 0
2019-04-29 16:54:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:54:47 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:54:47 -<==      Total: 1
2019-04-29 16:54:47 -耗时 : 8
2019-04-29 16:54:47 -返回值 : com.bootdo.common.utils.PageUtils@7a6c81d8
2019-04-29 16:54:47 -请求地址 : http://localhost:8081/main
2019-04-29 16:54:47 -HTTP METHOD : GET
2019-04-29 16:54:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:54:47 -参数 : []
2019-04-29 16:54:47 -耗时 : 1
2019-04-29 16:54:47 -返回值 : main
2019-04-29 16:54:49 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:54:49 -HTTP METHOD : GET
2019-04-29 16:54:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:54:49 -参数 : []
2019-04-29 16:54:49 -耗时 : 1
2019-04-29 16:54:49 -返回值 : charts/tableElecMM
2019-04-29 16:54:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:54:54 -HTTP METHOD : GET
2019-04-29 16:54:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:54:54 -参数 : []
2019-04-29 16:54:54 -耗时 : 1
2019-04-29 16:54:54 -返回值 : system/dept/deptTree
2019-04-29 16:54:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:54:54 -HTTP METHOD : GET
2019-04-29 16:54:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:54:54 -参数 : []
2019-04-29 16:54:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:54:54 -==> Parameters: 
2019-04-29 16:54:54 -<==      Total: 3
2019-04-29 16:54:54 -耗时 : 4
2019-04-29 16:54:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:55:02 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:55:02 -HTTP METHOD : POST
2019-04-29 16:55:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:55:02 -参数 : [com.bootdo.elec.vo.ElecVo@3bbef8d6, com.bootdo.moneyLog.vo.ElecLogVo@456d94e0]
2019-04-29 16:55:02 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:02 -<==      Total: 1
2019-04-29 16:55:02 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:55:02 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:55:03 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:55:03 -<==      Total: 1
2019-04-29 16:55:03 -耗时 : 346
2019-04-29 16:55:03 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:55:48 -请求地址 : http://localhost:8081/index
2019-04-29 16:55:48 -HTTP METHOD : GET
2019-04-29 16:55:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:55:48 -参数 : [{}]
2019-04-29 16:55:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:55:48 -==> Parameters: 1(Long)
2019-04-29 16:55:48 -<==      Total: 49
2019-04-29 16:55:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:55:48 -==> Parameters: 138(Long)
2019-04-29 16:55:48 -<==      Total: 1
2019-04-29 16:55:48 -耗时 : 27
2019-04-29 16:55:48 -返回值 : index_v1
2019-04-29 16:55:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:55:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:55:48.826(Timestamp)
2019-04-29 16:55:49 -<==    Updates: 1
2019-04-29 16:55:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:55:49 -HTTP METHOD : GET
2019-04-29 16:55:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:55:49 -参数 : []
2019-04-29 16:55:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:55:49 -请求地址 : http://localhost:8081/main
2019-04-29 16:55:49 -HTTP METHOD : GET
2019-04-29 16:55:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:55:49 -参数 : []
2019-04-29 16:55:49 -耗时 : 0
2019-04-29 16:55:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:55:49 -返回值 : main
2019-04-29 16:55:49 -<==      Total: 0
2019-04-29 16:55:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:55:49 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:55:49 -<==      Total: 1
2019-04-29 16:55:49 -耗时 : 9
2019-04-29 16:55:49 -返回值 : com.bootdo.common.utils.PageUtils@7801dbec
2019-04-29 16:55:49 -请求地址 : http://localhost:8081/main
2019-04-29 16:55:49 -HTTP METHOD : GET
2019-04-29 16:55:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:55:49 -参数 : []
2019-04-29 16:55:49 -耗时 : 1
2019-04-29 16:55:49 -返回值 : main
2019-04-29 16:55:59 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:55:59 -HTTP METHOD : GET
2019-04-29 16:55:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:55:59 -参数 : []
2019-04-29 16:55:59 -耗时 : 1
2019-04-29 16:55:59 -返回值 : charts/tableElecMM
2019-04-29 16:56:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:56:05 -HTTP METHOD : GET
2019-04-29 16:56:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:56:05 -参数 : []
2019-04-29 16:56:05 -耗时 : 1
2019-04-29 16:56:05 -返回值 : system/dept/deptTree
2019-04-29 16:56:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:56:05 -HTTP METHOD : GET
2019-04-29 16:56:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:56:05 -参数 : []
2019-04-29 16:56:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:56:05 -==> Parameters: 
2019-04-29 16:56:05 -<==      Total: 3
2019-04-29 16:56:05 -耗时 : 7
2019-04-29 16:56:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:56:10 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:56:10 -HTTP METHOD : POST
2019-04-29 16:56:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:56:10 -参数 : [com.bootdo.elec.vo.ElecVo@1f4d4050, com.bootdo.moneyLog.vo.ElecLogVo@377a8b4c]
2019-04-29 16:56:10 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:10 -<==      Total: 1
2019-04-29 16:56:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 16:56:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 16:56:11 -<==      Total: 1
2019-04-29 16:56:11 -耗时 : 359
2019-04-29 16:56:11 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 16:56:51 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 12 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 132], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 22], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 424]
2019-04-29 16:57:56 -请求地址 : http://localhost:8081/index
2019-04-29 16:57:56 -HTTP METHOD : GET
2019-04-29 16:57:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:57:56 -参数 : [{}]
2019-04-29 16:57:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:57:56 -==> Parameters: 1(Long)
2019-04-29 16:57:56 -<==      Total: 49
2019-04-29 16:57:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:57:56 -==> Parameters: 138(Long)
2019-04-29 16:57:56 -<==      Total: 1
2019-04-29 16:57:56 -耗时 : 23
2019-04-29 16:57:56 -返回值 : index_v1
2019-04-29 16:57:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:57:56 -请求地址 : http://localhost:8081/main
2019-04-29 16:57:56 -HTTP METHOD : GET
2019-04-29 16:57:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:57:56 -参数 : []
2019-04-29 16:57:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:57:56.628(Timestamp)
2019-04-29 16:57:56 -耗时 : 1
2019-04-29 16:57:56 -返回值 : main
2019-04-29 16:57:56 -<==    Updates: 1
2019-04-29 16:57:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:57:56 -HTTP METHOD : GET
2019-04-29 16:57:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:57:56 -参数 : []
2019-04-29 16:57:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:57:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:57:56 -<==      Total: 0
2019-04-29 16:57:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:57:56 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:57:56 -<==      Total: 1
2019-04-29 16:57:56 -耗时 : 7
2019-04-29 16:57:56 -返回值 : com.bootdo.common.utils.PageUtils@3c070f96
2019-04-29 16:57:57 -请求地址 : http://localhost:8081/main
2019-04-29 16:57:57 -HTTP METHOD : GET
2019-04-29 16:57:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:57:57 -参数 : []
2019-04-29 16:57:57 -耗时 : 2
2019-04-29 16:57:57 -返回值 : main
2019-04-29 16:58:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 16:58:00 -==> Parameters: 1(Long)
2019-04-29 16:58:00 -<==      Total: 93
2019-04-29 16:58:00 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:58:00 -HTTP METHOD : GET
2019-04-29 16:58:00 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:58:00 -参数 : []
2019-04-29 16:58:00 -耗时 : 1
2019-04-29 16:58:00 -返回值 : charts/tableElecMM
2019-04-29 16:58:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:58:05 -HTTP METHOD : GET
2019-04-29 16:58:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:58:05 -参数 : []
2019-04-29 16:58:05 -耗时 : 1
2019-04-29 16:58:05 -返回值 : system/dept/deptTree
2019-04-29 16:58:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:58:05 -HTTP METHOD : GET
2019-04-29 16:58:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:58:05 -参数 : []
2019-04-29 16:58:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:58:05 -==> Parameters: 
2019-04-29 16:58:05 -<==      Total: 3
2019-04-29 16:58:05 -耗时 : 2
2019-04-29 16:58:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:59:08 -请求地址 : http://localhost:8081/index
2019-04-29 16:59:08 -HTTP METHOD : GET
2019-04-29 16:59:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 16:59:08 -参数 : [{}]
2019-04-29 16:59:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 16:59:08 -==> Parameters: 1(Long)
2019-04-29 16:59:08 -<==      Total: 49
2019-04-29 16:59:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 16:59:08 -==> Parameters: 138(Long)
2019-04-29 16:59:08 -<==      Total: 1
2019-04-29 16:59:08 -耗时 : 26
2019-04-29 16:59:08 -返回值 : index_v1
2019-04-29 16:59:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:59:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 16:59:08.62(Timestamp)
2019-04-29 16:59:08 -请求地址 : http://localhost:8081/main
2019-04-29 16:59:08 -HTTP METHOD : GET
2019-04-29 16:59:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:59:08 -参数 : []
2019-04-29 16:59:08 -耗时 : 0
2019-04-29 16:59:08 -返回值 : main
2019-04-29 16:59:08 -<==    Updates: 1
2019-04-29 16:59:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 16:59:08 -HTTP METHOD : GET
2019-04-29 16:59:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 16:59:08 -参数 : []
2019-04-29 16:59:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 16:59:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 16:59:08 -<==      Total: 0
2019-04-29 16:59:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 16:59:08 -==> Parameters: 1(Long), 0(String)
2019-04-29 16:59:08 -<==      Total: 1
2019-04-29 16:59:08 -耗时 : 8
2019-04-29 16:59:08 -返回值 : com.bootdo.common.utils.PageUtils@5519d67f
2019-04-29 16:59:09 -请求地址 : http://localhost:8081/main
2019-04-29 16:59:09 -HTTP METHOD : GET
2019-04-29 16:59:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 16:59:09 -参数 : []
2019-04-29 16:59:09 -耗时 : 1
2019-04-29 16:59:09 -返回值 : main
2019-04-29 16:59:11 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 16:59:11 -HTTP METHOD : GET
2019-04-29 16:59:11 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:59:11 -参数 : []
2019-04-29 16:59:11 -耗时 : 1
2019-04-29 16:59:11 -返回值 : charts/tableElecMM
2019-04-29 16:59:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 16:59:15 -HTTP METHOD : GET
2019-04-29 16:59:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 16:59:15 -参数 : []
2019-04-29 16:59:15 -耗时 : 1
2019-04-29 16:59:15 -返回值 : system/dept/deptTree
2019-04-29 16:59:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 16:59:15 -HTTP METHOD : GET
2019-04-29 16:59:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 16:59:15 -参数 : []
2019-04-29 16:59:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 16:59:15 -==> Parameters: 
2019-04-29 16:59:15 -<==      Total: 3
2019-04-29 16:59:15 -耗时 : 3
2019-04-29 16:59:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 16:59:27 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 16:59:27 -HTTP METHOD : POST
2019-04-29 16:59:27 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 16:59:27 -参数 : [com.bootdo.elec.vo.ElecVo@7303fdde, com.bootdo.moneyLog.vo.ElecLogVo@15a0e1fe]
2019-04-29 16:59:27 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:59:27 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 16:59:27 -<==      Total: 1
2019-04-29 16:59:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:59:27 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 16:59:27 -<==      Total: 1
2019-04-29 16:59:27 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 16:59:27 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 16:59:27 -<==      Total: 1
2019-04-29 16:59:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:59:27 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 16:59:27 -<==      Total: 1
2019-04-29 16:59:27 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:59:27 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 16:59:27 -<==      Total: 1
2019-04-29 16:59:27 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 16:59:27 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 16:59:27 -<==      Total: 0
2019-04-29 16:59:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 16:59:27 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:61)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$9d9d8553.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 16:59:27 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-04-29 16:59:27.202(Timestamp)
2019-04-29 16:59:27 -<==    Updates: 1
2019-04-29 17:00:18 -请求地址 : http://localhost:8081/index
2019-04-29 17:00:18 -HTTP METHOD : GET
2019-04-29 17:00:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 17:00:18 -参数 : [{}]
2019-04-29 17:00:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 17:00:18 -==> Parameters: 1(Long)
2019-04-29 17:00:18 -<==      Total: 49
2019-04-29 17:00:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 17:00:18 -==> Parameters: 138(Long)
2019-04-29 17:00:18 -<==      Total: 1
2019-04-29 17:00:18 -耗时 : 25
2019-04-29 17:00:18 -返回值 : index_v1
2019-04-29 17:00:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:00:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 17:00:18.07(Timestamp)
2019-04-29 17:00:18 -请求地址 : http://localhost:8081/main
2019-04-29 17:00:18 -HTTP METHOD : GET
2019-04-29 17:00:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:00:18 -参数 : []
2019-04-29 17:00:18 -耗时 : 2
2019-04-29 17:00:18 -返回值 : main
2019-04-29 17:00:18 -<==    Updates: 1
2019-04-29 17:00:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 17:00:18 -HTTP METHOD : GET
2019-04-29 17:00:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 17:00:18 -参数 : []
2019-04-29 17:00:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 17:00:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 17:00:18 -<==      Total: 0
2019-04-29 17:00:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 17:00:18 -==> Parameters: 1(Long), 0(String)
2019-04-29 17:00:18 -<==      Total: 1
2019-04-29 17:00:18 -耗时 : 20
2019-04-29 17:00:18 -返回值 : com.bootdo.common.utils.PageUtils@74e95216
2019-04-29 17:00:18 -请求地址 : http://localhost:8081/main
2019-04-29 17:00:18 -HTTP METHOD : GET
2019-04-29 17:00:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:00:18 -参数 : []
2019-04-29 17:00:18 -耗时 : 3
2019-04-29 17:00:18 -返回值 : main
2019-04-29 17:00:21 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:00:21 -HTTP METHOD : GET
2019-04-29 17:00:21 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:00:21 -参数 : []
2019-04-29 17:00:21 -耗时 : 1
2019-04-29 17:00:21 -返回值 : charts/tableElecMM
2019-04-29 17:00:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:00:24 -HTTP METHOD : GET
2019-04-29 17:00:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:00:24 -参数 : []
2019-04-29 17:00:24 -耗时 : 1
2019-04-29 17:00:24 -返回值 : system/dept/deptTree
2019-04-29 17:00:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:00:24 -HTTP METHOD : GET
2019-04-29 17:00:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:00:24 -参数 : []
2019-04-29 17:00:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:00:24 -==> Parameters: 
2019-04-29 17:00:24 -<==      Total: 3
2019-04-29 17:00:24 -耗时 : 3
2019-04-29 17:00:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:00:31 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 17:00:31 -HTTP METHOD : POST
2019-04-29 17:00:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:00:31 -参数 : [com.bootdo.elec.vo.ElecVo@b00d33f, com.bootdo.moneyLog.vo.ElecLogVo@16b27da6]
2019-04-29 17:00:31 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:00:31 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:00:31 -<==      Total: 1
2019-04-29 17:00:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:00:31 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:00:31 -<==      Total: 1
2019-04-29 17:00:31 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:00:31 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:00:31 -<==      Total: 1
2019-04-29 17:00:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:00:31 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:00:31 -<==      Total: 1
2019-04-29 17:00:31 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:00:31 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:00:31 -<==      Total: 1
2019-04-29 17:00:31 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:00:31 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:00:31 -<==      Total: 0
2019-04-29 17:00:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:00:31 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-04-29 17:00:31.64(Timestamp)
2019-04-29 17:00:31 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:61)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$9d9d8553.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 17:00:31 -<==    Updates: 1
2019-04-29 17:02:02 -请求地址 : http://localhost:8081/index
2019-04-29 17:02:02 -HTTP METHOD : GET
2019-04-29 17:02:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 17:02:02 -参数 : [{}]
2019-04-29 17:02:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 17:02:02 -==> Parameters: 1(Long)
2019-04-29 17:02:02 -<==      Total: 49
2019-04-29 17:02:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 17:02:02 -==> Parameters: 138(Long)
2019-04-29 17:02:02 -<==      Total: 1
2019-04-29 17:02:02 -耗时 : 17
2019-04-29 17:02:02 -返回值 : index_v1
2019-04-29 17:02:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:02:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 17:02:02.315(Timestamp)
2019-04-29 17:02:02 -请求地址 : http://localhost:8081/main
2019-04-29 17:02:02 -HTTP METHOD : GET
2019-04-29 17:02:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:02:02 -参数 : []
2019-04-29 17:02:02 -耗时 : 0
2019-04-29 17:02:02 -返回值 : main
2019-04-29 17:02:02 -<==    Updates: 1
2019-04-29 17:02:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 17:02:02 -HTTP METHOD : GET
2019-04-29 17:02:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 17:02:02 -参数 : []
2019-04-29 17:02:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 17:02:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 17:02:02 -<==      Total: 0
2019-04-29 17:02:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 17:02:02 -==> Parameters: 1(Long), 0(String)
2019-04-29 17:02:02 -<==      Total: 1
2019-04-29 17:02:02 -耗时 : 8
2019-04-29 17:02:02 -返回值 : com.bootdo.common.utils.PageUtils@7762a844
2019-04-29 17:02:02 -请求地址 : http://localhost:8081/main
2019-04-29 17:02:02 -HTTP METHOD : GET
2019-04-29 17:02:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:02:02 -参数 : []
2019-04-29 17:02:02 -耗时 : 0
2019-04-29 17:02:02 -返回值 : main
2019-04-29 17:02:05 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:02:05 -HTTP METHOD : GET
2019-04-29 17:02:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:02:05 -参数 : []
2019-04-29 17:02:05 -耗时 : 1
2019-04-29 17:02:05 -返回值 : charts/tableElecMM
2019-04-29 17:02:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:02:09 -HTTP METHOD : GET
2019-04-29 17:02:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:02:09 -参数 : []
2019-04-29 17:02:09 -耗时 : 1
2019-04-29 17:02:09 -返回值 : system/dept/deptTree
2019-04-29 17:02:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:02:09 -HTTP METHOD : GET
2019-04-29 17:02:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:02:09 -参数 : []
2019-04-29 17:02:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:02:09 -==> Parameters: 
2019-04-29 17:02:09 -<==      Total: 3
2019-04-29 17:02:09 -耗时 : 4
2019-04-29 17:02:09 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:02:47 -请求地址 : http://localhost:8081/login;JSESSIONID=0dd8622b-6247-44be-82de-1013f2b9e2cd
2019-04-29 17:02:47 -HTTP METHOD : GET
2019-04-29 17:02:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 17:02:47 -参数 : [{}]
2019-04-29 17:02:47 -耗时 : 1
2019-04-29 17:02:47 -返回值 : login
2019-04-29 17:02:48 -请求地址 : http://localhost:8081/getVerify
2019-04-29 17:02:48 -HTTP METHOD : GET
2019-04-29 17:02:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 17:02:48 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6dde8c56, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6857d6b9]
2019-04-29 17:02:48 -0963
2019-04-29 17:02:48 -耗时 : 19
2019-04-29 17:02:48 -返回值 : null
2019-04-29 17:02:48 -请求地址 : http://localhost:8081/login
2019-04-29 17:02:48 -HTTP METHOD : GET
2019-04-29 17:02:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 17:02:48 -参数 : [{}]
2019-04-29 17:02:48 -耗时 : 0
2019-04-29 17:02:48 -返回值 : login
2019-04-29 17:02:52 -请求地址 : http://localhost:8081/login
2019-04-29 17:02:52 -HTTP METHOD : POST
2019-04-29 17:02:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 17:02:52 -参数 : [admin, 111111, 0963, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1f52eb17]
2019-04-29 17:02:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 17:02:52 -==> Parameters: admin(String)
2019-04-29 17:02:52 -<==      Total: 1
2019-04-29 17:02:52 -耗时 : 10
2019-04-29 17:02:52 -返回值 : {msg=操作成功, code=0}
2019-04-29 17:02:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:02:52 -==> Parameters: 1(Long), admin(String), 登录(String), 11(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 17:02:52.856(Timestamp)
2019-04-29 17:02:52 -请求地址 : http://localhost:8081/index
2019-04-29 17:02:52 -HTTP METHOD : GET
2019-04-29 17:02:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 17:02:52 -参数 : [{}]
2019-04-29 17:02:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 17:02:52 -==> Parameters: 1(Long)
2019-04-29 17:02:52 -<==      Total: 49
2019-04-29 17:02:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 17:02:52 -==> Parameters: 138(Long)
2019-04-29 17:02:52 -<==      Total: 1
2019-04-29 17:02:52 -耗时 : 27
2019-04-29 17:02:52 -返回值 : index_v1
2019-04-29 17:02:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:02:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 17:02:52.923(Timestamp)
2019-04-29 17:02:53 -<==    Updates: 1
2019-04-29 17:02:53 -请求地址 : http://localhost:8081/main
2019-04-29 17:02:53 -HTTP METHOD : GET
2019-04-29 17:02:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:02:53 -参数 : []
2019-04-29 17:02:53 -耗时 : 1
2019-04-29 17:02:53 -返回值 : main
2019-04-29 17:02:53 -<==    Updates: 1
2019-04-29 17:02:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 17:02:54 -HTTP METHOD : GET
2019-04-29 17:02:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 17:02:54 -参数 : []
2019-04-29 17:02:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 17:02:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 17:02:54 -<==      Total: 0
2019-04-29 17:02:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 17:02:54 -==> Parameters: 1(Long), 0(String)
2019-04-29 17:02:54 -<==      Total: 1
2019-04-29 17:02:54 -耗时 : 7
2019-04-29 17:02:54 -返回值 : com.bootdo.common.utils.PageUtils@7d43c3d1
2019-04-29 17:02:54 -请求地址 : http://localhost:8081/main
2019-04-29 17:02:54 -HTTP METHOD : GET
2019-04-29 17:02:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:02:54 -参数 : []
2019-04-29 17:02:54 -耗时 : 0
2019-04-29 17:02:54 -返回值 : main
2019-04-29 17:02:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 17:02:57 -==> Parameters: 1(Long)
2019-04-29 17:02:57 -<==      Total: 93
2019-04-29 17:02:57 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:02:57 -HTTP METHOD : GET
2019-04-29 17:02:57 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:02:57 -参数 : []
2019-04-29 17:02:57 -耗时 : 0
2019-04-29 17:02:57 -返回值 : charts/tableElecMM
2019-04-29 17:03:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:03:03 -HTTP METHOD : GET
2019-04-29 17:03:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:03:03 -参数 : []
2019-04-29 17:03:03 -耗时 : 1
2019-04-29 17:03:03 -返回值 : system/dept/deptTree
2019-04-29 17:03:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:03:04 -HTTP METHOD : GET
2019-04-29 17:03:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:03:04 -参数 : []
2019-04-29 17:03:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:03:04 -==> Parameters: 
2019-04-29 17:03:04 -<==      Total: 3
2019-04-29 17:03:04 -耗时 : 3
2019-04-29 17:03:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:03:49 -请求地址 : http://localhost:8081/index
2019-04-29 17:03:49 -HTTP METHOD : GET
2019-04-29 17:03:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 17:03:49 -参数 : [{}]
2019-04-29 17:03:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 17:03:49 -==> Parameters: 1(Long)
2019-04-29 17:03:49 -<==      Total: 49
2019-04-29 17:03:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 17:03:49 -==> Parameters: 138(Long)
2019-04-29 17:03:49 -<==      Total: 1
2019-04-29 17:03:49 -耗时 : 18
2019-04-29 17:03:49 -返回值 : index_v1
2019-04-29 17:03:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:03:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 17:03:49.08(Timestamp)
2019-04-29 17:03:49 -<==    Updates: 1
2019-04-29 17:03:49 -请求地址 : http://localhost:8081/main
2019-04-29 17:03:49 -HTTP METHOD : GET
2019-04-29 17:03:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:03:49 -参数 : []
2019-04-29 17:03:49 -耗时 : 1
2019-04-29 17:03:49 -返回值 : main
2019-04-29 17:03:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 17:03:49 -HTTP METHOD : GET
2019-04-29 17:03:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 17:03:49 -参数 : []
2019-04-29 17:03:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 17:03:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 17:03:49 -<==      Total: 0
2019-04-29 17:03:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 17:03:49 -==> Parameters: 1(Long), 0(String)
2019-04-29 17:03:49 -<==      Total: 1
2019-04-29 17:03:49 -耗时 : 9
2019-04-29 17:03:49 -返回值 : com.bootdo.common.utils.PageUtils@2dbab0c7
2019-04-29 17:03:50 -请求地址 : http://localhost:8081/main
2019-04-29 17:03:50 -HTTP METHOD : GET
2019-04-29 17:03:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:03:50 -参数 : []
2019-04-29 17:03:50 -耗时 : 0
2019-04-29 17:03:50 -返回值 : main
2019-04-29 17:03:52 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:03:52 -HTTP METHOD : GET
2019-04-29 17:03:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:03:52 -参数 : []
2019-04-29 17:03:52 -耗时 : 0
2019-04-29 17:03:52 -返回值 : charts/tableElecMM
2019-04-29 17:03:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:03:56 -HTTP METHOD : GET
2019-04-29 17:03:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:03:56 -参数 : []
2019-04-29 17:03:56 -耗时 : 1
2019-04-29 17:03:56 -返回值 : system/dept/deptTree
2019-04-29 17:03:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:03:56 -HTTP METHOD : GET
2019-04-29 17:03:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:03:56 -参数 : []
2019-04-29 17:03:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:03:56 -==> Parameters: 
2019-04-29 17:03:56 -<==      Total: 3
2019-04-29 17:03:56 -耗时 : 3
2019-04-29 17:03:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:04:01 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 17:04:01 -HTTP METHOD : POST
2019-04-29 17:04:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:04:01 -参数 : [com.bootdo.elec.vo.ElecVo@4196c68, com.bootdo.moneyLog.vo.ElecLogVo@26f28a36]
2019-04-29 17:04:01 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:04:01 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:04:01 -<==      Total: 1
2019-04-29 17:04:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:04:01 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:04:01 -<==      Total: 1
2019-04-29 17:04:01 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:04:01 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:04:01 -<==      Total: 1
2019-04-29 17:04:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:04:01 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:04:01 -<==      Total: 1
2019-04-29 17:04:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:04:01 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:04:01 -<==      Total: 1
2019-04-29 17:04:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:04:01 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:04:01 -<==      Total: 0
2019-04-29 17:04:01 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:61)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$9d9d8553.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 17:04:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:04:01 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-04-29 17:04:01.587(Timestamp)
2019-04-29 17:04:01 -<==    Updates: 1
2019-04-29 17:04:34 -请求地址 : http://localhost:8081/login;JSESSIONID=76ac8638-8d35-4093-99fb-4fecb04060e2
2019-04-29 17:04:34 -HTTP METHOD : GET
2019-04-29 17:04:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 17:04:34 -参数 : [{}]
2019-04-29 17:04:34 -耗时 : 1
2019-04-29 17:04:34 -返回值 : login
2019-04-29 17:04:35 -请求地址 : http://localhost:8081/getVerify
2019-04-29 17:04:35 -HTTP METHOD : GET
2019-04-29 17:04:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 17:04:35 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2a436b4b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@80bc1c]
2019-04-29 17:04:35 -4820
2019-04-29 17:04:35 -耗时 : 17
2019-04-29 17:04:35 -返回值 : null
2019-04-29 17:04:35 -请求地址 : http://localhost:8081/login
2019-04-29 17:04:35 -HTTP METHOD : GET
2019-04-29 17:04:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 17:04:35 -参数 : [{}]
2019-04-29 17:04:35 -耗时 : 0
2019-04-29 17:04:35 -返回值 : login
2019-04-29 17:04:41 -请求地址 : http://localhost:8081/login
2019-04-29 17:04:41 -HTTP METHOD : POST
2019-04-29 17:04:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 17:04:41 -参数 : [admin, 111111, 4820, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4aae2e8e]
2019-04-29 17:04:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 17:04:41 -==> Parameters: admin(String)
2019-04-29 17:04:42 -<==      Total: 1
2019-04-29 17:04:42 -耗时 : 366
2019-04-29 17:04:42 -返回值 : {msg=操作成功, code=0}
2019-04-29 17:04:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:04:42 -==> Parameters: 1(Long), admin(String), 登录(String), 366(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 17:04:42.292(Timestamp)
2019-04-29 17:04:42 -请求地址 : http://localhost:8081/index
2019-04-29 17:04:42 -HTTP METHOD : GET
2019-04-29 17:04:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 17:04:42 -参数 : [{}]
2019-04-29 17:04:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 17:04:42 -==> Parameters: 1(Long)
2019-04-29 17:04:42 -<==      Total: 49
2019-04-29 17:04:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 17:04:42 -==> Parameters: 138(Long)
2019-04-29 17:04:42 -<==      Total: 1
2019-04-29 17:04:42 -耗时 : 327
2019-04-29 17:04:42 -返回值 : index_v1
2019-04-29 17:04:42 -<==    Updates: 1
2019-04-29 17:04:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:04:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 328(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 17:04:42.654(Timestamp)
2019-04-29 17:04:42 -<==    Updates: 1
2019-04-29 17:04:43 -请求地址 : http://localhost:8081/main
2019-04-29 17:04:43 -HTTP METHOD : GET
2019-04-29 17:04:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:04:43 -参数 : []
2019-04-29 17:04:43 -耗时 : 0
2019-04-29 17:04:43 -返回值 : main
2019-04-29 17:04:47 -请求地址 : http://localhost:8081/main
2019-04-29 17:04:47 -HTTP METHOD : GET
2019-04-29 17:04:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:04:47 -参数 : []
2019-04-29 17:04:47 -耗时 : 0
2019-04-29 17:04:47 -返回值 : main
2019-04-29 17:04:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 17:04:47 -HTTP METHOD : GET
2019-04-29 17:04:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 17:04:47 -参数 : []
2019-04-29 17:04:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 17:04:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 17:04:47 -<==      Total: 0
2019-04-29 17:04:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 17:04:47 -==> Parameters: 1(Long), 0(String)
2019-04-29 17:04:47 -<==      Total: 1
2019-04-29 17:04:47 -耗时 : 7
2019-04-29 17:04:47 -返回值 : com.bootdo.common.utils.PageUtils@7ed51e79
2019-04-29 17:04:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 17:04:52 -==> Parameters: 1(Long)
2019-04-29 17:04:52 -<==      Total: 93
2019-04-29 17:04:52 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:04:52 -HTTP METHOD : GET
2019-04-29 17:04:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:04:52 -参数 : []
2019-04-29 17:04:52 -耗时 : 0
2019-04-29 17:04:52 -返回值 : charts/tableElecMM
2019-04-29 17:04:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:04:57 -HTTP METHOD : GET
2019-04-29 17:04:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:04:57 -参数 : []
2019-04-29 17:04:57 -耗时 : 0
2019-04-29 17:04:57 -返回值 : system/dept/deptTree
2019-04-29 17:04:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:04:57 -HTTP METHOD : GET
2019-04-29 17:04:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:04:57 -参数 : []
2019-04-29 17:04:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:04:57 -==> Parameters: 
2019-04-29 17:04:57 -<==      Total: 3
2019-04-29 17:04:57 -耗时 : 4
2019-04-29 17:04:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:05:38 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 17:05:38 -HTTP METHOD : POST
2019-04-29 17:05:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:05:38 -参数 : [com.bootdo.elec.vo.ElecVo@7bf31c62, com.bootdo.moneyLog.vo.ElecLogVo@29fe3a9a]
2019-04-29 17:05:38 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:05:38 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:05:38 -<==      Total: 1
2019-04-29 17:05:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:38 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:05:38 -<==      Total: 1
2019-04-29 17:05:38 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:05:38 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:05:38 -<==      Total: 1
2019-04-29 17:05:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:38 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:05:38 -<==      Total: 1
2019-04-29 17:05:38 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:38 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:05:38 -<==      Total: 1
2019-04-29 17:05:38 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:38 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:05:38 -<==      Total: 0
2019-04-29 17:05:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:05:38 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-04-29 17:05:38.33(Timestamp)
2019-04-29 17:05:38 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:61)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$9d9d8553.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 17:05:38 -<==    Updates: 1
2019-04-29 17:05:42 -请求地址 : http://localhost:8081/index
2019-04-29 17:05:42 -HTTP METHOD : GET
2019-04-29 17:05:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 17:05:42 -参数 : [{}]
2019-04-29 17:05:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 17:05:42 -==> Parameters: 1(Long)
2019-04-29 17:05:42 -<==      Total: 49
2019-04-29 17:05:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 17:05:42 -==> Parameters: 138(Long)
2019-04-29 17:05:42 -<==      Total: 1
2019-04-29 17:05:42 -耗时 : 57
2019-04-29 17:05:42 -返回值 : index_v1
2019-04-29 17:05:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:05:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 57(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 17:05:42.371(Timestamp)
2019-04-29 17:05:42 -<==    Updates: 1
2019-04-29 17:05:42 -请求地址 : http://localhost:8081/main
2019-04-29 17:05:42 -HTTP METHOD : GET
2019-04-29 17:05:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:05:42 -参数 : []
2019-04-29 17:05:42 -耗时 : 2
2019-04-29 17:05:42 -返回值 : main
2019-04-29 17:05:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 17:05:42 -HTTP METHOD : GET
2019-04-29 17:05:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 17:05:42 -参数 : []
2019-04-29 17:05:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 17:05:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 17:05:42 -<==      Total: 0
2019-04-29 17:05:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 17:05:42 -==> Parameters: 1(Long), 0(String)
2019-04-29 17:05:42 -<==      Total: 1
2019-04-29 17:05:42 -耗时 : 4
2019-04-29 17:05:42 -返回值 : com.bootdo.common.utils.PageUtils@20e3582a
2019-04-29 17:05:43 -请求地址 : http://localhost:8081/main
2019-04-29 17:05:43 -HTTP METHOD : GET
2019-04-29 17:05:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:05:43 -参数 : []
2019-04-29 17:05:43 -耗时 : 1
2019-04-29 17:05:43 -返回值 : main
2019-04-29 17:05:45 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:05:45 -HTTP METHOD : GET
2019-04-29 17:05:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:05:45 -参数 : []
2019-04-29 17:05:45 -耗时 : 0
2019-04-29 17:05:45 -返回值 : charts/tableElecMM
2019-04-29 17:05:47 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 17:05:47 -HTTP METHOD : GET
2019-04-29 17:05:47 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 17:05:47 -参数 : []
2019-04-29 17:05:47 -耗时 : 1
2019-04-29 17:05:47 -返回值 : charts/tableHeatMM
2019-04-29 17:05:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:05:52 -HTTP METHOD : GET
2019-04-29 17:05:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:05:52 -参数 : []
2019-04-29 17:05:52 -耗时 : 1
2019-04-29 17:05:52 -返回值 : system/dept/deptTree
2019-04-29 17:05:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:05:52 -HTTP METHOD : GET
2019-04-29 17:05:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:05:52 -参数 : []
2019-04-29 17:05:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:05:52 -==> Parameters: 
2019-04-29 17:05:52 -<==      Total: 3
2019-04-29 17:05:52 -耗时 : 5
2019-04-29 17:05:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:05:57 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-04-29 17:05:57 -HTTP METHOD : POST
2019-04-29 17:05:57 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 17:05:57 -参数 : [com.bootdo.heat.vo.HeatVo@340b306c, com.bootdo.moneyLog.vo.HeatLogVo@4396a9e6]
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:05:57 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:05:57 -<==      Total: 1
2019-04-29 17:05:57 -耗时 : 284
2019-04-29 17:05:57 -返回值 : {GSHeatCountPre=6, MHeatCostCount=7, GMHeatArea=1, SHeatCostCount=7, GSHeatSumPre=1, GMHeatCountPre=6, CountPrehu=24, MHeatCountPre=6, SumSHeatLog=40, MHeatPrice=1, CountOweyu=1, SHeatPrice=1, GMHeatPrice=1, CountPreyu=6, SumGMHeatLog=0, CountLogyu=240, CountGSHeatLog=1, SHeatSumPre=1, GMHeatCountOwe=1, CountOwehu=4, GMtotalhu=7, CountGMHeatLog=0, GStotalhu=7, CountLoghu=4, GSHeatSumOwe=0, GSHeatPrice=1, MHeatSumOwe=1, SHeatCountPre=6, GSHeatCountOwe=1, GMtotalyu=1, CountAllyu=7, GStotalyu=1, CountSHeatLog=1, GSHeatCostSum=1, MHeatCostSum=103, SHeatCostSum=1, CountAllhu=28, CountCostyu=106, MHeatArea=103, SHeatSumOwe=0, MHeatSumPre=3, GMHeatSumPre=1, Stotalhu=7, CountPrice=4, GMHeatCostCount=7, GMHeatCostSum=1, GSHeatCostCount=7, SumGSHeatLog=80, CountCosthu=28, SHeatCountOwe=1, CountMHeatLog=2, Mtotalhu=7, Stotalyu=1, CountArea=106, GMHeatSumOwe=0, GSHeatArea=1, SumMHeatLog=120, SHeatArea=1, Mtotalyu=4, MHeatCountOwe=1}
2019-04-29 17:06:04 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-29 17:06:04 -HTTP METHOD : GET
2019-04-29 17:06:04 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-29 17:06:04 -参数 : []
2019-04-29 17:06:04 -耗时 : 252
2019-04-29 17:06:04 -返回值 : charts/tableWaterMM
2019-04-29 17:06:08 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:06:08 -HTTP METHOD : GET
2019-04-29 17:06:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:06:08 -参数 : []
2019-04-29 17:06:08 -耗时 : 0
2019-04-29 17:06:08 -返回值 : system/dept/deptTree
2019-04-29 17:06:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:06:09 -HTTP METHOD : GET
2019-04-29 17:06:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:06:09 -参数 : []
2019-04-29 17:06:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:06:09 -==> Parameters: 
2019-04-29 17:06:09 -<==      Total: 3
2019-04-29 17:06:09 -耗时 : 3
2019-04-29 17:06:09 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:06:10 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-29 17:06:10 -HTTP METHOD : POST
2019-04-29 17:06:10 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-29 17:06:10 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@55b61931, com.bootdo.water.vo.WaterVo@6e4f370]
2019-04-29 17:06:11 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:06:11 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:11 -<==      Total: 1
2019-04-29 17:06:11 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:06:12 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:06:12 -<==      Total: 1
2019-04-29 17:06:12 -耗时 : 1016
2019-04-29 17:06:12 -返回值 : {CountPrehu=2, CountAllhu=4, CountCostyu=2, Stotalhu=2, CountPrice=3, CountSWaterLog=1, SWaterCountOwe=1, CountOweyu=1, MWaterCountOwe=1, MWaterCostCount=2, SumSWaterLog=60, CountPreyu=1, SWaterSumOwe=0, CountCosthu=4, SWaterCostSum=1, CountLogyu=160, MWaterSumPre=0, Mtotalhu=2, Stotalyu=1, CountOwehu=2, MWaterCostSum=1, SWaterPrice=2, CountMWaterLog=2, MWaterPrice=1, MWaterCountPre=1, CountLoghu=3, Mtotalyu=1, SWaterSumPre=1, SWaterCountPre=1, SWaterCostCount=2, CountAllyu=2, MWaterSumOwe=1, SumMWaterLog=100}
2019-04-29 17:06:14 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 17:06:14 -HTTP METHOD : GET
2019-04-29 17:06:14 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 17:06:14 -参数 : []
2019-04-29 17:06:14 -耗时 : 0
2019-04-29 17:06:14 -返回值 : charts/tableHeatMM
2019-04-29 17:06:15 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:06:15 -HTTP METHOD : GET
2019-04-29 17:06:15 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:06:15 -参数 : []
2019-04-29 17:06:15 -耗时 : 1
2019-04-29 17:06:15 -返回值 : charts/tableElecMM
2019-04-29 17:06:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:06:21 -HTTP METHOD : GET
2019-04-29 17:06:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:06:21 -参数 : []
2019-04-29 17:06:21 -耗时 : 0
2019-04-29 17:06:21 -返回值 : system/dept/deptTree
2019-04-29 17:06:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:06:21 -HTTP METHOD : GET
2019-04-29 17:06:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:06:21 -参数 : []
2019-04-29 17:06:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:06:21 -==> Parameters: 
2019-04-29 17:06:21 -<==      Total: 3
2019-04-29 17:06:21 -耗时 : 4
2019-04-29 17:06:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:08:08 -请求地址 : http://localhost:8081/index
2019-04-29 17:08:08 -HTTP METHOD : GET
2019-04-29 17:08:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 17:08:08 -参数 : [{}]
2019-04-29 17:08:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 17:08:08 -==> Parameters: 1(Long)
2019-04-29 17:08:08 -<==      Total: 49
2019-04-29 17:08:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 17:08:08 -==> Parameters: 138(Long)
2019-04-29 17:08:08 -<==      Total: 1
2019-04-29 17:08:08 -耗时 : 43
2019-04-29 17:08:08 -返回值 : index_v1
2019-04-29 17:08:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:08:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 43(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 17:08:08.319(Timestamp)
2019-04-29 17:08:08 -<==    Updates: 1
2019-04-29 17:08:10 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 17:08:10 -HTTP METHOD : POST
2019-04-29 17:08:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:08:10 -参数 : [com.bootdo.elec.vo.ElecVo@4d9ba79f, com.bootdo.moneyLog.vo.ElecLogVo@74e17e8]
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:10 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:08:10 -<==      Total: 1
2019-04-29 17:08:10 -耗时 : 543
2019-04-29 17:08:10 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 17:08:10 -请求地址 : http://localhost:8081/main
2019-04-29 17:08:10 -HTTP METHOD : GET
2019-04-29 17:08:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:08:10 -参数 : []
2019-04-29 17:08:10 -耗时 : 0
2019-04-29 17:08:10 -返回值 : main
2019-04-29 17:08:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 17:08:11 -HTTP METHOD : GET
2019-04-29 17:08:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 17:08:11 -参数 : []
2019-04-29 17:08:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 17:08:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 17:08:11 -<==      Total: 0
2019-04-29 17:08:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 17:08:11 -==> Parameters: 1(Long), 0(String)
2019-04-29 17:08:11 -<==      Total: 1
2019-04-29 17:08:11 -耗时 : 59
2019-04-29 17:08:11 -返回值 : com.bootdo.common.utils.PageUtils@78b37af2
2019-04-29 17:08:11 -请求地址 : http://localhost:8081/main
2019-04-29 17:08:11 -HTTP METHOD : GET
2019-04-29 17:08:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:08:11 -参数 : []
2019-04-29 17:08:11 -耗时 : 23
2019-04-29 17:08:11 -返回值 : main
2019-04-29 17:08:13 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:08:13 -HTTP METHOD : GET
2019-04-29 17:08:13 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:08:13 -参数 : []
2019-04-29 17:08:13 -耗时 : 1
2019-04-29 17:08:13 -返回值 : charts/tableElecMM
2019-04-29 17:08:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:08:16 -HTTP METHOD : GET
2019-04-29 17:08:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:08:16 -参数 : []
2019-04-29 17:08:16 -耗时 : 1
2019-04-29 17:08:16 -返回值 : system/dept/deptTree
2019-04-29 17:08:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:08:16 -HTTP METHOD : GET
2019-04-29 17:08:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:08:16 -参数 : []
2019-04-29 17:08:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:08:16 -==> Parameters: 
2019-04-29 17:08:16 -<==      Total: 3
2019-04-29 17:08:16 -耗时 : 36
2019-04-29 17:08:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:08:21 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 17:08:21 -HTTP METHOD : POST
2019-04-29 17:08:21 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:08:21 -参数 : [com.bootdo.elec.vo.ElecVo@702edd9a, com.bootdo.moneyLog.vo.ElecLogVo@4806e954]
2019-04-29 17:08:21 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:21 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:08:21 -<==      Total: 1
2019-04-29 17:08:21 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:21 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:08:21 -<==      Total: 1
2019-04-29 17:08:21 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:08:21 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:08:21 -<==      Total: 1
2019-04-29 17:08:21 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:21 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:08:21 -<==      Total: 1
2019-04-29 17:08:21 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:21 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:08:21 -<==      Total: 1
2019-04-29 17:08:21 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:08:21 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:08:21 -<==      Total: 0
2019-04-29 17:08:21 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:61)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$9d9d8553.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 17:08:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:08:22 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-04-29 17:08:21.947(Timestamp)
2019-04-29 17:08:22 -<==    Updates: 1
2019-04-29 17:09:33 -请求地址 : http://localhost:8081/index
2019-04-29 17:09:33 -HTTP METHOD : GET
2019-04-29 17:09:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 17:09:33 -参数 : [{}]
2019-04-29 17:09:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 17:09:33 -==> Parameters: 1(Long)
2019-04-29 17:09:33 -<==      Total: 49
2019-04-29 17:09:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 17:09:33 -==> Parameters: 138(Long)
2019-04-29 17:09:33 -<==      Total: 1
2019-04-29 17:09:33 -耗时 : 109
2019-04-29 17:09:33 -返回值 : index_v1
2019-04-29 17:09:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:09:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 109(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 17:09:33.529(Timestamp)
2019-04-29 17:09:33 -请求地址 : http://localhost:8081/main
2019-04-29 17:09:33 -HTTP METHOD : GET
2019-04-29 17:09:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:09:33 -参数 : []
2019-04-29 17:09:33 -耗时 : 1
2019-04-29 17:09:33 -返回值 : main
2019-04-29 17:09:33 -<==    Updates: 1
2019-04-29 17:09:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 17:09:34 -HTTP METHOD : GET
2019-04-29 17:09:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 17:09:34 -参数 : []
2019-04-29 17:09:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 17:09:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 17:09:34 -<==      Total: 0
2019-04-29 17:09:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 17:09:34 -==> Parameters: 1(Long), 0(String)
2019-04-29 17:09:34 -<==      Total: 1
2019-04-29 17:09:34 -耗时 : 5
2019-04-29 17:09:34 -返回值 : com.bootdo.common.utils.PageUtils@361e1e0c
2019-04-29 17:09:34 -请求地址 : http://localhost:8081/main
2019-04-29 17:09:34 -HTTP METHOD : GET
2019-04-29 17:09:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:09:34 -参数 : []
2019-04-29 17:09:34 -耗时 : 1
2019-04-29 17:09:34 -返回值 : main
2019-04-29 17:09:37 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:09:37 -HTTP METHOD : GET
2019-04-29 17:09:37 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:09:37 -参数 : []
2019-04-29 17:09:37 -耗时 : 1
2019-04-29 17:09:37 -返回值 : charts/tableElecMM
2019-04-29 17:09:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:09:40 -HTTP METHOD : GET
2019-04-29 17:09:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:09:40 -参数 : []
2019-04-29 17:09:40 -耗时 : 0
2019-04-29 17:09:40 -返回值 : system/dept/deptTree
2019-04-29 17:09:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:09:40 -HTTP METHOD : GET
2019-04-29 17:09:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:09:40 -参数 : []
2019-04-29 17:09:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:09:40 -==> Parameters: 
2019-04-29 17:09:40 -<==      Total: 3
2019-04-29 17:09:40 -耗时 : 4
2019-04-29 17:09:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:09:47 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 17:09:47 -HTTP METHOD : POST
2019-04-29 17:09:47 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:09:47 -参数 : [com.bootdo.elec.vo.ElecVo@3c56e2fb, com.bootdo.moneyLog.vo.ElecLogVo@1ef9c945]
2019-04-29 17:09:47 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:09:47 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:09:47 -<==      Total: 1
2019-04-29 17:09:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:09:47 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:09:47 -<==      Total: 1
2019-04-29 17:09:47 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:09:47 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:09:47 -<==      Total: 1
2019-04-29 17:09:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:09:47 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:09:47 -<==      Total: 1
2019-04-29 17:09:47 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:09:47 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:09:47 -<==      Total: 1
2019-04-29 17:09:47 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:09:47 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:09:47 -<==      Total: 0
2019-04-29 17:09:47 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:61)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$9d9d8553.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 17:09:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:09:47 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-04-29 17:09:47.947(Timestamp)
2019-04-29 17:09:48 -<==    Updates: 1
2019-04-29 17:12:11 -请求地址 : http://localhost:8081/index
2019-04-29 17:12:11 -HTTP METHOD : GET
2019-04-29 17:12:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 17:12:11 -参数 : [{}]
2019-04-29 17:12:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 17:12:11 -==> Parameters: 1(Long)
2019-04-29 17:12:11 -<==      Total: 49
2019-04-29 17:12:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 17:12:11 -==> Parameters: 138(Long)
2019-04-29 17:12:11 -<==      Total: 1
2019-04-29 17:12:11 -耗时 : 63
2019-04-29 17:12:11 -返回值 : index_v1
2019-04-29 17:12:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:12:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 64(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 17:12:11.658(Timestamp)
2019-04-29 17:12:11 -请求地址 : http://localhost:8081/main
2019-04-29 17:12:11 -HTTP METHOD : GET
2019-04-29 17:12:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:12:11 -参数 : []
2019-04-29 17:12:11 -耗时 : 0
2019-04-29 17:12:11 -返回值 : main
2019-04-29 17:12:11 -<==    Updates: 1
2019-04-29 17:12:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 17:12:12 -HTTP METHOD : GET
2019-04-29 17:12:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 17:12:12 -参数 : []
2019-04-29 17:12:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 17:12:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 17:12:12 -<==      Total: 0
2019-04-29 17:12:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 17:12:12 -==> Parameters: 1(Long), 0(String)
2019-04-29 17:12:12 -<==      Total: 1
2019-04-29 17:12:12 -耗时 : 4
2019-04-29 17:12:12 -返回值 : com.bootdo.common.utils.PageUtils@68823f5c
2019-04-29 17:12:12 -请求地址 : http://localhost:8081/main
2019-04-29 17:12:12 -HTTP METHOD : GET
2019-04-29 17:12:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:12:12 -参数 : []
2019-04-29 17:12:12 -耗时 : 1
2019-04-29 17:12:12 -返回值 : main
2019-04-29 17:12:14 -请求地址 : http://localhost:8081/charts/countMM
2019-04-29 17:12:14 -HTTP METHOD : GET
2019-04-29 17:12:14 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-29 17:12:14 -参数 : []
2019-04-29 17:12:14 -耗时 : 0
2019-04-29 17:12:14 -返回值 : charts/countMM
2019-04-29 17:12:15 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:12:15 -HTTP METHOD : GET
2019-04-29 17:12:15 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:12:15 -参数 : []
2019-04-29 17:12:15 -耗时 : 0
2019-04-29 17:12:15 -返回值 : charts/tableElecMM
2019-04-29 17:12:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-29 17:12:15 -HTTP METHOD : GET
2019-04-29 17:12:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-29 17:12:15 -参数 : [userType]
2019-04-29 17:12:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-29 17:12:15 -==> Parameters: userType(String)
2019-04-29 17:12:15 -<==      Total: 4
2019-04-29 17:12:15 -耗时 : 56
2019-04-29 17:12:15 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-29 17:12:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:12:19 -HTTP METHOD : GET
2019-04-29 17:12:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:12:19 -参数 : []
2019-04-29 17:12:19 -耗时 : 1
2019-04-29 17:12:19 -返回值 : system/dept/deptTree
2019-04-29 17:12:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:12:19 -HTTP METHOD : GET
2019-04-29 17:12:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:12:19 -参数 : []
2019-04-29 17:12:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:12:19 -==> Parameters: 
2019-04-29 17:12:19 -<==      Total: 3
2019-04-29 17:12:19 -耗时 : 2
2019-04-29 17:12:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:12:25 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 17:12:25 -HTTP METHOD : POST
2019-04-29 17:12:25 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:12:25 -参数 : [com.bootdo.elec.vo.ElecVo@496560fb, com.bootdo.moneyLog.vo.ElecLogVo@6ebd7b54]
2019-04-29 17:12:25 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:12:25 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:12:25 -<==      Total: 1
2019-04-29 17:12:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:12:25 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:12:25 -<==      Total: 1
2019-04-29 17:12:25 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:12:25 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:12:25 -<==      Total: 1
2019-04-29 17:12:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:12:25 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:12:25 -<==      Total: 1
2019-04-29 17:12:25 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:12:25 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:12:25 -<==      Total: 1
2019-04-29 17:12:25 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:12:25 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:12:25 -<==      Total: 0
2019-04-29 17:12:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:12:25 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-04-29 17:12:25.45(Timestamp)
2019-04-29 17:12:25 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:61)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$9d9d8553.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 17:12:25 -<==    Updates: 1
2019-04-29 17:13:01 -请求地址 : http://localhost:8081/index
2019-04-29 17:13:01 -HTTP METHOD : GET
2019-04-29 17:13:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 17:13:01 -参数 : [{}]
2019-04-29 17:13:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 17:13:01 -==> Parameters: 1(Long)
2019-04-29 17:13:01 -<==      Total: 49
2019-04-29 17:13:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 17:13:01 -==> Parameters: 138(Long)
2019-04-29 17:13:01 -<==      Total: 1
2019-04-29 17:13:01 -耗时 : 18
2019-04-29 17:13:01 -返回值 : index_v1
2019-04-29 17:13:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:13:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 17:13:01.948(Timestamp)
2019-04-29 17:13:02 -<==    Updates: 1
2019-04-29 17:13:02 -请求地址 : http://localhost:8081/main
2019-04-29 17:13:02 -HTTP METHOD : GET
2019-04-29 17:13:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:13:02 -参数 : []
2019-04-29 17:13:02 -耗时 : 54
2019-04-29 17:13:02 -返回值 : main
2019-04-29 17:13:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 17:13:02 -HTTP METHOD : GET
2019-04-29 17:13:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 17:13:02 -参数 : []
2019-04-29 17:13:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 17:13:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 17:13:02 -<==      Total: 0
2019-04-29 17:13:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 17:13:02 -==> Parameters: 1(Long), 0(String)
2019-04-29 17:13:02 -<==      Total: 1
2019-04-29 17:13:02 -耗时 : 8
2019-04-29 17:13:02 -返回值 : com.bootdo.common.utils.PageUtils@5aac5f23
2019-04-29 17:13:02 -请求地址 : http://localhost:8081/main
2019-04-29 17:13:02 -HTTP METHOD : GET
2019-04-29 17:13:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:13:02 -参数 : []
2019-04-29 17:13:02 -耗时 : 1
2019-04-29 17:13:02 -返回值 : main
2019-04-29 17:13:06 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:13:06 -HTTP METHOD : GET
2019-04-29 17:13:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:13:06 -参数 : []
2019-04-29 17:13:06 -耗时 : 2
2019-04-29 17:13:06 -返回值 : charts/tableElecMM
2019-04-29 17:13:10 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:13:10 -HTTP METHOD : GET
2019-04-29 17:13:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:13:10 -参数 : []
2019-04-29 17:13:10 -耗时 : 67
2019-04-29 17:13:10 -返回值 : system/dept/deptTree
2019-04-29 17:13:10 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:13:10 -HTTP METHOD : GET
2019-04-29 17:13:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:13:10 -参数 : []
2019-04-29 17:13:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:13:10 -==> Parameters: 
2019-04-29 17:13:10 -<==      Total: 3
2019-04-29 17:13:10 -耗时 : 2
2019-04-29 17:13:10 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:13:19 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 17:13:19 -HTTP METHOD : POST
2019-04-29 17:13:19 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:13:19 -参数 : [com.bootdo.elec.vo.ElecVo@7f4923fa, com.bootdo.moneyLog.vo.ElecLogVo@7d4d4561]
2019-04-29 17:13:19 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:13:19 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:13:19 -<==      Total: 1
2019-04-29 17:13:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:13:19 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:13:19 -<==      Total: 1
2019-04-29 17:13:19 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:13:19 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:13:19 -<==      Total: 1
2019-04-29 17:13:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:13:19 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:13:19 -<==      Total: 1
2019-04-29 17:13:19 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:13:19 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:13:19 -<==      Total: 1
2019-04-29 17:13:19 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:13:19 -==> Parameters: 2019-04(String), 2(String)
2019-04-29 17:13:19 -<==      Total: 0
2019-04-29 17:13:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:13:19 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-04-29 17:13:19.183(Timestamp)
2019-04-29 17:13:19 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:61)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$9d9d8553.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 17:13:19 -<==    Updates: 1
2019-04-29 17:13:27 -请求地址 : http://localhost:8081/charts/countMM
2019-04-29 17:13:27 -HTTP METHOD : GET
2019-04-29 17:13:27 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-29 17:13:27 -参数 : []
2019-04-29 17:13:27 -耗时 : 2
2019-04-29 17:13:27 -返回值 : charts/countMM
2019-04-29 17:13:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-29 17:13:27 -HTTP METHOD : GET
2019-04-29 17:13:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-29 17:13:27 -参数 : [userType]
2019-04-29 17:13:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-29 17:13:27 -==> Parameters: userType(String)
2019-04-29 17:13:27 -<==      Total: 4
2019-04-29 17:13:27 -耗时 : 9
2019-04-29 17:13:27 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-29 17:17:27 -请求地址 : http://localhost:8081/index
2019-04-29 17:17:27 -HTTP METHOD : GET
2019-04-29 17:17:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 17:17:27 -参数 : [{}]
2019-04-29 17:17:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 17:17:27 -==> Parameters: 1(Long)
2019-04-29 17:17:27 -<==      Total: 49
2019-04-29 17:17:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 17:17:27 -==> Parameters: 138(Long)
2019-04-29 17:17:27 -<==      Total: 1
2019-04-29 17:17:27 -耗时 : 19
2019-04-29 17:17:27 -返回值 : index_v1
2019-04-29 17:17:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:17:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 17:17:27.795(Timestamp)
2019-04-29 17:17:27 -<==    Updates: 1
2019-04-29 17:17:28 -请求地址 : http://localhost:8081/main
2019-04-29 17:17:28 -HTTP METHOD : GET
2019-04-29 17:17:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:17:28 -参数 : []
2019-04-29 17:17:28 -耗时 : 0
2019-04-29 17:17:28 -返回值 : main
2019-04-29 17:17:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 17:17:28 -HTTP METHOD : GET
2019-04-29 17:17:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 17:17:28 -参数 : []
2019-04-29 17:17:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 17:17:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 17:17:28 -<==      Total: 0
2019-04-29 17:17:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 17:17:28 -==> Parameters: 1(Long), 0(String)
2019-04-29 17:17:28 -<==      Total: 1
2019-04-29 17:17:28 -耗时 : 5
2019-04-29 17:17:28 -返回值 : com.bootdo.common.utils.PageUtils@69e3bdbe
2019-04-29 17:17:28 -请求地址 : http://localhost:8081/main
2019-04-29 17:17:28 -HTTP METHOD : GET
2019-04-29 17:17:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:17:28 -参数 : []
2019-04-29 17:17:28 -耗时 : 0
2019-04-29 17:17:28 -返回值 : main
2019-04-29 17:17:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 17:17:31 -==> Parameters: 1(Long)
2019-04-29 17:17:31 -<==      Total: 93
2019-04-29 17:17:31 -请求地址 : http://localhost:8081/charts/countMM
2019-04-29 17:17:31 -HTTP METHOD : GET
2019-04-29 17:17:31 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-29 17:17:31 -参数 : []
2019-04-29 17:17:31 -耗时 : 1
2019-04-29 17:17:31 -返回值 : charts/countMM
2019-04-29 17:17:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-29 17:17:32 -HTTP METHOD : GET
2019-04-29 17:17:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-29 17:17:32 -参数 : [userType]
2019-04-29 17:17:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-29 17:17:32 -==> Parameters: userType(String)
2019-04-29 17:17:32 -<==      Total: 4
2019-04-29 17:17:32 -耗时 : 4
2019-04-29 17:17:32 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-29 17:17:32 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:17:32 -HTTP METHOD : GET
2019-04-29 17:17:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:17:32 -参数 : []
2019-04-29 17:17:32 -耗时 : 1
2019-04-29 17:17:32 -返回值 : charts/tableElecMM
2019-04-29 17:17:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:17:38 -HTTP METHOD : GET
2019-04-29 17:17:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:17:38 -参数 : []
2019-04-29 17:17:38 -耗时 : 1
2019-04-29 17:17:38 -返回值 : system/dept/deptTree
2019-04-29 17:17:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:17:38 -HTTP METHOD : GET
2019-04-29 17:17:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:17:38 -参数 : []
2019-04-29 17:17:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:17:38 -==> Parameters: 
2019-04-29 17:17:38 -<==      Total: 3
2019-04-29 17:17:38 -耗时 : 19
2019-04-29 17:17:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:17:42 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 17:17:42 -HTTP METHOD : POST
2019-04-29 17:17:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:17:42 -参数 : [com.bootdo.elec.vo.ElecVo@8e8897d, com.bootdo.moneyLog.vo.ElecLogVo@3758503a]
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:17:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:17:42 -<==      Total: 1
2019-04-29 17:17:42 -耗时 : 518
2019-04-29 17:17:42 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 17:19:03 -请求地址 : http://localhost:8081/login;JSESSIONID=92e56c62-3caa-4ab1-a3fb-e840ae6ba2ce
2019-04-29 17:19:03 -HTTP METHOD : GET
2019-04-29 17:19:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 17:19:03 -参数 : [{}]
2019-04-29 17:19:03 -耗时 : 2
2019-04-29 17:19:03 -返回值 : login
2019-04-29 17:19:04 -请求地址 : http://localhost:8081/getVerify
2019-04-29 17:19:04 -HTTP METHOD : GET
2019-04-29 17:19:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 17:19:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@45a88d88, org.apache.shiro.web.servlet.ShiroHttpServletResponse@d7bd3d5]
2019-04-29 17:19:04 -8209
2019-04-29 17:19:04 -耗时 : 132
2019-04-29 17:19:04 -返回值 : null
2019-04-29 17:19:05 -请求地址 : http://localhost:8081/login
2019-04-29 17:19:05 -HTTP METHOD : GET
2019-04-29 17:19:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 17:19:05 -参数 : [{}]
2019-04-29 17:19:05 -耗时 : 1
2019-04-29 17:19:05 -返回值 : login
2019-04-29 17:19:36 -请求地址 : http://localhost:8081/login
2019-04-29 17:19:36 -HTTP METHOD : POST
2019-04-29 17:19:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 17:19:36 -参数 : [admin, 111111, 8209, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3ba72921]
2019-04-29 17:19:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 17:19:36 -==> Parameters: admin(String)
2019-04-29 17:19:36 -<==      Total: 1
2019-04-29 17:19:36 -耗时 : 5
2019-04-29 17:19:36 -返回值 : {msg=操作成功, code=0}
2019-04-29 17:19:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:19:36 -==> Parameters: 1(Long), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 17:19:36.898(Timestamp)
2019-04-29 17:19:36 -<==    Updates: 1
2019-04-29 17:19:37 -请求地址 : http://localhost:8081/index
2019-04-29 17:19:37 -HTTP METHOD : GET
2019-04-29 17:19:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 17:19:37 -参数 : [{}]
2019-04-29 17:19:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 17:19:37 -==> Parameters: 1(Long)
2019-04-29 17:19:37 -<==      Total: 49
2019-04-29 17:19:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 17:19:37 -==> Parameters: 138(Long)
2019-04-29 17:19:37 -<==      Total: 1
2019-04-29 17:19:37 -耗时 : 145
2019-04-29 17:19:37 -返回值 : index_v1
2019-04-29 17:19:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 17:19:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 146(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 17:19:37.155(Timestamp)
2019-04-29 17:19:37 -请求地址 : http://localhost:8081/main
2019-04-29 17:19:37 -HTTP METHOD : GET
2019-04-29 17:19:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:19:37 -参数 : []
2019-04-29 17:19:37 -耗时 : 1
2019-04-29 17:19:37 -返回值 : main
2019-04-29 17:19:37 -<==    Updates: 1
2019-04-29 17:19:39 -请求地址 : http://localhost:8081/main
2019-04-29 17:19:39 -HTTP METHOD : GET
2019-04-29 17:19:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 17:19:39 -参数 : []
2019-04-29 17:19:39 -耗时 : 1
2019-04-29 17:19:39 -返回值 : main
2019-04-29 17:19:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 17:19:39 -HTTP METHOD : GET
2019-04-29 17:19:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 17:19:39 -参数 : []
2019-04-29 17:19:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 17:19:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 17:19:39 -<==      Total: 0
2019-04-29 17:19:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 17:19:39 -==> Parameters: 1(Long), 0(String)
2019-04-29 17:19:39 -<==      Total: 1
2019-04-29 17:19:39 -耗时 : 247
2019-04-29 17:19:39 -返回值 : com.bootdo.common.utils.PageUtils@19d8b86d
2019-04-29 17:19:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 17:19:42 -==> Parameters: 1(Long)
2019-04-29 17:19:42 -<==      Total: 93
2019-04-29 17:19:42 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 17:19:42 -HTTP METHOD : GET
2019-04-29 17:19:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:19:42 -参数 : []
2019-04-29 17:19:42 -耗时 : 0
2019-04-29 17:19:42 -返回值 : charts/tableElecMM
2019-04-29 17:19:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 17:19:48 -HTTP METHOD : GET
2019-04-29 17:19:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 17:19:48 -参数 : []
2019-04-29 17:19:48 -耗时 : 1
2019-04-29 17:19:48 -返回值 : system/dept/deptTree
2019-04-29 17:19:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 17:19:49 -HTTP METHOD : GET
2019-04-29 17:19:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 17:19:49 -参数 : []
2019-04-29 17:19:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 17:19:49 -==> Parameters: 
2019-04-29 17:19:49 -<==      Total: 3
2019-04-29 17:19:49 -耗时 : 3
2019-04-29 17:19:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 17:19:52 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 17:19:52 -HTTP METHOD : POST
2019-04-29 17:19:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 17:19:52 -参数 : [com.bootdo.elec.vo.ElecVo@27f85211, com.bootdo.moneyLog.vo.ElecLogVo@5ee9450b]
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:52 -<==      Total: 1
2019-04-29 17:19:52 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:19:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 17:19:53 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 17:19:53 -<==      Total: 1
2019-04-29 17:19:53 -耗时 : 356
2019-04-29 17:19:53 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 20:47:51 -Starting BootdoApplication on ZJZL-20180906VX with PID 1508 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-29 20:47:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-29 20:47:51 -The following profiles are active: dev
2019-04-29 20:47:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 29 20:47:52 CST 2019]; root of context hierarchy
2019-04-29 20:47:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-29 20:47:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$76957a4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 20:47:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$68eea8f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 20:47:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 20:47:59 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 20:47:59 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 20:47:59 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-29 20:47:59 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-29 20:48:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 20:48:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 20:48:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 20:48:00 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 20:48:01 -Tomcat initialized with port(s): 8081 (http)
2019-04-29 20:48:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-29 20:48:01 -Starting service [Tomcat]
2019-04-29 20:48:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-29 20:48:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-29 20:48:02 -Initializing Spring embedded WebApplicationContext
2019-04-29 20:48:02 -Root WebApplicationContext: initialization completed in 10320 ms
2019-04-29 20:48:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-29 20:48:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-29 20:48:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-29 20:48:03 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-29 20:48:03 -Filter xssFilter was not registered (disabled)
2019-04-29 20:48:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-29 20:48:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-29 20:48:03 -Servlet statViewServlet mapped to [/druid/*]
2019-04-29 20:48:03 -Servlet dispatcherServlet mapped to [/]
2019-04-29 20:48:14 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 29 20:47:52 CST 2019]; root of context hierarchy
2019-04-29 20:48:14 -Using default implementation for ThreadExecutor
2019-04-29 20:48:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-29 20:48:14 -Quartz Scheduler v.2.2.1 created.
2019-04-29 20:48:14 -RAMJobStore initialized.
2019-04-29 20:48:14 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-29 20:48:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-29 20:48:14 -Quartz scheduler version: 2.2.1
2019-04-29 20:48:14 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4601047
2019-04-29 20:48:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-29 20:48:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-29 20:48:18 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-29 20:48:18 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 20:48:18 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 20:48:18 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-29 20:48:18 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-29 20:48:18 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-29 20:48:18 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 20:48:18 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-29 20:48:18 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 20:48:18 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-29 20:48:18 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 20:48:18 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-29 20:48:18 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-29 20:48:18 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-29 20:48:18 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-29 20:48:18 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-29 20:48:18 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 20:48:18 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-29 20:48:18 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-29 20:48:18 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 20:48:18 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-29 20:48:18 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-29 20:48:18 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-29 20:48:18 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-29 20:48:18 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-29 20:48:18 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-29 20:48:18 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-29 20:48:18 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-29 20:48:18 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-29 20:48:18 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-29 20:48:18 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-29 20:48:18 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-29 20:48:18 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-29 20:48:18 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-29 20:48:18 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-29 20:48:18 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-29 20:48:18 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-29 20:48:18 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-29 20:48:18 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-29 20:48:18 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-29 20:48:18 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-29 20:48:18 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-29 20:48:18 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-29 20:48:18 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-29 20:48:18 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-29 20:48:18 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-29 20:48:18 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-29 20:48:18 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-29 20:48:18 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-29 20:48:18 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-29 20:48:18 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-29 20:48:18 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-29 20:48:18 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-29 20:48:18 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-29 20:48:18 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 20:48:18 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-29 20:48:18 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-29 20:48:18 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-29 20:48:18 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-29 20:48:18 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-29 20:48:18 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-29 20:48:18 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-29 20:48:18 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-29 20:48:18 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-29 20:48:18 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-29 20:48:18 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-29 20:48:18 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-29 20:48:18 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-29 20:48:18 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 20:48:18 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-29 20:48:18 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-29 20:48:18 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-29 20:48:18 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-29 20:48:18 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-29 20:48:18 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-29 20:48:18 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-29 20:48:18 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-29 20:48:18 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 20:48:18 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 20:48:18 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-29 20:48:18 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-29 20:48:18 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-29 20:48:18 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-29 20:48:18 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-29 20:48:18 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-29 20:48:18 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-29 20:48:18 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-29 20:48:18 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-29 20:48:18 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-29 20:48:18 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-29 20:48:18 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-29 20:48:18 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-29 20:48:18 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-29 20:48:18 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-29 20:48:18 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-29 20:48:18 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-29 20:48:18 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-29 20:48:18 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-29 20:48:18 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-29 20:48:18 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-29 20:48:18 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-29 20:48:18 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-29 20:48:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-29 20:48:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-29 20:48:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-29 20:48:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-29 20:48:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-29 20:48:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-29 20:48:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-29 20:48:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-29 20:48:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-29 20:48:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-29 20:48:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-29 20:48:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-29 20:48:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-29 20:48:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-29 20:48:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-29 20:48:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-29 20:48:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-29 20:48:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-29 20:48:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-29 20:48:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-29 20:48:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-29 20:48:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-29 20:48:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-29 20:48:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-29 20:48:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-29 20:48:18 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-29 20:48:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 20:48:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-29 20:48:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-29 20:48:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-29 20:48:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-29 20:48:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-29 20:48:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 20:48:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-29 20:48:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 20:48:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-29 20:48:18 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-29 20:48:18 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 20:48:18 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-29 20:48:18 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-29 20:48:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 20:48:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-29 20:48:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-29 20:48:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-29 20:48:19 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-29 20:48:19 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-29 20:48:19 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-29 20:48:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 20:48:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 29 20:47:52 CST 2019]; root of context hierarchy
2019-04-29 20:48:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 20:48:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 20:48:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 20:48:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-29 20:48:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-29 20:48:24 -Registering beans for JMX exposure on startup
2019-04-29 20:48:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-29 20:48:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-29 20:48:24 -Starting beans in phase 2147483647
2019-04-29 20:48:24 -Context refreshed
2019-04-29 20:48:24 -Found 1 custom documentation plugin(s)
2019-04-29 20:48:24 -Scanning for api listing references
2019-04-29 20:48:25 -Generating unique operation named: getCountDUsingPOST_1
2019-04-29 20:48:25 -Generating unique operation named: removeUsingPOST_1
2019-04-29 20:48:25 -Generating unique operation named: addUsingGET_1
2019-04-29 20:48:25 -Generating unique operation named: editUsingGET_1
2019-04-29 20:48:25 -Generating unique operation named: listUsingGET_1
2019-04-29 20:48:25 -Generating unique operation named: removeUsingPOST_2
2019-04-29 20:48:25 -Generating unique operation named: removeUsingPOST_3
2019-04-29 20:48:25 -Generating unique operation named: saveUsingPOST_1
2019-04-29 20:48:25 -Generating unique operation named: updateUsingGET_1
2019-04-29 20:48:25 -Generating unique operation named: updateUsingHEAD_1
2019-04-29 20:48:25 -Generating unique operation named: updateUsingPOST_1
2019-04-29 20:48:25 -Generating unique operation named: updateUsingPUT_1
2019-04-29 20:48:25 -Generating unique operation named: updateUsingPATCH_1
2019-04-29 20:48:25 -Generating unique operation named: updateUsingDELETE_1
2019-04-29 20:48:25 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-29 20:48:25 -Generating unique operation named: updateUsingTRACE_1
2019-04-29 20:48:25 -Generating unique operation named: addUsingGET_2
2019-04-29 20:48:25 -Generating unique operation named: editUsingGET_2
2019-04-29 20:48:25 -Generating unique operation named: listUsingGET_2
2019-04-29 20:48:25 -Generating unique operation named: removeUsingPOST_4
2019-04-29 20:48:25 -Generating unique operation named: removeUsingPOST_5
2019-04-29 20:48:25 -Generating unique operation named: saveUsingPOST_2
2019-04-29 20:48:25 -Generating unique operation named: updateUsingPOST_2
2019-04-29 20:48:25 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-29 20:48:25 -Generating unique operation named: addUsingGET_3
2019-04-29 20:48:25 -Generating unique operation named: editUsingGET_3
2019-04-29 20:48:25 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-29 20:48:25 -Generating unique operation named: listUsingGET_3
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_6
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_7
2019-04-29 20:48:26 -Generating unique operation named: saveUsingPOST_3
2019-04-29 20:48:26 -Generating unique operation named: updateUsingGET_2
2019-04-29 20:48:26 -Generating unique operation named: updateUsingHEAD_2
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPOST_3
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPUT_2
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPATCH_2
2019-04-29 20:48:26 -Generating unique operation named: updateUsingDELETE_2
2019-04-29 20:48:26 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-29 20:48:26 -Generating unique operation named: updateUsingTRACE_2
2019-04-29 20:48:26 -Generating unique operation named: addUsingGET_4
2019-04-29 20:48:26 -Generating unique operation named: editUsingGET_4
2019-04-29 20:48:26 -Generating unique operation named: listUsingGET_4
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_8
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_9
2019-04-29 20:48:26 -Generating unique operation named: saveUsingPOST_4
2019-04-29 20:48:26 -Generating unique operation named: updateUsingGET_3
2019-04-29 20:48:26 -Generating unique operation named: updateUsingHEAD_3
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPOST_4
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPUT_3
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPATCH_3
2019-04-29 20:48:26 -Generating unique operation named: updateUsingDELETE_3
2019-04-29 20:48:26 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-29 20:48:26 -Generating unique operation named: updateUsingTRACE_3
2019-04-29 20:48:26 -Generating unique operation named: ElecUsingGET_1
2019-04-29 20:48:26 -Generating unique operation named: addUsingGET_5
2019-04-29 20:48:26 -Generating unique operation named: editUsingGET_5
2019-04-29 20:48:26 -Generating unique operation named: listUsingGET_5
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_10
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_11
2019-04-29 20:48:26 -Generating unique operation named: saveUsingPOST_5
2019-04-29 20:48:26 -Generating unique operation named: updateUsingGET_4
2019-04-29 20:48:26 -Generating unique operation named: updateUsingHEAD_4
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPOST_5
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPUT_4
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPATCH_4
2019-04-29 20:48:26 -Generating unique operation named: updateUsingDELETE_4
2019-04-29 20:48:26 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-29 20:48:26 -Generating unique operation named: updateUsingTRACE_4
2019-04-29 20:48:26 -Generating unique operation named: editUsingGET_6
2019-04-29 20:48:26 -Generating unique operation named: listUsingGET_6
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPOST_6
2019-04-29 20:48:26 -Generating unique operation named: addUsingGET_6
2019-04-29 20:48:26 -Generating unique operation named: editUsingGET_7
2019-04-29 20:48:26 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-29 20:48:26 -Generating unique operation named: listUsingGET_7
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_12
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_13
2019-04-29 20:48:26 -Generating unique operation named: saveUsingPOST_6
2019-04-29 20:48:26 -Generating unique operation named: updateUsingGET_5
2019-04-29 20:48:26 -Generating unique operation named: updateUsingHEAD_5
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPOST_7
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPUT_5
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPATCH_5
2019-04-29 20:48:26 -Generating unique operation named: updateUsingDELETE_5
2019-04-29 20:48:26 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-29 20:48:26 -Generating unique operation named: updateUsingTRACE_5
2019-04-29 20:48:26 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-29 20:48:26 -Generating unique operation named: addUsingGET_7
2019-04-29 20:48:26 -Generating unique operation named: editUsingGET_8
2019-04-29 20:48:26 -Generating unique operation named: listUsingGET_8
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_14
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_15
2019-04-29 20:48:26 -Generating unique operation named: saveUsingPOST_7
2019-04-29 20:48:26 -Generating unique operation named: updateUsingGET_6
2019-04-29 20:48:26 -Generating unique operation named: updateUsingHEAD_6
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPOST_8
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPUT_6
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPATCH_6
2019-04-29 20:48:26 -Generating unique operation named: updateUsingDELETE_6
2019-04-29 20:48:26 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-29 20:48:26 -Generating unique operation named: updateUsingTRACE_6
2019-04-29 20:48:26 -Generating unique operation named: addUsingGET_8
2019-04-29 20:48:26 -Generating unique operation named: editUsingGET_9
2019-04-29 20:48:26 -Generating unique operation named: listUsingGET_9
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_16
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_17
2019-04-29 20:48:26 -Generating unique operation named: saveUsingPOST_8
2019-04-29 20:48:26 -Generating unique operation named: updateUsingGET_7
2019-04-29 20:48:26 -Generating unique operation named: updateUsingHEAD_7
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPOST_9
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPUT_7
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPATCH_7
2019-04-29 20:48:26 -Generating unique operation named: updateUsingDELETE_7
2019-04-29 20:48:26 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-29 20:48:26 -Generating unique operation named: updateUsingTRACE_7
2019-04-29 20:48:26 -Generating unique operation named: addUsingGET_9
2019-04-29 20:48:26 -Generating unique operation named: editUsingGET_10
2019-04-29 20:48:26 -Generating unique operation named: infoUsingGET_1
2019-04-29 20:48:26 -Generating unique operation named: infoUsingHEAD_1
2019-04-29 20:48:26 -Generating unique operation named: infoUsingPOST_1
2019-04-29 20:48:26 -Generating unique operation named: infoUsingPUT_1
2019-04-29 20:48:26 -Generating unique operation named: infoUsingPATCH_1
2019-04-29 20:48:26 -Generating unique operation named: infoUsingDELETE_1
2019-04-29 20:48:26 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-29 20:48:26 -Generating unique operation named: infoUsingTRACE_1
2019-04-29 20:48:26 -Generating unique operation named: listUsingGET_10
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_18
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_19
2019-04-29 20:48:26 -Generating unique operation named: saveUsingPOST_9
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPOST_10
2019-04-29 20:48:26 -Generating unique operation named: listUsingGET_11
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_20
2019-04-29 20:48:26 -Generating unique operation named: welcomeUsingGET_1
2019-04-29 20:48:26 -Generating unique operation named: addUsingGET_10
2019-04-29 20:48:26 -Generating unique operation named: editUsingGET_11
2019-04-29 20:48:26 -Generating unique operation named: listUsingGET_12
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_21
2019-04-29 20:48:26 -Generating unique operation named: saveUsingPOST_10
2019-04-29 20:48:26 -Generating unique operation named: treeUsingGET_1
2019-04-29 20:48:26 -Generating unique operation named: treeUsingGET_2
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPOST_11
2019-04-29 20:48:26 -Generating unique operation named: addUsingGET_11
2019-04-29 20:48:26 -Generating unique operation named: editUsingGET_12
2019-04-29 20:48:26 -Generating unique operation named: listUsingGET_13
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_22
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_23
2019-04-29 20:48:26 -Generating unique operation named: saveUsingPOST_11
2019-04-29 20:48:26 -Generating unique operation named: updateUsingGET_8
2019-04-29 20:48:26 -Generating unique operation named: updateUsingHEAD_8
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPOST_12
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPUT_8
2019-04-29 20:48:26 -Generating unique operation named: updateUsingPATCH_8
2019-04-29 20:48:26 -Generating unique operation named: updateUsingDELETE_8
2019-04-29 20:48:26 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-29 20:48:26 -Generating unique operation named: updateUsingTRACE_8
2019-04-29 20:48:26 -Generating unique operation named: addUsingGET_12
2019-04-29 20:48:26 -Generating unique operation named: editUsingGET_13
2019-04-29 20:48:26 -Generating unique operation named: listUsingGET_14
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_24
2019-04-29 20:48:26 -Generating unique operation named: removeUsingPOST_25
2019-04-29 20:48:26 -Generating unique operation named: saveUsingPOST_12
2019-04-29 20:48:26 -Generating unique operation named: updateUsingGET_9
2019-04-29 20:48:26 -Generating unique operation named: updateUsingHEAD_9
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPOST_13
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPUT_9
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPATCH_9
2019-04-29 20:48:27 -Generating unique operation named: updateUsingDELETE_9
2019-04-29 20:48:27 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-29 20:48:27 -Generating unique operation named: updateUsingTRACE_9
2019-04-29 20:48:27 -Generating unique operation named: addUsingGET_13
2019-04-29 20:48:27 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-29 20:48:27 -Generating unique operation named: editUsingGET_14
2019-04-29 20:48:27 -Generating unique operation named: listUsingGET_15
2019-04-29 20:48:27 -Generating unique operation named: saveUsingPOST_13
2019-04-29 20:48:27 -Generating unique operation named: saveUsingPOST_14
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPOST_14
2019-04-29 20:48:27 -Generating unique operation named: listUsingGET_16
2019-04-29 20:48:27 -Generating unique operation named: listUsingHEAD_1
2019-04-29 20:48:27 -Generating unique operation named: listUsingPOST_1
2019-04-29 20:48:27 -Generating unique operation named: listUsingPUT_1
2019-04-29 20:48:27 -Generating unique operation named: listUsingPATCH_1
2019-04-29 20:48:27 -Generating unique operation named: listUsingDELETE_1
2019-04-29 20:48:27 -Generating unique operation named: listUsingOPTIONS_1
2019-04-29 20:48:27 -Generating unique operation named: listUsingTRACE_1
2019-04-29 20:48:27 -Generating unique operation named: countDDUsingGET_1
2019-04-29 20:48:27 -Generating unique operation named: exportDDUsingGET_1
2019-04-29 20:48:27 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-29 20:48:27 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-29 20:48:27 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-29 20:48:27 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-29 20:48:27 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-29 20:48:27 -Generating unique operation named: addUsingGET_14
2019-04-29 20:48:27 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-29 20:48:27 -Generating unique operation named: editUsingGET_15
2019-04-29 20:48:27 -Generating unique operation named: listUsingGET_17
2019-04-29 20:48:27 -Generating unique operation named: removeUsingPOST_26
2019-04-29 20:48:27 -Generating unique operation named: saveUsingPOST_15
2019-04-29 20:48:27 -Generating unique operation named: treeUsingGET_3
2019-04-29 20:48:27 -Generating unique operation named: treeViewUsingGET_1
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPOST_15
2019-04-29 20:48:27 -Generating unique operation named: addUsingGET_15
2019-04-29 20:48:27 -Generating unique operation named: editUsingGET_16
2019-04-29 20:48:27 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-29 20:48:27 -Generating unique operation named: listUsingGET_18
2019-04-29 20:48:27 -Generating unique operation named: removeUsingPOST_27
2019-04-29 20:48:27 -Generating unique operation named: removeUsingPOST_28
2019-04-29 20:48:27 -Generating unique operation named: saveUsingPOST_16
2019-04-29 20:48:27 -Generating unique operation named: updateUsingGET_10
2019-04-29 20:48:27 -Generating unique operation named: updateUsingHEAD_10
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPOST_16
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPUT_10
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPATCH_10
2019-04-29 20:48:27 -Generating unique operation named: updateUsingDELETE_10
2019-04-29 20:48:27 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-29 20:48:27 -Generating unique operation named: updateUsingTRACE_10
2019-04-29 20:48:27 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-29 20:48:27 -Generating unique operation named: addUsingGET_16
2019-04-29 20:48:27 -Generating unique operation named: editUsingGET_17
2019-04-29 20:48:27 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-29 20:48:27 -Generating unique operation named: listUsingGET_19
2019-04-29 20:48:27 -Generating unique operation named: removeUsingPOST_29
2019-04-29 20:48:27 -Generating unique operation named: removeUsingPOST_30
2019-04-29 20:48:27 -Generating unique operation named: saveUsingPOST_17
2019-04-29 20:48:27 -Generating unique operation named: updateUsingGET_11
2019-04-29 20:48:27 -Generating unique operation named: updateUsingHEAD_11
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPOST_17
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPUT_11
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPATCH_11
2019-04-29 20:48:27 -Generating unique operation named: updateUsingDELETE_11
2019-04-29 20:48:27 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-29 20:48:27 -Generating unique operation named: updateUsingTRACE_11
2019-04-29 20:48:27 -Generating unique operation named: addUsingGET_17
2019-04-29 20:48:27 -Generating unique operation named: editUsingGET_18
2019-04-29 20:48:27 -Generating unique operation named: listUsingGET_20
2019-04-29 20:48:27 -Generating unique operation named: removeUsingPOST_31
2019-04-29 20:48:27 -Generating unique operation named: removeUsingPOST_32
2019-04-29 20:48:27 -Generating unique operation named: saveUsingPOST_18
2019-04-29 20:48:27 -Generating unique operation named: updateUsingGET_12
2019-04-29 20:48:27 -Generating unique operation named: updateUsingHEAD_12
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPOST_18
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPUT_12
2019-04-29 20:48:27 -Generating unique operation named: updateUsingPATCH_12
2019-04-29 20:48:27 -Generating unique operation named: updateUsingDELETE_12
2019-04-29 20:48:27 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-29 20:48:27 -Generating unique operation named: updateUsingTRACE_12
2019-04-29 20:48:27 -Starting Quartz Scheduler now
2019-04-29 20:48:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-29 20:48:27 -Starting...
2019-04-29 20:48:27 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-29 20:48:27 -Started.
2019-04-29 20:48:27 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-29 20:48:28 -Using a shared selector for servlet write/read
2019-04-29 20:48:28 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-29 20:48:28 -Started BootdoApplication in 38.021 seconds (JVM running for 38.924)
2019-04-29 20:48:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-29 20:48:30 -==> Parameters: 
2019-04-29 20:48:30 -<==      Total: 1
2019-04-29 20:49:19 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-29 20:49:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-29 20:49:29 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-29 20:49:29 -FrameworkServlet 'dispatcherServlet': initialization completed in 205 ms
2019-04-29 20:49:29 -Enabling session validation scheduler...
2019-04-29 20:49:29 -请求地址 : http://localhost:8081/
2019-04-29 20:49:29 -HTTP METHOD : GET
2019-04-29 20:49:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-04-29 20:49:29 -参数 : [{}]
2019-04-29 20:49:29 -耗时 : 5
2019-04-29 20:49:29 -返回值 : redirect:/index
2019-04-29 20:49:30 -请求地址 : http://localhost:8081/login;JSESSIONID=594fe8f6-a7cc-4c21-bced-f820344e9b10
2019-04-29 20:49:30 -HTTP METHOD : GET
2019-04-29 20:49:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 20:49:30 -参数 : [{}]
2019-04-29 20:49:30 -耗时 : 1
2019-04-29 20:49:30 -返回值 : login
2019-04-29 20:49:33 -请求地址 : http://localhost:8081/getVerify
2019-04-29 20:49:33 -HTTP METHOD : GET
2019-04-29 20:49:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 20:49:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@115d29a5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5a47f16a]
2019-04-29 20:49:44 -1473
2019-04-29 20:49:44 -耗时 : 11313
2019-04-29 20:49:44 -返回值 : null
2019-04-29 20:49:44 -请求地址 : http://localhost:8081/login
2019-04-29 20:49:44 -HTTP METHOD : GET
2019-04-29 20:49:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 20:49:44 -参数 : [{}]
2019-04-29 20:49:44 -耗时 : 1
2019-04-29 20:49:44 -返回值 : login
2019-04-29 20:50:00 -请求地址 : http://localhost:8081/login
2019-04-29 20:50:00 -HTTP METHOD : POST
2019-04-29 20:50:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 20:50:00 -参数 : [admin, 111111, 1473, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5086d881]
2019-04-29 20:50:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 20:50:00 -==> Parameters: admin(String)
2019-04-29 20:50:00 -<==      Total: 1
2019-04-29 20:50:00 -耗时 : 188
2019-04-29 20:50:00 -返回值 : {msg=操作成功, code=0}
2019-04-29 20:50:01 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-29 20:50:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 20:50:01 -==> Parameters: 1(Long), admin(String), 登录(String), 188(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 20:50:01.467(Timestamp)
2019-04-29 20:50:01 -<==    Updates: 1
2019-04-29 20:50:01 -请求地址 : http://localhost:8081/index
2019-04-29 20:50:01 -HTTP METHOD : GET
2019-04-29 20:50:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 20:50:01 -参数 : [{}]
2019-04-29 20:50:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 20:50:02 -==> Parameters: 1(Long)
2019-04-29 20:50:02 -<==      Total: 49
2019-04-29 20:50:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 20:50:02 -==> Parameters: 138(Long)
2019-04-29 20:50:02 -<==      Total: 1
2019-04-29 20:50:02 -耗时 : 488
2019-04-29 20:50:02 -返回值 : index_v1
2019-04-29 20:50:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 20:50:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 488(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 20:50:02.349(Timestamp)
2019-04-29 20:50:02 -<==    Updates: 1
2019-04-29 20:50:02 -请求地址 : http://localhost:8081/main
2019-04-29 20:50:02 -HTTP METHOD : GET
2019-04-29 20:50:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 20:50:02 -参数 : []
2019-04-29 20:50:02 -耗时 : 0
2019-04-29 20:50:02 -返回值 : main
2019-04-29 20:50:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 20:50:05 -HTTP METHOD : GET
2019-04-29 20:50:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 20:50:05 -参数 : []
2019-04-29 20:50:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 20:50:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 20:50:05 -<==      Total: 0
2019-04-29 20:50:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 20:50:05 -==> Parameters: 1(Long), 0(String)
2019-04-29 20:50:05 -<==      Total: 1
2019-04-29 20:50:05 -耗时 : 39
2019-04-29 20:50:05 -返回值 : com.bootdo.common.utils.PageUtils@340a6100
2019-04-29 20:50:05 -请求地址 : http://localhost:8081/main
2019-04-29 20:50:05 -HTTP METHOD : GET
2019-04-29 20:50:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 20:50:05 -参数 : []
2019-04-29 20:50:05 -耗时 : 0
2019-04-29 20:50:05 -返回值 : main
2019-04-29 20:50:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 20:50:17 -==> Parameters: 1(Long)
2019-04-29 20:50:17 -<==      Total: 93
2019-04-29 20:50:17 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 20:50:17 -HTTP METHOD : GET
2019-04-29 20:50:17 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 20:50:17 -参数 : []
2019-04-29 20:50:17 -耗时 : 10
2019-04-29 20:50:17 -返回值 : charts/tableElecMM
2019-04-29 20:50:21 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-29 20:50:21 -HTTP METHOD : GET
2019-04-29 20:50:21 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-29 20:50:21 -参数 : []
2019-04-29 20:50:21 -耗时 : 6
2019-04-29 20:50:21 -返回值 : charts/tableWaterMM
2019-04-29 20:50:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 20:50:28 -HTTP METHOD : GET
2019-04-29 20:50:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 20:50:28 -参数 : []
2019-04-29 20:50:28 -耗时 : 1
2019-04-29 20:50:28 -返回值 : system/dept/deptTree
2019-04-29 20:50:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 20:50:29 -HTTP METHOD : GET
2019-04-29 20:50:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 20:50:29 -参数 : []
2019-04-29 20:50:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 20:50:29 -==> Parameters: 
2019-04-29 20:50:29 -<==      Total: 3
2019-04-29 20:50:29 -耗时 : 19
2019-04-29 20:50:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 20:50:31 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-29 20:50:31 -HTTP METHOD : POST
2019-04-29 20:50:31 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-29 20:50:31 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@71af7539, com.bootdo.water.vo.WaterVo@343e23b3]
2019-04-29 20:50:31 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:31 -<==      Total: 1
2019-04-29 20:50:31 -耗时 : 145
2019-04-29 20:50:31 -返回值 : {CountPrehu=2, CountAllhu=4, CountCostyu=2, Stotalhu=2, CountPrice=3, CountSWaterLog=1, SWaterCountOwe=1, CountOweyu=1, MWaterCountOwe=1, MWaterCostCount=2, SumSWaterLog=60, CountPreyu=1, SWaterSumOwe=0, CountCosthu=4, SWaterCostSum=1, CountLogyu=160, MWaterSumPre=0, Mtotalhu=2, Stotalyu=1, CountOwehu=2, MWaterCostSum=1, SWaterPrice=2, CountMWaterLog=2, MWaterPrice=1, MWaterCountPre=1, CountLoghu=3, Mtotalyu=1, SWaterSumPre=1, SWaterCountPre=1, SWaterCostCount=2, CountAllyu=2, MWaterSumOwe=1, SumMWaterLog=100}
2019-04-29 20:50:42 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 20:50:42 -HTTP METHOD : GET
2019-04-29 20:50:42 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 20:50:42 -参数 : []
2019-04-29 20:50:42 -耗时 : 9
2019-04-29 20:50:42 -返回值 : charts/tableHeatMM
2019-04-29 20:50:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 20:50:47 -HTTP METHOD : GET
2019-04-29 20:50:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 20:50:47 -参数 : []
2019-04-29 20:50:47 -耗时 : 1
2019-04-29 20:50:47 -返回值 : system/dept/deptTree
2019-04-29 20:50:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 20:50:47 -HTTP METHOD : GET
2019-04-29 20:50:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 20:50:47 -参数 : []
2019-04-29 20:50:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 20:50:47 -==> Parameters: 
2019-04-29 20:50:47 -<==      Total: 3
2019-04-29 20:50:47 -耗时 : 4
2019-04-29 20:50:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 20:50:49 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-04-29 20:50:49 -HTTP METHOD : POST
2019-04-29 20:50:49 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 20:50:49 -参数 : [com.bootdo.heat.vo.HeatVo@54b4225f, com.bootdo.moneyLog.vo.HeatLogVo@78c0edfb]
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:50:49 -<==      Total: 1
2019-04-29 20:50:49 -耗时 : 174
2019-04-29 20:50:49 -返回值 : {GSHeatCountPre=6, MHeatCostCount=7, GMHeatArea=1, SHeatCostCount=7, GSHeatSumPre=1, GMHeatCountPre=6, CountPrehu=24, MHeatCountPre=6, SumSHeatLog=40, MHeatPrice=1, CountOweyu=1, SHeatPrice=1, GMHeatPrice=1, CountPreyu=6, SumGMHeatLog=0, CountLogyu=240, CountGSHeatLog=1, SHeatSumPre=1, GMHeatCountOwe=1, CountOwehu=4, GMtotalhu=7, CountGMHeatLog=0, GStotalhu=7, CountLoghu=4, GSHeatSumOwe=0, GSHeatPrice=1, MHeatSumOwe=1, SHeatCountPre=6, GSHeatCountOwe=1, GMtotalyu=1, CountAllyu=7, GStotalyu=1, CountSHeatLog=1, GSHeatCostSum=1, MHeatCostSum=103, SHeatCostSum=1, CountAllhu=28, CountCostyu=106, MHeatArea=103, SHeatSumOwe=0, MHeatSumPre=3, GMHeatSumPre=1, Stotalhu=7, CountPrice=4, GMHeatCostCount=7, GMHeatCostSum=1, GSHeatCostCount=7, SumGSHeatLog=80, CountCosthu=28, SHeatCountOwe=1, CountMHeatLog=2, Mtotalhu=7, Stotalyu=1, CountArea=106, GMHeatSumOwe=0, GSHeatArea=1, SumMHeatLog=120, SHeatArea=1, Mtotalyu=4, MHeatCountOwe=1}
2019-04-29 20:50:55 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 20:50:55 -HTTP METHOD : GET
2019-04-29 20:50:55 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 20:50:55 -参数 : []
2019-04-29 20:50:55 -耗时 : 0
2019-04-29 20:50:55 -返回值 : charts/tableElecMM
2019-04-29 20:50:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 20:50:59 -HTTP METHOD : GET
2019-04-29 20:50:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 20:50:59 -参数 : []
2019-04-29 20:50:59 -耗时 : 0
2019-04-29 20:50:59 -返回值 : system/dept/deptTree
2019-04-29 20:50:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 20:50:59 -HTTP METHOD : GET
2019-04-29 20:50:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 20:50:59 -参数 : []
2019-04-29 20:50:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 20:50:59 -==> Parameters: 
2019-04-29 20:50:59 -<==      Total: 3
2019-04-29 20:50:59 -耗时 : 4
2019-04-29 20:50:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 20:51:06 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-04-29 20:51:06 -HTTP METHOD : POST
2019-04-29 20:51:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 20:51:06 -参数 : [com.bootdo.elec.vo.ElecVo@2bc7e3e9, com.bootdo.moneyLog.vo.ElecLogVo@53547bb1]
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-04-29 20:51:06 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 20:51:06 -<==      Total: 1
2019-04-29 20:51:06 -耗时 : 514
2019-04-29 20:51:06 -返回值 : {ZElecSumPre=1, SumG1ElecLog=70, SElecSumPre=1, SumG2ElecLog=80, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=2, G1ElecAmount=100, WSElecPrice=7, WSElecAmount=1, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=1, MMElecAmount=0, CountZElecLog=1, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=20, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=6, MMtotalhu=11, ZElecPrice=11, SElecCostCount=11, MElecCostSum=1, SumMElecLog=52, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=8, SumMMElecLog=20, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=1, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=0, CountMMElecLog=1, G1ElecPrice=4, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=2, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=1, Mtotalyu=1, WMElecSumOwe=1, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=4, CountLogyu=484, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=1, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=12, MMElecPrice=9, ZElecCountPre=9, G3ElecPrice=5, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=67, MSElecPrice=10, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=0, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=1, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=1, MMElecSumPre=1, MMElecCostSum=0, G2ElecSumOwe=0, WMElecCostCount=11}
2019-04-29 20:53:09 -请求地址 : http://localhost:8081/index
2019-04-29 20:53:09 -HTTP METHOD : GET
2019-04-29 20:53:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 20:53:09 -参数 : [{}]
2019-04-29 20:53:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 20:53:09 -==> Parameters: 1(Long)
2019-04-29 20:53:09 -<==      Total: 49
2019-04-29 20:53:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 20:53:09 -==> Parameters: 138(Long)
2019-04-29 20:53:09 -<==      Total: 1
2019-04-29 20:53:09 -耗时 : 26
2019-04-29 20:53:09 -返回值 : index_v1
2019-04-29 20:53:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 20:53:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 20:53:09.541(Timestamp)
2019-04-29 20:53:09 -<==    Updates: 1
2019-04-29 20:53:09 -请求地址 : http://localhost:8081/main
2019-04-29 20:53:09 -HTTP METHOD : GET
2019-04-29 20:53:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 20:53:09 -参数 : []
2019-04-29 20:53:09 -耗时 : 0
2019-04-29 20:53:09 -返回值 : main
2019-04-29 20:53:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 20:53:10 -HTTP METHOD : GET
2019-04-29 20:53:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 20:53:10 -参数 : []
2019-04-29 20:53:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 20:53:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 20:53:10 -<==      Total: 0
2019-04-29 20:53:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 20:53:10 -==> Parameters: 1(Long), 0(String)
2019-04-29 20:53:10 -<==      Total: 1
2019-04-29 20:53:10 -耗时 : 7
2019-04-29 20:53:10 -返回值 : com.bootdo.common.utils.PageUtils@560ef6db
2019-04-29 20:53:10 -请求地址 : http://localhost:8081/main
2019-04-29 20:53:10 -HTTP METHOD : GET
2019-04-29 20:53:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 20:53:10 -参数 : []
2019-04-29 20:53:10 -耗时 : 0
2019-04-29 20:53:10 -返回值 : main
2019-04-29 20:53:52 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 21:19:19 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 423]
2019-04-29 21:23:30 -请求地址 : http://localhost:8081/login;JSESSIONID=9a609b15-5eb7-4177-bbce-3ac68036d977
2019-04-29 21:23:30 -HTTP METHOD : GET
2019-04-29 21:23:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 21:23:30 -参数 : [{}]
2019-04-29 21:23:30 -耗时 : 1
2019-04-29 21:23:30 -返回值 : login
2019-04-29 21:23:31 -请求地址 : http://localhost:8081/login;JSESSIONID=9a609b15-5eb7-4177-bbce-3ac68036d977
2019-04-29 21:23:31 -HTTP METHOD : GET
2019-04-29 21:23:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 21:23:31 -参数 : [{}]
2019-04-29 21:23:31 -耗时 : 0
2019-04-29 21:23:31 -返回值 : login
2019-04-29 21:23:31 -请求地址 : http://localhost:8081/getVerify
2019-04-29 21:23:31 -HTTP METHOD : GET
2019-04-29 21:23:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 21:23:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@64a1971a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3a023c91]
2019-04-29 21:23:31 -1981
2019-04-29 21:23:31 -耗时 : 28
2019-04-29 21:23:31 -返回值 : null
2019-04-29 21:23:31 -请求地址 : http://localhost:8081/getVerify
2019-04-29 21:23:31 -HTTP METHOD : GET
2019-04-29 21:23:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 21:23:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@cf7953, org.apache.shiro.web.servlet.ShiroHttpServletResponse@19ec4307]
2019-04-29 21:23:31 -5034
2019-04-29 21:23:31 -耗时 : 42
2019-04-29 21:23:31 -返回值 : null
2019-04-29 21:23:52 -请求地址 : http://localhost:8081/login
2019-04-29 21:23:52 -HTTP METHOD : POST
2019-04-29 21:23:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 21:23:52 -参数 : [admin, 111111, 5034, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7bd642a8]
2019-04-29 21:23:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 21:23:52 -==> Parameters: admin(String)
2019-04-29 21:23:52 -<==      Total: 1
2019-04-29 21:23:52 -耗时 : 74
2019-04-29 21:23:52 -返回值 : {msg=操作成功, code=0}
2019-04-29 21:23:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 21:23:52 -==> Parameters: 1(Long), admin(String), 登录(String), 74(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 21:23:52.296(Timestamp)
2019-04-29 21:23:52 -请求地址 : http://localhost:8081/index
2019-04-29 21:23:52 -HTTP METHOD : GET
2019-04-29 21:23:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 21:23:52 -参数 : [{}]
2019-04-29 21:23:52 -<==    Updates: 1
2019-04-29 21:23:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 21:23:52 -==> Parameters: 1(Long)
2019-04-29 21:23:52 -<==      Total: 49
2019-04-29 21:23:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 21:23:52 -==> Parameters: 138(Long)
2019-04-29 21:23:52 -<==      Total: 1
2019-04-29 21:23:52 -耗时 : 196
2019-04-29 21:23:52 -返回值 : index_v1
2019-04-29 21:23:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 21:23:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 197(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 21:23:52.554(Timestamp)
2019-04-29 21:23:52 -<==    Updates: 1
2019-04-29 21:23:52 -请求地址 : http://localhost:8081/main
2019-04-29 21:23:52 -HTTP METHOD : GET
2019-04-29 21:23:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 21:23:52 -参数 : []
2019-04-29 21:23:52 -耗时 : 1
2019-04-29 21:23:52 -返回值 : main
2019-04-29 21:23:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 21:23:53 -HTTP METHOD : GET
2019-04-29 21:23:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 21:23:53 -参数 : []
2019-04-29 21:23:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 21:23:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 21:23:53 -<==      Total: 0
2019-04-29 21:23:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 21:23:53 -==> Parameters: 1(Long), 0(String)
2019-04-29 21:23:53 -<==      Total: 1
2019-04-29 21:23:53 -耗时 : 10
2019-04-29 21:23:53 -返回值 : com.bootdo.common.utils.PageUtils@4c89cfb7
2019-04-29 21:23:53 -请求地址 : http://localhost:8081/main
2019-04-29 21:23:53 -HTTP METHOD : GET
2019-04-29 21:23:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 21:23:53 -参数 : []
2019-04-29 21:23:53 -耗时 : 2
2019-04-29 21:23:53 -返回值 : main
2019-04-29 21:23:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 21:23:55 -==> Parameters: 1(Long)
2019-04-29 21:23:55 -<==      Total: 93
2019-04-29 21:23:56 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 21:23:56 -HTTP METHOD : GET
2019-04-29 21:23:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 21:23:56 -参数 : []
2019-04-29 21:23:56 -耗时 : 1
2019-04-29 21:23:56 -返回值 : charts/tableElecMM
2019-04-29 21:23:57 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-29 21:23:57 -HTTP METHOD : GET
2019-04-29 21:23:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-29 21:23:57 -参数 : []
2019-04-29 21:23:57 -耗时 : 1
2019-04-29 21:23:57 -返回值 : charts/tableWaterMM
2019-04-29 21:37:34 -Starting BootdoApplication on ZJZL-20180906VX with PID 9036 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-29 21:37:34 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-29 21:37:34 -The following profiles are active: dev
2019-04-29 21:37:34 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 29 21:37:34 CST 2019]; root of context hierarchy
2019-04-29 21:37:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-29 21:37:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb3b3035] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 21:37:40 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ad945edc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 21:37:41 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 21:37:41 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 21:37:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 21:37:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-29 21:37:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-29 21:37:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 21:37:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 21:37:41 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 21:37:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 21:37:43 -Tomcat initialized with port(s): 8081 (http)
2019-04-29 21:37:43 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-29 21:37:43 -Starting service [Tomcat]
2019-04-29 21:37:43 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-29 21:37:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-29 21:37:43 -Initializing Spring embedded WebApplicationContext
2019-04-29 21:37:43 -Root WebApplicationContext: initialization completed in 8622 ms
2019-04-29 21:37:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-29 21:37:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-29 21:37:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-29 21:37:44 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-29 21:37:44 -Filter xssFilter was not registered (disabled)
2019-04-29 21:37:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-29 21:37:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-29 21:37:44 -Servlet statViewServlet mapped to [/druid/*]
2019-04-29 21:37:44 -Servlet dispatcherServlet mapped to [/]
2019-04-29 21:37:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 29 21:37:34 CST 2019]; root of context hierarchy
2019-04-29 21:37:52 -Using default implementation for ThreadExecutor
2019-04-29 21:37:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-29 21:37:52 -Quartz Scheduler v.2.2.1 created.
2019-04-29 21:37:52 -RAMJobStore initialized.
2019-04-29 21:37:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-29 21:37:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-29 21:37:52 -Quartz scheduler version: 2.2.1
2019-04-29 21:37:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@50a7c72b
2019-04-29 21:37:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-29 21:37:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-29 21:37:55 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-29 21:37:55 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 21:37:55 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-29 21:37:55 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 21:37:55 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-29 21:37:55 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-29 21:37:55 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-29 21:37:55 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 21:37:55 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-29 21:37:55 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 21:37:55 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-29 21:37:55 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 21:37:55 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-29 21:37:55 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-29 21:37:55 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-29 21:37:55 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-29 21:37:55 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 21:37:55 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-29 21:37:55 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-29 21:37:55 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 21:37:55 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-29 21:37:55 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-29 21:37:55 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-29 21:37:55 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-29 21:37:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-29 21:37:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-29 21:37:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-29 21:37:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-29 21:37:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-29 21:37:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-29 21:37:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-29 21:37:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-29 21:37:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-29 21:37:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-29 21:37:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-29 21:37:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-29 21:37:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-29 21:37:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-29 21:37:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-29 21:37:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-29 21:37:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-29 21:37:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-29 21:37:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-29 21:37:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-29 21:37:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-29 21:37:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-29 21:37:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-29 21:37:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-29 21:37:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-29 21:37:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-29 21:37:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-29 21:37:55 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-29 21:37:55 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-29 21:37:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 21:37:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-29 21:37:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-29 21:37:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-29 21:37:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-29 21:37:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-29 21:37:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-29 21:37:55 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-29 21:37:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-29 21:37:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-29 21:37:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-29 21:37:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-29 21:37:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-29 21:37:55 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-29 21:37:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 21:37:55 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-29 21:37:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-29 21:37:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-29 21:37:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-29 21:37:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-29 21:37:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-29 21:37:55 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-29 21:37:55 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-29 21:37:55 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 21:37:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-29 21:37:55 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 21:37:55 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-29 21:37:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-29 21:37:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-29 21:37:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-29 21:37:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-29 21:37:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-29 21:37:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-29 21:37:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-29 21:37:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-29 21:37:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-29 21:37:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-29 21:37:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-29 21:37:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-29 21:37:55 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-29 21:37:55 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-29 21:37:55 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-29 21:37:55 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-29 21:37:55 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-29 21:37:55 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-29 21:37:55 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-29 21:37:55 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-29 21:37:55 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-29 21:37:55 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-29 21:37:55 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-29 21:37:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-29 21:37:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-29 21:37:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-29 21:37:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-29 21:37:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-29 21:37:55 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-29 21:37:55 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-29 21:37:55 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-29 21:37:55 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-29 21:37:55 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-29 21:37:55 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-29 21:37:55 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-29 21:37:55 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-29 21:37:55 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-29 21:37:55 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-29 21:37:55 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-29 21:37:55 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-29 21:37:55 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-29 21:37:55 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-29 21:37:55 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-29 21:37:55 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-29 21:37:55 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-29 21:37:55 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-29 21:37:55 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-29 21:37:55 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-29 21:37:55 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-29 21:37:55 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 21:37:55 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-29 21:37:55 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-29 21:37:55 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-29 21:37:55 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-29 21:37:55 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 21:37:55 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-29 21:37:55 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-29 21:37:55 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 21:37:55 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-29 21:37:55 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-29 21:37:55 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-29 21:37:55 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 21:37:55 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 21:37:55 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-29 21:37:55 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-29 21:37:55 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-29 21:37:55 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-29 21:37:55 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-29 21:37:55 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-29 21:37:56 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 21:37:56 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 29 21:37:34 CST 2019]; root of context hierarchy
2019-04-29 21:37:56 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 21:37:56 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 21:37:56 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 21:37:56 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-29 21:37:56 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-29 21:37:58 -Registering beans for JMX exposure on startup
2019-04-29 21:37:58 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-29 21:37:58 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-29 21:37:58 -Starting beans in phase 2147483647
2019-04-29 21:37:58 -Context refreshed
2019-04-29 21:37:58 -Found 1 custom documentation plugin(s)
2019-04-29 21:37:58 -Scanning for api listing references
2019-04-29 21:37:59 -Generating unique operation named: getCountDUsingPOST_1
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_1
2019-04-29 21:37:59 -Generating unique operation named: addUsingGET_1
2019-04-29 21:37:59 -Generating unique operation named: editUsingGET_1
2019-04-29 21:37:59 -Generating unique operation named: listUsingGET_1
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_2
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_3
2019-04-29 21:37:59 -Generating unique operation named: saveUsingPOST_1
2019-04-29 21:37:59 -Generating unique operation named: updateUsingGET_1
2019-04-29 21:37:59 -Generating unique operation named: updateUsingHEAD_1
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPOST_1
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPUT_1
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPATCH_1
2019-04-29 21:37:59 -Generating unique operation named: updateUsingDELETE_1
2019-04-29 21:37:59 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-29 21:37:59 -Generating unique operation named: updateUsingTRACE_1
2019-04-29 21:37:59 -Generating unique operation named: addUsingGET_2
2019-04-29 21:37:59 -Generating unique operation named: editUsingGET_2
2019-04-29 21:37:59 -Generating unique operation named: listUsingGET_2
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_4
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_5
2019-04-29 21:37:59 -Generating unique operation named: saveUsingPOST_2
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPOST_2
2019-04-29 21:37:59 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-29 21:37:59 -Generating unique operation named: addUsingGET_3
2019-04-29 21:37:59 -Generating unique operation named: editUsingGET_3
2019-04-29 21:37:59 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-29 21:37:59 -Generating unique operation named: listUsingGET_3
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_6
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_7
2019-04-29 21:37:59 -Generating unique operation named: saveUsingPOST_3
2019-04-29 21:37:59 -Generating unique operation named: updateUsingGET_2
2019-04-29 21:37:59 -Generating unique operation named: updateUsingHEAD_2
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPOST_3
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPUT_2
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPATCH_2
2019-04-29 21:37:59 -Generating unique operation named: updateUsingDELETE_2
2019-04-29 21:37:59 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-29 21:37:59 -Generating unique operation named: updateUsingTRACE_2
2019-04-29 21:37:59 -Generating unique operation named: addUsingGET_4
2019-04-29 21:37:59 -Generating unique operation named: editUsingGET_4
2019-04-29 21:37:59 -Generating unique operation named: listUsingGET_4
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_8
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_9
2019-04-29 21:37:59 -Generating unique operation named: saveUsingPOST_4
2019-04-29 21:37:59 -Generating unique operation named: updateUsingGET_3
2019-04-29 21:37:59 -Generating unique operation named: updateUsingHEAD_3
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPOST_4
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPUT_3
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPATCH_3
2019-04-29 21:37:59 -Generating unique operation named: updateUsingDELETE_3
2019-04-29 21:37:59 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-29 21:37:59 -Generating unique operation named: updateUsingTRACE_3
2019-04-29 21:37:59 -Generating unique operation named: ElecUsingGET_1
2019-04-29 21:37:59 -Generating unique operation named: addUsingGET_5
2019-04-29 21:37:59 -Generating unique operation named: editUsingGET_5
2019-04-29 21:37:59 -Generating unique operation named: listUsingGET_5
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_10
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_11
2019-04-29 21:37:59 -Generating unique operation named: saveUsingPOST_5
2019-04-29 21:37:59 -Generating unique operation named: updateUsingGET_4
2019-04-29 21:37:59 -Generating unique operation named: updateUsingHEAD_4
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPOST_5
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPUT_4
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPATCH_4
2019-04-29 21:37:59 -Generating unique operation named: updateUsingDELETE_4
2019-04-29 21:37:59 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-29 21:37:59 -Generating unique operation named: updateUsingTRACE_4
2019-04-29 21:37:59 -Generating unique operation named: editUsingGET_6
2019-04-29 21:37:59 -Generating unique operation named: listUsingGET_6
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPOST_6
2019-04-29 21:37:59 -Generating unique operation named: addUsingGET_6
2019-04-29 21:37:59 -Generating unique operation named: editUsingGET_7
2019-04-29 21:37:59 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-29 21:37:59 -Generating unique operation named: listUsingGET_7
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_12
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_13
2019-04-29 21:37:59 -Generating unique operation named: saveUsingPOST_6
2019-04-29 21:37:59 -Generating unique operation named: updateUsingGET_5
2019-04-29 21:37:59 -Generating unique operation named: updateUsingHEAD_5
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPOST_7
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPUT_5
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPATCH_5
2019-04-29 21:37:59 -Generating unique operation named: updateUsingDELETE_5
2019-04-29 21:37:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-29 21:37:59 -Generating unique operation named: updateUsingTRACE_5
2019-04-29 21:37:59 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-29 21:37:59 -Generating unique operation named: addUsingGET_7
2019-04-29 21:37:59 -Generating unique operation named: editUsingGET_8
2019-04-29 21:37:59 -Generating unique operation named: listUsingGET_8
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_14
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_15
2019-04-29 21:37:59 -Generating unique operation named: saveUsingPOST_7
2019-04-29 21:37:59 -Generating unique operation named: updateUsingGET_6
2019-04-29 21:37:59 -Generating unique operation named: updateUsingHEAD_6
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPOST_8
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPUT_6
2019-04-29 21:37:59 -Generating unique operation named: updateUsingPATCH_6
2019-04-29 21:37:59 -Generating unique operation named: updateUsingDELETE_6
2019-04-29 21:37:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-29 21:37:59 -Generating unique operation named: updateUsingTRACE_6
2019-04-29 21:37:59 -Generating unique operation named: addUsingGET_8
2019-04-29 21:37:59 -Generating unique operation named: editUsingGET_9
2019-04-29 21:37:59 -Generating unique operation named: listUsingGET_9
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_16
2019-04-29 21:37:59 -Generating unique operation named: removeUsingPOST_17
2019-04-29 21:37:59 -Generating unique operation named: saveUsingPOST_8
2019-04-29 21:38:00 -Generating unique operation named: updateUsingGET_7
2019-04-29 21:38:00 -Generating unique operation named: updateUsingHEAD_7
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPOST_9
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPUT_7
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPATCH_7
2019-04-29 21:38:00 -Generating unique operation named: updateUsingDELETE_7
2019-04-29 21:38:00 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-29 21:38:00 -Generating unique operation named: updateUsingTRACE_7
2019-04-29 21:38:00 -Generating unique operation named: addUsingGET_9
2019-04-29 21:38:00 -Generating unique operation named: editUsingGET_10
2019-04-29 21:38:00 -Generating unique operation named: infoUsingGET_1
2019-04-29 21:38:00 -Generating unique operation named: infoUsingHEAD_1
2019-04-29 21:38:00 -Generating unique operation named: infoUsingPOST_1
2019-04-29 21:38:00 -Generating unique operation named: infoUsingPUT_1
2019-04-29 21:38:00 -Generating unique operation named: infoUsingPATCH_1
2019-04-29 21:38:00 -Generating unique operation named: infoUsingDELETE_1
2019-04-29 21:38:00 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-29 21:38:00 -Generating unique operation named: infoUsingTRACE_1
2019-04-29 21:38:00 -Generating unique operation named: listUsingGET_10
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_18
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_19
2019-04-29 21:38:00 -Generating unique operation named: saveUsingPOST_9
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPOST_10
2019-04-29 21:38:00 -Generating unique operation named: listUsingGET_11
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_20
2019-04-29 21:38:00 -Generating unique operation named: welcomeUsingGET_1
2019-04-29 21:38:00 -Generating unique operation named: addUsingGET_10
2019-04-29 21:38:00 -Generating unique operation named: editUsingGET_11
2019-04-29 21:38:00 -Generating unique operation named: listUsingGET_12
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_21
2019-04-29 21:38:00 -Generating unique operation named: saveUsingPOST_10
2019-04-29 21:38:00 -Generating unique operation named: treeUsingGET_1
2019-04-29 21:38:00 -Generating unique operation named: treeUsingGET_2
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPOST_11
2019-04-29 21:38:00 -Generating unique operation named: addUsingGET_11
2019-04-29 21:38:00 -Generating unique operation named: editUsingGET_12
2019-04-29 21:38:00 -Generating unique operation named: listUsingGET_13
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_22
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_23
2019-04-29 21:38:00 -Generating unique operation named: saveUsingPOST_11
2019-04-29 21:38:00 -Generating unique operation named: updateUsingGET_8
2019-04-29 21:38:00 -Generating unique operation named: updateUsingHEAD_8
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPOST_12
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPUT_8
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPATCH_8
2019-04-29 21:38:00 -Generating unique operation named: updateUsingDELETE_8
2019-04-29 21:38:00 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-29 21:38:00 -Generating unique operation named: updateUsingTRACE_8
2019-04-29 21:38:00 -Generating unique operation named: addUsingGET_12
2019-04-29 21:38:00 -Generating unique operation named: editUsingGET_13
2019-04-29 21:38:00 -Generating unique operation named: listUsingGET_14
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_24
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_25
2019-04-29 21:38:00 -Generating unique operation named: saveUsingPOST_12
2019-04-29 21:38:00 -Generating unique operation named: updateUsingGET_9
2019-04-29 21:38:00 -Generating unique operation named: updateUsingHEAD_9
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPOST_13
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPUT_9
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPATCH_9
2019-04-29 21:38:00 -Generating unique operation named: updateUsingDELETE_9
2019-04-29 21:38:00 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-29 21:38:00 -Generating unique operation named: updateUsingTRACE_9
2019-04-29 21:38:00 -Generating unique operation named: addUsingGET_13
2019-04-29 21:38:00 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-29 21:38:00 -Generating unique operation named: editUsingGET_14
2019-04-29 21:38:00 -Generating unique operation named: listUsingGET_15
2019-04-29 21:38:00 -Generating unique operation named: saveUsingPOST_13
2019-04-29 21:38:00 -Generating unique operation named: saveUsingPOST_14
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPOST_14
2019-04-29 21:38:00 -Generating unique operation named: listUsingGET_16
2019-04-29 21:38:00 -Generating unique operation named: listUsingHEAD_1
2019-04-29 21:38:00 -Generating unique operation named: listUsingPOST_1
2019-04-29 21:38:00 -Generating unique operation named: listUsingPUT_1
2019-04-29 21:38:00 -Generating unique operation named: listUsingPATCH_1
2019-04-29 21:38:00 -Generating unique operation named: listUsingDELETE_1
2019-04-29 21:38:00 -Generating unique operation named: listUsingOPTIONS_1
2019-04-29 21:38:00 -Generating unique operation named: listUsingTRACE_1
2019-04-29 21:38:00 -Generating unique operation named: countDDUsingGET_1
2019-04-29 21:38:00 -Generating unique operation named: exportDDUsingGET_1
2019-04-29 21:38:00 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-29 21:38:00 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-29 21:38:00 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-29 21:38:00 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-29 21:38:00 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-29 21:38:00 -Generating unique operation named: addUsingGET_14
2019-04-29 21:38:00 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-29 21:38:00 -Generating unique operation named: editUsingGET_15
2019-04-29 21:38:00 -Generating unique operation named: listUsingGET_17
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_26
2019-04-29 21:38:00 -Generating unique operation named: saveUsingPOST_15
2019-04-29 21:38:00 -Generating unique operation named: treeUsingGET_3
2019-04-29 21:38:00 -Generating unique operation named: treeViewUsingGET_1
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPOST_15
2019-04-29 21:38:00 -Generating unique operation named: addUsingGET_15
2019-04-29 21:38:00 -Generating unique operation named: editUsingGET_16
2019-04-29 21:38:00 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-29 21:38:00 -Generating unique operation named: listUsingGET_18
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_27
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_28
2019-04-29 21:38:00 -Generating unique operation named: saveUsingPOST_16
2019-04-29 21:38:00 -Generating unique operation named: updateUsingGET_10
2019-04-29 21:38:00 -Generating unique operation named: updateUsingHEAD_10
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPOST_16
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPUT_10
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPATCH_10
2019-04-29 21:38:00 -Generating unique operation named: updateUsingDELETE_10
2019-04-29 21:38:00 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-29 21:38:00 -Generating unique operation named: updateUsingTRACE_10
2019-04-29 21:38:00 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-29 21:38:00 -Generating unique operation named: addUsingGET_16
2019-04-29 21:38:00 -Generating unique operation named: editUsingGET_17
2019-04-29 21:38:00 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-29 21:38:00 -Generating unique operation named: listUsingGET_19
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_29
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_30
2019-04-29 21:38:00 -Generating unique operation named: saveUsingPOST_17
2019-04-29 21:38:00 -Generating unique operation named: updateUsingGET_11
2019-04-29 21:38:00 -Generating unique operation named: updateUsingHEAD_11
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPOST_17
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPUT_11
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPATCH_11
2019-04-29 21:38:00 -Generating unique operation named: updateUsingDELETE_11
2019-04-29 21:38:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-29 21:38:00 -Generating unique operation named: updateUsingTRACE_11
2019-04-29 21:38:00 -Generating unique operation named: addUsingGET_17
2019-04-29 21:38:00 -Generating unique operation named: editUsingGET_18
2019-04-29 21:38:00 -Generating unique operation named: listUsingGET_20
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_31
2019-04-29 21:38:00 -Generating unique operation named: removeUsingPOST_32
2019-04-29 21:38:00 -Generating unique operation named: saveUsingPOST_18
2019-04-29 21:38:00 -Generating unique operation named: updateUsingGET_12
2019-04-29 21:38:00 -Generating unique operation named: updateUsingHEAD_12
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPOST_18
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPUT_12
2019-04-29 21:38:00 -Generating unique operation named: updateUsingPATCH_12
2019-04-29 21:38:00 -Generating unique operation named: updateUsingDELETE_12
2019-04-29 21:38:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-29 21:38:00 -Generating unique operation named: updateUsingTRACE_12
2019-04-29 21:38:00 -Starting Quartz Scheduler now
2019-04-29 21:38:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-29 21:38:00 -Starting...
2019-04-29 21:38:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-29 21:38:00 -Started.
2019-04-29 21:38:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-29 21:38:03 -Using a shared selector for servlet write/read
2019-04-29 21:38:03 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-29 21:38:03 -Started BootdoApplication in 30.222 seconds (JVM running for 30.988)
2019-04-29 21:38:03 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-29 21:38:03 -==> Parameters: 
2019-04-29 21:38:03 -<==      Total: 1
2019-04-29 21:38:21 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-29 21:38:21 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-29 21:38:21 -FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
2019-04-29 21:38:21 -Enabling session validation scheduler...
2019-04-29 21:38:22 -请求地址 : http://localhost:8081/login;JSESSIONID=387e6d09-64ff-4af7-967e-ac36735740ba
2019-04-29 21:38:22 -HTTP METHOD : GET
2019-04-29 21:38:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 21:38:22 -参数 : [{}]
2019-04-29 21:38:22 -耗时 : 2
2019-04-29 21:38:22 -返回值 : login
2019-04-29 21:38:23 -请求地址 : http://localhost:8081/getVerify
2019-04-29 21:38:23 -HTTP METHOD : GET
2019-04-29 21:38:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 21:38:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2762f72c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@62607da4]
2019-04-29 21:38:26 -4787
2019-04-29 21:38:26 -耗时 : 3434
2019-04-29 21:38:26 -返回值 : null
2019-04-29 21:38:26 -请求地址 : http://localhost:8081/login
2019-04-29 21:38:26 -HTTP METHOD : GET
2019-04-29 21:38:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 21:38:26 -参数 : [{}]
2019-04-29 21:38:26 -耗时 : 1
2019-04-29 21:38:26 -返回值 : login
2019-04-29 21:38:31 -请求地址 : http://localhost:8081/login
2019-04-29 21:38:31 -HTTP METHOD : POST
2019-04-29 21:38:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 21:38:31 -参数 : [admin, 111111, 4787, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4bf39914]
2019-04-29 21:38:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 21:38:31 -==> Parameters: admin(String)
2019-04-29 21:38:31 -<==      Total: 1
2019-04-29 21:38:31 -耗时 : 275
2019-04-29 21:38:31 -返回值 : {msg=操作成功, code=0}
2019-04-29 21:38:31 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-29 21:38:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 21:38:31 -==> Parameters: 1(Long), admin(String), 登录(String), 275(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 21:38:31.803(Timestamp)
2019-04-29 21:38:32 -请求地址 : http://localhost:8081/index
2019-04-29 21:38:32 -HTTP METHOD : GET
2019-04-29 21:38:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 21:38:32 -参数 : [{}]
2019-04-29 21:38:32 -<==    Updates: 1
2019-04-29 21:38:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 21:38:32 -==> Parameters: 1(Long)
2019-04-29 21:38:32 -<==      Total: 49
2019-04-29 21:38:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 21:38:32 -==> Parameters: 138(Long)
2019-04-29 21:38:32 -<==      Total: 1
2019-04-29 21:38:32 -耗时 : 581
2019-04-29 21:38:32 -返回值 : index_v1
2019-04-29 21:38:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 21:38:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 581(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 21:38:32.713(Timestamp)
2019-04-29 21:38:32 -<==    Updates: 1
2019-04-29 21:38:32 -请求地址 : http://localhost:8081/main
2019-04-29 21:38:32 -HTTP METHOD : GET
2019-04-29 21:38:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 21:38:32 -参数 : []
2019-04-29 21:38:32 -耗时 : 0
2019-04-29 21:38:32 -返回值 : main
2019-04-29 21:38:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 21:38:33 -HTTP METHOD : GET
2019-04-29 21:38:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 21:38:33 -参数 : []
2019-04-29 21:38:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 21:38:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 21:38:33 -请求地址 : http://localhost:8081/main
2019-04-29 21:38:33 -HTTP METHOD : GET
2019-04-29 21:38:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 21:38:33 -参数 : []
2019-04-29 21:38:33 -耗时 : 0
2019-04-29 21:38:33 -返回值 : main
2019-04-29 21:38:33 -<==      Total: 0
2019-04-29 21:38:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 21:38:33 -==> Parameters: 1(Long), 0(String)
2019-04-29 21:38:33 -<==      Total: 1
2019-04-29 21:38:33 -耗时 : 240
2019-04-29 21:38:33 -返回值 : com.bootdo.common.utils.PageUtils@313f2652
2019-04-29 21:38:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 21:38:37 -==> Parameters: 1(Long)
2019-04-29 21:38:37 -<==      Total: 93
2019-04-29 21:38:37 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 21:38:37 -HTTP METHOD : GET
2019-04-29 21:38:37 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 21:38:37 -参数 : []
2019-04-29 21:38:37 -耗时 : 14
2019-04-29 21:38:37 -返回值 : charts/tableElecMM
2019-04-29 21:38:39 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-29 21:38:39 -HTTP METHOD : GET
2019-04-29 21:38:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-29 21:38:39 -参数 : []
2019-04-29 21:38:39 -耗时 : 9
2019-04-29 21:38:39 -返回值 : charts/tableWaterMM
2019-04-29 21:38:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 21:38:44 -HTTP METHOD : GET
2019-04-29 21:38:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 21:38:44 -参数 : []
2019-04-29 21:38:44 -耗时 : 4
2019-04-29 21:38:44 -返回值 : system/dept/deptTree
2019-04-29 21:38:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 21:38:44 -HTTP METHOD : GET
2019-04-29 21:38:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 21:38:44 -参数 : []
2019-04-29 21:38:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 21:38:44 -==> Parameters: 
2019-04-29 21:38:44 -<==      Total: 3
2019-04-29 21:38:44 -耗时 : 48
2019-04-29 21:38:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 21:38:46 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-04-29 21:38:46 -HTTP METHOD : POST
2019-04-29 21:38:46 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-29 21:38:46 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@20a4e57b, com.bootdo.water.vo.WaterVo@5987165e]
2019-04-29 21:38:46 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 21:38:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 21:38:46 -<==      Total: 1
2019-04-29 21:38:46 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-29 21:38:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 21:38:46 -<==      Total: 1
2019-04-29 21:38:46 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 21:38:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 21:38:46 -<==      Total: 1
2019-04-29 21:38:46 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-29 21:38:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 21:38:46 -<==      Total: 1
2019-04-29 21:38:46 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 21:38:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 21:38:46 -<==      Total: 1
2019-04-29 21:38:46 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-29 21:38:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 21:38:46 -<==      Total: 1
2019-04-29 21:38:46 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-29 21:38:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 21:38:46 -<==      Total: 1
2019-04-29 21:38:46 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-04-29 21:38:46 -==> Parameters: 2019-03(String), 2(String)
2019-04-29 21:38:46 -<==      Total: 1
2019-04-29 21:38:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 21:38:46 -Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.MWaterSumPreLast(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterSumPreLast(WaterServiceImpl.java:109)
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:58)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$c9c081cb.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-29 21:38:46 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.MWaterSumPreLast(String), null, 2019-04-29 21:38:46.77(Timestamp)
2019-04-29 21:38:46 -<==    Updates: 1
2019-04-29 21:38:55 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-04-29 22:00:20 -Starting BootdoApplication on ZJZL-20180906VX with PID 8912 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-29 22:00:20 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-29 22:00:20 -The following profiles are active: dev
2019-04-29 22:00:20 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 29 22:00:20 CST 2019]; root of context hierarchy
2019-04-29 22:00:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-29 22:00:25 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 22:00:25 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 22:00:26 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 22:00:27 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 22:00:27 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 22:00:27 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-29 22:00:27 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-29 22:00:27 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 22:00:27 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 22:00:27 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 22:00:27 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-29 22:00:28 -Tomcat initialized with port(s): 8081 (http)
2019-04-29 22:00:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-29 22:00:28 -Starting service [Tomcat]
2019-04-29 22:00:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-29 22:00:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-29 22:00:29 -Initializing Spring embedded WebApplicationContext
2019-04-29 22:00:29 -Root WebApplicationContext: initialization completed in 8402 ms
2019-04-29 22:00:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-29 22:00:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-29 22:00:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-29 22:00:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-29 22:00:29 -Filter xssFilter was not registered (disabled)
2019-04-29 22:00:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-29 22:00:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-29 22:00:29 -Servlet statViewServlet mapped to [/druid/*]
2019-04-29 22:00:29 -Servlet dispatcherServlet mapped to [/]
2019-04-29 22:00:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 29 22:00:20 CST 2019]; root of context hierarchy
2019-04-29 22:00:37 -Using default implementation for ThreadExecutor
2019-04-29 22:00:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-29 22:00:37 -Quartz Scheduler v.2.2.1 created.
2019-04-29 22:00:37 -RAMJobStore initialized.
2019-04-29 22:00:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-29 22:00:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-29 22:00:37 -Quartz scheduler version: 2.2.1
2019-04-29 22:00:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5d5d3a5c
2019-04-29 22:00:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-29 22:00:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-29 22:00:40 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-29 22:00:40 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 22:00:40 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 22:00:40 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-29 22:00:40 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-29 22:00:40 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-29 22:00:40 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 22:00:40 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-29 22:00:40 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:40 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 22:00:40 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-29 22:00:40 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 22:00:40 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-29 22:00:40 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-29 22:00:40 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-29 22:00:40 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-29 22:00:40 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-29 22:00:40 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:40 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 22:00:40 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-29 22:00:40 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-29 22:00:40 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:40 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-29 22:00:40 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-29 22:00:40 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-29 22:00:40 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-29 22:00:40 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:40 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.getCountMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-29 22:00:40 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-29 22:00:40 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-29 22:00:40 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-29 22:00:40 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-29 22:00:40 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:40 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-29 22:00:40 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-29 22:00:40 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-29 22:00:40 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-29 22:00:40 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-29 22:00:40 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-29 22:00:40 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:40 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-29 22:00:40 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-29 22:00:40 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:40 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-29 22:00:40 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-29 22:00:40 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:40 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:40 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-29 22:00:40 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-29 22:00:40 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-29 22:00:40 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-29 22:00:40 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-29 22:00:40 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-29 22:00:40 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-29 22:00:40 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-29 22:00:40 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:40 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-29 22:00:40 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-29 22:00:40 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-29 22:00:40 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-29 22:00:40 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-29 22:00:40 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-29 22:00:40 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:40 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-29 22:00:40 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-29 22:00:40 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-29 22:00:40 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-29 22:00:40 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-29 22:00:40 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-29 22:00:40 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-29 22:00:40 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-29 22:00:40 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-29 22:00:40 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-29 22:00:40 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-29 22:00:40 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-29 22:00:40 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-29 22:00:40 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 22:00:40 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-29 22:00:40 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-29 22:00:40 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-29 22:00:40 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-29 22:00:40 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:40 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-29 22:00:40 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-29 22:00:40 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-29 22:00:40 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-29 22:00:40 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-29 22:00:40 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-29 22:00:40 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-29 22:00:40 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-29 22:00:40 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:40 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-29 22:00:40 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-29 22:00:40 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-29 22:00:40 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 22:00:40 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-29 22:00:40 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-29 22:00:40 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-29 22:00:40 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-29 22:00:40 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:40 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-29 22:00:40 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-29 22:00:40 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:40 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-29 22:00:40 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-29 22:00:40 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-29 22:00:40 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 22:00:40 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-29 22:00:40 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 22:00:40 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-29 22:00:40 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-29 22:00:40 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-29 22:00:40 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-29 22:00:40 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-29 22:00:40 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-29 22:00:40 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-29 22:00:40 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-29 22:00:40 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-29 22:00:40 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:40 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-29 22:00:40 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-29 22:00:40 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-29 22:00:40 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-29 22:00:40 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:40 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:40 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-29 22:00:40 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-29 22:00:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-29 22:00:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-29 22:00:41 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-29 22:00:41 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-29 22:00:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-29 22:00:41 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-29 22:00:41 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-29 22:00:41 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-29 22:00:41 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-29 22:00:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-29 22:00:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-29 22:00:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-29 22:00:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-29 22:00:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-29 22:00:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-29 22:00:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-29 22:00:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-29 22:00:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-29 22:00:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-29 22:00:41 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-29 22:00:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-29 22:00:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-29 22:00:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-29 22:00:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-29 22:00:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-29 22:00:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-29 22:00:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-29 22:00:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-29 22:00:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-29 22:00:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-29 22:00:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-29 22:00:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-29 22:00:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-29 22:00:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-29 22:00:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-29 22:00:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-29 22:00:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-29 22:00:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-29 22:00:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-29 22:00:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-29 22:00:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-29 22:00:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-29 22:00:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-29 22:00:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-29 22:00:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-29 22:00:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-29 22:00:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-29 22:00:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-29 22:00:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-29 22:00:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-29 22:00:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-29 22:00:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-29 22:00:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-29 22:00:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-29 22:00:41 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-29 22:00:41 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-29 22:00:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-29 22:00:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-29 22:00:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-29 22:00:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-29 22:00:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-29 22:00:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-29 22:00:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-29 22:00:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-29 22:00:41 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-29 22:00:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-29 22:00:41 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-29 22:00:41 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-29 22:00:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-29 22:00:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-29 22:00:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-29 22:00:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-29 22:00:41 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-29 22:00:41 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-29 22:00:41 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-29 22:00:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 22:00:42 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 29 22:00:20 CST 2019]; root of context hierarchy
2019-04-29 22:00:42 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 22:00:42 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 22:00:42 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-29 22:00:42 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-29 22:00:42 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-29 22:00:44 -Registering beans for JMX exposure on startup
2019-04-29 22:00:44 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-29 22:00:44 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-29 22:00:44 -Starting beans in phase 2147483647
2019-04-29 22:00:44 -Context refreshed
2019-04-29 22:00:44 -Found 1 custom documentation plugin(s)
2019-04-29 22:00:44 -Scanning for api listing references
2019-04-29 22:00:44 -Generating unique operation named: getCountDUsingPOST_1
2019-04-29 22:00:44 -Generating unique operation named: removeUsingPOST_1
2019-04-29 22:00:45 -Generating unique operation named: addUsingGET_1
2019-04-29 22:00:45 -Generating unique operation named: editUsingGET_1
2019-04-29 22:00:45 -Generating unique operation named: listUsingGET_1
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_2
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_3
2019-04-29 22:00:45 -Generating unique operation named: saveUsingPOST_1
2019-04-29 22:00:45 -Generating unique operation named: updateUsingGET_1
2019-04-29 22:00:45 -Generating unique operation named: updateUsingHEAD_1
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPOST_1
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPUT_1
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPATCH_1
2019-04-29 22:00:45 -Generating unique operation named: updateUsingDELETE_1
2019-04-29 22:00:45 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-29 22:00:45 -Generating unique operation named: updateUsingTRACE_1
2019-04-29 22:00:45 -Generating unique operation named: addUsingGET_2
2019-04-29 22:00:45 -Generating unique operation named: editUsingGET_2
2019-04-29 22:00:45 -Generating unique operation named: listUsingGET_2
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_4
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_5
2019-04-29 22:00:45 -Generating unique operation named: saveUsingPOST_2
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPOST_2
2019-04-29 22:00:45 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-29 22:00:45 -Generating unique operation named: addUsingGET_3
2019-04-29 22:00:45 -Generating unique operation named: editUsingGET_3
2019-04-29 22:00:45 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-29 22:00:45 -Generating unique operation named: listUsingGET_3
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_6
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_7
2019-04-29 22:00:45 -Generating unique operation named: saveUsingPOST_3
2019-04-29 22:00:45 -Generating unique operation named: updateUsingGET_2
2019-04-29 22:00:45 -Generating unique operation named: updateUsingHEAD_2
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPOST_3
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPUT_2
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPATCH_2
2019-04-29 22:00:45 -Generating unique operation named: updateUsingDELETE_2
2019-04-29 22:00:45 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-29 22:00:45 -Generating unique operation named: updateUsingTRACE_2
2019-04-29 22:00:45 -Generating unique operation named: addUsingGET_4
2019-04-29 22:00:45 -Generating unique operation named: editUsingGET_4
2019-04-29 22:00:45 -Generating unique operation named: listUsingGET_4
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_8
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_9
2019-04-29 22:00:45 -Generating unique operation named: saveUsingPOST_4
2019-04-29 22:00:45 -Generating unique operation named: updateUsingGET_3
2019-04-29 22:00:45 -Generating unique operation named: updateUsingHEAD_3
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPOST_4
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPUT_3
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPATCH_3
2019-04-29 22:00:45 -Generating unique operation named: updateUsingDELETE_3
2019-04-29 22:00:45 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-29 22:00:45 -Generating unique operation named: updateUsingTRACE_3
2019-04-29 22:00:45 -Generating unique operation named: ElecUsingGET_1
2019-04-29 22:00:45 -Generating unique operation named: addUsingGET_5
2019-04-29 22:00:45 -Generating unique operation named: editUsingGET_5
2019-04-29 22:00:45 -Generating unique operation named: listUsingGET_5
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_10
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_11
2019-04-29 22:00:45 -Generating unique operation named: saveUsingPOST_5
2019-04-29 22:00:45 -Generating unique operation named: updateUsingGET_4
2019-04-29 22:00:45 -Generating unique operation named: updateUsingHEAD_4
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPOST_5
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPUT_4
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPATCH_4
2019-04-29 22:00:45 -Generating unique operation named: updateUsingDELETE_4
2019-04-29 22:00:45 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-29 22:00:45 -Generating unique operation named: updateUsingTRACE_4
2019-04-29 22:00:45 -Generating unique operation named: editUsingGET_6
2019-04-29 22:00:45 -Generating unique operation named: listUsingGET_6
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPOST_6
2019-04-29 22:00:45 -Generating unique operation named: addUsingGET_6
2019-04-29 22:00:45 -Generating unique operation named: editUsingGET_7
2019-04-29 22:00:45 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-29 22:00:45 -Generating unique operation named: listUsingGET_7
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_12
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_13
2019-04-29 22:00:45 -Generating unique operation named: saveUsingPOST_6
2019-04-29 22:00:45 -Generating unique operation named: updateUsingGET_5
2019-04-29 22:00:45 -Generating unique operation named: updateUsingHEAD_5
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPOST_7
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPUT_5
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPATCH_5
2019-04-29 22:00:45 -Generating unique operation named: updateUsingDELETE_5
2019-04-29 22:00:45 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-29 22:00:45 -Generating unique operation named: updateUsingTRACE_5
2019-04-29 22:00:45 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-29 22:00:45 -Generating unique operation named: addUsingGET_7
2019-04-29 22:00:45 -Generating unique operation named: editUsingGET_8
2019-04-29 22:00:45 -Generating unique operation named: listUsingGET_8
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_14
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_15
2019-04-29 22:00:45 -Generating unique operation named: saveUsingPOST_7
2019-04-29 22:00:45 -Generating unique operation named: updateUsingGET_6
2019-04-29 22:00:45 -Generating unique operation named: updateUsingHEAD_6
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPOST_8
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPUT_6
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPATCH_6
2019-04-29 22:00:45 -Generating unique operation named: updateUsingDELETE_6
2019-04-29 22:00:45 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-29 22:00:45 -Generating unique operation named: updateUsingTRACE_6
2019-04-29 22:00:45 -Generating unique operation named: addUsingGET_8
2019-04-29 22:00:45 -Generating unique operation named: editUsingGET_9
2019-04-29 22:00:45 -Generating unique operation named: listUsingGET_9
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_16
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_17
2019-04-29 22:00:45 -Generating unique operation named: saveUsingPOST_8
2019-04-29 22:00:45 -Generating unique operation named: updateUsingGET_7
2019-04-29 22:00:45 -Generating unique operation named: updateUsingHEAD_7
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPOST_9
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPUT_7
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPATCH_7
2019-04-29 22:00:45 -Generating unique operation named: updateUsingDELETE_7
2019-04-29 22:00:45 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-29 22:00:45 -Generating unique operation named: updateUsingTRACE_7
2019-04-29 22:00:45 -Generating unique operation named: addUsingGET_9
2019-04-29 22:00:45 -Generating unique operation named: editUsingGET_10
2019-04-29 22:00:45 -Generating unique operation named: infoUsingGET_1
2019-04-29 22:00:45 -Generating unique operation named: infoUsingHEAD_1
2019-04-29 22:00:45 -Generating unique operation named: infoUsingPOST_1
2019-04-29 22:00:45 -Generating unique operation named: infoUsingPUT_1
2019-04-29 22:00:45 -Generating unique operation named: infoUsingPATCH_1
2019-04-29 22:00:45 -Generating unique operation named: infoUsingDELETE_1
2019-04-29 22:00:45 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-29 22:00:45 -Generating unique operation named: infoUsingTRACE_1
2019-04-29 22:00:45 -Generating unique operation named: listUsingGET_10
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_18
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_19
2019-04-29 22:00:45 -Generating unique operation named: saveUsingPOST_9
2019-04-29 22:00:45 -Generating unique operation named: updateUsingPOST_10
2019-04-29 22:00:45 -Generating unique operation named: listUsingGET_11
2019-04-29 22:00:45 -Generating unique operation named: removeUsingPOST_20
2019-04-29 22:00:45 -Generating unique operation named: welcomeUsingGET_1
2019-04-29 22:00:46 -Generating unique operation named: addUsingGET_10
2019-04-29 22:00:46 -Generating unique operation named: editUsingGET_11
2019-04-29 22:00:46 -Generating unique operation named: listUsingGET_12
2019-04-29 22:00:46 -Generating unique operation named: removeUsingPOST_21
2019-04-29 22:00:46 -Generating unique operation named: saveUsingPOST_10
2019-04-29 22:00:46 -Generating unique operation named: treeUsingGET_1
2019-04-29 22:00:46 -Generating unique operation named: treeUsingGET_2
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPOST_11
2019-04-29 22:00:46 -Generating unique operation named: addUsingGET_11
2019-04-29 22:00:46 -Generating unique operation named: editUsingGET_12
2019-04-29 22:00:46 -Generating unique operation named: listUsingGET_13
2019-04-29 22:00:46 -Generating unique operation named: removeUsingPOST_22
2019-04-29 22:00:46 -Generating unique operation named: removeUsingPOST_23
2019-04-29 22:00:46 -Generating unique operation named: saveUsingPOST_11
2019-04-29 22:00:46 -Generating unique operation named: updateUsingGET_8
2019-04-29 22:00:46 -Generating unique operation named: updateUsingHEAD_8
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPOST_12
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPUT_8
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPATCH_8
2019-04-29 22:00:46 -Generating unique operation named: updateUsingDELETE_8
2019-04-29 22:00:46 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-29 22:00:46 -Generating unique operation named: updateUsingTRACE_8
2019-04-29 22:00:46 -Generating unique operation named: addUsingGET_12
2019-04-29 22:00:46 -Generating unique operation named: editUsingGET_13
2019-04-29 22:00:46 -Generating unique operation named: listUsingGET_14
2019-04-29 22:00:46 -Generating unique operation named: removeUsingPOST_24
2019-04-29 22:00:46 -Generating unique operation named: removeUsingPOST_25
2019-04-29 22:00:46 -Generating unique operation named: saveUsingPOST_12
2019-04-29 22:00:46 -Generating unique operation named: updateUsingGET_9
2019-04-29 22:00:46 -Generating unique operation named: updateUsingHEAD_9
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPOST_13
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPUT_9
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPATCH_9
2019-04-29 22:00:46 -Generating unique operation named: updateUsingDELETE_9
2019-04-29 22:00:46 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-29 22:00:46 -Generating unique operation named: updateUsingTRACE_9
2019-04-29 22:00:46 -Generating unique operation named: addUsingGET_13
2019-04-29 22:00:46 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-29 22:00:46 -Generating unique operation named: editUsingGET_14
2019-04-29 22:00:46 -Generating unique operation named: listUsingGET_15
2019-04-29 22:00:46 -Generating unique operation named: saveUsingPOST_13
2019-04-29 22:00:46 -Generating unique operation named: saveUsingPOST_14
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPOST_14
2019-04-29 22:00:46 -Generating unique operation named: listUsingGET_16
2019-04-29 22:00:46 -Generating unique operation named: listUsingHEAD_1
2019-04-29 22:00:46 -Generating unique operation named: listUsingPOST_1
2019-04-29 22:00:46 -Generating unique operation named: listUsingPUT_1
2019-04-29 22:00:46 -Generating unique operation named: listUsingPATCH_1
2019-04-29 22:00:46 -Generating unique operation named: listUsingDELETE_1
2019-04-29 22:00:46 -Generating unique operation named: listUsingOPTIONS_1
2019-04-29 22:00:46 -Generating unique operation named: listUsingTRACE_1
2019-04-29 22:00:46 -Generating unique operation named: countDDUsingGET_1
2019-04-29 22:00:46 -Generating unique operation named: exportDDUsingGET_1
2019-04-29 22:00:46 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-29 22:00:46 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-29 22:00:46 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-29 22:00:46 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-29 22:00:46 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-29 22:00:46 -Generating unique operation named: addUsingGET_14
2019-04-29 22:00:46 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-29 22:00:46 -Generating unique operation named: editUsingGET_15
2019-04-29 22:00:46 -Generating unique operation named: listUsingGET_17
2019-04-29 22:00:46 -Generating unique operation named: removeUsingPOST_26
2019-04-29 22:00:46 -Generating unique operation named: saveUsingPOST_15
2019-04-29 22:00:46 -Generating unique operation named: treeUsingGET_3
2019-04-29 22:00:46 -Generating unique operation named: treeViewUsingGET_1
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPOST_15
2019-04-29 22:00:46 -Generating unique operation named: addUsingGET_15
2019-04-29 22:00:46 -Generating unique operation named: editUsingGET_16
2019-04-29 22:00:46 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-29 22:00:46 -Generating unique operation named: listUsingGET_18
2019-04-29 22:00:46 -Generating unique operation named: removeUsingPOST_27
2019-04-29 22:00:46 -Generating unique operation named: removeUsingPOST_28
2019-04-29 22:00:46 -Generating unique operation named: saveUsingPOST_16
2019-04-29 22:00:46 -Generating unique operation named: updateUsingGET_10
2019-04-29 22:00:46 -Generating unique operation named: updateUsingHEAD_10
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPOST_16
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPUT_10
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPATCH_10
2019-04-29 22:00:46 -Generating unique operation named: updateUsingDELETE_10
2019-04-29 22:00:46 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-29 22:00:46 -Generating unique operation named: updateUsingTRACE_10
2019-04-29 22:00:46 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-29 22:00:46 -Generating unique operation named: addUsingGET_16
2019-04-29 22:00:46 -Generating unique operation named: editUsingGET_17
2019-04-29 22:00:46 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-29 22:00:46 -Generating unique operation named: listUsingGET_19
2019-04-29 22:00:46 -Generating unique operation named: removeUsingPOST_29
2019-04-29 22:00:46 -Generating unique operation named: removeUsingPOST_30
2019-04-29 22:00:46 -Generating unique operation named: saveUsingPOST_17
2019-04-29 22:00:46 -Generating unique operation named: updateUsingGET_11
2019-04-29 22:00:46 -Generating unique operation named: updateUsingHEAD_11
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPOST_17
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPUT_11
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPATCH_11
2019-04-29 22:00:46 -Generating unique operation named: updateUsingDELETE_11
2019-04-29 22:00:46 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-29 22:00:46 -Generating unique operation named: updateUsingTRACE_11
2019-04-29 22:00:46 -Generating unique operation named: addUsingGET_17
2019-04-29 22:00:46 -Generating unique operation named: editUsingGET_18
2019-04-29 22:00:46 -Generating unique operation named: listUsingGET_20
2019-04-29 22:00:46 -Generating unique operation named: removeUsingPOST_31
2019-04-29 22:00:46 -Generating unique operation named: removeUsingPOST_32
2019-04-29 22:00:46 -Generating unique operation named: saveUsingPOST_18
2019-04-29 22:00:46 -Generating unique operation named: updateUsingGET_12
2019-04-29 22:00:46 -Generating unique operation named: updateUsingHEAD_12
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPOST_18
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPUT_12
2019-04-29 22:00:46 -Generating unique operation named: updateUsingPATCH_12
2019-04-29 22:00:46 -Generating unique operation named: updateUsingDELETE_12
2019-04-29 22:00:46 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-29 22:00:46 -Generating unique operation named: updateUsingTRACE_12
2019-04-29 22:00:46 -Starting Quartz Scheduler now
2019-04-29 22:00:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-29 22:00:46 -Starting...
2019-04-29 22:00:46 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-29 22:00:46 -Started.
2019-04-29 22:00:46 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-29 22:00:46 -Using a shared selector for servlet write/read
2019-04-29 22:00:47 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-29 22:00:47 -Started BootdoApplication in 27.545 seconds (JVM running for 28.457)
2019-04-29 22:00:47 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-29 22:00:47 -==> Parameters: 
2019-04-29 22:00:47 -<==      Total: 1
2019-04-29 22:01:13 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-29 22:01:13 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-29 22:01:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-04-29 22:01:13 -Enabling session validation scheduler...
2019-04-29 22:01:13 -请求地址 : http://localhost:8081/login;JSESSIONID=3a0f79af-4976-4cc3-b4ca-620a5fac950c
2019-04-29 22:01:13 -HTTP METHOD : GET
2019-04-29 22:01:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 22:01:13 -参数 : [{}]
2019-04-29 22:01:13 -耗时 : 2
2019-04-29 22:01:13 -返回值 : login
2019-04-29 22:01:15 -请求地址 : http://localhost:8081/getVerify
2019-04-29 22:01:15 -HTTP METHOD : GET
2019-04-29 22:01:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-29 22:01:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@d4d7548, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6b32a576]
2019-04-29 22:01:20 -1547
2019-04-29 22:01:20 -耗时 : 5711
2019-04-29 22:01:20 -返回值 : null
2019-04-29 22:01:21 -请求地址 : http://localhost:8081/login
2019-04-29 22:01:21 -HTTP METHOD : GET
2019-04-29 22:01:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-29 22:01:21 -参数 : [{}]
2019-04-29 22:01:21 -耗时 : 0
2019-04-29 22:01:21 -返回值 : login
2019-04-29 22:01:28 -请求地址 : http://localhost:8081/login
2019-04-29 22:01:28 -HTTP METHOD : POST
2019-04-29 22:01:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-29 22:01:28 -参数 : [admin, 111111, 1547, org.apache.shiro.web.servlet.ShiroHttpServletRequest@13479240]
2019-04-29 22:01:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-29 22:01:28 -==> Parameters: admin(String)
2019-04-29 22:01:28 -<==      Total: 1
2019-04-29 22:01:28 -耗时 : 276
2019-04-29 22:01:28 -返回值 : {msg=操作成功, code=0}
2019-04-29 22:01:28 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-29 22:01:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 22:01:28 -==> Parameters: 1(Long), admin(String), 登录(String), 276(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-29 22:01:28.48(Timestamp)
2019-04-29 22:01:28 -请求地址 : http://localhost:8081/index
2019-04-29 22:01:28 -HTTP METHOD : GET
2019-04-29 22:01:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-29 22:01:28 -参数 : [{}]
2019-04-29 22:01:29 -<==    Updates: 1
2019-04-29 22:01:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-29 22:01:29 -==> Parameters: 1(Long)
2019-04-29 22:01:29 -<==      Total: 49
2019-04-29 22:01:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-29 22:01:29 -==> Parameters: 138(Long)
2019-04-29 22:01:29 -<==      Total: 1
2019-04-29 22:01:29 -耗时 : 780
2019-04-29 22:01:29 -返回值 : index_v1
2019-04-29 22:01:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-29 22:01:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 781(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-29 22:01:29.69(Timestamp)
2019-04-29 22:01:29 -<==    Updates: 1
2019-04-29 22:01:29 -请求地址 : http://localhost:8081/main
2019-04-29 22:01:29 -HTTP METHOD : GET
2019-04-29 22:01:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 22:01:29 -参数 : []
2019-04-29 22:01:29 -耗时 : 1
2019-04-29 22:01:29 -返回值 : main
2019-04-29 22:01:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-29 22:01:30 -HTTP METHOD : GET
2019-04-29 22:01:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-29 22:01:30 -参数 : []
2019-04-29 22:01:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-29 22:01:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-29 22:01:30 -请求地址 : http://localhost:8081/main
2019-04-29 22:01:30 -HTTP METHOD : GET
2019-04-29 22:01:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-29 22:01:30 -参数 : []
2019-04-29 22:01:30 -耗时 : 0
2019-04-29 22:01:30 -返回值 : main
2019-04-29 22:01:31 -<==      Total: 0
2019-04-29 22:01:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-29 22:01:31 -==> Parameters: 1(Long), 0(String)
2019-04-29 22:01:31 -<==      Total: 1
2019-04-29 22:01:31 -耗时 : 687
2019-04-29 22:01:31 -返回值 : com.bootdo.common.utils.PageUtils@5f7b0a20
2019-04-29 22:01:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 22:01:34 -==> Parameters: 1(Long)
2019-04-29 22:01:34 -<==      Total: 93
2019-04-29 22:01:34 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-29 22:01:34 -HTTP METHOD : GET
2019-04-29 22:01:34 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-29 22:01:34 -参数 : []
2019-04-29 22:01:34 -耗时 : 14
2019-04-29 22:01:34 -返回值 : charts/tableElecMM
2019-04-29 22:01:41 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-04-29 22:02:27 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-29 22:02:27 -HTTP METHOD : GET
2019-04-29 22:02:27 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-29 22:02:27 -参数 : []
2019-04-29 22:02:27 -耗时 : 8
2019-04-29 22:02:27 -返回值 : charts/tableWaterMM
2019-04-29 22:02:28 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-29 22:02:28 -HTTP METHOD : GET
2019-04-29 22:02:28 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-29 22:02:28 -参数 : []
2019-04-29 22:02:28 -耗时 : 8
2019-04-29 22:02:28 -返回值 : charts/tableHeatMM
2019-04-29 22:02:33 -请求地址 : http://localhost:8081/elec/elecInto
2019-04-29 22:02:33 -HTTP METHOD : GET
2019-04-29 22:02:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-04-29 22:02:33 -参数 : []
2019-04-29 22:02:33 -耗时 : 1
2019-04-29 22:02:33 -返回值 : elec/elecInto/elecInto
2019-04-29 22:03:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-29 22:03:19 -HTTP METHOD : GET
2019-04-29 22:03:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-29 22:03:19 -参数 : []
2019-04-29 22:03:19 -耗时 : 0
2019-04-29 22:03:19 -返回值 : system/dept/deptTree
2019-04-29 22:03:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-29 22:03:20 -HTTP METHOD : GET
2019-04-29 22:03:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-29 22:03:20 -参数 : []
2019-04-29 22:03:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-29 22:03:20 -==> Parameters: 
2019-04-29 22:03:20 -<==      Total: 3
2019-04-29 22:03:20 -耗时 : 34
2019-04-29 22:03:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-29 22:03:23 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-04-29 22:03:23 -HTTP METHOD : POST
2019-04-29 22:03:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-04-29 22:03:23 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3dce2e6a, com.bootdo.elec.vo.ElecVo@450f28a6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@42348778]
2019-04-29 22:03:26 -==>  Preparing: select * from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? and USER_ID = ? and USER_NAME = ? 
2019-04-29 22:03:26 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 李文英(String)
2019-04-29 22:03:26 -<==      Total: 0
2019-04-29 22:03:26 -耗时 : 3005
2019-04-29 22:03:26 -返回值 : 第2行，数据出错请认真编写
2019-04-29 22:11:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-29 22:11:38 -==> Parameters: 1(Long)
2019-04-29 22:11:38 -<==      Total: 93
2019-04-29 22:11:38 -请求地址 : http://localhost:8081/charts/countYY
2019-04-29 22:11:38 -HTTP METHOD : GET
2019-04-29 22:11:38 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-29 22:11:38 -参数 : []
2019-04-29 22:11:38 -耗时 : 2
2019-04-29 22:11:38 -返回值 : charts/countYY
2019-04-29 22:11:45 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-29 22:11:45 -HTTP METHOD : GET
2019-04-29 22:11:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-29 22:11:45 -参数 : []
2019-04-29 22:11:45 -耗时 : 14
2019-04-29 22:11:45 -返回值 : charts/tableElecYY
2019-04-29 22:11:52 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-29 22:11:52 -HTTP METHOD : GET
2019-04-29 22:11:52 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-29 22:11:52 -参数 : []
2019-04-29 22:11:52 -耗时 : 9
2019-04-29 22:11:52 -返回值 : charts/tableWaterYY
2019-04-29 22:11:54 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:11:54 -HTTP METHOD : GET
2019-04-29 22:11:54 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:11:54 -参数 : []
2019-04-29 22:11:54 -耗时 : 5
2019-04-29 22:11:54 -返回值 : charts/tableHeatYY
2019-04-29 22:11:54 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-29 22:11:54 -HTTP METHOD : GET
2019-04-29 22:11:54 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-29 22:11:54 -参数 : []
2019-04-29 22:11:54 -耗时 : 1
2019-04-29 22:11:54 -返回值 : charts/tableWaterYY
2019-04-29 22:11:55 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:11:55 -HTTP METHOD : GET
2019-04-29 22:11:55 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:11:55 -参数 : []
2019-04-29 22:11:55 -耗时 : 0
2019-04-29 22:11:55 -返回值 : charts/tableHeatYY
2019-04-29 22:11:55 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-29 22:11:55 -HTTP METHOD : GET
2019-04-29 22:11:55 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-29 22:11:55 -参数 : []
2019-04-29 22:11:55 -耗时 : 0
2019-04-29 22:11:55 -返回值 : charts/tableElecYY
2019-04-29 22:11:55 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:11:55 -HTTP METHOD : GET
2019-04-29 22:11:55 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:11:55 -参数 : []
2019-04-29 22:11:55 -耗时 : 1
2019-04-29 22:11:55 -返回值 : charts/tableHeatYY
2019-04-29 22:11:56 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-29 22:11:56 -HTTP METHOD : GET
2019-04-29 22:11:56 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-29 22:11:56 -参数 : []
2019-04-29 22:11:56 -耗时 : 0
2019-04-29 22:11:56 -返回值 : charts/tableWaterYY
2019-04-29 22:11:56 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:11:56 -HTTP METHOD : GET
2019-04-29 22:11:56 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:11:56 -参数 : []
2019-04-29 22:11:56 -耗时 : 0
2019-04-29 22:11:56 -返回值 : charts/tableHeatYY
2019-04-29 22:11:57 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:11:57 -HTTP METHOD : GET
2019-04-29 22:11:57 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:11:57 -参数 : []
2019-04-29 22:11:57 -耗时 : 1
2019-04-29 22:11:57 -返回值 : charts/tableHeatYY
2019-04-29 22:11:57 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:11:57 -HTTP METHOD : GET
2019-04-29 22:11:57 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:11:57 -参数 : []
2019-04-29 22:11:57 -耗时 : 0
2019-04-29 22:11:57 -返回值 : charts/tableHeatYY
2019-04-29 22:11:57 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-29 22:11:57 -HTTP METHOD : GET
2019-04-29 22:11:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-29 22:11:57 -参数 : []
2019-04-29 22:11:57 -耗时 : 1
2019-04-29 22:11:57 -返回值 : charts/tableWaterYY
2019-04-29 22:11:58 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:11:58 -HTTP METHOD : GET
2019-04-29 22:11:58 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:11:58 -参数 : []
2019-04-29 22:11:58 -耗时 : 0
2019-04-29 22:11:58 -返回值 : charts/tableHeatYY
2019-04-29 22:11:58 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-29 22:11:58 -HTTP METHOD : GET
2019-04-29 22:11:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-29 22:11:58 -参数 : []
2019-04-29 22:11:58 -耗时 : 0
2019-04-29 22:11:58 -返回值 : charts/tableElecYY
2019-04-29 22:11:58 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:11:58 -HTTP METHOD : GET
2019-04-29 22:11:58 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:11:58 -参数 : []
2019-04-29 22:11:58 -耗时 : 1
2019-04-29 22:11:58 -返回值 : charts/tableHeatYY
2019-04-29 22:11:59 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-29 22:11:59 -HTTP METHOD : GET
2019-04-29 22:11:59 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-29 22:11:59 -参数 : []
2019-04-29 22:11:59 -耗时 : 1
2019-04-29 22:11:59 -返回值 : charts/tableWaterYY
2019-04-29 22:11:59 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:11:59 -HTTP METHOD : GET
2019-04-29 22:11:59 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:11:59 -参数 : []
2019-04-29 22:11:59 -耗时 : 1
2019-04-29 22:11:59 -返回值 : charts/tableHeatYY
2019-04-29 22:11:59 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-29 22:11:59 -HTTP METHOD : GET
2019-04-29 22:11:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-29 22:11:59 -参数 : []
2019-04-29 22:11:59 -耗时 : 0
2019-04-29 22:11:59 -返回值 : charts/tableElecYY
2019-04-29 22:12:00 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-29 22:12:00 -HTTP METHOD : GET
2019-04-29 22:12:00 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-29 22:12:00 -参数 : []
2019-04-29 22:12:00 -耗时 : 0
2019-04-29 22:12:00 -返回值 : charts/tableElecYY
2019-04-29 22:12:00 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:12:00 -HTTP METHOD : GET
2019-04-29 22:12:00 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:12:00 -参数 : []
2019-04-29 22:12:00 -耗时 : 1
2019-04-29 22:12:00 -返回值 : charts/tableHeatYY
2019-04-29 22:12:00 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-29 22:12:00 -HTTP METHOD : GET
2019-04-29 22:12:00 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-29 22:12:00 -参数 : []
2019-04-29 22:12:00 -耗时 : 0
2019-04-29 22:12:00 -返回值 : charts/tableWaterYY
2019-04-29 22:12:01 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:12:01 -HTTP METHOD : GET
2019-04-29 22:12:01 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:12:01 -参数 : []
2019-04-29 22:12:01 -耗时 : 0
2019-04-29 22:12:01 -返回值 : charts/tableHeatYY
2019-04-29 22:12:01 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-29 22:12:01 -HTTP METHOD : GET
2019-04-29 22:12:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-29 22:12:01 -参数 : []
2019-04-29 22:12:01 -耗时 : 0
2019-04-29 22:12:01 -返回值 : charts/tableElecYY
2019-04-29 22:12:02 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:12:02 -HTTP METHOD : GET
2019-04-29 22:12:02 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:12:02 -参数 : []
2019-04-29 22:12:02 -耗时 : 0
2019-04-29 22:12:02 -返回值 : charts/tableHeatYY
2019-04-29 22:12:02 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-29 22:12:02 -HTTP METHOD : GET
2019-04-29 22:12:02 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-29 22:12:02 -参数 : []
2019-04-29 22:12:02 -耗时 : 0
2019-04-29 22:12:02 -返回值 : charts/tableWaterYY
2019-04-29 22:12:02 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:12:02 -HTTP METHOD : GET
2019-04-29 22:12:02 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:12:02 -参数 : []
2019-04-29 22:12:02 -耗时 : 1
2019-04-29 22:12:02 -返回值 : charts/tableHeatYY
2019-04-29 22:12:03 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-29 22:12:03 -HTTP METHOD : GET
2019-04-29 22:12:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-29 22:12:03 -参数 : []
2019-04-29 22:12:03 -耗时 : 0
2019-04-29 22:12:03 -返回值 : charts/tableElecYY
2019-04-29 22:12:03 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:12:03 -HTTP METHOD : GET
2019-04-29 22:12:03 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:12:03 -参数 : []
2019-04-29 22:12:03 -耗时 : 1
2019-04-29 22:12:03 -返回值 : charts/tableHeatYY
2019-04-29 22:12:03 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-29 22:12:03 -HTTP METHOD : GET
2019-04-29 22:12:03 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-29 22:12:03 -参数 : []
2019-04-29 22:12:03 -耗时 : 0
2019-04-29 22:12:03 -返回值 : charts/tableWaterYY
2019-04-29 22:12:04 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:12:04 -HTTP METHOD : GET
2019-04-29 22:12:04 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:12:04 -参数 : []
2019-04-29 22:12:04 -耗时 : 0
2019-04-29 22:12:04 -返回值 : charts/tableHeatYY
2019-04-29 22:12:04 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-29 22:12:04 -HTTP METHOD : GET
2019-04-29 22:12:04 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-29 22:12:04 -参数 : []
2019-04-29 22:12:04 -耗时 : 0
2019-04-29 22:12:04 -返回值 : charts/tableElecYY
2019-04-29 22:12:05 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:12:05 -HTTP METHOD : GET
2019-04-29 22:12:05 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:12:05 -参数 : []
2019-04-29 22:12:05 -耗时 : 0
2019-04-29 22:12:05 -返回值 : charts/tableHeatYY
2019-04-29 22:12:05 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-29 22:12:05 -HTTP METHOD : GET
2019-04-29 22:12:05 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-29 22:12:05 -参数 : []
2019-04-29 22:12:05 -耗时 : 1
2019-04-29 22:12:05 -返回值 : charts/tableWaterYY
2019-04-29 22:12:05 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:12:05 -HTTP METHOD : GET
2019-04-29 22:12:05 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:12:05 -参数 : []
2019-04-29 22:12:05 -耗时 : 0
2019-04-29 22:12:05 -返回值 : charts/tableHeatYY
2019-04-29 22:12:06 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-29 22:12:06 -HTTP METHOD : GET
2019-04-29 22:12:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-29 22:12:06 -参数 : []
2019-04-29 22:12:06 -耗时 : 1
2019-04-29 22:12:06 -返回值 : charts/tableElecYY
2019-04-29 22:12:06 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:12:06 -HTTP METHOD : GET
2019-04-29 22:12:06 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:12:06 -参数 : []
2019-04-29 22:12:06 -耗时 : 1
2019-04-29 22:12:06 -返回值 : charts/tableHeatYY
2019-04-29 22:12:06 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-29 22:12:06 -HTTP METHOD : GET
2019-04-29 22:12:06 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-29 22:12:06 -参数 : []
2019-04-29 22:12:06 -耗时 : 0
2019-04-29 22:12:06 -返回值 : charts/tableWaterYY
2019-04-29 22:12:07 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-29 22:12:07 -HTTP METHOD : GET
2019-04-29 22:12:07 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-29 22:12:07 -参数 : []
2019-04-29 22:12:07 -耗时 : 0
2019-04-29 22:12:07 -返回值 : charts/tableHeatYY
2019-04-29 22:12:07 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-29 22:12:07 -HTTP METHOD : GET
2019-04-29 22:12:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-29 22:12:07 -参数 : []
2019-04-29 22:12:07 -耗时 : 1
2019-04-29 22:12:07 -返回值 : charts/tableElecYY

2019-05-30 09:16:24 -Starting BootdoApplication on PC-201905091110 with PID 26548 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-30 09:16:24 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-30 09:16:24 -The following profiles are active: dev
2019-05-30 09:16:24 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c398c80: startup date [Thu May 30 09:16:24 CST 2019]; root of context hierarchy
2019-05-30 09:16:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-30 09:16:39 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c07136f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:16:39 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b2ca6598] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:16:40 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:16:41 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:16:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:16:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-30 09:16:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-30 09:16:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:16:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:16:41 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:16:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:16:43 -Tomcat initialized with port(s): 8081 (http)
2019-05-30 09:16:43 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-30 09:16:43 -Starting service [Tomcat]
2019-05-30 09:16:43 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-30 09:16:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-30 09:16:44 -Initializing Spring embedded WebApplicationContext
2019-05-30 09:16:44 -Root WebApplicationContext: initialization completed in 19408 ms
2019-05-30 09:16:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-30 09:16:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-30 09:16:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-30 09:16:45 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-30 09:16:45 -Filter xssFilter was not registered (disabled)
2019-05-30 09:16:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-30 09:16:45 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-30 09:16:45 -Servlet statViewServlet mapped to [/druid/*]
2019-05-30 09:16:45 -Servlet dispatcherServlet mapped to [/]
2019-05-30 09:16:54 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c398c80: startup date [Thu May 30 09:16:24 CST 2019]; root of context hierarchy
2019-05-30 09:16:55 -Using default implementation for ThreadExecutor
2019-05-30 09:16:55 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-30 09:16:55 -Quartz Scheduler v.2.2.1 created.
2019-05-30 09:16:55 -RAMJobStore initialized.
2019-05-30 09:16:55 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-30 09:16:55 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-30 09:16:55 -Quartz scheduler version: 2.2.1
2019-05-30 09:16:55 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2d2133fd
2019-05-30 09:16:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-30 09:16:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-30 09:17:00 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:17:00 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-30 09:17:00 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:17:00 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-30 09:17:00 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-30 09:17:00 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-30 09:17:00 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:17:00 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-30 09:17:00 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:17:00 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-30 09:17:00 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-30 09:17:00 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:17:00 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 09:17:00 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-30 09:17:00 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 09:17:00 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-30 09:17:00 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-30 09:17:00 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:17:00 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-30 09:17:00 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:17:00 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 09:17:00 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-30 09:17:00 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 09:17:00 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-30 09:17:00 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-30 09:17:00 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-30 09:17:00 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-30 09:17:00 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-30 09:17:00 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-30 09:17:00 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-30 09:17:00 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-30 09:17:00 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-30 09:17:00 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-30 09:17:00 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-30 09:17:00 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-30 09:17:00 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-30 09:17:00 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-30 09:17:00 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 09:17:00 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-30 09:17:00 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 09:17:00 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-30 09:17:00 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-30 09:17:00 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-30 09:17:00 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-30 09:17:00 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-30 09:17:00 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-30 09:17:00 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-30 09:17:00 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-30 09:17:00 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-30 09:17:00 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 09:17:00 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 09:17:00 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-30 09:17:00 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-30 09:17:00 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 09:17:00 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-30 09:17:00 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-30 09:17:00 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-30 09:17:00 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-30 09:17:00 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-30 09:17:00 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 09:17:00 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-30 09:17:00 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-30 09:17:00 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-30 09:17:00 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-30 09:17:00 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-30 09:17:00 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-30 09:17:00 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-30 09:17:00 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-30 09:17:00 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-30 09:17:00 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 09:17:00 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-30 09:17:00 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 09:17:00 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 09:17:00 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-30 09:17:00 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-30 09:17:00 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-30 09:17:00 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-30 09:17:00 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-30 09:17:00 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-30 09:17:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-30 09:17:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-30 09:17:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-30 09:17:00 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 09:17:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-30 09:17:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-30 09:17:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-30 09:17:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-30 09:17:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-30 09:17:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-30 09:17:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-30 09:17:00 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-30 09:17:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-30 09:17:00 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-30 09:17:00 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-30 09:17:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-30 09:17:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-30 09:17:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-30 09:17:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-30 09:17:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-30 09:17:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-30 09:17:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-30 09:17:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-30 09:17:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 09:17:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-30 09:17:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-30 09:17:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-30 09:17:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-30 09:17:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-30 09:17:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-30 09:17:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-30 09:17:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-30 09:17:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-30 09:17:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-30 09:17:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-30 09:17:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-30 09:17:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-30 09:17:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-30 09:17:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-30 09:17:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-30 09:17:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 09:17:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 09:17:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-30 09:17:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 09:17:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-30 09:17:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-30 09:17:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-30 09:17:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-30 09:17:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-30 09:17:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-30 09:17:00 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 09:17:00 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-30 09:17:00 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-30 09:17:00 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-30 09:17:00 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 09:17:00 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:17:00 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 09:17:00 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:17:00 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-30 09:17:00 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-30 09:17:00 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:17:00 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 09:17:00 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-30 09:17:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 09:17:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-30 09:17:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-30 09:17:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-30 09:17:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-30 09:17:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-30 09:17:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-30 09:17:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 09:17:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c398c80: startup date [Thu May 30 09:16:24 CST 2019]; root of context hierarchy
2019-05-30 09:17:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 09:17:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 09:17:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 09:17:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-30 09:17:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-30 09:17:06 -Registering beans for JMX exposure on startup
2019-05-30 09:17:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-30 09:17:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-30 09:17:06 -Starting beans in phase 2147483647
2019-05-30 09:17:06 -Context refreshed
2019-05-30 09:17:07 -Found 1 custom documentation plugin(s)
2019-05-30 09:17:07 -Scanning for api listing references
2019-05-30 09:17:08 -Generating unique operation named: getCountDUsingPOST_1
2019-05-30 09:17:08 -Generating unique operation named: removeUsingPOST_1
2019-05-30 09:17:08 -Generating unique operation named: addUsingGET_1
2019-05-30 09:17:08 -Generating unique operation named: editUsingGET_1
2019-05-30 09:17:08 -Generating unique operation named: listUsingGET_1
2019-05-30 09:17:08 -Generating unique operation named: removeUsingPOST_2
2019-05-30 09:17:08 -Generating unique operation named: removeUsingPOST_3
2019-05-30 09:17:08 -Generating unique operation named: saveUsingPOST_1
2019-05-30 09:17:08 -Generating unique operation named: updateUsingGET_1
2019-05-30 09:17:08 -Generating unique operation named: updateUsingHEAD_1
2019-05-30 09:17:08 -Generating unique operation named: updateUsingPOST_1
2019-05-30 09:17:08 -Generating unique operation named: updateUsingPUT_1
2019-05-30 09:17:08 -Generating unique operation named: updateUsingPATCH_1
2019-05-30 09:17:08 -Generating unique operation named: updateUsingDELETE_1
2019-05-30 09:17:08 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-30 09:17:08 -Generating unique operation named: updateUsingTRACE_1
2019-05-30 09:17:08 -Generating unique operation named: addUsingGET_2
2019-05-30 09:17:08 -Generating unique operation named: editUsingGET_2
2019-05-30 09:17:08 -Generating unique operation named: listUsingGET_2
2019-05-30 09:17:08 -Generating unique operation named: removeUsingPOST_4
2019-05-30 09:17:08 -Generating unique operation named: removeUsingPOST_5
2019-05-30 09:17:08 -Generating unique operation named: saveUsingPOST_2
2019-05-30 09:17:08 -Generating unique operation named: updateUsingPOST_2
2019-05-30 09:17:08 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-30 09:17:08 -Generating unique operation named: addUsingGET_3
2019-05-30 09:17:08 -Generating unique operation named: editUsingGET_3
2019-05-30 09:17:08 -Generating unique operation named: listUsingGET_3
2019-05-30 09:17:08 -Generating unique operation named: removeUsingPOST_6
2019-05-30 09:17:08 -Generating unique operation named: removeUsingPOST_7
2019-05-30 09:17:09 -Generating unique operation named: saveUsingPOST_3
2019-05-30 09:17:09 -Generating unique operation named: updateUsingGET_2
2019-05-30 09:17:09 -Generating unique operation named: updateUsingHEAD_2
2019-05-30 09:17:09 -Generating unique operation named: updateUsingPOST_3
2019-05-30 09:17:09 -Generating unique operation named: updateUsingPUT_2
2019-05-30 09:17:09 -Generating unique operation named: updateUsingPATCH_2
2019-05-30 09:17:09 -Generating unique operation named: updateUsingDELETE_2
2019-05-30 09:17:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-30 09:17:09 -Generating unique operation named: updateUsingTRACE_2
2019-05-30 09:17:09 -Generating unique operation named: addUsingGET_4
2019-05-30 09:17:09 -Generating unique operation named: editUsingGET_4
2019-05-30 09:17:09 -Generating unique operation named: listUsingGET_4
2019-05-30 09:17:09 -Generating unique operation named: removeUsingPOST_8
2019-05-30 09:17:09 -Generating unique operation named: removeUsingPOST_9
2019-05-30 09:17:09 -Generating unique operation named: saveUsingPOST_4
2019-05-30 09:17:09 -Generating unique operation named: updateUsingGET_3
2019-05-30 09:17:09 -Generating unique operation named: updateUsingHEAD_3
2019-05-30 09:17:09 -Generating unique operation named: updateUsingPOST_4
2019-05-30 09:17:09 -Generating unique operation named: updateUsingPUT_3
2019-05-30 09:17:09 -Generating unique operation named: updateUsingPATCH_3
2019-05-30 09:17:09 -Generating unique operation named: updateUsingDELETE_3
2019-05-30 09:17:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-30 09:17:09 -Generating unique operation named: updateUsingTRACE_3
2019-05-30 09:17:09 -Generating unique operation named: ElecUsingGET_1
2019-05-30 09:17:09 -Generating unique operation named: addUsingGET_5
2019-05-30 09:17:09 -Generating unique operation named: editUsingGET_5
2019-05-30 09:17:09 -Generating unique operation named: listUsingGET_5
2019-05-30 09:17:09 -Generating unique operation named: removeUsingPOST_10
2019-05-30 09:17:09 -Generating unique operation named: removeUsingPOST_11
2019-05-30 09:17:09 -Generating unique operation named: saveUsingPOST_5
2019-05-30 09:17:09 -Generating unique operation named: updateUsingGET_4
2019-05-30 09:17:09 -Generating unique operation named: updateUsingHEAD_4
2019-05-30 09:17:09 -Generating unique operation named: updateUsingPOST_5
2019-05-30 09:17:09 -Generating unique operation named: updateUsingPUT_4
2019-05-30 09:17:09 -Generating unique operation named: updateUsingPATCH_4
2019-05-30 09:17:09 -Generating unique operation named: updateUsingDELETE_4
2019-05-30 09:17:09 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-30 09:17:09 -Generating unique operation named: updateUsingTRACE_4
2019-05-30 09:17:10 -Generating unique operation named: editUsingGET_6
2019-05-30 09:17:10 -Generating unique operation named: listUsingGET_6
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPOST_6
2019-05-30 09:17:10 -Generating unique operation named: addUsingGET_6
2019-05-30 09:17:10 -Generating unique operation named: editUsingGET_7
2019-05-30 09:17:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-30 09:17:10 -Generating unique operation named: listUsingGET_7
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_12
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_13
2019-05-30 09:17:10 -Generating unique operation named: saveUsingPOST_6
2019-05-30 09:17:10 -Generating unique operation named: updateUsingGET_5
2019-05-30 09:17:10 -Generating unique operation named: updateUsingHEAD_5
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPOST_7
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPUT_5
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPATCH_5
2019-05-30 09:17:10 -Generating unique operation named: updateUsingDELETE_5
2019-05-30 09:17:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-30 09:17:10 -Generating unique operation named: updateUsingTRACE_5
2019-05-30 09:17:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-30 09:17:10 -Generating unique operation named: addUsingGET_7
2019-05-30 09:17:10 -Generating unique operation named: editUsingGET_8
2019-05-30 09:17:10 -Generating unique operation named: listUsingGET_8
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_14
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_15
2019-05-30 09:17:10 -Generating unique operation named: saveUsingPOST_7
2019-05-30 09:17:10 -Generating unique operation named: updateUsingGET_6
2019-05-30 09:17:10 -Generating unique operation named: updateUsingHEAD_6
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPOST_8
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPUT_6
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPATCH_6
2019-05-30 09:17:10 -Generating unique operation named: updateUsingDELETE_6
2019-05-30 09:17:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-30 09:17:10 -Generating unique operation named: updateUsingTRACE_6
2019-05-30 09:17:10 -Generating unique operation named: addUsingGET_8
2019-05-30 09:17:10 -Generating unique operation named: editUsingGET_9
2019-05-30 09:17:10 -Generating unique operation named: listUsingGET_9
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_16
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_17
2019-05-30 09:17:10 -Generating unique operation named: saveUsingPOST_8
2019-05-30 09:17:10 -Generating unique operation named: updateUsingGET_7
2019-05-30 09:17:10 -Generating unique operation named: updateUsingHEAD_7
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPOST_9
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPUT_7
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPATCH_7
2019-05-30 09:17:10 -Generating unique operation named: updateUsingDELETE_7
2019-05-30 09:17:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-30 09:17:10 -Generating unique operation named: updateUsingTRACE_7
2019-05-30 09:17:10 -Generating unique operation named: addUsingGET_9
2019-05-30 09:17:10 -Generating unique operation named: editUsingGET_10
2019-05-30 09:17:10 -Generating unique operation named: infoUsingGET_1
2019-05-30 09:17:10 -Generating unique operation named: infoUsingHEAD_1
2019-05-30 09:17:10 -Generating unique operation named: infoUsingPOST_1
2019-05-30 09:17:10 -Generating unique operation named: infoUsingPUT_1
2019-05-30 09:17:10 -Generating unique operation named: infoUsingPATCH_1
2019-05-30 09:17:10 -Generating unique operation named: infoUsingDELETE_1
2019-05-30 09:17:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-30 09:17:10 -Generating unique operation named: infoUsingTRACE_1
2019-05-30 09:17:10 -Generating unique operation named: listUsingGET_10
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_18
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_19
2019-05-30 09:17:10 -Generating unique operation named: saveUsingPOST_9
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPOST_10
2019-05-30 09:17:10 -Generating unique operation named: listUsingGET_11
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_20
2019-05-30 09:17:10 -Generating unique operation named: welcomeUsingGET_1
2019-05-30 09:17:10 -Generating unique operation named: addUsingGET_10
2019-05-30 09:17:10 -Generating unique operation named: editUsingGET_11
2019-05-30 09:17:10 -Generating unique operation named: listUsingGET_12
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_21
2019-05-30 09:17:10 -Generating unique operation named: saveUsingPOST_10
2019-05-30 09:17:10 -Generating unique operation named: treeUsingGET_1
2019-05-30 09:17:10 -Generating unique operation named: treeUsingGET_2
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPOST_11
2019-05-30 09:17:10 -Generating unique operation named: addUsingGET_11
2019-05-30 09:17:10 -Generating unique operation named: editUsingGET_12
2019-05-30 09:17:10 -Generating unique operation named: listUsingGET_13
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_22
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_23
2019-05-30 09:17:10 -Generating unique operation named: updateUsingPOST_12
2019-05-30 09:17:10 -Generating unique operation named: addUsingGET_12
2019-05-30 09:17:10 -Generating unique operation named: editUsingGET_13
2019-05-30 09:17:10 -Generating unique operation named: listUsingGET_14
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_24
2019-05-30 09:17:10 -Generating unique operation named: removeUsingPOST_25
2019-05-30 09:17:10 -Generating unique operation named: saveUsingPOST_11
2019-05-30 09:17:10 -Generating unique operation named: updateUsingGET_8
2019-05-30 09:17:10 -Generating unique operation named: updateUsingHEAD_8
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPOST_13
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPUT_8
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPATCH_8
2019-05-30 09:17:11 -Generating unique operation named: updateUsingDELETE_8
2019-05-30 09:17:11 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-30 09:17:11 -Generating unique operation named: updateUsingTRACE_8
2019-05-30 09:17:11 -Generating unique operation named: addUsingGET_13
2019-05-30 09:17:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-30 09:17:11 -Generating unique operation named: editUsingGET_14
2019-05-30 09:17:11 -Generating unique operation named: listUsingGET_15
2019-05-30 09:17:11 -Generating unique operation named: printEditUsingGET_1
2019-05-30 09:17:11 -Generating unique operation named: removeUsingPOST_26
2019-05-30 09:17:11 -Generating unique operation named: saveUsingPOST_12
2019-05-30 09:17:11 -Generating unique operation named: updateUsingGET_9
2019-05-30 09:17:11 -Generating unique operation named: updateUsingHEAD_9
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPOST_14
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPUT_9
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPATCH_9
2019-05-30 09:17:11 -Generating unique operation named: updateUsingDELETE_9
2019-05-30 09:17:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-30 09:17:11 -Generating unique operation named: updateUsingTRACE_9
2019-05-30 09:17:11 -Generating unique operation named: addUsingGET_14
2019-05-30 09:17:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-30 09:17:11 -Generating unique operation named: editUsingGET_15
2019-05-30 09:17:11 -Generating unique operation named: listUsingGET_16
2019-05-30 09:17:11 -Generating unique operation named: saveUsingPOST_13
2019-05-30 09:17:11 -Generating unique operation named: saveUsingPOST_14
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPOST_15
2019-05-30 09:17:11 -Generating unique operation named: listUsingGET_17
2019-05-30 09:17:11 -Generating unique operation named: listUsingHEAD_1
2019-05-30 09:17:11 -Generating unique operation named: listUsingPOST_1
2019-05-30 09:17:11 -Generating unique operation named: listUsingPUT_1
2019-05-30 09:17:11 -Generating unique operation named: listUsingPATCH_1
2019-05-30 09:17:11 -Generating unique operation named: listUsingDELETE_1
2019-05-30 09:17:11 -Generating unique operation named: listUsingOPTIONS_1
2019-05-30 09:17:11 -Generating unique operation named: listUsingTRACE_1
2019-05-30 09:17:11 -Generating unique operation named: countDDUsingGET_1
2019-05-30 09:17:11 -Generating unique operation named: exportDDUsingGET_1
2019-05-30 09:17:11 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-30 09:17:11 -Generating unique operation named: addUsingGET_15
2019-05-30 09:17:11 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-30 09:17:11 -Generating unique operation named: editUsingGET_16
2019-05-30 09:17:11 -Generating unique operation named: listUsingGET_18
2019-05-30 09:17:11 -Generating unique operation named: removeUsingPOST_27
2019-05-30 09:17:11 -Generating unique operation named: saveUsingPOST_15
2019-05-30 09:17:11 -Generating unique operation named: treeUsingGET_3
2019-05-30 09:17:11 -Generating unique operation named: treeViewUsingGET_1
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPOST_16
2019-05-30 09:17:11 -Generating unique operation named: addUsingGET_16
2019-05-30 09:17:11 -Generating unique operation named: editUsingGET_17
2019-05-30 09:17:11 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-30 09:17:11 -Generating unique operation named: listUsingGET_19
2019-05-30 09:17:11 -Generating unique operation named: removeUsingPOST_28
2019-05-30 09:17:11 -Generating unique operation named: removeUsingPOST_29
2019-05-30 09:17:11 -Generating unique operation named: saveUsingPOST_16
2019-05-30 09:17:11 -Generating unique operation named: updateUsingGET_10
2019-05-30 09:17:11 -Generating unique operation named: updateUsingHEAD_10
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPOST_17
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPUT_10
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPATCH_10
2019-05-30 09:17:11 -Generating unique operation named: updateUsingDELETE_10
2019-05-30 09:17:11 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-30 09:17:11 -Generating unique operation named: updateUsingTRACE_10
2019-05-30 09:17:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-30 09:17:11 -Generating unique operation named: addUsingGET_17
2019-05-30 09:17:11 -Generating unique operation named: editUsingGET_18
2019-05-30 09:17:11 -Generating unique operation named: listUsingGET_20
2019-05-30 09:17:11 -Generating unique operation named: removeUsingPOST_30
2019-05-30 09:17:11 -Generating unique operation named: removeUsingPOST_31
2019-05-30 09:17:11 -Generating unique operation named: saveUsingPOST_17
2019-05-30 09:17:11 -Generating unique operation named: updateUsingGET_11
2019-05-30 09:17:11 -Generating unique operation named: updateUsingHEAD_11
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPOST_18
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPUT_11
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPATCH_11
2019-05-30 09:17:11 -Generating unique operation named: updateUsingDELETE_11
2019-05-30 09:17:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-30 09:17:11 -Generating unique operation named: updateUsingTRACE_11
2019-05-30 09:17:11 -Generating unique operation named: addUsingGET_18
2019-05-30 09:17:11 -Generating unique operation named: editUsingGET_19
2019-05-30 09:17:11 -Generating unique operation named: listUsingGET_21
2019-05-30 09:17:11 -Generating unique operation named: removeUsingPOST_32
2019-05-30 09:17:11 -Generating unique operation named: removeUsingPOST_33
2019-05-30 09:17:11 -Generating unique operation named: saveUsingPOST_18
2019-05-30 09:17:11 -Generating unique operation named: updateUsingGET_12
2019-05-30 09:17:11 -Generating unique operation named: updateUsingHEAD_12
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPOST_19
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPUT_12
2019-05-30 09:17:11 -Generating unique operation named: updateUsingPATCH_12
2019-05-30 09:17:11 -Generating unique operation named: updateUsingDELETE_12
2019-05-30 09:17:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-30 09:17:12 -Generating unique operation named: updateUsingTRACE_12
2019-05-30 09:17:12 -Starting Quartz Scheduler now
2019-05-30 09:17:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-30 09:17:12 -Starting...
2019-05-30 09:17:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-30 09:17:12 -Started.
2019-05-30 09:17:12 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-30 09:17:12 -Using a shared selector for servlet write/read
2019-05-30 09:17:12 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-30 09:17:12 -Started BootdoApplication in 52.678 seconds (JVM running for 54.855)
2019-05-30 09:17:12 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-30 09:17:13 -==> Parameters: 
2019-05-30 09:17:13 -<==      Total: 1
2019-05-30 09:18:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-30 09:20:49 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-30 09:20:49 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-30 09:20:49 -FrameworkServlet 'dispatcherServlet': initialization completed in 118 ms
2019-05-30 09:20:49 -Enabling session validation scheduler...
2019-05-30 09:20:49 -请求地址 : http://localhost:8081/login;JSESSIONID=faf397bb-52a8-4af1-b8df-fcd98a6a512e
2019-05-30 09:20:49 -HTTP METHOD : GET
2019-05-30 09:20:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 09:20:49 -参数 : [{}]
2019-05-30 09:20:49 -耗时 : 10
2019-05-30 09:20:49 -返回值 : login
2019-05-30 09:20:57 -请求地址 : http://localhost:8081/getVerify
2019-05-30 09:20:57 -HTTP METHOD : GET
2019-05-30 09:20:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 09:20:57 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@133711bb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1df0fdad]
2019-05-30 09:21:04 -1390
2019-05-30 09:21:05 -耗时 : 8043
2019-05-30 09:21:05 -返回值 : null
2019-05-30 09:21:15 -请求地址 : http://localhost:8081/login
2019-05-30 09:21:15 -HTTP METHOD : POST
2019-05-30 09:21:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-30 09:21:15 -参数 : [admin, 111111, 1390, org.apache.shiro.web.servlet.ShiroHttpServletRequest@76644fe]
2019-05-30 09:21:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-30 09:21:15 -==> Parameters: admin(String)
2019-05-30 09:21:15 -<==      Total: 1
2019-05-30 09:21:15 -耗时 : 197
2019-05-30 09:21:15 -返回值 : {msg=操作成功, code=0}
2019-05-30 09:21:16 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-30 09:21:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 09:21:16 -==> Parameters: 1(Long), admin(String), 登录(String), 198(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-30 09:21:16.232(Timestamp)
2019-05-30 09:21:16 -请求地址 : http://localhost:8081/index
2019-05-30 09:21:16 -HTTP METHOD : GET
2019-05-30 09:21:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 09:21:16 -参数 : [{}]
2019-05-30 09:21:16 -<==    Updates: 1
2019-05-30 09:21:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 09:21:16 -==> Parameters: 1(Long)
2019-05-30 09:21:16 -<==      Total: 50
2019-05-30 09:21:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 09:21:16 -==> Parameters: 138(Long)
2019-05-30 09:21:16 -<==      Total: 1
2019-05-30 09:21:16 -耗时 : 503
2019-05-30 09:21:16 -返回值 : index_v1
2019-05-30 09:21:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 09:21:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 503(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 09:21:17.342(Timestamp)
2019-05-30 09:21:17 -<==    Updates: 1
2019-05-30 09:21:17 -请求地址 : http://localhost:8081/main
2019-05-30 09:21:17 -HTTP METHOD : GET
2019-05-30 09:21:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 09:21:17 -参数 : []
2019-05-30 09:21:17 -耗时 : 0
2019-05-30 09:21:17 -返回值 : main
2019-05-30 09:21:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 09:21:19 -HTTP METHOD : GET
2019-05-30 09:21:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 09:21:19 -参数 : []
2019-05-30 09:21:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 09:21:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 09:21:19 -<==      Total: 0
2019-05-30 09:21:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 09:21:19 -==> Parameters: 1(Long), 0(String)
2019-05-30 09:21:19 -请求地址 : http://localhost:8081/main
2019-05-30 09:21:19 -HTTP METHOD : GET
2019-05-30 09:21:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 09:21:19 -参数 : []
2019-05-30 09:21:19 -耗时 : 0
2019-05-30 09:21:19 -返回值 : main
2019-05-30 09:21:19 -<==      Total: 1
2019-05-30 09:21:19 -耗时 : 463
2019-05-30 09:21:19 -返回值 : com.bootdo.common.utils.PageUtils@7928ceea
2019-05-30 09:21:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 09:21:32 -==> Parameters: 1(Long)
2019-05-30 09:21:32 -<==      Total: 94
2019-05-30 09:21:32 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-30 09:21:32 -HTTP METHOD : GET
2019-05-30 09:21:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-30 09:21:32 -参数 : []
2019-05-30 09:21:32 -耗时 : 19
2019-05-30 09:21:32 -返回值 : charts/tableElecYY
2019-05-30 09:21:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:21:33 -HTTP METHOD : GET
2019-05-30 09:21:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:21:33 -参数 : [userType]
2019-05-30 09:21:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:21:33 -==> Parameters: userType(String)
2019-05-30 09:21:33 -<==      Total: 4
2019-05-30 09:21:33 -耗时 : 77
2019-05-30 09:21:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:21:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 09:21:38 -HTTP METHOD : GET
2019-05-30 09:21:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 09:21:38 -参数 : []
2019-05-30 09:21:38 -耗时 : 1
2019-05-30 09:21:38 -返回值 : system/dept/deptTree
2019-05-30 09:21:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 09:21:38 -HTTP METHOD : GET
2019-05-30 09:21:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 09:21:38 -参数 : []
2019-05-30 09:21:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 09:21:38 -==> Parameters: 
2019-05-30 09:21:38 -<==      Total: 3
2019-05-30 09:21:38 -耗时 : 43
2019-05-30 09:21:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 09:21:46 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-30 09:21:46 -HTTP METHOD : POST
2019-05-30 09:21:46 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-30 09:21:46 -参数 : [com.bootdo.elec.vo.ElecVo@43350fa2, com.bootdo.moneyLog.vo.ElecLogVo@6e0ace3]
2019-05-30 09:21:46 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:46 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:21:47 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:21:47 -<==      Total: 1
2019-05-30 09:21:47 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-30 09:21:47 -==> Parameters: 
2019-05-30 09:21:47 -<==      Total: 2
2019-05-30 09:21:47 -耗时 : 928
2019-05-30 09:21:47 -返回值 : {WGOweElecSumYYNew=0.00, G1OweElecCountYYNew=0, G3TotalyuNew=0.00, MMPreElecSumYYNew=0.00, MMOweElecCountYYNew=0, TotalPreyuNew=0.00, WGTotalyuNew=0.00, TotalCostyu=730.29, SElecPrice=2.600, WSElecPrice=0.810, WGTotalhuOld=0, WMPreElecSumYYOld=0.00, SElecLogYYSum=40.00, G3TotalhuOld=0, G1PreElecSumYYOld=0.00, TotalOwehuNew=2, TotalCosthu=7, MSTotalyuOld=0.00, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=1, MTotalyuOld=0.00, G2PreElecSumYYNew=0.00, G1OweElecSumYYNew=0.00, ZElecPrice=0.970, G1ElecLogYYCount=0, MMTotalhuNew=0, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0.00, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0.00, SElecLogYYCount=2, ZTotalyuOld=0.00, G3PreElecSumYYNew=0.00, ZElecLogYYSum=0.00, WSPreElecCountYYNew=0, WGElecPrice=0.970, WMTotalyuOld=0.00, WSElecLogYYCount=0, WSTotalhuNew=0, MOweElecSumYYOld=0.00, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G1ElecPrice=0.970, G2OweElecSumYYNew=0.00, WSOweElecSumYYOld=0.00, MSPreElecSumYYOld=0.00, G3OweElecCountYYOld=0, SElecCostYYCount=3, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0.00, MElecLogYYCount=2, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=20.00, G2TotalyuNew=0.00, G2TotalhuOld=0, MMOweElecSumYYNew=0.00, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0.00, ZTotalyuNew=0.00, WGElecLogYYCount=0, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0.00, ZElecAmountYY=0, STotalyuNew=-63.12, SOweElecCountYYNew=1, MMTotalyuNew=0.00, WGTotalyuOld=0.00, MSElecCostYYSum=0.00, TotalPreyuOld=0.00, G3TotalyuOld=0.00, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=0.00, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=0, G3ElecAmountYY=0, WSOweElecSumYYNew=0.00, G2ElecCostYYCount=0, MPreElecSumYYOld=0.00, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0.00, G3PreElecSumYYOld=0.00, MMPreElecSumYYOld=0.00, MTotalhuNew=1, MTotalyuNew=-23.25, G2OweElecCountYYNew=0, G1TotalyuNew=0.00, G3ElecPrice=0.400, WMOweElecSumYYOld=0.00, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=0, WSElecLogYYSum=0.00, G2OweElecSumYYOld=0.00, WGElecAmountYY=0, ZElecCostYYSum=0.00, WMElecAmountYY=0, MElecCostYYCount=3, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0.00, MOweElecCountYYNew=1, TotalOweyuNew=-86.37, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=0.00, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0.00, G2TotalyuOld=0.00, TotalAllyuNew=-86.37, TotalAllhuOld=0, STotalyuOld=0.00, SElecCostYYSum=277.08, MPreElecCountYYNew=0, SOweElecSumYYNew=-63.12, WMElecCostYYSum=0.00, G3ElecCostYYSum=0.00, MMTotalyuOld=0.00, MMElecCostYYSum=0.00, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0.00, WSTotalyuOld=0.00, G1ElecCostYYCount=1, WMElecCostYYCount=0, ZOweElecSumYYNew=0.00, MElecPrice=1.800, WGElecCostYYCount=0, TotalLogyu=60.00, ZTotalhuNew=0, WMElecPrice=0.465, MPreElecSumYYNew=0.00, G2ElecLogYYSum=0.00, G1ElecLogYYSum=0.00, G3ElecLogYYSum=0.00, TotalLoghu=4, SPreElecCountYYOld=0, TotalOweyuOld=0.00, MSOweElecSumYYOld=0.00, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0.00, ZPreElecSumYYNew=0.00, G2ElecCostYYSum=0.00, MTotalhuOld=0, G1TotalyuOld=0.00, TotalPrehuNew=0, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=0, SPreElecSumYYNew=0.00, MMElecLogYYCount=0, PriceTotal=10.725, ZPreElecCountYYNew=0, WMTotalhuNew=0, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=2, G1ElecCostYYSum=211.96, MMElecCostYYCount=0, WGOweElecSumYYOld=0.00, WSElecCostYYSum=0.00, G3PreElecCountYYOld=0, G2TotalhuNew=0, G3OweElecSumYYNew=0.00, G1PreElecSumYYNew=0.00, SElecAmountYY=0, WGElecCostYYSum=0.00, MElecCostYYSum=241.25, WGPreElecSumYYNew=0.00, G2PreElecSumYYOld=0.00, G2ElecAmountYY=0, G2ElecPrice=0.465, MSElecAmountYY=0, WSTotalyuNew=0.00, G1TotalhuNew=0, G1OweElecSumYYOld=0.00, MMElecPrice=0.465, MMElecLogYYSum=0.00, MSOweElecSumYYNew=0.00, WMTotalyuNew=0.00, WSPreElecSumYYOld=0.00, MSElecLogYYSum=0.00, ZPreElecSumYYOld=0.00, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-23.25, MSElecPrice=0.810, WMPreElecCountYYNew=0, MMPreElecCountYYNew=0, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=0, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0.00, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=0, SPreElecSumYYOld=0.00, G3ElecLogYYCount=0}
2019-05-30 09:21:57 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:21:57 -HTTP METHOD : GET
2019-05-30 09:21:57 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:21:57 -参数 : []
2019-05-30 09:21:57 -耗时 : 14
2019-05-30 09:21:57 -返回值 : charts/tableHeatYY
2019-05-30 09:21:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:21:57 -HTTP METHOD : GET
2019-05-30 09:21:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:21:57 -参数 : [userType]
2019-05-30 09:21:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:21:57 -==> Parameters: userType(String)
2019-05-30 09:21:57 -<==      Total: 4
2019-05-30 09:21:57 -耗时 : 5
2019-05-30 09:21:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:22:00 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-30 09:22:00 -HTTP METHOD : GET
2019-05-30 09:22:00 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-30 09:22:00 -参数 : []
2019-05-30 09:22:00 -耗时 : 0
2019-05-30 09:22:00 -返回值 : charts/tableElecYY
2019-05-30 09:22:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:22:00 -HTTP METHOD : GET
2019-05-30 09:22:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:22:00 -参数 : [userType]
2019-05-30 09:22:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:22:00 -==> Parameters: userType(String)
2019-05-30 09:22:00 -<==      Total: 4
2019-05-30 09:22:00 -耗时 : 5
2019-05-30 09:22:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:22:07 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 09:22:07 -HTTP METHOD : GET
2019-05-30 09:22:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 09:22:07 -参数 : []
2019-05-30 09:22:07 -耗时 : 1
2019-05-30 09:22:07 -返回值 : system/dept/deptTree
2019-05-30 09:22:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 09:22:07 -HTTP METHOD : GET
2019-05-30 09:22:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 09:22:07 -参数 : []
2019-05-30 09:22:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 09:22:07 -==> Parameters: 
2019-05-30 09:22:07 -<==      Total: 3
2019-05-30 09:22:07 -耗时 : 4
2019-05-30 09:22:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 09:22:14 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-30 09:22:14 -HTTP METHOD : POST
2019-05-30 09:22:14 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-30 09:22:14 -参数 : [com.bootdo.elec.vo.ElecVo@4c1a3130, com.bootdo.moneyLog.vo.ElecLogVo@5dd154ca]
2019-05-30 09:22:14 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:14 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:22:14 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:22:15 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:22:15 -<==      Total: 1
2019-05-30 09:22:15 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-30 09:22:15 -==> Parameters: 
2019-05-30 09:22:15 -<==      Total: 2
2019-05-30 09:22:15 -耗时 : 323
2019-05-30 09:22:15 -返回值 : {WGOweElecSumYYNew=0.00, G1OweElecCountYYNew=0, G3TotalyuNew=0.00, MMPreElecSumYYNew=0.00, MMOweElecCountYYNew=0, TotalPreyuNew=0.00, WGTotalyuNew=0.00, TotalCostyu=730.29, SElecPrice=2.600, WSElecPrice=0.810, WGTotalhuOld=0, WMPreElecSumYYOld=0.00, SElecLogYYSum=40.00, G3TotalhuOld=0, G1PreElecSumYYOld=0.00, TotalOwehuNew=2, TotalCosthu=7, MSTotalyuOld=0.00, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=1, MTotalyuOld=0.00, G2PreElecSumYYNew=0.00, G1OweElecSumYYNew=0.00, ZElecPrice=0.970, G1ElecLogYYCount=0, MMTotalhuNew=0, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0.00, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0.00, SElecLogYYCount=2, ZTotalyuOld=0.00, G3PreElecSumYYNew=0.00, ZElecLogYYSum=0.00, WSPreElecCountYYNew=0, WGElecPrice=0.970, WMTotalyuOld=0.00, WSElecLogYYCount=0, WSTotalhuNew=0, MOweElecSumYYOld=0.00, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G1ElecPrice=0.970, G2OweElecSumYYNew=0.00, WSOweElecSumYYOld=0.00, MSPreElecSumYYOld=0.00, G3OweElecCountYYOld=0, SElecCostYYCount=3, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0.00, MElecLogYYCount=2, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=20.00, G2TotalyuNew=0.00, G2TotalhuOld=0, MMOweElecSumYYNew=0.00, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0.00, ZTotalyuNew=0.00, WGElecLogYYCount=0, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0.00, ZElecAmountYY=0, STotalyuNew=-63.12, SOweElecCountYYNew=1, MMTotalyuNew=0.00, WGTotalyuOld=0.00, MSElecCostYYSum=0.00, TotalPreyuOld=0.00, G3TotalyuOld=0.00, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=0.00, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=0, G3ElecAmountYY=0, WSOweElecSumYYNew=0.00, G2ElecCostYYCount=0, MPreElecSumYYOld=0.00, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0.00, G3PreElecSumYYOld=0.00, MMPreElecSumYYOld=0.00, MTotalhuNew=1, MTotalyuNew=-23.25, G2OweElecCountYYNew=0, G1TotalyuNew=0.00, G3ElecPrice=0.400, WMOweElecSumYYOld=0.00, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=0, WSElecLogYYSum=0.00, G2OweElecSumYYOld=0.00, WGElecAmountYY=0, ZElecCostYYSum=0.00, WMElecAmountYY=0, MElecCostYYCount=3, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0.00, MOweElecCountYYNew=1, TotalOweyuNew=-86.37, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=0.00, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0.00, G2TotalyuOld=0.00, TotalAllyuNew=-86.37, TotalAllhuOld=0, STotalyuOld=0.00, SElecCostYYSum=277.08, MPreElecCountYYNew=0, SOweElecSumYYNew=-63.12, WMElecCostYYSum=0.00, G3ElecCostYYSum=0.00, MMTotalyuOld=0.00, MMElecCostYYSum=0.00, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0.00, WSTotalyuOld=0.00, G1ElecCostYYCount=1, WMElecCostYYCount=0, ZOweElecSumYYNew=0.00, MElecPrice=1.800, WGElecCostYYCount=0, TotalLogyu=60.00, ZTotalhuNew=0, WMElecPrice=0.465, MPreElecSumYYNew=0.00, G2ElecLogYYSum=0.00, G1ElecLogYYSum=0.00, G3ElecLogYYSum=0.00, TotalLoghu=4, SPreElecCountYYOld=0, TotalOweyuOld=0.00, MSOweElecSumYYOld=0.00, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0.00, ZPreElecSumYYNew=0.00, G2ElecCostYYSum=0.00, MTotalhuOld=0, G1TotalyuOld=0.00, TotalPrehuNew=0, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=0, SPreElecSumYYNew=0.00, MMElecLogYYCount=0, PriceTotal=10.725, ZPreElecCountYYNew=0, WMTotalhuNew=0, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=2, G1ElecCostYYSum=211.96, MMElecCostYYCount=0, WGOweElecSumYYOld=0.00, WSElecCostYYSum=0.00, G3PreElecCountYYOld=0, G2TotalhuNew=0, G3OweElecSumYYNew=0.00, G1PreElecSumYYNew=0.00, SElecAmountYY=0, WGElecCostYYSum=0.00, MElecCostYYSum=241.25, WGPreElecSumYYNew=0.00, G2PreElecSumYYOld=0.00, G2ElecAmountYY=0, G2ElecPrice=0.465, MSElecAmountYY=0, WSTotalyuNew=0.00, G1TotalhuNew=0, G1OweElecSumYYOld=0.00, MMElecPrice=0.465, MMElecLogYYSum=0.00, MSOweElecSumYYNew=0.00, WMTotalyuNew=0.00, WSPreElecSumYYOld=0.00, MSElecLogYYSum=0.00, ZPreElecSumYYOld=0.00, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-23.25, MSElecPrice=0.810, WMPreElecCountYYNew=0, MMPreElecCountYYNew=0, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=0, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0.00, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=0, SPreElecSumYYOld=0.00, G3ElecLogYYCount=0}
2019-05-30 09:34:49 -Starting BootdoApplication on PC-201905091110 with PID 20444 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-30 09:34:49 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-30 09:34:49 -The following profiles are active: dev
2019-05-30 09:34:49 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b444398: startup date [Thu May 30 09:34:49 CST 2019]; root of context hierarchy
2019-05-30 09:34:53 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-30 09:34:56 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$69fb3124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:34:56 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5c545fcb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:34:57 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:34:58 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:34:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:34:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-30 09:34:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-30 09:34:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:34:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:34:58 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:34:58 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 09:34:59 -Tomcat initialized with port(s): 8081 (http)
2019-05-30 09:34:59 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-30 09:34:59 -Starting service [Tomcat]
2019-05-30 09:34:59 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-30 09:34:59 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-30 09:35:00 -Initializing Spring embedded WebApplicationContext
2019-05-30 09:35:00 -Root WebApplicationContext: initialization completed in 10865 ms
2019-05-30 09:35:01 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-30 09:35:01 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-30 09:35:01 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-30 09:35:01 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-30 09:35:01 -Filter xssFilter was not registered (disabled)
2019-05-30 09:35:01 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-30 09:35:01 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-30 09:35:01 -Servlet statViewServlet mapped to [/druid/*]
2019-05-30 09:35:01 -Servlet dispatcherServlet mapped to [/]
2019-05-30 09:35:06 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b444398: startup date [Thu May 30 09:34:49 CST 2019]; root of context hierarchy
2019-05-30 09:35:06 -Using default implementation for ThreadExecutor
2019-05-30 09:35:06 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-30 09:35:06 -Quartz Scheduler v.2.2.1 created.
2019-05-30 09:35:06 -RAMJobStore initialized.
2019-05-30 09:35:06 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-30 09:35:06 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-30 09:35:06 -Quartz scheduler version: 2.2.1
2019-05-30 09:35:06 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@55317c63
2019-05-30 09:35:07 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-30 09:35:07 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-30 09:35:10 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:35:10 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-30 09:35:10 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:35:10 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-30 09:35:10 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-30 09:35:10 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-30 09:35:10 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-30 09:35:10 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:35:10 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-30 09:35:10 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:35:10 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-30 09:35:10 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:35:10 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 09:35:10 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-30 09:35:10 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 09:35:10 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-30 09:35:10 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:35:10 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-30 09:35:10 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 09:35:10 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-30 09:35:10 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 09:35:10 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-30 09:35:10 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-30 09:35:10 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 09:35:10 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-30 09:35:10 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-30 09:35:10 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-30 09:35:10 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-30 09:35:10 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:10 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-30 09:35:10 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-30 09:35:10 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-30 09:35:10 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-30 09:35:10 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:10 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-30 09:35:10 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-30 09:35:10 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-30 09:35:10 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-30 09:35:10 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-30 09:35:10 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:10 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-30 09:35:10 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-30 09:35:10 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-30 09:35:10 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-30 09:35:10 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:10 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:10 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-30 09:35:10 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 09:35:10 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-30 09:35:10 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 09:35:10 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-30 09:35:10 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-30 09:35:10 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-30 09:35:10 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-30 09:35:10 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-30 09:35:10 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:10 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-30 09:35:10 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-30 09:35:10 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:10 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-30 09:35:10 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-30 09:35:10 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-30 09:35:10 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-30 09:35:10 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:10 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-30 09:35:10 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-30 09:35:10 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-30 09:35:10 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-30 09:35:10 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-30 09:35:10 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-30 09:35:10 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 09:35:10 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 09:35:10 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-30 09:35:10 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:10 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-30 09:35:10 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-30 09:35:10 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 09:35:10 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-30 09:35:10 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-30 09:35:10 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-30 09:35:10 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-30 09:35:10 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:10 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-30 09:35:10 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-30 09:35:10 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:10 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-30 09:35:10 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-30 09:35:10 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 09:35:10 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-30 09:35:10 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-30 09:35:10 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-30 09:35:10 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-30 09:35:10 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:10 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-30 09:35:10 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-30 09:35:10 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-30 09:35:10 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-30 09:35:10 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 09:35:10 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-30 09:35:10 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-30 09:35:10 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-30 09:35:10 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 09:35:10 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:10 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 09:35:10 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-30 09:35:10 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:10 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-30 09:35:10 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 09:35:10 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-30 09:35:10 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-30 09:35:10 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-30 09:35:10 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-30 09:35:10 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-30 09:35:10 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 09:35:10 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:10 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 09:35:10 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:10 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-30 09:35:10 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 09:35:10 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-30 09:35:11 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-30 09:35:11 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 09:35:11 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:11 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 09:35:11 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 09:35:11 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-30 09:35:11 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-30 09:35:11 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-30 09:35:11 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 09:35:11 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:11 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 09:35:11 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 09:35:11 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-30 09:35:11 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-30 09:35:11 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-30 09:35:11 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-30 09:35:11 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:11 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-30 09:35:11 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-30 09:35:11 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-30 09:35:11 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:11 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-30 09:35:11 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-30 09:35:11 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-30 09:35:11 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:11 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-30 09:35:11 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-30 09:35:11 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-30 09:35:11 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:11 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-30 09:35:11 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-30 09:35:11 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-30 09:35:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-30 09:35:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-30 09:35:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-30 09:35:11 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-30 09:35:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-30 09:35:11 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-30 09:35:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-30 09:35:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 09:35:11 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-30 09:35:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-30 09:35:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-30 09:35:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-30 09:35:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-30 09:35:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-30 09:35:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-30 09:35:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-30 09:35:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-30 09:35:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-30 09:35:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-30 09:35:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-30 09:35:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-30 09:35:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-30 09:35:11 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-30 09:35:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-30 09:35:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-30 09:35:11 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-30 09:35:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-30 09:35:11 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 09:35:11 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-30 09:35:11 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 09:35:11 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 09:35:11 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-30 09:35:11 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-30 09:35:11 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-30 09:35:11 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-30 09:35:11 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:11 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-30 09:35:11 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-30 09:35:11 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:11 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-30 09:35:11 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:11 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 09:35:11 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-30 09:35:11 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-30 09:35:11 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-30 09:35:11 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 09:35:11 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 09:35:11 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 09:35:11 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-30 09:35:11 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 09:35:11 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 09:35:11 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 09:35:11 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-30 09:35:11 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-30 09:35:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 09:35:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-30 09:35:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-30 09:35:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-30 09:35:11 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-30 09:35:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-30 09:35:12 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-30 09:35:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 09:35:13 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b444398: startup date [Thu May 30 09:34:49 CST 2019]; root of context hierarchy
2019-05-30 09:35:13 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 09:35:13 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 09:35:13 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 09:35:13 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-30 09:35:13 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-30 09:35:15 -Registering beans for JMX exposure on startup
2019-05-30 09:35:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-30 09:35:15 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-30 09:35:15 -Starting beans in phase 2147483647
2019-05-30 09:35:15 -Context refreshed
2019-05-30 09:35:15 -Found 1 custom documentation plugin(s)
2019-05-30 09:35:15 -Scanning for api listing references
2019-05-30 09:35:16 -Generating unique operation named: getCountDUsingPOST_1
2019-05-30 09:35:16 -Generating unique operation named: removeUsingPOST_1
2019-05-30 09:35:16 -Generating unique operation named: addUsingGET_1
2019-05-30 09:35:16 -Generating unique operation named: editUsingGET_1
2019-05-30 09:35:16 -Generating unique operation named: listUsingGET_1
2019-05-30 09:35:16 -Generating unique operation named: removeUsingPOST_2
2019-05-30 09:35:16 -Generating unique operation named: removeUsingPOST_3
2019-05-30 09:35:16 -Generating unique operation named: saveUsingPOST_1
2019-05-30 09:35:16 -Generating unique operation named: updateUsingGET_1
2019-05-30 09:35:16 -Generating unique operation named: updateUsingHEAD_1
2019-05-30 09:35:16 -Generating unique operation named: updateUsingPOST_1
2019-05-30 09:35:16 -Generating unique operation named: updateUsingPUT_1
2019-05-30 09:35:16 -Generating unique operation named: updateUsingPATCH_1
2019-05-30 09:35:16 -Generating unique operation named: updateUsingDELETE_1
2019-05-30 09:35:16 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-30 09:35:16 -Generating unique operation named: updateUsingTRACE_1
2019-05-30 09:35:16 -Generating unique operation named: addUsingGET_2
2019-05-30 09:35:16 -Generating unique operation named: editUsingGET_2
2019-05-30 09:35:16 -Generating unique operation named: listUsingGET_2
2019-05-30 09:35:16 -Generating unique operation named: removeUsingPOST_4
2019-05-30 09:35:16 -Generating unique operation named: removeUsingPOST_5
2019-05-30 09:35:16 -Generating unique operation named: saveUsingPOST_2
2019-05-30 09:35:16 -Generating unique operation named: updateUsingPOST_2
2019-05-30 09:35:16 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-30 09:35:16 -Generating unique operation named: addUsingGET_3
2019-05-30 09:35:16 -Generating unique operation named: editUsingGET_3
2019-05-30 09:35:16 -Generating unique operation named: listUsingGET_3
2019-05-30 09:35:16 -Generating unique operation named: removeUsingPOST_6
2019-05-30 09:35:16 -Generating unique operation named: removeUsingPOST_7
2019-05-30 09:35:16 -Generating unique operation named: saveUsingPOST_3
2019-05-30 09:35:16 -Generating unique operation named: updateUsingGET_2
2019-05-30 09:35:16 -Generating unique operation named: updateUsingHEAD_2
2019-05-30 09:35:16 -Generating unique operation named: updateUsingPOST_3
2019-05-30 09:35:16 -Generating unique operation named: updateUsingPUT_2
2019-05-30 09:35:16 -Generating unique operation named: updateUsingPATCH_2
2019-05-30 09:35:16 -Generating unique operation named: updateUsingDELETE_2
2019-05-30 09:35:16 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-30 09:35:16 -Generating unique operation named: updateUsingTRACE_2
2019-05-30 09:35:16 -Generating unique operation named: addUsingGET_4
2019-05-30 09:35:17 -Generating unique operation named: editUsingGET_4
2019-05-30 09:35:17 -Generating unique operation named: listUsingGET_4
2019-05-30 09:35:17 -Generating unique operation named: removeUsingPOST_8
2019-05-30 09:35:17 -Generating unique operation named: removeUsingPOST_9
2019-05-30 09:35:17 -Generating unique operation named: saveUsingPOST_4
2019-05-30 09:35:17 -Generating unique operation named: updateUsingGET_3
2019-05-30 09:35:17 -Generating unique operation named: updateUsingHEAD_3
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPOST_4
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPUT_3
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPATCH_3
2019-05-30 09:35:17 -Generating unique operation named: updateUsingDELETE_3
2019-05-30 09:35:17 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-30 09:35:17 -Generating unique operation named: updateUsingTRACE_3
2019-05-30 09:35:17 -Generating unique operation named: ElecUsingGET_1
2019-05-30 09:35:17 -Generating unique operation named: addUsingGET_5
2019-05-30 09:35:17 -Generating unique operation named: editUsingGET_5
2019-05-30 09:35:17 -Generating unique operation named: listUsingGET_5
2019-05-30 09:35:17 -Generating unique operation named: removeUsingPOST_10
2019-05-30 09:35:17 -Generating unique operation named: removeUsingPOST_11
2019-05-30 09:35:17 -Generating unique operation named: saveUsingPOST_5
2019-05-30 09:35:17 -Generating unique operation named: updateUsingGET_4
2019-05-30 09:35:17 -Generating unique operation named: updateUsingHEAD_4
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPOST_5
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPUT_4
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPATCH_4
2019-05-30 09:35:17 -Generating unique operation named: updateUsingDELETE_4
2019-05-30 09:35:17 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-30 09:35:17 -Generating unique operation named: updateUsingTRACE_4
2019-05-30 09:35:17 -Generating unique operation named: editUsingGET_6
2019-05-30 09:35:17 -Generating unique operation named: listUsingGET_6
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPOST_6
2019-05-30 09:35:17 -Generating unique operation named: addUsingGET_6
2019-05-30 09:35:17 -Generating unique operation named: editUsingGET_7
2019-05-30 09:35:17 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-30 09:35:17 -Generating unique operation named: listUsingGET_7
2019-05-30 09:35:17 -Generating unique operation named: removeUsingPOST_12
2019-05-30 09:35:17 -Generating unique operation named: removeUsingPOST_13
2019-05-30 09:35:17 -Generating unique operation named: saveUsingPOST_6
2019-05-30 09:35:17 -Generating unique operation named: updateUsingGET_5
2019-05-30 09:35:17 -Generating unique operation named: updateUsingHEAD_5
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPOST_7
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPUT_5
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPATCH_5
2019-05-30 09:35:17 -Generating unique operation named: updateUsingDELETE_5
2019-05-30 09:35:17 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-30 09:35:17 -Generating unique operation named: updateUsingTRACE_5
2019-05-30 09:35:17 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-30 09:35:17 -Generating unique operation named: addUsingGET_7
2019-05-30 09:35:17 -Generating unique operation named: editUsingGET_8
2019-05-30 09:35:17 -Generating unique operation named: listUsingGET_8
2019-05-30 09:35:17 -Generating unique operation named: removeUsingPOST_14
2019-05-30 09:35:17 -Generating unique operation named: removeUsingPOST_15
2019-05-30 09:35:17 -Generating unique operation named: saveUsingPOST_7
2019-05-30 09:35:17 -Generating unique operation named: updateUsingGET_6
2019-05-30 09:35:17 -Generating unique operation named: updateUsingHEAD_6
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPOST_8
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPUT_6
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPATCH_6
2019-05-30 09:35:17 -Generating unique operation named: updateUsingDELETE_6
2019-05-30 09:35:17 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-30 09:35:17 -Generating unique operation named: updateUsingTRACE_6
2019-05-30 09:35:17 -Generating unique operation named: addUsingGET_8
2019-05-30 09:35:17 -Generating unique operation named: editUsingGET_9
2019-05-30 09:35:17 -Generating unique operation named: listUsingGET_9
2019-05-30 09:35:17 -Generating unique operation named: removeUsingPOST_16
2019-05-30 09:35:17 -Generating unique operation named: removeUsingPOST_17
2019-05-30 09:35:17 -Generating unique operation named: saveUsingPOST_8
2019-05-30 09:35:17 -Generating unique operation named: updateUsingGET_7
2019-05-30 09:35:17 -Generating unique operation named: updateUsingHEAD_7
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPOST_9
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPUT_7
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPATCH_7
2019-05-30 09:35:17 -Generating unique operation named: updateUsingDELETE_7
2019-05-30 09:35:17 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-30 09:35:17 -Generating unique operation named: updateUsingTRACE_7
2019-05-30 09:35:17 -Generating unique operation named: addUsingGET_9
2019-05-30 09:35:17 -Generating unique operation named: editUsingGET_10
2019-05-30 09:35:17 -Generating unique operation named: infoUsingGET_1
2019-05-30 09:35:17 -Generating unique operation named: infoUsingHEAD_1
2019-05-30 09:35:17 -Generating unique operation named: infoUsingPOST_1
2019-05-30 09:35:17 -Generating unique operation named: infoUsingPUT_1
2019-05-30 09:35:17 -Generating unique operation named: infoUsingPATCH_1
2019-05-30 09:35:17 -Generating unique operation named: infoUsingDELETE_1
2019-05-30 09:35:17 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-30 09:35:17 -Generating unique operation named: infoUsingTRACE_1
2019-05-30 09:35:17 -Generating unique operation named: listUsingGET_10
2019-05-30 09:35:17 -Generating unique operation named: removeUsingPOST_18
2019-05-30 09:35:17 -Generating unique operation named: removeUsingPOST_19
2019-05-30 09:35:17 -Generating unique operation named: saveUsingPOST_9
2019-05-30 09:35:17 -Generating unique operation named: updateUsingPOST_10
2019-05-30 09:35:18 -Generating unique operation named: listUsingGET_11
2019-05-30 09:35:18 -Generating unique operation named: removeUsingPOST_20
2019-05-30 09:35:18 -Generating unique operation named: welcomeUsingGET_1
2019-05-30 09:35:18 -Generating unique operation named: addUsingGET_10
2019-05-30 09:35:18 -Generating unique operation named: editUsingGET_11
2019-05-30 09:35:18 -Generating unique operation named: listUsingGET_12
2019-05-30 09:35:18 -Generating unique operation named: removeUsingPOST_21
2019-05-30 09:35:18 -Generating unique operation named: saveUsingPOST_10
2019-05-30 09:35:18 -Generating unique operation named: treeUsingGET_1
2019-05-30 09:35:18 -Generating unique operation named: treeUsingGET_2
2019-05-30 09:35:18 -Generating unique operation named: updateUsingPOST_11
2019-05-30 09:35:18 -Generating unique operation named: addUsingGET_11
2019-05-30 09:35:18 -Generating unique operation named: editUsingGET_12
2019-05-30 09:35:18 -Generating unique operation named: listUsingGET_13
2019-05-30 09:35:18 -Generating unique operation named: removeUsingPOST_22
2019-05-30 09:35:18 -Generating unique operation named: removeUsingPOST_23
2019-05-30 09:35:18 -Generating unique operation named: updateUsingPOST_12
2019-05-30 09:35:18 -Generating unique operation named: addUsingGET_12
2019-05-30 09:35:18 -Generating unique operation named: editUsingGET_13
2019-05-30 09:35:18 -Generating unique operation named: listUsingGET_14
2019-05-30 09:35:18 -Generating unique operation named: removeUsingPOST_24
2019-05-30 09:35:18 -Generating unique operation named: removeUsingPOST_25
2019-05-30 09:35:18 -Generating unique operation named: saveUsingPOST_11
2019-05-30 09:35:18 -Generating unique operation named: updateUsingGET_8
2019-05-30 09:35:18 -Generating unique operation named: updateUsingHEAD_8
2019-05-30 09:35:18 -Generating unique operation named: updateUsingPOST_13
2019-05-30 09:35:18 -Generating unique operation named: updateUsingPUT_8
2019-05-30 09:35:18 -Generating unique operation named: updateUsingPATCH_8
2019-05-30 09:35:18 -Generating unique operation named: updateUsingDELETE_8
2019-05-30 09:35:18 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-30 09:35:18 -Generating unique operation named: updateUsingTRACE_8
2019-05-30 09:35:18 -Generating unique operation named: addUsingGET_13
2019-05-30 09:35:18 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-30 09:35:18 -Generating unique operation named: editUsingGET_14
2019-05-30 09:35:18 -Generating unique operation named: listUsingGET_15
2019-05-30 09:35:18 -Generating unique operation named: printEditUsingGET_1
2019-05-30 09:35:18 -Generating unique operation named: removeUsingPOST_26
2019-05-30 09:35:18 -Generating unique operation named: saveUsingPOST_12
2019-05-30 09:35:18 -Generating unique operation named: updateUsingGET_9
2019-05-30 09:35:18 -Generating unique operation named: updateUsingHEAD_9
2019-05-30 09:35:18 -Generating unique operation named: updateUsingPOST_14
2019-05-30 09:35:18 -Generating unique operation named: updateUsingPUT_9
2019-05-30 09:35:18 -Generating unique operation named: updateUsingPATCH_9
2019-05-30 09:35:18 -Generating unique operation named: updateUsingDELETE_9
2019-05-30 09:35:18 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-30 09:35:18 -Generating unique operation named: updateUsingTRACE_9
2019-05-30 09:35:18 -Generating unique operation named: addUsingGET_14
2019-05-30 09:35:18 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-30 09:35:18 -Generating unique operation named: editUsingGET_15
2019-05-30 09:35:18 -Generating unique operation named: listUsingGET_16
2019-05-30 09:35:18 -Generating unique operation named: saveUsingPOST_13
2019-05-30 09:35:18 -Generating unique operation named: saveUsingPOST_14
2019-05-30 09:35:18 -Generating unique operation named: updateUsingPOST_15
2019-05-30 09:35:18 -Generating unique operation named: listUsingGET_17
2019-05-30 09:35:18 -Generating unique operation named: listUsingHEAD_1
2019-05-30 09:35:18 -Generating unique operation named: listUsingPOST_1
2019-05-30 09:35:18 -Generating unique operation named: listUsingPUT_1
2019-05-30 09:35:18 -Generating unique operation named: listUsingPATCH_1
2019-05-30 09:35:18 -Generating unique operation named: listUsingDELETE_1
2019-05-30 09:35:18 -Generating unique operation named: listUsingOPTIONS_1
2019-05-30 09:35:18 -Generating unique operation named: listUsingTRACE_1
2019-05-30 09:35:18 -Generating unique operation named: countDDUsingGET_1
2019-05-30 09:35:18 -Generating unique operation named: exportDDUsingGET_1
2019-05-30 09:35:18 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-30 09:35:18 -Generating unique operation named: addUsingGET_15
2019-05-30 09:35:18 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-30 09:35:19 -Generating unique operation named: editUsingGET_16
2019-05-30 09:35:19 -Generating unique operation named: listUsingGET_18
2019-05-30 09:35:19 -Generating unique operation named: removeUsingPOST_27
2019-05-30 09:35:19 -Generating unique operation named: saveUsingPOST_15
2019-05-30 09:35:19 -Generating unique operation named: treeUsingGET_3
2019-05-30 09:35:19 -Generating unique operation named: treeViewUsingGET_1
2019-05-30 09:35:19 -Generating unique operation named: updateUsingPOST_16
2019-05-30 09:35:19 -Generating unique operation named: addUsingGET_16
2019-05-30 09:35:19 -Generating unique operation named: editUsingGET_17
2019-05-30 09:35:19 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-30 09:35:19 -Generating unique operation named: listUsingGET_19
2019-05-30 09:35:19 -Generating unique operation named: removeUsingPOST_28
2019-05-30 09:35:19 -Generating unique operation named: removeUsingPOST_29
2019-05-30 09:35:19 -Generating unique operation named: saveUsingPOST_16
2019-05-30 09:35:19 -Generating unique operation named: updateUsingGET_10
2019-05-30 09:35:19 -Generating unique operation named: updateUsingHEAD_10
2019-05-30 09:35:19 -Generating unique operation named: updateUsingPOST_17
2019-05-30 09:35:19 -Generating unique operation named: updateUsingPUT_10
2019-05-30 09:35:19 -Generating unique operation named: updateUsingPATCH_10
2019-05-30 09:35:19 -Generating unique operation named: updateUsingDELETE_10
2019-05-30 09:35:19 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-30 09:35:19 -Generating unique operation named: updateUsingTRACE_10
2019-05-30 09:35:19 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-30 09:35:19 -Generating unique operation named: addUsingGET_17
2019-05-30 09:35:19 -Generating unique operation named: editUsingGET_18
2019-05-30 09:35:19 -Generating unique operation named: listUsingGET_20
2019-05-30 09:35:19 -Generating unique operation named: removeUsingPOST_30
2019-05-30 09:35:19 -Generating unique operation named: removeUsingPOST_31
2019-05-30 09:35:19 -Generating unique operation named: saveUsingPOST_17
2019-05-30 09:35:19 -Generating unique operation named: updateUsingGET_11
2019-05-30 09:35:19 -Generating unique operation named: updateUsingHEAD_11
2019-05-30 09:35:19 -Generating unique operation named: updateUsingPOST_18
2019-05-30 09:35:19 -Generating unique operation named: updateUsingPUT_11
2019-05-30 09:35:19 -Generating unique operation named: updateUsingPATCH_11
2019-05-30 09:35:19 -Generating unique operation named: updateUsingDELETE_11
2019-05-30 09:35:19 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-30 09:35:19 -Generating unique operation named: updateUsingTRACE_11
2019-05-30 09:35:19 -Generating unique operation named: addUsingGET_18
2019-05-30 09:35:19 -Generating unique operation named: editUsingGET_19
2019-05-30 09:35:19 -Generating unique operation named: listUsingGET_21
2019-05-30 09:35:19 -Generating unique operation named: removeUsingPOST_32
2019-05-30 09:35:19 -Generating unique operation named: removeUsingPOST_33
2019-05-30 09:35:19 -Generating unique operation named: saveUsingPOST_18
2019-05-30 09:35:19 -Generating unique operation named: updateUsingGET_12
2019-05-30 09:35:19 -Generating unique operation named: updateUsingHEAD_12
2019-05-30 09:35:19 -Generating unique operation named: updateUsingPOST_19
2019-05-30 09:35:19 -Generating unique operation named: updateUsingPUT_12
2019-05-30 09:35:19 -Generating unique operation named: updateUsingPATCH_12
2019-05-30 09:35:19 -Generating unique operation named: updateUsingDELETE_12
2019-05-30 09:35:19 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-30 09:35:19 -Generating unique operation named: updateUsingTRACE_12
2019-05-30 09:35:19 -Starting Quartz Scheduler now
2019-05-30 09:35:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-30 09:35:19 -Starting...
2019-05-30 09:35:19 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-30 09:35:19 -Started.
2019-05-30 09:35:19 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-30 09:35:19 -Using a shared selector for servlet write/read
2019-05-30 09:35:19 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-30 09:35:19 -Started BootdoApplication in 32.4 seconds (JVM running for 33.904)
2019-05-30 09:35:19 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-30 09:35:19 -==> Parameters: 
2019-05-30 09:35:20 -<==      Total: 1
2019-05-30 09:35:26 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-30 09:35:26 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-30 09:35:26 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-05-30 09:35:26 -Enabling session validation scheduler...
2019-05-30 09:35:26 -请求地址 : http://localhost:8081/login;JSESSIONID=a3ceb18d-d55d-435b-a8fb-c8765190cde0
2019-05-30 09:35:26 -HTTP METHOD : GET
2019-05-30 09:35:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 09:35:26 -参数 : [{}]
2019-05-30 09:35:26 -耗时 : 4
2019-05-30 09:35:26 -返回值 : login
2019-05-30 09:35:28 -请求地址 : http://localhost:8081/getVerify
2019-05-30 09:35:28 -HTTP METHOD : GET
2019-05-30 09:35:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 09:35:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2a08bc86, org.apache.shiro.web.servlet.ShiroHttpServletResponse@310b0249]
2019-05-30 09:35:29 -8054
2019-05-30 09:35:29 -耗时 : 656
2019-05-30 09:35:29 -返回值 : null
2019-05-30 09:35:30 -请求地址 : http://localhost:8081/login
2019-05-30 09:35:30 -HTTP METHOD : GET
2019-05-30 09:35:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 09:35:30 -参数 : [{}]
2019-05-30 09:35:30 -耗时 : 1
2019-05-30 09:35:30 -返回值 : login
2019-05-30 09:35:35 -请求地址 : http://localhost:8081/login
2019-05-30 09:35:35 -HTTP METHOD : POST
2019-05-30 09:35:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-30 09:35:35 -参数 : [admin, 111111, 8054, org.apache.shiro.web.servlet.ShiroHttpServletRequest@48de9366]
2019-05-30 09:35:35 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-30 09:35:35 -==> Parameters: admin(String)
2019-05-30 09:35:35 -<==      Total: 1
2019-05-30 09:35:35 -耗时 : 161
2019-05-30 09:35:35 -返回值 : {msg=操作成功, code=0}
2019-05-30 09:35:35 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-30 09:35:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 09:35:35 -==> Parameters: 1(Long), admin(String), 登录(String), 162(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-30 09:35:35.956(Timestamp)
2019-05-30 09:35:36 -请求地址 : http://localhost:8081/index
2019-05-30 09:35:36 -HTTP METHOD : GET
2019-05-30 09:35:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 09:35:36 -参数 : [{}]
2019-05-30 09:35:36 -<==    Updates: 1
2019-05-30 09:35:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 09:35:36 -==> Parameters: 1(Long)
2019-05-30 09:35:36 -<==      Total: 50
2019-05-30 09:35:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 09:35:36 -==> Parameters: 138(Long)
2019-05-30 09:35:36 -<==      Total: 1
2019-05-30 09:35:36 -耗时 : 426
2019-05-30 09:35:36 -返回值 : index_v1
2019-05-30 09:35:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 09:35:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 426(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 09:35:36.556(Timestamp)
2019-05-30 09:35:36 -<==    Updates: 1
2019-05-30 09:35:36 -请求地址 : http://localhost:8081/main
2019-05-30 09:35:36 -HTTP METHOD : GET
2019-05-30 09:35:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 09:35:36 -参数 : []
2019-05-30 09:35:36 -耗时 : 0
2019-05-30 09:35:36 -返回值 : main
2019-05-30 09:35:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 09:35:36 -HTTP METHOD : GET
2019-05-30 09:35:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 09:35:36 -参数 : []
2019-05-30 09:35:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 09:35:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 09:35:37 -<==      Total: 0
2019-05-30 09:35:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 09:35:37 -==> Parameters: 1(Long), 0(String)
2019-05-30 09:35:37 -<==      Total: 1
2019-05-30 09:35:37 -耗时 : 65
2019-05-30 09:35:37 -返回值 : com.bootdo.common.utils.PageUtils@6cd029be
2019-05-30 09:35:37 -请求地址 : http://localhost:8081/main
2019-05-30 09:35:37 -HTTP METHOD : GET
2019-05-30 09:35:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 09:35:37 -参数 : []
2019-05-30 09:35:37 -耗时 : 1
2019-05-30 09:35:37 -返回值 : main
2019-05-30 09:35:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 09:35:50 -==> Parameters: 1(Long)
2019-05-30 09:35:50 -<==      Total: 94
2019-05-30 09:35:50 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-30 09:35:50 -HTTP METHOD : GET
2019-05-30 09:35:50 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-30 09:35:50 -参数 : []
2019-05-30 09:35:50 -耗时 : 93
2019-05-30 09:35:50 -返回值 : charts/tableElecYY
2019-05-30 09:35:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:35:50 -HTTP METHOD : GET
2019-05-30 09:35:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:35:50 -参数 : [userType]
2019-05-30 09:35:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:35:50 -==> Parameters: userType(String)
2019-05-30 09:35:50 -<==      Total: 4
2019-05-30 09:35:50 -耗时 : 152
2019-05-30 09:35:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:35:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 09:35:53 -HTTP METHOD : GET
2019-05-30 09:35:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 09:35:53 -参数 : []
2019-05-30 09:35:53 -耗时 : 1
2019-05-30 09:35:53 -返回值 : system/dept/deptTree
2019-05-30 09:35:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 09:35:53 -HTTP METHOD : GET
2019-05-30 09:35:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 09:35:53 -参数 : []
2019-05-30 09:35:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 09:35:53 -==> Parameters: 
2019-05-30 09:35:53 -<==      Total: 3
2019-05-30 09:35:53 -耗时 : 22
2019-05-30 09:35:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 09:35:56 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-30 09:35:56 -HTTP METHOD : POST
2019-05-30 09:35:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-30 09:35:56 -参数 : [com.bootdo.elec.vo.ElecVo@5ef25b95, com.bootdo.moneyLog.vo.ElecLogVo@4e18aca4]
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:35:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-30 09:35:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-30 09:35:56 -<==      Total: 1
2019-05-30 09:36:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-05-30 09:37:57 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-30 09:37:57 -==> Parameters: 
2019-05-30 09:37:57 -<==      Total: 2
2019-05-30 09:37:57 -耗时 : 121293
2019-05-30 09:37:57 -返回值 : {WGOweElecSumYYNew=0.00, G1OweElecCountYYNew=0, G3TotalyuNew=0.00, MMPreElecSumYYNew=0.00, MMOweElecCountYYNew=0, TotalPreyuNew=0.00, WGTotalyuNew=0.00, TotalCostyu=730.29, SElecPrice=2.600, WSElecPrice=0.810, WGTotalhuOld=0, WMPreElecSumYYOld=0.00, SElecLogYYSum=40.00, G3TotalhuOld=0, G1PreElecSumYYOld=0.00, TotalOwehuNew=2, TotalCosthu=7, MSTotalyuOld=0.00, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=1, MTotalyuOld=0.00, G2PreElecSumYYNew=0.00, G1OweElecSumYYNew=0.00, ZElecPrice=0.970, G1ElecLogYYCount=0, MMTotalhuNew=0, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0.00, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0.00, SElecLogYYCount=2, ZTotalyuOld=0.00, G3PreElecSumYYNew=0.00, ZElecLogYYSum=0.00, WSPreElecCountYYNew=0, WGElecPrice=0.970, WMTotalyuOld=0.00, WSElecLogYYCount=0, WSTotalhuNew=0, MOweElecSumYYOld=0.00, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=163, G1ElecPrice=0.970, G2OweElecSumYYNew=0.00, WSOweElecSumYYOld=0.00, MSPreElecSumYYOld=0.00, G3OweElecCountYYOld=0, SElecCostYYCount=3, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0.00, MElecLogYYCount=2, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=20.00, G2TotalyuNew=0.00, G2TotalhuOld=0, MMOweElecSumYYNew=0.00, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0.00, ZTotalyuNew=0.00, WGElecLogYYCount=0, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0.00, ZElecAmountYY=0, STotalyuNew=-63.12, SOweElecCountYYNew=1, MMTotalyuNew=0.00, WGTotalyuOld=0.00, MSElecCostYYSum=0.00, TotalPreyuOld=0.00, G3TotalyuOld=0.00, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=0.00, G1ElecAmountYY=10, WMOweElecCountYYOld=0, STotalhuOld=0, G2PreElecCountYYNew=0, G3ElecAmountYY=0, WSOweElecSumYYNew=0.00, G2ElecCostYYCount=0, MPreElecSumYYOld=0.00, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0.00, G3PreElecSumYYOld=0.00, MMPreElecSumYYOld=0.00, MTotalhuNew=1, MTotalyuNew=-23.25, G2OweElecCountYYNew=0, G1TotalyuNew=0.00, G3ElecPrice=0.400, WMOweElecSumYYOld=0.00, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=0, WSElecLogYYSum=0.00, G2OweElecSumYYOld=0.00, WGElecAmountYY=0, ZElecCostYYSum=0.00, WMElecAmountYY=0, MElecCostYYCount=3, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0.00, MOweElecCountYYNew=1, TotalOweyuNew=-86.37, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=0.00, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0.00, G2TotalyuOld=0.00, TotalAllyuNew=-86.37, TotalAllhuOld=0, STotalyuOld=0.00, SElecCostYYSum=277.08, MPreElecCountYYNew=0, SOweElecSumYYNew=-63.12, WMElecCostYYSum=0.00, G3ElecCostYYSum=0.00, MMTotalyuOld=0.00, MMElecCostYYSum=0.00, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0.00, WSTotalyuOld=0.00, G1ElecCostYYCount=1, WMElecCostYYCount=0, ZOweElecSumYYNew=0.00, MElecPrice=1.800, WGElecCostYYCount=0, TotalLogyu=60.00, ZTotalhuNew=0, WMElecPrice=0.465, MPreElecSumYYNew=0.00, G2ElecLogYYSum=0.00, G1ElecLogYYSum=0.00, G3ElecLogYYSum=0.00, TotalLoghu=4, SPreElecCountYYOld=0, TotalOweyuOld=0.00, MSOweElecSumYYOld=0.00, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0.00, ZPreElecSumYYNew=0.00, G2ElecCostYYSum=0.00, MTotalhuOld=0, G1TotalyuOld=0.00, TotalPrehuNew=0, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=0, SPreElecSumYYNew=0.00, MMElecLogYYCount=0, PriceTotal=10.725, ZPreElecCountYYNew=0, WMTotalhuNew=0, WGTotalhuNew=0, MElecAmountYY=61, TotalAllhuNew=2, G1ElecCostYYSum=211.96, MMElecCostYYCount=0, WGOweElecSumYYOld=0.00, WSElecCostYYSum=0.00, G3PreElecCountYYOld=0, G2TotalhuNew=0, G3OweElecSumYYNew=0.00, G1PreElecSumYYNew=0.00, SElecAmountYY=92, WGElecCostYYSum=0.00, MElecCostYYSum=241.25, WGPreElecSumYYNew=0.00, G2PreElecSumYYOld=0.00, G2ElecAmountYY=0, G2ElecPrice=0.465, MSElecAmountYY=0, WSTotalyuNew=0.00, G1TotalhuNew=0, G1OweElecSumYYOld=0.00, MMElecPrice=0.465, MMElecLogYYSum=0.00, MSOweElecSumYYNew=0.00, WMTotalyuNew=0.00, WSPreElecSumYYOld=0.00, MSElecLogYYSum=0.00, ZPreElecSumYYOld=0.00, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-23.25, MSElecPrice=0.810, WMPreElecCountYYNew=0, MMPreElecCountYYNew=0, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=0, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0.00, MMElecAmountYY=0, ZElecLogYYCount=0, G1PreElecCountYYNew=0, SPreElecSumYYOld=0.00, G3ElecLogYYCount=0}
2019-05-30 09:39:11 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:39:11 -HTTP METHOD : GET
2019-05-30 09:39:11 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:39:11 -参数 : []
2019-05-30 09:39:11 -耗时 : 11
2019-05-30 09:39:11 -返回值 : charts/tableHeatYY
2019-05-30 09:39:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:39:11 -HTTP METHOD : GET
2019-05-30 09:39:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:39:11 -参数 : [userType]
2019-05-30 09:39:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:39:11 -==> Parameters: userType(String)
2019-05-30 09:39:11 -<==      Total: 4
2019-05-30 09:39:11 -耗时 : 12
2019-05-30 09:39:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:39:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 09:39:14 -HTTP METHOD : GET
2019-05-30 09:39:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 09:39:14 -参数 : []
2019-05-30 09:39:14 -耗时 : 1
2019-05-30 09:39:14 -返回值 : system/dept/deptTree
2019-05-30 09:39:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 09:39:14 -HTTP METHOD : GET
2019-05-30 09:39:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 09:39:14 -参数 : []
2019-05-30 09:39:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 09:39:14 -==> Parameters: 
2019-05-30 09:39:14 -<==      Total: 3
2019-05-30 09:39:14 -耗时 : 2
2019-05-30 09:39:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 09:39:17 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-30 09:39:17 -HTTP METHOD : POST
2019-05-30 09:39:17 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:39:17 -参数 : [com.bootdo.heat.vo.HeatVo@54e8ac0e, com.bootdo.moneyLog.vo.HeatLogVo@357371f2]
2019-05-30 09:39:17 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-30 09:39:17 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:17 -<==      Total: 1
2019-05-30 09:39:17 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-30 09:39:17 -==> Parameters: 
2019-05-30 09:39:17 -<==      Total: 2
2019-05-30 09:39:17 -耗时 : 692
2019-05-30 09:39:17 -返回值 : {STotalyuOld=-10.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=333.00, GMPreHeatCountYYNew=0, GSPreHeatSumYYNew=0.00, STotalyuNew=-211.96, GSOweHeatCountYYNew=0, type=2, MHeatCostYYSum=836.00, SPreHeatCountYYOld=0, TotalPreyuNew=333.00, GSHeatAreaYY=1.00, SHeatCostYYCount=5, GMHeatCostYYCount=4, GMOweHeatSumYYNew=-211.96, GSTotalhuOld=1, TotalCostyu=1689.84, MHeatPrice=3.50, SHeatPrice=4.80, GMHeatPrice=3.50, SPreHeatCountYYNew=0, TotalPreyuOld=10.00, TotalOwehuNew=2, TotalCosthu=18, STotalhuOld=1, MOweHeatSumYYNew=0.00, GSOweHeatSumYYOld=0.00, TotalLogyu=247.00, STotalhuNew=1, MTotalyuOld=0.00, MHeatLogYYCount=8, GSTotalhuNew=0, GSTotalyuOld=10.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=80.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=1, MTotalyuNew=333.00, GSTotalyuNew=0.00, GSHeatPrice=4.80, MOweHeatCountYYOld=0, MHeatLogYYSum=126.00, TotalLoghu=11, GMHeatAreaYY=123.12, MOweHeatCountYYNew=0, TotalOweyuOld=-10.00, MPreHeatCountYYOld=0, MHeatCostYYCount=8, SOweHeatCountYYOld=1, GMTotalhuNew=1, SHeatLogYYSum=40.00, SHeatLogYYCount=1, SOweHeatSumYYOld=-10.00, MPreHeatCountYYNew=1, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=1, GSPreHeatCountYYNew=0, TotalPrehuNew=1, SOweHeatSumYYNew=-211.96, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=1, TotalOweyuNew=-423.92, SOweHeatCountYYNew=1, GSHeatLogYYCount=1, MHeatAreaYY=434.75, GMPreHeatSumYYOld=0.00, TotalPrehuOld=1, GSHeatCostYYSum=1.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=425.92, SHeatAreaYY=123.50, GMTotalyuNew=-211.96, TotalOwehuOld=1, PriceTotal=16.60, GSHeatLogYYSum=1.00, AreaTotalYY=682.37, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=1, GMHeatLogYYCount=1, TotalAllhuNew=3, TotalAllyuNew=-90.92, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=426.92, GSPreHeatSumYYOld=10.00, TotalAllhuOld=2, TotalAllyuOld=0.00}
2019-05-30 09:39:24 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-30 09:39:24 -HTTP METHOD : GET
2019-05-30 09:39:24 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-30 09:39:24 -参数 : []
2019-05-30 09:39:24 -耗时 : 12
2019-05-30 09:39:24 -返回值 : charts/tableWaterYY
2019-05-30 09:39:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:39:25 -HTTP METHOD : GET
2019-05-30 09:39:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:39:25 -参数 : [userType]
2019-05-30 09:39:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:39:25 -==> Parameters: userType(String)
2019-05-30 09:39:25 -<==      Total: 4
2019-05-30 09:39:25 -耗时 : 6
2019-05-30 09:39:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:39:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 09:39:44 -HTTP METHOD : GET
2019-05-30 09:39:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 09:39:44 -参数 : []
2019-05-30 09:39:44 -耗时 : 0
2019-05-30 09:39:44 -返回值 : system/dept/deptTree
2019-05-30 09:39:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 09:39:44 -HTTP METHOD : GET
2019-05-30 09:39:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 09:39:44 -参数 : []
2019-05-30 09:39:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 09:39:44 -==> Parameters: 
2019-05-30 09:39:44 -<==      Total: 3
2019-05-30 09:39:44 -耗时 : 3
2019-05-30 09:39:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 09:39:46 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-30 09:39:46 -HTTP METHOD : POST
2019-05-30 09:39:46 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-30 09:39:46 -参数 : [com.bootdo.water.vo.WaterVo@42f73124, com.bootdo.moneyLog.vo.WaterLogVo@115d330a]
2019-05-30 09:39:46 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:46 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-30 09:39:47 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-30 09:39:47 -<==      Total: 1
2019-05-30 09:39:47 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-30 09:39:47 -==> Parameters: 
2019-05-30 09:39:47 -<==      Total: 2
2019-05-30 09:39:47 -耗时 : 555
2019-05-30 09:39:47 -返回值 : {S3TotalhuNew=1, S2PreWaterCountYYOld=0, S1OweWaterCountYYNew=1, S2PreWaterCountYYNew=0, S3WaterCostYYSum=18, S1OweWaterSumYYNew=-21, type=2, S3PreWaterSumYYNew=0, TotalPreyuNew=19, MWaterLogYYSum=249, S1OweWaterCountYYOld=0, S1OweWaterSumYYOld=0, TotalCostyu=116, S3PreWaterSumYYOld=0, MPreWaterCountYYOld=0, S1WaterPrice=11, S1TotalyuOld=0, TotalPreyuOld=0, S2WaterLogYYCount=2, S3TotalhuOld=0, MPreWaterCountYYNew=2, TotalOwehuNew=2, S2WaterLogYYSum=120, TotalCosthu=16, S1WaterLogYYCount=2, S3WaterLogYYSum=0, S2OweWaterSumYYOld=0, TotalLogyu=270, MPreWaterSumYYOld=0, S2TotalhuNew=2, MTotalyuOld=0, MPreWaterSumYYNew=19, MWaterPrice=1, S1WaterCostYYCount=5, S3PreWaterCountYYNew=0, MTotalhuNew=3, MTotalyuNew=-2, S2WaterCostYYSum=76, TotalLoghu=23, S3PreWaterCountYYOld=0, S2TotalhuOld=0, S2TotalyuOld=0, S2OweWaterSumYYNew=-12, TotalOweyuOld=0, S3OweWaterCountYYOld=0, S3WaterCostYYCount=3, S2TotalyuNew=-12, S3WaterLogYYCount=0, S1TotalhuNew=1, MTotalhuOld=0, S3OweWaterSumYYOld=0, S1TotalhuOld=0, S1WaterCostYYSum=50, S2PreWaterSumYYNew=0, TotalPrehuNew=2, MOweWaterSumYYNew=-21, S3OweWaterSumYYNew=-6, S2PreWaterSumYYOld=0, TotalOweyuNew=-42, MWaterCostYYCount=11, S3TotalyuOld=0, MWaterLogYYCount=21, S3OweWaterCountYYNew=1, S3TotalyuNew=-6, TotalPrehuOld=0, MWaterCostYYSum=66, S1PreWaterCountYYNew=0, S1WaterLogYYSum=21, TotalOwehuOld=0, PriceTotal=12, S2OweWaterCountYYNew=2, S1PreWaterCountYYOld=0, S2WaterCostYYCount=8, MOweWaterSumYYOld=0, S1TotalyuNew=-21, MOweWaterCountYYNew=1, MOweWaterCountYYOld=0, S1PreWaterSumYYNew=0, TotalAllhuNew=4, TotalAllyuNew=-23, TotalAllhuOld=0, S2OweWaterCountYYOld=0, S1PreWaterSumYYOld=0, TotalAllyuOld=0}
2019-05-30 09:42:37 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:42:37 -HTTP METHOD : GET
2019-05-30 09:42:37 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:42:37 -参数 : []
2019-05-30 09:42:37 -耗时 : 0
2019-05-30 09:42:37 -返回值 : charts/tableHeatYY
2019-05-30 09:42:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:38 -HTTP METHOD : GET
2019-05-30 09:42:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:38 -参数 : [userType]
2019-05-30 09:42:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:38 -==> Parameters: userType(String)
2019-05-30 09:42:38 -<==      Total: 4
2019-05-30 09:42:38 -耗时 : 8
2019-05-30 09:42:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:38 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-30 09:42:38 -HTTP METHOD : GET
2019-05-30 09:42:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-30 09:42:38 -参数 : []
2019-05-30 09:42:38 -耗时 : 0
2019-05-30 09:42:38 -返回值 : charts/tableElecYY
2019-05-30 09:42:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:38 -HTTP METHOD : GET
2019-05-30 09:42:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:38 -参数 : [userType]
2019-05-30 09:42:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:38 -==> Parameters: userType(String)
2019-05-30 09:42:38 -<==      Total: 4
2019-05-30 09:42:38 -耗时 : 5
2019-05-30 09:42:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:39 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:42:39 -HTTP METHOD : GET
2019-05-30 09:42:39 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:42:39 -参数 : []
2019-05-30 09:42:39 -耗时 : 0
2019-05-30 09:42:39 -返回值 : charts/tableHeatYY
2019-05-30 09:42:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:39 -HTTP METHOD : GET
2019-05-30 09:42:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:39 -参数 : [userType]
2019-05-30 09:42:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:39 -==> Parameters: userType(String)
2019-05-30 09:42:39 -<==      Total: 4
2019-05-30 09:42:39 -耗时 : 4
2019-05-30 09:42:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:39 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-30 09:42:39 -HTTP METHOD : GET
2019-05-30 09:42:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-30 09:42:39 -参数 : []
2019-05-30 09:42:39 -耗时 : 0
2019-05-30 09:42:39 -返回值 : charts/tableWaterYY
2019-05-30 09:42:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:39 -HTTP METHOD : GET
2019-05-30 09:42:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:39 -参数 : [userType]
2019-05-30 09:42:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:39 -==> Parameters: userType(String)
2019-05-30 09:42:39 -<==      Total: 4
2019-05-30 09:42:39 -耗时 : 4
2019-05-30 09:42:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:41 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:42:41 -HTTP METHOD : GET
2019-05-30 09:42:41 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:42:41 -参数 : []
2019-05-30 09:42:41 -耗时 : 0
2019-05-30 09:42:41 -返回值 : charts/tableHeatYY
2019-05-30 09:42:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:41 -HTTP METHOD : GET
2019-05-30 09:42:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:41 -参数 : [userType]
2019-05-30 09:42:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:41 -==> Parameters: userType(String)
2019-05-30 09:42:41 -<==      Total: 4
2019-05-30 09:42:41 -耗时 : 4
2019-05-30 09:42:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:44 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-30 09:42:44 -HTTP METHOD : GET
2019-05-30 09:42:44 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-30 09:42:44 -参数 : []
2019-05-30 09:42:44 -耗时 : 0
2019-05-30 09:42:44 -返回值 : charts/tableWaterYY
2019-05-30 09:42:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:44 -HTTP METHOD : GET
2019-05-30 09:42:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:44 -参数 : [userType]
2019-05-30 09:42:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:44 -==> Parameters: userType(String)
2019-05-30 09:42:44 -<==      Total: 4
2019-05-30 09:42:44 -耗时 : 5
2019-05-30 09:42:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:45 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:42:45 -HTTP METHOD : GET
2019-05-30 09:42:45 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:42:45 -参数 : []
2019-05-30 09:42:45 -耗时 : 0
2019-05-30 09:42:45 -返回值 : charts/tableHeatYY
2019-05-30 09:42:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:45 -HTTP METHOD : GET
2019-05-30 09:42:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:45 -参数 : [userType]
2019-05-30 09:42:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:45 -==> Parameters: userType(String)
2019-05-30 09:42:45 -<==      Total: 4
2019-05-30 09:42:45 -耗时 : 6
2019-05-30 09:42:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:45 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-30 09:42:45 -HTTP METHOD : GET
2019-05-30 09:42:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-30 09:42:45 -参数 : []
2019-05-30 09:42:45 -耗时 : 0
2019-05-30 09:42:45 -返回值 : charts/tableElecYY
2019-05-30 09:42:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:45 -HTTP METHOD : GET
2019-05-30 09:42:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:45 -参数 : [userType]
2019-05-30 09:42:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:45 -==> Parameters: userType(String)
2019-05-30 09:42:45 -<==      Total: 4
2019-05-30 09:42:45 -耗时 : 5
2019-05-30 09:42:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:45 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:42:45 -HTTP METHOD : GET
2019-05-30 09:42:45 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:42:45 -参数 : []
2019-05-30 09:42:45 -耗时 : 1
2019-05-30 09:42:45 -返回值 : charts/tableHeatYY
2019-05-30 09:42:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:46 -HTTP METHOD : GET
2019-05-30 09:42:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:46 -参数 : [userType]
2019-05-30 09:42:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:46 -==> Parameters: userType(String)
2019-05-30 09:42:46 -<==      Total: 4
2019-05-30 09:42:46 -耗时 : 3
2019-05-30 09:42:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:46 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-30 09:42:46 -HTTP METHOD : GET
2019-05-30 09:42:46 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-30 09:42:46 -参数 : []
2019-05-30 09:42:46 -耗时 : 0
2019-05-30 09:42:46 -返回值 : charts/tableWaterYY
2019-05-30 09:42:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:46 -HTTP METHOD : GET
2019-05-30 09:42:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:46 -参数 : [userType]
2019-05-30 09:42:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:46 -==> Parameters: userType(String)
2019-05-30 09:42:46 -<==      Total: 4
2019-05-30 09:42:46 -耗时 : 4
2019-05-30 09:42:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:46 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:42:46 -HTTP METHOD : GET
2019-05-30 09:42:46 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:42:46 -参数 : []
2019-05-30 09:42:46 -耗时 : 0
2019-05-30 09:42:46 -返回值 : charts/tableHeatYY
2019-05-30 09:42:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:46 -HTTP METHOD : GET
2019-05-30 09:42:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:46 -参数 : [userType]
2019-05-30 09:42:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:46 -==> Parameters: userType(String)
2019-05-30 09:42:46 -<==      Total: 4
2019-05-30 09:42:46 -耗时 : 4
2019-05-30 09:42:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:47 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-30 09:42:47 -HTTP METHOD : GET
2019-05-30 09:42:47 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-30 09:42:47 -参数 : []
2019-05-30 09:42:47 -耗时 : 0
2019-05-30 09:42:47 -返回值 : charts/tableElecYY
2019-05-30 09:42:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:47 -HTTP METHOD : GET
2019-05-30 09:42:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:47 -参数 : [userType]
2019-05-30 09:42:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:47 -==> Parameters: userType(String)
2019-05-30 09:42:47 -<==      Total: 4
2019-05-30 09:42:47 -耗时 : 5
2019-05-30 09:42:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:48 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:42:48 -HTTP METHOD : GET
2019-05-30 09:42:48 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:42:48 -参数 : []
2019-05-30 09:42:48 -耗时 : 0
2019-05-30 09:42:48 -返回值 : charts/tableHeatYY
2019-05-30 09:42:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:48 -HTTP METHOD : GET
2019-05-30 09:42:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:48 -参数 : [userType]
2019-05-30 09:42:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:48 -==> Parameters: userType(String)
2019-05-30 09:42:48 -<==      Total: 4
2019-05-30 09:42:48 -耗时 : 4
2019-05-30 09:42:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:48 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-30 09:42:48 -HTTP METHOD : GET
2019-05-30 09:42:48 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-30 09:42:48 -参数 : []
2019-05-30 09:42:48 -耗时 : 0
2019-05-30 09:42:48 -返回值 : charts/tableWaterYY
2019-05-30 09:42:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:48 -HTTP METHOD : GET
2019-05-30 09:42:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:48 -参数 : [userType]
2019-05-30 09:42:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:48 -==> Parameters: userType(String)
2019-05-30 09:42:48 -<==      Total: 4
2019-05-30 09:42:48 -耗时 : 4
2019-05-30 09:42:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:49 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:42:49 -HTTP METHOD : GET
2019-05-30 09:42:49 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:42:49 -参数 : []
2019-05-30 09:42:49 -耗时 : 0
2019-05-30 09:42:49 -返回值 : charts/tableHeatYY
2019-05-30 09:42:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:49 -HTTP METHOD : GET
2019-05-30 09:42:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:49 -参数 : [userType]
2019-05-30 09:42:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:49 -==> Parameters: userType(String)
2019-05-30 09:42:49 -<==      Total: 4
2019-05-30 09:42:49 -耗时 : 3
2019-05-30 09:42:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:49 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-30 09:42:49 -HTTP METHOD : GET
2019-05-30 09:42:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-30 09:42:49 -参数 : []
2019-05-30 09:42:49 -耗时 : 1
2019-05-30 09:42:49 -返回值 : charts/tableElecYY
2019-05-30 09:42:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:49 -HTTP METHOD : GET
2019-05-30 09:42:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:49 -参数 : [userType]
2019-05-30 09:42:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:49 -==> Parameters: userType(String)
2019-05-30 09:42:49 -<==      Total: 4
2019-05-30 09:42:49 -耗时 : 4
2019-05-30 09:42:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:50 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:42:50 -HTTP METHOD : GET
2019-05-30 09:42:50 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:42:50 -参数 : []
2019-05-30 09:42:50 -耗时 : 0
2019-05-30 09:42:50 -返回值 : charts/tableHeatYY
2019-05-30 09:42:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:50 -HTTP METHOD : GET
2019-05-30 09:42:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:50 -参数 : [userType]
2019-05-30 09:42:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:50 -==> Parameters: userType(String)
2019-05-30 09:42:50 -<==      Total: 4
2019-05-30 09:42:50 -耗时 : 5
2019-05-30 09:42:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:50 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-30 09:42:50 -HTTP METHOD : GET
2019-05-30 09:42:50 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-30 09:42:50 -参数 : []
2019-05-30 09:42:50 -耗时 : 1
2019-05-30 09:42:50 -返回值 : charts/tableWaterYY
2019-05-30 09:42:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:50 -HTTP METHOD : GET
2019-05-30 09:42:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:50 -参数 : [userType]
2019-05-30 09:42:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:50 -==> Parameters: userType(String)
2019-05-30 09:42:50 -<==      Total: 4
2019-05-30 09:42:50 -耗时 : 4
2019-05-30 09:42:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:51 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:42:51 -HTTP METHOD : GET
2019-05-30 09:42:51 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:42:51 -参数 : []
2019-05-30 09:42:51 -耗时 : 1
2019-05-30 09:42:51 -返回值 : charts/tableHeatYY
2019-05-30 09:42:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:51 -HTTP METHOD : GET
2019-05-30 09:42:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:51 -参数 : [userType]
2019-05-30 09:42:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:51 -==> Parameters: userType(String)
2019-05-30 09:42:51 -<==      Total: 4
2019-05-30 09:42:51 -耗时 : 4
2019-05-30 09:42:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:51 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-30 09:42:51 -HTTP METHOD : GET
2019-05-30 09:42:51 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-30 09:42:51 -参数 : []
2019-05-30 09:42:51 -耗时 : 0
2019-05-30 09:42:51 -返回值 : charts/tableElecYY
2019-05-30 09:42:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:52 -HTTP METHOD : GET
2019-05-30 09:42:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:52 -参数 : [userType]
2019-05-30 09:42:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:52 -==> Parameters: userType(String)
2019-05-30 09:42:52 -<==      Total: 4
2019-05-30 09:42:52 -耗时 : 5
2019-05-30 09:42:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:52 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:42:52 -HTTP METHOD : GET
2019-05-30 09:42:52 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:42:52 -参数 : []
2019-05-30 09:42:52 -耗时 : 0
2019-05-30 09:42:52 -返回值 : charts/tableHeatYY
2019-05-30 09:42:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:52 -HTTP METHOD : GET
2019-05-30 09:42:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:52 -参数 : [userType]
2019-05-30 09:42:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:52 -==> Parameters: userType(String)
2019-05-30 09:42:52 -<==      Total: 4
2019-05-30 09:42:52 -耗时 : 4
2019-05-30 09:42:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:53 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-30 09:42:53 -HTTP METHOD : GET
2019-05-30 09:42:53 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-30 09:42:53 -参数 : []
2019-05-30 09:42:53 -耗时 : 0
2019-05-30 09:42:53 -返回值 : charts/tableWaterYY
2019-05-30 09:42:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:53 -HTTP METHOD : GET
2019-05-30 09:42:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:53 -参数 : [userType]
2019-05-30 09:42:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:53 -==> Parameters: userType(String)
2019-05-30 09:42:53 -<==      Total: 4
2019-05-30 09:42:53 -耗时 : 4
2019-05-30 09:42:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:53 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-30 09:42:53 -HTTP METHOD : GET
2019-05-30 09:42:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-30 09:42:53 -参数 : []
2019-05-30 09:42:53 -耗时 : 0
2019-05-30 09:42:53 -返回值 : charts/tableHeatYY
2019-05-30 09:42:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:54 -HTTP METHOD : GET
2019-05-30 09:42:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:54 -参数 : [userType]
2019-05-30 09:42:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:54 -==> Parameters: userType(String)
2019-05-30 09:42:54 -<==      Total: 4
2019-05-30 09:42:54 -耗时 : 3
2019-05-30 09:42:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:54 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-30 09:42:54 -HTTP METHOD : GET
2019-05-30 09:42:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-30 09:42:54 -参数 : []
2019-05-30 09:42:54 -耗时 : 0
2019-05-30 09:42:54 -返回值 : charts/tableElecYY
2019-05-30 09:42:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:54 -HTTP METHOD : GET
2019-05-30 09:42:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:54 -参数 : [userType]
2019-05-30 09:42:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:54 -==> Parameters: userType(String)
2019-05-30 09:42:54 -<==      Total: 4
2019-05-30 09:42:54 -耗时 : 3
2019-05-30 09:42:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:42:59 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-30 09:42:59 -HTTP METHOD : GET
2019-05-30 09:42:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 09:42:59 -参数 : []
2019-05-30 09:42:59 -耗时 : 11
2019-05-30 09:42:59 -返回值 : charts/tableElecMM
2019-05-30 09:42:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 09:42:59 -HTTP METHOD : GET
2019-05-30 09:42:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 09:42:59 -参数 : [userType]
2019-05-30 09:42:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 09:42:59 -==> Parameters: userType(String)
2019-05-30 09:42:59 -<==      Total: 4
2019-05-30 09:42:59 -耗时 : 4
2019-05-30 09:42:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 09:43:11 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 09:43:11 -HTTP METHOD : GET
2019-05-30 09:43:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 09:43:11 -参数 : []
2019-05-30 09:43:11 -耗时 : 0
2019-05-30 09:43:11 -返回值 : system/dept/deptTree
2019-05-30 09:43:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 09:43:11 -HTTP METHOD : GET
2019-05-30 09:43:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 09:43:11 -参数 : []
2019-05-30 09:43:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 09:43:11 -==> Parameters: 
2019-05-30 09:43:11 -<==      Total: 3
2019-05-30 09:43:11 -耗时 : 5
2019-05-30 09:43:11 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 09:43:17 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-30 09:43:17 -HTTP METHOD : POST
2019-05-30 09:43:17 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 09:43:17 -参数 : [com.bootdo.elec.vo.ElecVo@6c46b3c7, com.bootdo.moneyLog.vo.ElecLogVo@1038d4ea]
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:17 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 09:43:17 -<==      Total: 1
2019-05-30 09:43:17 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-30 09:43:17 -==> Parameters: 
2019-05-30 09:43:17 -<==      Total: 2
2019-05-30 09:43:17 -耗时 : 436
2019-05-30 09:43:17 -返回值 : {G1PreElecCountMMNew=0, WMOweElecSumMMNew=0, MSElecLogMMCount=0, G3TotalyuNew=0, MSPreElecSumMMNew=0, MSOweElecCountMMOld=0, TotalPreyuNew=0, WGTotalyuNew=0, TotalCostyu=0, SElecPrice=2, WSElecPrice=0, WGTotalhuOld=0, G2PreElecSumMMNew=0, G3TotalhuOld=0, WSPreElecSumMMOld=0, TotalOwehuNew=0, TotalCosthu=0, G1ElecAmountMM=0, G2ElecAmountMM=0, MSElecAmountMM=0, WMPreElecSumMMOld=0, MSTotalyuOld=0, G3ElecAmountMM=0, STotalhuNew=0, MTotalyuOld=0, WGPreElecCountMMOld=0, ZElecPrice=0, MMTotalhuNew=0, ZOweElecSumMMOld=0, MMPreElecCountMMNew=0, ZTotalyuOld=0, MMOweElecCountMMNew=0, WGElecPrice=0, WMTotalyuOld=0, G2OweElecCountMMOld=0, WSTotalhuNew=0, SElecLogMMSum=0, WGElecAmountMM=0, ZElecLogMMSum=0, G1PreElecSumMMNew=0, WMElecAmountMM=0, G3OweElecCountMMOld=0, MMElecCostMMCount=0, WGOweElecCountMMNew=0, MElecLogMMSum=0, MSPreElecCountMMOld=0, G1ElecCostMMSum=0, WSOweElecSumMMNew=0, G1ElecPrice=0, G1OweElecCountMMNew=0, WSOweElecCountMMNew=0, WGOweElecSumMMNew=0, G2ElecCostMMCount=0, WGElecCostMMCount=0, G3PreElecSumMMNew=0, WGPreElecSumMMOld=0, G2OweElecSumMMNew=0, G2TotalyuNew=0, G2PreElecCountMMNew=0, WSElecAmountMM=0, MMElecAmountMM=0, G2TotalhuOld=0, MOweElecSumMMOld=0, ZOweElecCountMMOld=0, MOweElecCountMMOld=0, WGElecLogMMCount=0, TotalAllyuOld=0, MMPreElecCountMMOld=0, ZOweElecCountMMNew=0, ZTotalyuNew=0, MSTotalhuOld=0, STotalyuNew=0, MMTotalyuNew=0, MMElecLogMMSum=0, ZPreElecSumMMOld=0, G2PreElecSumMMOld=0, WGTotalyuOld=0, MSOweElecCountMMNew=0, TotalPreyuOld=0, G3TotalyuOld=0, G1PreElecCountMMOld=0, STotalhuOld=0, G3PreElecCountMMOld=0, SPreElecSumMMOld=0, WGElecCostMMSum=0, MMTotalhuOld=0, MElecLogMMCount=0, MSTotalyuNew=0, MTotalhuNew=0, MTotalyuNew=0, G1TotalyuNew=0, WGPreElecCountMMNew=0, G3ElecPrice=0, ZTotalhuOld=0, G1PreElecSumMMOld=0, G3OweElecCountMMNew=0, G1TotalhuOld=0, WMElecCostMMCount=0, WGOweElecSumMMOld=0, MSPreElecCountMMNew=0, TotalOweyuNew=0, TotalPrehuOld=0, G3OweElecSumMMNew=0, MOweElecSumMMNew=0, WMPreElecCountMMNew=0, TotalOwehuOld=0, MSElecCostMMCount=0, MElecCostMMCount=0, WSPreElecCountMMNew=0, ZPreElecCountMMOld=0, WGPreElecSumMMNew=0, WSElecCostMMSum=0, G2TotalyuOld=0, G3ElecCostMMCount=0, TotalAllyuNew=0, MMPreElecSumMMNew=0, TotalAllhuOld=0, MMElecCostMMSum=0, MSElecLogMMSum=0, MSOweElecSumMMNew=0, STotalyuOld=0, ZElecCostMMCount=0, SPreElecCountMMOld=0, WMElecLogMMSum=0, ZElecAmountMM=0, WGElecLogMMSum=0, WMOweElecCountMMNew=0, MMTotalyuOld=0, WSElecLogMMCount=0, type=2, MSTotalhuNew=0, WSElecLogMMSum=0, WSTotalyuOld=0, SElecAmountMM=0, G2ElecLogMMCount=0, ZPreElecSumMMNew=0, MElecPrice=1, MPreElecSumMMNew=0, MMOweElecSumMMOld=0, TotalLogyu=0, ZTotalhuNew=0, SElecCostMMCount=0, WMElecPrice=0, SPreElecSumMMNew=0, TotalLoghu=0, G3PreElecCountMMNew=0, TotalOweyuOld=0, MMPreElecSumMMOld=0, G3OweElecSumMMOld=0, MTotalhuOld=0, ZOweElecSumMMNew=0, SOweElecSumMMNew=0, SElecCostMMSum=0, G1TotalyuOld=0, TotalPrehuNew=0, G3ElecCostMMSum=0, ZPreElecCountMMNew=0, WSPreElecCountMMOld=0, SOweElecCountMMOld=0, G1ElecLogMMSum=0, G3TotalhuNew=0, G3ElecLogMMSum=0, G1OweElecSumMMOld=0, PriceTotal=3, MElecCostMMSum=0, WMTotalhuNew=0, MPreElecCountMMNew=0, WMPreElecCountMMOld=0, WGTotalhuNew=0, G2ElecLogMMSum=0, MSOweElecSumMMOld=0, SElecLogMMCount=0, TotalAllhuNew=0, G3ElecLogMMCount=0, WSElecCostMMCount=0, WMOweElecSumMMOld=0, MSPreElecSumMMOld=0, SPreElecCountMMNew=0, G2TotalhuNew=0, WSPreElecSumMMNew=0, G2ElecCostMMSum=0, MMOweElecSumMMNew=0, MPreElecSumMMOld=0, MMElecLogMMCount=0, G2ElecPrice=0, WMElecLogMMCount=0, WSTotalyuNew=0, G1TotalhuNew=0, WMPreElecSumMMNew=0, WSOweElecSumMMOld=0, MMOweElecCountMMOld=0, ZElecCostMMSum=0, MMElecPrice=0, ZElecLogMMCount=0, MSElecCostMMSum=0, G2OweElecCountMMNew=0, WGOweElecCountMMOld=0, WMTotalyuNew=0, G1OweElecCountMMOld=0, G1ElecCostMMCount=0, MSElecPrice=0, AmountTotalMM=0, WMElecCostMMSum=0, WSTotalhuOld=0, SOweElecCountMMNew=0, WSOweElecCountMMOld=0, SOweElecSumMMOld=0, WMTotalhuOld=0, G3PreElecSumMMOld=0, G2PreElecCountMMOld=0, G2OweElecSumMMOld=0, MElecAmountMM=0, MPreElecCountMMOld=0, WMOweElecCountMMOld=0, MOweElecCountMMNew=0, G1OweElecSumMMNew=0, G1ElecLogMMCount=0}
2019-05-30 09:43:32 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-30 09:43:32 -HTTP METHOD : POST
2019-05-30 09:43:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 09:43:32 -参数 : [com.bootdo.elec.vo.ElecVo@75191cc2, com.bootdo.moneyLog.vo.ElecLogVo@310b091]
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 09:43:32 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 09:43:32 -<==      Total: 1
2019-05-30 09:43:32 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-30 09:43:32 -==> Parameters: 
2019-05-30 09:43:32 -<==      Total: 2
2019-05-30 09:43:32 -耗时 : 294
2019-05-30 09:43:32 -返回值 : {G1PreElecCountMMNew=0, WMOweElecSumMMNew=0, MSElecLogMMCount=0, G3TotalyuNew=0, MSPreElecSumMMNew=0, MSOweElecCountMMOld=0, TotalPreyuNew=0, WGTotalyuNew=0, TotalCostyu=86, SElecPrice=2, WSElecPrice=0, WGTotalhuOld=0, G2PreElecSumMMNew=0, G3TotalhuOld=0, WSPreElecSumMMOld=0, TotalOwehuNew=2, TotalCosthu=2, G1ElecAmountMM=0, G2ElecAmountMM=0, MSElecAmountMM=0, WMPreElecSumMMOld=0, MSTotalyuOld=0, G3ElecAmountMM=0, STotalhuNew=1, MTotalyuOld=0, WGPreElecCountMMOld=0, ZElecPrice=0, MMTotalhuNew=0, ZOweElecSumMMOld=0, MMPreElecCountMMNew=0, ZTotalyuOld=0, MMOweElecCountMMNew=0, WGElecPrice=0, WMTotalyuOld=0, G2OweElecCountMMOld=0, WSTotalhuNew=0, SElecLogMMSum=0, WGElecAmountMM=0, ZElecLogMMSum=0, G1PreElecSumMMNew=0, WMElecAmountMM=0, G3OweElecCountMMOld=0, MMElecCostMMCount=0, WGOweElecCountMMNew=0, MElecLogMMSum=0, MSPreElecCountMMOld=0, G1ElecCostMMSum=0, WSOweElecSumMMNew=0, G1ElecPrice=0, G1OweElecCountMMNew=0, WSOweElecCountMMNew=0, WGOweElecSumMMNew=0, G2ElecCostMMCount=0, WGElecCostMMCount=0, G3PreElecSumMMNew=0, WGPreElecSumMMOld=0, G2OweElecSumMMNew=0, G2TotalyuNew=0, G2PreElecCountMMNew=0, WSElecAmountMM=0, MMElecAmountMM=0, G2TotalhuOld=0, MOweElecSumMMOld=0, ZOweElecCountMMOld=0, MOweElecCountMMOld=0, WGElecLogMMCount=0, TotalAllyuOld=0, MMPreElecCountMMOld=0, ZOweElecCountMMNew=0, ZTotalyuNew=0, MSTotalhuOld=0, STotalyuNew=-63, MMTotalyuNew=0, MMElecLogMMSum=0, ZPreElecSumMMOld=0, G2PreElecSumMMOld=0, WGTotalyuOld=0, MSOweElecCountMMNew=0, TotalPreyuOld=0, G3TotalyuOld=0, G1PreElecCountMMOld=0, STotalhuOld=1, G3PreElecCountMMOld=0, SPreElecSumMMOld=0, WGElecCostMMSum=0, MMTotalhuOld=0, MElecLogMMCount=0, MSTotalyuNew=0, MTotalhuNew=1, MTotalyuNew=-23, G1TotalyuNew=0, WGPreElecCountMMNew=0, G3ElecPrice=0, ZTotalhuOld=0, G1PreElecSumMMOld=0, G3OweElecCountMMNew=0, G1TotalhuOld=0, WMElecCostMMCount=0, WGOweElecSumMMOld=0, MSPreElecCountMMNew=0, TotalOweyuNew=-86, TotalPrehuOld=2, G3OweElecSumMMNew=0, MOweElecSumMMNew=-23, WMPreElecCountMMNew=0, TotalOwehuOld=0, MSElecCostMMCount=0, MElecCostMMCount=1, WSPreElecCountMMNew=0, ZPreElecCountMMOld=0, WGPreElecSumMMNew=0, WSElecCostMMSum=0, G2TotalyuOld=0, G3ElecCostMMCount=0, TotalAllyuNew=-86, MMPreElecSumMMNew=0, TotalAllhuOld=2, MMElecCostMMSum=0, MSElecLogMMSum=0, MSOweElecSumMMNew=0, STotalyuOld=0, ZElecCostMMCount=0, SPreElecCountMMOld=1, WMElecLogMMSum=0, ZElecAmountMM=0, WGElecLogMMSum=0, WMOweElecCountMMNew=0, MMTotalyuOld=0, WSElecLogMMCount=0, type=2, MSTotalhuNew=0, WSElecLogMMSum=0, WSTotalyuOld=0, SElecAmountMM=0, G2ElecLogMMCount=0, ZPreElecSumMMNew=0, MElecPrice=1, MPreElecSumMMNew=0, MMOweElecSumMMOld=0, TotalLogyu=0, ZTotalhuNew=0, SElecCostMMCount=1, WMElecPrice=0, SPreElecSumMMNew=0, TotalLoghu=0, G3PreElecCountMMNew=0, TotalOweyuOld=0, MMPreElecSumMMOld=0, G3OweElecSumMMOld=0, MTotalhuOld=1, ZOweElecSumMMNew=0, SOweElecSumMMNew=-63, SElecCostMMSum=63, G1TotalyuOld=0, TotalPrehuNew=0, G3ElecCostMMSum=0, ZPreElecCountMMNew=0, WSPreElecCountMMOld=0, SOweElecCountMMOld=0, G1ElecLogMMSum=0, G3TotalhuNew=0, G3ElecLogMMSum=0, G1OweElecSumMMOld=0, PriceTotal=3, MElecCostMMSum=23, WMTotalhuNew=0, MPreElecCountMMNew=0, WMPreElecCountMMOld=0, WGTotalhuNew=0, G2ElecLogMMSum=0, MSOweElecSumMMOld=0, SElecLogMMCount=0, TotalAllhuNew=2, G3ElecLogMMCount=0, WSElecCostMMCount=0, WMOweElecSumMMOld=0, MSPreElecSumMMOld=0, SPreElecCountMMNew=0, G2TotalhuNew=0, WSPreElecSumMMNew=0, G2ElecCostMMSum=0, MMOweElecSumMMNew=0, MPreElecSumMMOld=0, MMElecLogMMCount=0, G2ElecPrice=0, WMElecLogMMCount=0, WSTotalyuNew=0, G1TotalhuNew=0, WMPreElecSumMMNew=0, WSOweElecSumMMOld=0, MMOweElecCountMMOld=0, ZElecCostMMSum=0, MMElecPrice=0, ZElecLogMMCount=0, MSElecCostMMSum=0, G2OweElecCountMMNew=0, WGOweElecCountMMOld=0, WMTotalyuNew=0, G1OweElecCountMMOld=0, G1ElecCostMMCount=0, MSElecPrice=0, AmountTotalMM=0, WMElecCostMMSum=0, WSTotalhuOld=0, SOweElecCountMMNew=1, WSOweElecCountMMOld=0, SOweElecSumMMOld=0, WMTotalhuOld=0, G3PreElecSumMMOld=0, G2PreElecCountMMOld=0, G2OweElecSumMMOld=0, MElecAmountMM=0, MPreElecCountMMOld=1, WMOweElecCountMMOld=0, MOweElecCountMMNew=1, G1OweElecSumMMNew=0, G1ElecLogMMCount=0}
2019-05-30 10:06:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 441]
2019-05-30 10:35:26 -Validating all active sessions...
2019-05-30 10:35:27 -Finished session validation.  [1] sessions were stopped.
2019-05-30 10:36:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 874]
2019-05-30 11:06:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1307]
2019-05-30 11:31:41 -Starting BootdoApplication on PC-201905091110 with PID 18820 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-30 11:31:41 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-30 11:31:41 -The following profiles are active: dev
2019-05-30 11:31:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60641ec8: startup date [Thu May 30 11:31:41 CST 2019]; root of context hierarchy
2019-05-30 11:31:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-30 11:31:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4c8d2c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 11:31:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f722016f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 11:31:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 11:31:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 11:31:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 11:31:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-30 11:31:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-30 11:31:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 11:31:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 11:31:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 11:31:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 11:31:57 -Tomcat initialized with port(s): 8081 (http)
2019-05-30 11:31:58 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-30 11:31:58 -Starting service [Tomcat]
2019-05-30 11:31:58 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-30 11:31:58 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-30 11:31:58 -Initializing Spring embedded WebApplicationContext
2019-05-30 11:31:58 -Root WebApplicationContext: initialization completed in 17496 ms
2019-05-30 11:31:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-30 11:31:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-30 11:31:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-30 11:31:59 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-30 11:31:59 -Filter xssFilter was not registered (disabled)
2019-05-30 11:31:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-30 11:32:00 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-30 11:32:00 -Servlet statViewServlet mapped to [/druid/*]
2019-05-30 11:32:00 -Servlet dispatcherServlet mapped to [/]
2019-05-30 11:32:06 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60641ec8: startup date [Thu May 30 11:31:41 CST 2019]; root of context hierarchy
2019-05-30 11:32:08 -Using default implementation for ThreadExecutor
2019-05-30 11:32:08 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-30 11:32:08 -Quartz Scheduler v.2.2.1 created.
2019-05-30 11:32:08 -RAMJobStore initialized.
2019-05-30 11:32:08 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-30 11:32:08 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-30 11:32:08 -Quartz scheduler version: 2.2.1
2019-05-30 11:32:08 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@237cd264
2019-05-30 11:32:09 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-30 11:32:09 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-30 11:32:12 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-30 11:32:12 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 11:32:12 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:12 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:12 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 11:32:12 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-30 11:32:12 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-30 11:32:12 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:12 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-30 11:32:12 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 11:32:12 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-30 11:32:12 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:12 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 11:32:12 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:12 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-30 11:32:12 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-30 11:32:12 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:12 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 11:32:12 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 11:32:12 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-30 11:32:12 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:12 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 11:32:12 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-30 11:32:12 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:12 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 11:32:12 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-30 11:32:12 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:12 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-30 11:32:13 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 11:32:13 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 11:32:13 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-30 11:32:13 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 11:32:13 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-30 11:32:13 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-30 11:32:13 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-30 11:32:13 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-30 11:32:13 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-30 11:32:13 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-30 11:32:13 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-30 11:32:13 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-30 11:32:13 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-30 11:32:13 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-30 11:32:13 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-30 11:32:13 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-30 11:32:13 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-30 11:32:13 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-30 11:32:13 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 11:32:13 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-30 11:32:13 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 11:32:13 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-30 11:32:13 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-30 11:32:13 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-30 11:32:13 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-30 11:32:13 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-30 11:32:13 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-30 11:32:13 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-30 11:32:13 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-30 11:32:13 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-30 11:32:13 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 11:32:13 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 11:32:13 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-30 11:32:13 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-30 11:32:13 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 11:32:13 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-30 11:32:13 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-30 11:32:13 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-30 11:32:13 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-30 11:32:13 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-30 11:32:13 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-30 11:32:13 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 11:32:13 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-30 11:32:13 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-30 11:32:13 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-30 11:32:13 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-30 11:32:13 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-30 11:32:13 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-30 11:32:13 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-30 11:32:13 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 11:32:13 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-30 11:32:13 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-30 11:32:13 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 11:32:13 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 11:32:13 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-30 11:32:13 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 11:32:13 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-30 11:32:13 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-30 11:32:13 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-30 11:32:13 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-30 11:32:13 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-30 11:32:13 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-30 11:32:13 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 11:32:13 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-30 11:32:13 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-30 11:32:13 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-30 11:32:13 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-30 11:32:13 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-30 11:32:13 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-30 11:32:13 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-30 11:32:13 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-30 11:32:13 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-30 11:32:13 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-30 11:32:13 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-30 11:32:13 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-30 11:32:13 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-30 11:32:13 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-30 11:32:13 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-30 11:32:13 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-30 11:32:13 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-30 11:32:13 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-30 11:32:13 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-30 11:32:13 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-30 11:32:13 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 11:32:13 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-30 11:32:13 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-30 11:32:13 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-30 11:32:13 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-30 11:32:13 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-30 11:32:13 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-30 11:32:13 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-30 11:32:13 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-30 11:32:13 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-30 11:32:13 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-30 11:32:13 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-30 11:32:13 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-30 11:32:13 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-30 11:32:13 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-30 11:32:13 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-30 11:32:13 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 11:32:13 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 11:32:13 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-30 11:32:13 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 11:32:13 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-30 11:32:13 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-30 11:32:13 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-30 11:32:13 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-30 11:32:13 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-30 11:32:13 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-30 11:32:13 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-30 11:32:13 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 11:32:13 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-30 11:32:13 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-30 11:32:13 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-30 11:32:13 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 11:32:13 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 11:32:13 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 11:32:13 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-30 11:32:13 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 11:32:13 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-30 11:32:13 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 11:32:13 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 11:32:13 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-30 11:32:13 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 11:32:13 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-30 11:32:13 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-30 11:32:13 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-30 11:32:14 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-30 11:32:14 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-30 11:32:14 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-30 11:32:15 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 11:32:15 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60641ec8: startup date [Thu May 30 11:31:41 CST 2019]; root of context hierarchy
2019-05-30 11:32:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 11:32:16 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 11:32:16 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 11:32:16 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-30 11:32:16 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-30 11:32:20 -Registering beans for JMX exposure on startup
2019-05-30 11:32:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-30 11:32:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-30 11:32:20 -Starting beans in phase 2147483647
2019-05-30 11:32:20 -Context refreshed
2019-05-30 11:32:20 -Found 1 custom documentation plugin(s)
2019-05-30 11:32:20 -Scanning for api listing references
2019-05-30 11:32:21 -Generating unique operation named: getCountDUsingPOST_1
2019-05-30 11:32:22 -Generating unique operation named: removeUsingPOST_1
2019-05-30 11:32:22 -Generating unique operation named: addUsingGET_1
2019-05-30 11:32:22 -Generating unique operation named: editUsingGET_1
2019-05-30 11:32:22 -Generating unique operation named: listUsingGET_1
2019-05-30 11:32:22 -Generating unique operation named: removeUsingPOST_2
2019-05-30 11:32:22 -Generating unique operation named: removeUsingPOST_3
2019-05-30 11:32:22 -Generating unique operation named: saveUsingPOST_1
2019-05-30 11:32:22 -Generating unique operation named: updateUsingGET_1
2019-05-30 11:32:22 -Generating unique operation named: updateUsingHEAD_1
2019-05-30 11:32:22 -Generating unique operation named: updateUsingPOST_1
2019-05-30 11:32:22 -Generating unique operation named: updateUsingPUT_1
2019-05-30 11:32:22 -Generating unique operation named: updateUsingPATCH_1
2019-05-30 11:32:22 -Generating unique operation named: updateUsingDELETE_1
2019-05-30 11:32:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-30 11:32:22 -Generating unique operation named: updateUsingTRACE_1
2019-05-30 11:32:22 -Generating unique operation named: addUsingGET_2
2019-05-30 11:32:22 -Generating unique operation named: editUsingGET_2
2019-05-30 11:32:22 -Generating unique operation named: listUsingGET_2
2019-05-30 11:32:22 -Generating unique operation named: removeUsingPOST_4
2019-05-30 11:32:22 -Generating unique operation named: removeUsingPOST_5
2019-05-30 11:32:22 -Generating unique operation named: saveUsingPOST_2
2019-05-30 11:32:22 -Generating unique operation named: updateUsingPOST_2
2019-05-30 11:32:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-30 11:32:22 -Generating unique operation named: addUsingGET_3
2019-05-30 11:32:22 -Generating unique operation named: editUsingGET_3
2019-05-30 11:32:22 -Generating unique operation named: listUsingGET_3
2019-05-30 11:32:22 -Generating unique operation named: removeUsingPOST_6
2019-05-30 11:32:22 -Generating unique operation named: removeUsingPOST_7
2019-05-30 11:32:22 -Generating unique operation named: saveUsingPOST_3
2019-05-30 11:32:22 -Generating unique operation named: updateUsingGET_2
2019-05-30 11:32:22 -Generating unique operation named: updateUsingHEAD_2
2019-05-30 11:32:22 -Generating unique operation named: updateUsingPOST_3
2019-05-30 11:32:22 -Generating unique operation named: updateUsingPUT_2
2019-05-30 11:32:22 -Generating unique operation named: updateUsingPATCH_2
2019-05-30 11:32:22 -Generating unique operation named: updateUsingDELETE_2
2019-05-30 11:32:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-30 11:32:22 -Generating unique operation named: updateUsingTRACE_2
2019-05-30 11:32:22 -Generating unique operation named: addUsingGET_4
2019-05-30 11:32:22 -Generating unique operation named: editUsingGET_4
2019-05-30 11:32:22 -Generating unique operation named: listUsingGET_4
2019-05-30 11:32:22 -Generating unique operation named: removeUsingPOST_8
2019-05-30 11:32:22 -Generating unique operation named: removeUsingPOST_9
2019-05-30 11:32:22 -Generating unique operation named: saveUsingPOST_4
2019-05-30 11:32:22 -Generating unique operation named: updateUsingGET_3
2019-05-30 11:32:22 -Generating unique operation named: updateUsingHEAD_3
2019-05-30 11:32:22 -Generating unique operation named: updateUsingPOST_4
2019-05-30 11:32:22 -Generating unique operation named: updateUsingPUT_3
2019-05-30 11:32:22 -Generating unique operation named: updateUsingPATCH_3
2019-05-30 11:32:22 -Generating unique operation named: updateUsingDELETE_3
2019-05-30 11:32:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-30 11:32:22 -Generating unique operation named: updateUsingTRACE_3
2019-05-30 11:32:22 -Generating unique operation named: ElecUsingGET_1
2019-05-30 11:32:22 -Generating unique operation named: addUsingGET_5
2019-05-30 11:32:22 -Generating unique operation named: editUsingGET_5
2019-05-30 11:32:23 -Generating unique operation named: listUsingGET_5
2019-05-30 11:32:23 -Generating unique operation named: removeUsingPOST_10
2019-05-30 11:32:23 -Generating unique operation named: removeUsingPOST_11
2019-05-30 11:32:23 -Generating unique operation named: saveUsingPOST_5
2019-05-30 11:32:23 -Generating unique operation named: updateUsingGET_4
2019-05-30 11:32:23 -Generating unique operation named: updateUsingHEAD_4
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPOST_5
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPUT_4
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPATCH_4
2019-05-30 11:32:23 -Generating unique operation named: updateUsingDELETE_4
2019-05-30 11:32:23 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-30 11:32:23 -Generating unique operation named: updateUsingTRACE_4
2019-05-30 11:32:23 -Generating unique operation named: editUsingGET_6
2019-05-30 11:32:23 -Generating unique operation named: listUsingGET_6
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPOST_6
2019-05-30 11:32:23 -Generating unique operation named: addUsingGET_6
2019-05-30 11:32:23 -Generating unique operation named: editUsingGET_7
2019-05-30 11:32:23 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-30 11:32:23 -Generating unique operation named: listUsingGET_7
2019-05-30 11:32:23 -Generating unique operation named: removeUsingPOST_12
2019-05-30 11:32:23 -Generating unique operation named: removeUsingPOST_13
2019-05-30 11:32:23 -Generating unique operation named: saveUsingPOST_6
2019-05-30 11:32:23 -Generating unique operation named: updateUsingGET_5
2019-05-30 11:32:23 -Generating unique operation named: updateUsingHEAD_5
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPOST_7
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPUT_5
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPATCH_5
2019-05-30 11:32:23 -Generating unique operation named: updateUsingDELETE_5
2019-05-30 11:32:23 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-30 11:32:23 -Generating unique operation named: updateUsingTRACE_5
2019-05-30 11:32:23 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-30 11:32:23 -Generating unique operation named: addUsingGET_7
2019-05-30 11:32:23 -Generating unique operation named: editUsingGET_8
2019-05-30 11:32:23 -Generating unique operation named: listUsingGET_8
2019-05-30 11:32:23 -Generating unique operation named: removeUsingPOST_14
2019-05-30 11:32:23 -Generating unique operation named: removeUsingPOST_15
2019-05-30 11:32:23 -Generating unique operation named: saveUsingPOST_7
2019-05-30 11:32:23 -Generating unique operation named: updateUsingGET_6
2019-05-30 11:32:23 -Generating unique operation named: updateUsingHEAD_6
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPOST_8
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPUT_6
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPATCH_6
2019-05-30 11:32:23 -Generating unique operation named: updateUsingDELETE_6
2019-05-30 11:32:23 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-30 11:32:23 -Generating unique operation named: updateUsingTRACE_6
2019-05-30 11:32:23 -Generating unique operation named: addUsingGET_8
2019-05-30 11:32:23 -Generating unique operation named: editUsingGET_9
2019-05-30 11:32:23 -Generating unique operation named: listUsingGET_9
2019-05-30 11:32:23 -Generating unique operation named: removeUsingPOST_16
2019-05-30 11:32:23 -Generating unique operation named: removeUsingPOST_17
2019-05-30 11:32:23 -Generating unique operation named: saveUsingPOST_8
2019-05-30 11:32:23 -Generating unique operation named: updateUsingGET_7
2019-05-30 11:32:23 -Generating unique operation named: updateUsingHEAD_7
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPOST_9
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPUT_7
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPATCH_7
2019-05-30 11:32:23 -Generating unique operation named: updateUsingDELETE_7
2019-05-30 11:32:23 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-30 11:32:23 -Generating unique operation named: updateUsingTRACE_7
2019-05-30 11:32:23 -Generating unique operation named: addUsingGET_9
2019-05-30 11:32:23 -Generating unique operation named: editUsingGET_10
2019-05-30 11:32:23 -Generating unique operation named: infoUsingGET_1
2019-05-30 11:32:23 -Generating unique operation named: infoUsingHEAD_1
2019-05-30 11:32:23 -Generating unique operation named: infoUsingPOST_1
2019-05-30 11:32:23 -Generating unique operation named: infoUsingPUT_1
2019-05-30 11:32:23 -Generating unique operation named: infoUsingPATCH_1
2019-05-30 11:32:23 -Generating unique operation named: infoUsingDELETE_1
2019-05-30 11:32:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-30 11:32:23 -Generating unique operation named: infoUsingTRACE_1
2019-05-30 11:32:23 -Generating unique operation named: listUsingGET_10
2019-05-30 11:32:23 -Generating unique operation named: removeUsingPOST_18
2019-05-30 11:32:23 -Generating unique operation named: removeUsingPOST_19
2019-05-30 11:32:23 -Generating unique operation named: saveUsingPOST_9
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPOST_10
2019-05-30 11:32:23 -Generating unique operation named: listUsingGET_11
2019-05-30 11:32:23 -Generating unique operation named: removeUsingPOST_20
2019-05-30 11:32:23 -Generating unique operation named: welcomeUsingGET_1
2019-05-30 11:32:23 -Generating unique operation named: addUsingGET_10
2019-05-30 11:32:23 -Generating unique operation named: editUsingGET_11
2019-05-30 11:32:23 -Generating unique operation named: listUsingGET_12
2019-05-30 11:32:23 -Generating unique operation named: removeUsingPOST_21
2019-05-30 11:32:23 -Generating unique operation named: saveUsingPOST_10
2019-05-30 11:32:23 -Generating unique operation named: treeUsingGET_1
2019-05-30 11:32:23 -Generating unique operation named: treeUsingGET_2
2019-05-30 11:32:23 -Generating unique operation named: updateUsingPOST_11
2019-05-30 11:32:24 -Generating unique operation named: addUsingGET_11
2019-05-30 11:32:24 -Generating unique operation named: editUsingGET_12
2019-05-30 11:32:24 -Generating unique operation named: listUsingGET_13
2019-05-30 11:32:24 -Generating unique operation named: removeUsingPOST_22
2019-05-30 11:32:24 -Generating unique operation named: removeUsingPOST_23
2019-05-30 11:32:24 -Generating unique operation named: updateUsingPOST_12
2019-05-30 11:32:24 -Generating unique operation named: addUsingGET_12
2019-05-30 11:32:24 -Generating unique operation named: editUsingGET_13
2019-05-30 11:32:24 -Generating unique operation named: listUsingGET_14
2019-05-30 11:32:24 -Generating unique operation named: removeUsingPOST_24
2019-05-30 11:32:24 -Generating unique operation named: removeUsingPOST_25
2019-05-30 11:32:24 -Generating unique operation named: saveUsingPOST_11
2019-05-30 11:32:24 -Generating unique operation named: updateUsingGET_8
2019-05-30 11:32:24 -Generating unique operation named: updateUsingHEAD_8
2019-05-30 11:32:24 -Generating unique operation named: updateUsingPOST_13
2019-05-30 11:32:24 -Generating unique operation named: updateUsingPUT_8
2019-05-30 11:32:24 -Generating unique operation named: updateUsingPATCH_8
2019-05-30 11:32:24 -Generating unique operation named: updateUsingDELETE_8
2019-05-30 11:32:24 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-30 11:32:24 -Generating unique operation named: updateUsingTRACE_8
2019-05-30 11:32:24 -Generating unique operation named: addUsingGET_13
2019-05-30 11:32:24 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-30 11:32:24 -Generating unique operation named: editUsingGET_14
2019-05-30 11:32:24 -Generating unique operation named: listUsingGET_15
2019-05-30 11:32:24 -Generating unique operation named: printEditUsingGET_1
2019-05-30 11:32:24 -Generating unique operation named: removeUsingPOST_26
2019-05-30 11:32:24 -Generating unique operation named: saveUsingPOST_12
2019-05-30 11:32:24 -Generating unique operation named: updateUsingGET_9
2019-05-30 11:32:24 -Generating unique operation named: updateUsingHEAD_9
2019-05-30 11:32:24 -Generating unique operation named: updateUsingPOST_14
2019-05-30 11:32:24 -Generating unique operation named: updateUsingPUT_9
2019-05-30 11:32:24 -Generating unique operation named: updateUsingPATCH_9
2019-05-30 11:32:24 -Generating unique operation named: updateUsingDELETE_9
2019-05-30 11:32:24 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-30 11:32:24 -Generating unique operation named: updateUsingTRACE_9
2019-05-30 11:32:24 -Generating unique operation named: addUsingGET_14
2019-05-30 11:32:24 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-30 11:32:24 -Generating unique operation named: editUsingGET_15
2019-05-30 11:32:24 -Generating unique operation named: listUsingGET_16
2019-05-30 11:32:24 -Generating unique operation named: saveUsingPOST_13
2019-05-30 11:32:24 -Generating unique operation named: saveUsingPOST_14
2019-05-30 11:32:24 -Generating unique operation named: updateUsingPOST_15
2019-05-30 11:32:24 -Generating unique operation named: listUsingGET_17
2019-05-30 11:32:24 -Generating unique operation named: listUsingHEAD_1
2019-05-30 11:32:24 -Generating unique operation named: listUsingPOST_1
2019-05-30 11:32:24 -Generating unique operation named: listUsingPUT_1
2019-05-30 11:32:24 -Generating unique operation named: listUsingPATCH_1
2019-05-30 11:32:24 -Generating unique operation named: listUsingDELETE_1
2019-05-30 11:32:24 -Generating unique operation named: listUsingOPTIONS_1
2019-05-30 11:32:24 -Generating unique operation named: listUsingTRACE_1
2019-05-30 11:32:24 -Generating unique operation named: countDDUsingGET_1
2019-05-30 11:32:24 -Generating unique operation named: exportDDUsingGET_1
2019-05-30 11:32:24 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-30 11:32:24 -Generating unique operation named: addUsingGET_15
2019-05-30 11:32:24 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-30 11:32:24 -Generating unique operation named: editUsingGET_16
2019-05-30 11:32:24 -Generating unique operation named: listUsingGET_18
2019-05-30 11:32:24 -Generating unique operation named: removeUsingPOST_27
2019-05-30 11:32:24 -Generating unique operation named: saveUsingPOST_15
2019-05-30 11:32:24 -Generating unique operation named: treeUsingGET_3
2019-05-30 11:32:24 -Generating unique operation named: treeViewUsingGET_1
2019-05-30 11:32:24 -Generating unique operation named: updateUsingPOST_16
2019-05-30 11:32:24 -Generating unique operation named: addUsingGET_16
2019-05-30 11:32:24 -Generating unique operation named: editUsingGET_17
2019-05-30 11:32:24 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-30 11:32:24 -Generating unique operation named: listUsingGET_19
2019-05-30 11:32:24 -Generating unique operation named: removeUsingPOST_28
2019-05-30 11:32:24 -Generating unique operation named: removeUsingPOST_29
2019-05-30 11:32:24 -Generating unique operation named: saveUsingPOST_16
2019-05-30 11:32:24 -Generating unique operation named: updateUsingGET_10
2019-05-30 11:32:24 -Generating unique operation named: updateUsingHEAD_10
2019-05-30 11:32:24 -Generating unique operation named: updateUsingPOST_17
2019-05-30 11:32:24 -Generating unique operation named: updateUsingPUT_10
2019-05-30 11:32:24 -Generating unique operation named: updateUsingPATCH_10
2019-05-30 11:32:24 -Generating unique operation named: updateUsingDELETE_10
2019-05-30 11:32:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-30 11:32:24 -Generating unique operation named: updateUsingTRACE_10
2019-05-30 11:32:24 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-30 11:32:24 -Generating unique operation named: addUsingGET_17
2019-05-30 11:32:25 -Generating unique operation named: editUsingGET_18
2019-05-30 11:32:25 -Generating unique operation named: listUsingGET_20
2019-05-30 11:32:25 -Generating unique operation named: removeUsingPOST_30
2019-05-30 11:32:25 -Generating unique operation named: removeUsingPOST_31
2019-05-30 11:32:25 -Generating unique operation named: saveUsingPOST_17
2019-05-30 11:32:25 -Generating unique operation named: updateUsingGET_11
2019-05-30 11:32:25 -Generating unique operation named: updateUsingHEAD_11
2019-05-30 11:32:25 -Generating unique operation named: updateUsingPOST_18
2019-05-30 11:32:25 -Generating unique operation named: updateUsingPUT_11
2019-05-30 11:32:25 -Generating unique operation named: updateUsingPATCH_11
2019-05-30 11:32:25 -Generating unique operation named: updateUsingDELETE_11
2019-05-30 11:32:25 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-30 11:32:25 -Generating unique operation named: updateUsingTRACE_11
2019-05-30 11:32:25 -Generating unique operation named: addUsingGET_18
2019-05-30 11:32:25 -Generating unique operation named: editUsingGET_19
2019-05-30 11:32:25 -Generating unique operation named: listUsingGET_21
2019-05-30 11:32:25 -Generating unique operation named: removeUsingPOST_32
2019-05-30 11:32:25 -Generating unique operation named: removeUsingPOST_33
2019-05-30 11:32:25 -Generating unique operation named: saveUsingPOST_18
2019-05-30 11:32:25 -Generating unique operation named: updateUsingGET_12
2019-05-30 11:32:25 -Generating unique operation named: updateUsingHEAD_12
2019-05-30 11:32:25 -Generating unique operation named: updateUsingPOST_19
2019-05-30 11:32:25 -Generating unique operation named: updateUsingPUT_12
2019-05-30 11:32:25 -Generating unique operation named: updateUsingPATCH_12
2019-05-30 11:32:25 -Generating unique operation named: updateUsingDELETE_12
2019-05-30 11:32:25 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-30 11:32:25 -Generating unique operation named: updateUsingTRACE_12
2019-05-30 11:32:25 -Starting Quartz Scheduler now
2019-05-30 11:32:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-30 11:32:25 -Starting...
2019-05-30 11:32:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-30 11:32:25 -Started.
2019-05-30 11:32:25 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-30 11:32:25 -Using a shared selector for servlet write/read
2019-05-30 11:32:25 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-30 11:32:25 -Started BootdoApplication in 51.711 seconds (JVM running for 54.307)
2019-05-30 11:32:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-30 11:32:28 -==> Parameters: 
2019-05-30 11:32:29 -<==      Total: 1
2019-05-30 11:32:41 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-30 11:32:41 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-30 11:32:41 -FrameworkServlet 'dispatcherServlet': initialization completed in 117 ms
2019-05-30 11:32:41 -Enabling session validation scheduler...
2019-05-30 11:32:42 -请求地址 : http://localhost:8081/login;JSESSIONID=1dd86971-664d-4da6-b63a-152d30a030a9
2019-05-30 11:32:42 -HTTP METHOD : GET
2019-05-30 11:32:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 11:32:42 -参数 : [{}]
2019-05-30 11:32:42 -耗时 : 8
2019-05-30 11:32:42 -返回值 : login
2019-05-30 11:32:56 -请求地址 : http://localhost:8081/getVerify
2019-05-30 11:32:56 -HTTP METHOD : GET
2019-05-30 11:32:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 11:32:56 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@616d2b3b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@79465bc3]
2019-05-30 11:33:10 -4229
2019-05-30 11:33:11 -耗时 : 14452
2019-05-30 11:33:11 -返回值 : null
2019-05-30 11:33:14 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-30 11:33:16 -请求地址 : http://localhost:8081/login
2019-05-30 11:33:16 -HTTP METHOD : POST
2019-05-30 11:33:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-30 11:33:16 -参数 : [admin, 111111, 4229, org.apache.shiro.web.servlet.ShiroHttpServletRequest@245d2dc4]
2019-05-30 11:33:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-30 11:33:17 -==> Parameters: admin(String)
2019-05-30 11:33:17 -<==      Total: 1
2019-05-30 11:33:17 -耗时 : 458
2019-05-30 11:33:17 -返回值 : {msg=操作成功, code=0}
2019-05-30 11:33:18 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-30 11:33:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 11:33:18 -==> Parameters: 1(Long), admin(String), 登录(String), 458(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-30 11:33:18.073(Timestamp)
2019-05-30 11:33:18 -请求地址 : http://localhost:8081/index
2019-05-30 11:33:18 -HTTP METHOD : GET
2019-05-30 11:33:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 11:33:18 -参数 : [{}]
2019-05-30 11:33:18 -<==    Updates: 1
2019-05-30 11:33:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 11:33:19 -==> Parameters: 1(Long)
2019-05-30 11:33:19 -<==      Total: 50
2019-05-30 11:33:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 11:33:19 -==> Parameters: 138(Long)
2019-05-30 11:33:19 -<==      Total: 1
2019-05-30 11:33:19 -耗时 : 1049
2019-05-30 11:33:19 -返回值 : index_v1
2019-05-30 11:33:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 11:33:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1049(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 11:33:20.124(Timestamp)
2019-05-30 11:33:20 -<==    Updates: 1
2019-05-30 11:33:21 -请求地址 : http://localhost:8081/main
2019-05-30 11:33:21 -HTTP METHOD : GET
2019-05-30 11:33:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 11:33:21 -参数 : []
2019-05-30 11:33:21 -耗时 : 1
2019-05-30 11:33:21 -返回值 : main
2019-05-30 11:33:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 11:33:23 -HTTP METHOD : GET
2019-05-30 11:33:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 11:33:23 -参数 : []
2019-05-30 11:33:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 11:33:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 11:33:23 -请求地址 : http://localhost:8081/main
2019-05-30 11:33:23 -HTTP METHOD : GET
2019-05-30 11:33:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 11:33:23 -参数 : []
2019-05-30 11:33:23 -耗时 : 0
2019-05-30 11:33:23 -返回值 : main
2019-05-30 11:33:23 -<==      Total: 0
2019-05-30 11:33:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 11:33:23 -==> Parameters: 1(Long), 0(String)
2019-05-30 11:33:23 -<==      Total: 1
2019-05-30 11:33:23 -耗时 : 396
2019-05-30 11:33:23 -返回值 : com.bootdo.common.utils.PageUtils@2f744d03
2019-05-30 11:34:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 11:34:01 -==> Parameters: 1(Long)
2019-05-30 11:34:01 -<==      Total: 94
2019-05-30 11:34:01 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-30 11:34:01 -HTTP METHOD : GET
2019-05-30 11:34:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 11:34:01 -参数 : []
2019-05-30 11:34:01 -耗时 : 12
2019-05-30 11:34:01 -返回值 : charts/tableElecMM
2019-05-30 11:34:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:34:02 -HTTP METHOD : GET
2019-05-30 11:34:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:34:02 -参数 : [userType]
2019-05-30 11:34:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:34:02 -==> Parameters: userType(String)
2019-05-30 11:34:03 -<==      Total: 4
2019-05-30 11:34:03 -耗时 : 222
2019-05-30 11:34:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:34:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 11:34:09 -HTTP METHOD : GET
2019-05-30 11:34:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 11:34:09 -参数 : []
2019-05-30 11:34:09 -耗时 : 0
2019-05-30 11:34:09 -返回值 : system/dept/deptTree
2019-05-30 11:34:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 11:34:09 -HTTP METHOD : GET
2019-05-30 11:34:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 11:34:09 -参数 : []
2019-05-30 11:34:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 11:34:09 -==> Parameters: 
2019-05-30 11:34:09 -<==      Total: 3
2019-05-30 11:34:09 -耗时 : 153
2019-05-30 11:34:09 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 11:34:15 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-30 11:34:15 -HTTP METHOD : POST
2019-05-30 11:34:15 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 11:34:15 -参数 : [com.bootdo.elec.vo.ElecVo@7b6eb716, com.bootdo.moneyLog.vo.ElecLogVo@4151b729]
2019-05-30 11:34:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:15 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:15 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:15 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 11:34:16 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-30 11:34:16 -<==      Total: 1
2019-05-30 11:34:16 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-30 11:34:16 -==> Parameters: 
2019-05-30 11:34:16 -<==      Total: 2
2019-05-30 11:34:16 -耗时 : 1138
2019-05-30 11:34:16 -返回值 : {G1PreElecCountMMNew=0, WMOweElecSumMMNew=0.00, MSElecLogMMCount=0, G3TotalyuNew=0.00, MSPreElecSumMMNew=0.00, MSOweElecCountMMOld=0, TotalPreyuNew=0.00, WGTotalyuNew=0.00, TotalCostyu=86.37, SElecPrice=2.600, WSElecPrice=0.810, WGTotalhuOld=0, G2PreElecSumMMNew=0.00, G3TotalhuOld=0, WSPreElecSumMMOld=0.00, TotalOwehuNew=2, TotalCosthu=2, G1ElecAmountMM=0, G2ElecAmountMM=0, MSElecAmountMM=0, WMPreElecSumMMOld=0.00, MSTotalyuOld=0.00, G3ElecAmountMM=0, STotalhuNew=1, MTotalyuOld=0.00, WGPreElecCountMMOld=0, ZElecPrice=0.970, MMTotalhuNew=0, ZOweElecSumMMOld=0.00, MMPreElecCountMMNew=0, ZTotalyuOld=0.00, MMOweElecCountMMNew=0, WGElecPrice=0.970, WMTotalyuOld=0.00, G2OweElecCountMMOld=0, WSTotalhuNew=0, SElecLogMMSum=0.00, WGElecAmountMM=0, ZElecLogMMSum=0.00, G1PreElecSumMMNew=0.00, WMElecAmountMM=0, G3OweElecCountMMOld=0, MMElecCostMMCount=0, WGOweElecCountMMNew=0, MElecLogMMSum=0.00, MSPreElecCountMMOld=0, G1ElecCostMMSum=0.00, WSOweElecSumMMNew=0.00, G1ElecPrice=0.970, G1OweElecCountMMNew=0, WSOweElecCountMMNew=0, WGOweElecSumMMNew=0.00, G2ElecCostMMCount=0, WGElecCostMMCount=0, G3PreElecSumMMNew=0.00, WGPreElecSumMMOld=0.00, G2OweElecSumMMNew=0.00, G2TotalyuNew=0.00, G2PreElecCountMMNew=0, WSElecAmountMM=0, MMElecAmountMM=0, G2TotalhuOld=0, MOweElecSumMMOld=0.00, ZOweElecCountMMOld=0, MOweElecCountMMOld=0, WGElecLogMMCount=0, TotalAllyuOld=0.00, MMPreElecCountMMOld=0, ZOweElecCountMMNew=0, ZTotalyuNew=0.00, MSTotalhuOld=0, STotalyuNew=-63.12, MMTotalyuNew=0.00, MMElecLogMMSum=0.00, ZPreElecSumMMOld=0.00, G2PreElecSumMMOld=0.00, WGTotalyuOld=0.00, MSOweElecCountMMNew=0, TotalPreyuOld=0.00, G3TotalyuOld=0.00, G1PreElecCountMMOld=0, STotalhuOld=1, G3PreElecCountMMOld=0, SPreElecSumMMOld=0.00, WGElecCostMMSum=0.00, MMTotalhuOld=0, MElecLogMMCount=0, MSTotalyuNew=0.00, MTotalhuNew=1, MTotalyuNew=-23.25, G1TotalyuNew=0.00, WGPreElecCountMMNew=0, G3ElecPrice=0.400, ZTotalhuOld=0, G1PreElecSumMMOld=0.00, G3OweElecCountMMNew=0, G1TotalhuOld=0, WMElecCostMMCount=0, WGOweElecSumMMOld=0.00, MSPreElecCountMMNew=0, TotalOweyuNew=-86.37, TotalPrehuOld=2, G3OweElecSumMMNew=0.00, MOweElecSumMMNew=-23.25, WMPreElecCountMMNew=0, TotalOwehuOld=0, MSElecCostMMCount=0, MElecCostMMCount=1, WSPreElecCountMMNew=0, ZPreElecCountMMOld=0, WGPreElecSumMMNew=0.00, WSElecCostMMSum=0.00, G2TotalyuOld=0.00, G3ElecCostMMCount=0, TotalAllyuNew=-86.37, MMPreElecSumMMNew=0.00, TotalAllhuOld=2, MMElecCostMMSum=0.00, MSElecLogMMSum=0.00, MSOweElecSumMMNew=0.00, STotalyuOld=0.00, ZElecCostMMCount=0, SPreElecCountMMOld=1, WMElecLogMMSum=0.00, ZElecAmountMM=0, WGElecLogMMSum=0.00, WMOweElecCountMMNew=0, MMTotalyuOld=0.00, WSElecLogMMCount=0, type=2, MSTotalhuNew=0, WSElecLogMMSum=0.00, WSTotalyuOld=0.00, SElecAmountMM=80, G2ElecLogMMCount=0, ZPreElecSumMMNew=0.00, MElecPrice=1.800, MPreElecSumMMNew=0.00, MMOweElecSumMMOld=0.00, TotalLogyu=0.00, ZTotalhuNew=0, SElecCostMMCount=1, WMElecPrice=0.465, SPreElecSumMMNew=0.00, TotalLoghu=0, G3PreElecCountMMNew=0, TotalOweyuOld=0.00, MMPreElecSumMMOld=0.00, G3OweElecSumMMOld=0.00, MTotalhuOld=1, ZOweElecSumMMNew=0.00, SOweElecSumMMNew=-63.12, SElecCostMMSum=63.12, G1TotalyuOld=0.00, TotalPrehuNew=0, G3ElecCostMMSum=0.00, ZPreElecCountMMNew=0, WSPreElecCountMMOld=0, SOweElecCountMMOld=0, G1ElecLogMMSum=0.00, G3TotalhuNew=0, G3ElecLogMMSum=0.00, G1OweElecSumMMOld=0.00, PriceTotal=10.725, MElecCostMMSum=23.25, WMTotalhuNew=0, MPreElecCountMMNew=0, WMPreElecCountMMOld=0, WGTotalhuNew=0, G2ElecLogMMSum=0.00, MSOweElecSumMMOld=0.00, SElecLogMMCount=0, TotalAllhuNew=2, G3ElecLogMMCount=0, WSElecCostMMCount=0, WMOweElecSumMMOld=0.00, MSPreElecSumMMOld=0.00, SPreElecCountMMNew=0, G2TotalhuNew=0, WSPreElecSumMMNew=0.00, G2ElecCostMMSum=0.00, MMOweElecSumMMNew=0.00, MPreElecSumMMOld=0.00, MMElecLogMMCount=0, G2ElecPrice=0.465, WMElecLogMMCount=0, WSTotalyuNew=0.00, G1TotalhuNew=0, WMPreElecSumMMNew=0.00, WSOweElecSumMMOld=0.00, MMOweElecCountMMOld=0, ZElecCostMMSum=0.00, MMElecPrice=0.465, ZElecLogMMCount=0, MSElecCostMMSum=0.00, G2OweElecCountMMNew=0, WGOweElecCountMMOld=0, WMTotalyuNew=0.00, G1OweElecCountMMOld=0, G1ElecCostMMCount=0, MSElecPrice=0.810, AmountTotalMM=130, WMElecCostMMSum=0.00, WSTotalhuOld=0, SOweElecCountMMNew=1, WSOweElecCountMMOld=0, SOweElecSumMMOld=0.00, WMTotalhuOld=0, G3PreElecSumMMOld=0.00, G2PreElecCountMMOld=0, G2OweElecSumMMOld=0.00, MElecAmountMM=50, MPreElecCountMMOld=1, WMOweElecCountMMOld=0, MOweElecCountMMNew=1, G1OweElecSumMMNew=0.00, G1ElecLogMMCount=0}
2019-05-30 11:34:31 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-30 11:34:31 -HTTP METHOD : GET
2019-05-30 11:34:31 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:34:31 -参数 : []
2019-05-30 11:34:31 -耗时 : 14
2019-05-30 11:34:31 -返回值 : charts/tableHeatMM
2019-05-30 11:34:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:34:31 -HTTP METHOD : GET
2019-05-30 11:34:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:34:31 -参数 : [userType]
2019-05-30 11:34:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:34:31 -==> Parameters: userType(String)
2019-05-30 11:34:31 -<==      Total: 4
2019-05-30 11:34:31 -耗时 : 4
2019-05-30 11:34:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:34:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 11:34:38 -HTTP METHOD : GET
2019-05-30 11:34:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 11:34:38 -参数 : []
2019-05-30 11:34:38 -耗时 : 0
2019-05-30 11:34:38 -返回值 : system/dept/deptTree
2019-05-30 11:34:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 11:34:39 -HTTP METHOD : GET
2019-05-30 11:34:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 11:34:39 -参数 : []
2019-05-30 11:34:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 11:34:39 -==> Parameters: 
2019-05-30 11:34:39 -<==      Total: 3
2019-05-30 11:34:39 -耗时 : 5
2019-05-30 11:34:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 11:34:40 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-05-30 11:34:40 -HTTP METHOD : POST
2019-05-30 11:34:40 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:34:40 -参数 : [com.bootdo.heat.vo.HeatVo@740c4b48, com.bootdo.moneyLog.vo.HeatLogVo@48e8302]
2019-05-30 11:34:40 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:40 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:40 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:40 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-30 11:34:41 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:41 -<==      Total: 1
2019-05-30 11:34:41 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-30 11:34:41 -==> Parameters: 
2019-05-30 11:34:41 -<==      Total: 2
2019-05-30 11:34:41 -耗时 : 567
2019-05-30 11:34:41 -返回值 : {STotalyuOld=0.00, SPreHeatSumMMNew=2.00, GSHeatCostMMCount=1, GSPreHeatCountMMNew=1, MHeatLogMMSum=126.00, GSPreHeatCountMMOld=0, SPreHeatSumMMOld=0.00, STotalyuNew=2.00, SHeatLogMMCount=1, type=2, GSHeatLogMMCount=0, TotalPreyuNew=105.00, GSHeatAreaMM=1.00, GSTotalhuOld=0, TotalCostyu=205.00, MHeatPrice=3.50, MOweHeatSumMMNew=-72.35, SHeatPrice=4.80, GMHeatPrice=3.50, GSOweHeatSumMMOld=0.00, SHeatLogMMSum=40.00, GMHeatLogMMSum=80.00, TotalPreyuOld=0.00, GSOweHeatSumMMNew=0.00, TotalOwehuNew=1, MOweHeatSumMMOld=0.00, TotalCosthu=7, SOweHeatSumMMNew=0.00, GMOweHeatCountMMOld=0, STotalhuOld=0, SOweHeatCountMMNew=0, GMPreHeatSumMMNew=1.00, TotalLogyu=246.00, GMOweHeatCountMMNew=0, SHeatCostMMSum=2.00, STotalhuNew=2, MTotalyuOld=0.00, GSTotalhuNew=1, GSTotalyuOld=0.00, GSPreHeatSumMMNew=1.00, GMPreHeatSumMMOld=0.00, GSHeatCostMMSum=1.00, GMPreHeatCountMMNew=1, MPreHeatSumMMNew=101.00, GMHeatCostMMSum=1.00, MTotalhuNew=3, MTotalyuNew=28.65, GMHeatLogMMCount=1, GSTotalyuNew=1.00, GSHeatPrice=4.80, GSHeatLogMMSum=0.00, TotalLoghu=10, SOweHeatSumMMOld=0.00, GMHeatAreaMM=1.00, SOweHeatCountMMOld=0, SPreHeatCountMMOld=0, TotalOweyuOld=0.00, GMOweHeatSumMMNew=0.00, GMTotalhuNew=1, SPreHeatCountMMNew=2, GMPreHeatCountMMOld=0, MPreHeatSumMMOld=0.00, MTotalhuOld=0, GMTotalhuOld=0, GSPreHeatSumMMOld=0.00, TotalPrehuNew=6, GMHeatCostMMCount=1, MHeatLogMMCount=8, SHeatCostMMCount=2, TotalOweyuNew=-72.35, MHeatAreaMM=101.75, TotalPrehuOld=0, MHeatCostMMSum=201.00, SHeatAreaMM=2.50, MOweHeatCountMMOld=0, GMTotalyuNew=1.00, TotalOwehuOld=0, PriceTotal=16.60, AreaTotalMM=106.25, MOweHeatCountMMNew=1, GMTotalyuOld=0.00, MPreHeatCountMMOld=0, GSOweHeatCountMMOld=0, TotalAllhuNew=7, TotalAllyuNew=32.65, GSOweHeatCountMMNew=0, MHeatCostMMCount=3, MPreHeatCountMMNew=2, GMOweHeatSumMMOld=0.00, TotalAllhuOld=0, TotalAllyuOld=0.00}
2019-05-30 11:34:48 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-30 11:34:48 -HTTP METHOD : GET
2019-05-30 11:34:48 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-30 11:34:48 -参数 : []
2019-05-30 11:34:48 -耗时 : 9
2019-05-30 11:34:48 -返回值 : charts/tableWaterMM
2019-05-30 11:34:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:34:49 -HTTP METHOD : GET
2019-05-30 11:34:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:34:49 -参数 : [userType]
2019-05-30 11:34:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:34:49 -==> Parameters: userType(String)
2019-05-30 11:34:49 -<==      Total: 4
2019-05-30 11:34:49 -耗时 : 5
2019-05-30 11:34:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:34:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 11:34:54 -HTTP METHOD : GET
2019-05-30 11:34:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 11:34:54 -参数 : []
2019-05-30 11:34:54 -耗时 : 0
2019-05-30 11:34:54 -返回值 : system/dept/deptTree
2019-05-30 11:34:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 11:34:54 -HTTP METHOD : GET
2019-05-30 11:34:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 11:34:54 -参数 : []
2019-05-30 11:34:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 11:34:54 -==> Parameters: 
2019-05-30 11:34:54 -<==      Total: 3
2019-05-30 11:34:54 -耗时 : 3
2019-05-30 11:34:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 11:34:56 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-30 11:34:56 -HTTP METHOD : POST
2019-05-30 11:34:56 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-30 11:34:56 -参数 : [com.bootdo.water.vo.WaterVo@35351893, com.bootdo.moneyLog.vo.WaterLogVo@34d1fde5]
2019-05-30 11:34:56 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-30 11:34:56 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-30 11:34:56 -<==      Total: 1
2019-05-30 11:34:56 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-30 11:34:56 -==> Parameters: 
2019-05-30 11:34:56 -<==      Total: 2
2019-05-30 11:34:56 -耗时 : 275
2019-05-30 11:34:56 -返回值 : {MOweWaterSumMMOld=0, S3TotalhuNew=1, S3WaterCostMMCount=1, S1PreWaterSumMMNew=0, S3WaterLogMMCount=0, MWaterCostMMSum=18, S1PreWaterSumMMOld=0, type=2, S2OweWaterSumMMNew=0, TotalPreyuNew=43, S3WaterLogMMSum=0, TotalCostyu=28, S1WaterPrice=11, MWaterLogMMCount=20, S1TotalyuOld=-70, S2OweWaterSumMMOld=-90, TotalPreyuOld=44, S3TotalhuOld=0, TotalOwehuNew=2, TotalCosthu=4, MOweWaterCountMMOld=0, S3OweWaterSumMMNew=0, MWaterCostMMCount=3, TotalLogyu=158, MOweWaterCountMMNew=1, S2TotalhuNew=2, MTotalyuOld=44, S2OweWaterCountMMOld=1, S3OweWaterCountMMNew=0, MWaterPrice=1, S1PreWaterCountMMNew=0, MTotalhuNew=3, MTotalyuNew=34, S1WaterLogMMSum=20, S3OweWaterCountMMOld=0, TotalLoghu=21, S2OweWaterCountMMNew=0, S1PreWaterCountMMOld=0, S3OweWaterSumMMOld=0, MOweWaterSumMMNew=-9, S2TotalhuOld=1, S2TotalyuOld=-90, TotalOweyuOld=-70, S2WaterCostMMSum=12, MWaterLogMMSum=138, S1OweWaterCountMMOld=1, MPreWaterCountMMOld=1, S3PreWaterCountMMOld=0, S3PreWaterSumMMOld=0, S2TotalyuNew=12, S1TotalhuNew=1, MTotalhuOld=1, S1OweWaterSumMMOld=-70, S3PreWaterCountMMNew=1, S2WaterLogMMSum=120, MPreWaterCountMMNew=2, S1TotalhuOld=1, S2WaterLogMMCount=2, TotalPrehuNew=2, S1OweWaterSumMMNew=-1, S2WaterCostMMCount=2, S2PreWaterCountMMOld=0, MPreWaterSumMMOld=44, S3WaterCostMMSum=6, TotalOweyuNew=-10, S1OweWaterCountMMNew=1, S2PreWaterCountMMNew=2, S3TotalyuOld=0, MPreWaterSumMMNew=43, S3PreWaterSumMMNew=6, S3TotalyuNew=6, TotalPrehuOld=1, S2PreWaterSumMMNew=12, S2PreWaterSumMMOld=0, S1WaterLogMMCount=1, TotalOwehuOld=1, PriceTotal=12, S1WaterCostMMSum=10, S1TotalyuNew=-1, TotalAllhuNew=4, TotalAllyuNew=33, TotalAllhuOld=2, S1WaterCostMMCount=1, TotalAllyuOld=-26}
2019-05-30 11:35:13 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-30 11:35:13 -HTTP METHOD : GET
2019-05-30 11:35:13 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:35:13 -参数 : []
2019-05-30 11:35:13 -耗时 : 1
2019-05-30 11:35:13 -返回值 : charts/tableHeatMM
2019-05-30 11:35:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:14 -HTTP METHOD : GET
2019-05-30 11:35:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:14 -参数 : [userType]
2019-05-30 11:35:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:14 -==> Parameters: userType(String)
2019-05-30 11:35:14 -<==      Total: 4
2019-05-30 11:35:14 -耗时 : 7
2019-05-30 11:35:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:14 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-30 11:35:14 -HTTP METHOD : GET
2019-05-30 11:35:14 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 11:35:14 -参数 : []
2019-05-30 11:35:14 -耗时 : 1
2019-05-30 11:35:14 -返回值 : charts/tableElecMM
2019-05-30 11:35:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:15 -HTTP METHOD : GET
2019-05-30 11:35:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:15 -参数 : [userType]
2019-05-30 11:35:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:15 -==> Parameters: userType(String)
2019-05-30 11:35:15 -<==      Total: 4
2019-05-30 11:35:15 -耗时 : 5
2019-05-30 11:35:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:15 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-30 11:35:15 -HTTP METHOD : GET
2019-05-30 11:35:15 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:35:15 -参数 : []
2019-05-30 11:35:15 -耗时 : 0
2019-05-30 11:35:15 -返回值 : charts/tableHeatMM
2019-05-30 11:35:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:15 -HTTP METHOD : GET
2019-05-30 11:35:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:15 -参数 : [userType]
2019-05-30 11:35:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:15 -==> Parameters: userType(String)
2019-05-30 11:35:15 -<==      Total: 4
2019-05-30 11:35:15 -耗时 : 4
2019-05-30 11:35:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:16 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-30 11:35:16 -HTTP METHOD : GET
2019-05-30 11:35:16 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-30 11:35:16 -参数 : []
2019-05-30 11:35:16 -耗时 : 0
2019-05-30 11:35:16 -返回值 : charts/tableWaterMM
2019-05-30 11:35:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:16 -HTTP METHOD : GET
2019-05-30 11:35:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:16 -参数 : [userType]
2019-05-30 11:35:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:16 -==> Parameters: userType(String)
2019-05-30 11:35:16 -<==      Total: 4
2019-05-30 11:35:16 -耗时 : 3
2019-05-30 11:35:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:16 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-30 11:35:16 -HTTP METHOD : GET
2019-05-30 11:35:16 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:35:16 -参数 : []
2019-05-30 11:35:16 -耗时 : 1
2019-05-30 11:35:16 -返回值 : charts/tableHeatMM
2019-05-30 11:35:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:17 -HTTP METHOD : GET
2019-05-30 11:35:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:17 -参数 : [userType]
2019-05-30 11:35:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:17 -==> Parameters: userType(String)
2019-05-30 11:35:17 -<==      Total: 4
2019-05-30 11:35:17 -耗时 : 5
2019-05-30 11:35:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:17 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-30 11:35:17 -HTTP METHOD : GET
2019-05-30 11:35:17 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 11:35:17 -参数 : []
2019-05-30 11:35:17 -耗时 : 1
2019-05-30 11:35:17 -返回值 : charts/tableElecMM
2019-05-30 11:35:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:17 -HTTP METHOD : GET
2019-05-30 11:35:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:17 -参数 : [userType]
2019-05-30 11:35:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:17 -==> Parameters: userType(String)
2019-05-30 11:35:17 -<==      Total: 4
2019-05-30 11:35:17 -耗时 : 4
2019-05-30 11:35:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:17 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-30 11:35:17 -HTTP METHOD : GET
2019-05-30 11:35:17 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:35:17 -参数 : []
2019-05-30 11:35:17 -耗时 : 0
2019-05-30 11:35:17 -返回值 : charts/tableHeatMM
2019-05-30 11:35:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:18 -HTTP METHOD : GET
2019-05-30 11:35:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:18 -参数 : [userType]
2019-05-30 11:35:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:18 -==> Parameters: userType(String)
2019-05-30 11:35:18 -<==      Total: 4
2019-05-30 11:35:18 -耗时 : 5
2019-05-30 11:35:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:19 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-30 11:35:19 -HTTP METHOD : GET
2019-05-30 11:35:19 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-30 11:35:19 -参数 : []
2019-05-30 11:35:19 -耗时 : 0
2019-05-30 11:35:19 -返回值 : charts/tableWaterMM
2019-05-30 11:35:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:19 -HTTP METHOD : GET
2019-05-30 11:35:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:19 -参数 : [userType]
2019-05-30 11:35:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:19 -==> Parameters: userType(String)
2019-05-30 11:35:19 -<==      Total: 4
2019-05-30 11:35:19 -耗时 : 6
2019-05-30 11:35:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:19 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-30 11:35:19 -HTTP METHOD : GET
2019-05-30 11:35:19 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:35:19 -参数 : []
2019-05-30 11:35:19 -耗时 : 0
2019-05-30 11:35:19 -返回值 : charts/tableHeatMM
2019-05-30 11:35:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:20 -HTTP METHOD : GET
2019-05-30 11:35:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:20 -参数 : [userType]
2019-05-30 11:35:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:20 -==> Parameters: userType(String)
2019-05-30 11:35:20 -<==      Total: 4
2019-05-30 11:35:20 -耗时 : 7
2019-05-30 11:35:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:20 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-30 11:35:20 -HTTP METHOD : GET
2019-05-30 11:35:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 11:35:20 -参数 : []
2019-05-30 11:35:20 -耗时 : 0
2019-05-30 11:35:20 -返回值 : charts/tableElecMM
2019-05-30 11:35:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:20 -HTTP METHOD : GET
2019-05-30 11:35:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:20 -参数 : [userType]
2019-05-30 11:35:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:20 -==> Parameters: userType(String)
2019-05-30 11:35:20 -<==      Total: 4
2019-05-30 11:35:20 -耗时 : 4
2019-05-30 11:35:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:20 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-30 11:35:20 -HTTP METHOD : GET
2019-05-30 11:35:20 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:35:20 -参数 : []
2019-05-30 11:35:20 -耗时 : 1
2019-05-30 11:35:20 -返回值 : charts/tableHeatMM
2019-05-30 11:35:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:21 -HTTP METHOD : GET
2019-05-30 11:35:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:21 -参数 : [userType]
2019-05-30 11:35:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:21 -==> Parameters: userType(String)
2019-05-30 11:35:21 -<==      Total: 4
2019-05-30 11:35:21 -耗时 : 5
2019-05-30 11:35:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:21 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-30 11:35:21 -HTTP METHOD : GET
2019-05-30 11:35:21 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-30 11:35:21 -参数 : []
2019-05-30 11:35:21 -耗时 : 0
2019-05-30 11:35:21 -返回值 : charts/tableWaterMM
2019-05-30 11:35:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:21 -HTTP METHOD : GET
2019-05-30 11:35:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:21 -参数 : [userType]
2019-05-30 11:35:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:21 -==> Parameters: userType(String)
2019-05-30 11:35:21 -<==      Total: 4
2019-05-30 11:35:21 -耗时 : 4
2019-05-30 11:35:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:22 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-30 11:35:22 -HTTP METHOD : GET
2019-05-30 11:35:22 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:35:22 -参数 : []
2019-05-30 11:35:22 -耗时 : 0
2019-05-30 11:35:22 -返回值 : charts/tableHeatMM
2019-05-30 11:35:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:22 -HTTP METHOD : GET
2019-05-30 11:35:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:22 -参数 : [userType]
2019-05-30 11:35:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:22 -==> Parameters: userType(String)
2019-05-30 11:35:22 -<==      Total: 4
2019-05-30 11:35:22 -耗时 : 4
2019-05-30 11:35:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:22 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-30 11:35:22 -HTTP METHOD : GET
2019-05-30 11:35:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 11:35:22 -参数 : []
2019-05-30 11:35:22 -耗时 : 1
2019-05-30 11:35:22 -返回值 : charts/tableElecMM
2019-05-30 11:35:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:22 -HTTP METHOD : GET
2019-05-30 11:35:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:22 -参数 : [userType]
2019-05-30 11:35:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:22 -==> Parameters: userType(String)
2019-05-30 11:35:22 -<==      Total: 4
2019-05-30 11:35:22 -耗时 : 3
2019-05-30 11:35:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:22 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-30 11:35:22 -HTTP METHOD : GET
2019-05-30 11:35:22 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:35:22 -参数 : []
2019-05-30 11:35:22 -耗时 : 1
2019-05-30 11:35:22 -返回值 : charts/tableHeatMM
2019-05-30 11:35:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:23 -HTTP METHOD : GET
2019-05-30 11:35:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:23 -参数 : [userType]
2019-05-30 11:35:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:23 -==> Parameters: userType(String)
2019-05-30 11:35:23 -<==      Total: 4
2019-05-30 11:35:23 -耗时 : 4
2019-05-30 11:35:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:23 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-30 11:35:23 -HTTP METHOD : GET
2019-05-30 11:35:23 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-30 11:35:23 -参数 : []
2019-05-30 11:35:23 -耗时 : 0
2019-05-30 11:35:23 -返回值 : charts/tableWaterMM
2019-05-30 11:35:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:23 -HTTP METHOD : GET
2019-05-30 11:35:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:23 -参数 : [userType]
2019-05-30 11:35:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:23 -==> Parameters: userType(String)
2019-05-30 11:35:23 -<==      Total: 4
2019-05-30 11:35:23 -耗时 : 5
2019-05-30 11:35:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:23 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-30 11:35:23 -HTTP METHOD : GET
2019-05-30 11:35:23 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:35:23 -参数 : []
2019-05-30 11:35:23 -耗时 : 1
2019-05-30 11:35:23 -返回值 : charts/tableHeatMM
2019-05-30 11:35:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:24 -HTTP METHOD : GET
2019-05-30 11:35:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:24 -参数 : [userType]
2019-05-30 11:35:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:24 -==> Parameters: userType(String)
2019-05-30 11:35:24 -<==      Total: 4
2019-05-30 11:35:24 -耗时 : 4
2019-05-30 11:35:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:24 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-30 11:35:24 -HTTP METHOD : GET
2019-05-30 11:35:24 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 11:35:24 -参数 : []
2019-05-30 11:35:24 -耗时 : 0
2019-05-30 11:35:24 -返回值 : charts/tableElecMM
2019-05-30 11:35:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:24 -HTTP METHOD : GET
2019-05-30 11:35:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:24 -参数 : [userType]
2019-05-30 11:35:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:24 -==> Parameters: userType(String)
2019-05-30 11:35:24 -<==      Total: 4
2019-05-30 11:35:24 -耗时 : 5
2019-05-30 11:35:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:24 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-30 11:35:24 -HTTP METHOD : GET
2019-05-30 11:35:24 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:35:24 -参数 : []
2019-05-30 11:35:24 -耗时 : 0
2019-05-30 11:35:24 -返回值 : charts/tableHeatMM
2019-05-30 11:35:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:25 -HTTP METHOD : GET
2019-05-30 11:35:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:25 -参数 : [userType]
2019-05-30 11:35:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:25 -==> Parameters: userType(String)
2019-05-30 11:35:25 -<==      Total: 4
2019-05-30 11:35:25 -耗时 : 4
2019-05-30 11:35:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:25 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-30 11:35:25 -HTTP METHOD : GET
2019-05-30 11:35:25 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-30 11:35:25 -参数 : []
2019-05-30 11:35:25 -耗时 : 0
2019-05-30 11:35:25 -返回值 : charts/tableWaterMM
2019-05-30 11:35:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:25 -HTTP METHOD : GET
2019-05-30 11:35:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:25 -参数 : [userType]
2019-05-30 11:35:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:25 -==> Parameters: userType(String)
2019-05-30 11:35:25 -<==      Total: 4
2019-05-30 11:35:25 -耗时 : 4
2019-05-30 11:35:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:25 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-30 11:35:25 -HTTP METHOD : GET
2019-05-30 11:35:25 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-30 11:35:25 -参数 : []
2019-05-30 11:35:25 -耗时 : 0
2019-05-30 11:35:25 -返回值 : charts/tableHeatMM
2019-05-30 11:35:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:26 -HTTP METHOD : GET
2019-05-30 11:35:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:26 -参数 : [userType]
2019-05-30 11:35:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:26 -==> Parameters: userType(String)
2019-05-30 11:35:26 -<==      Total: 4
2019-05-30 11:35:26 -耗时 : 4
2019-05-30 11:35:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 11:35:26 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-30 11:35:26 -HTTP METHOD : GET
2019-05-30 11:35:26 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 11:35:26 -参数 : []
2019-05-30 11:35:26 -耗时 : 1
2019-05-30 11:35:26 -返回值 : charts/tableElecMM
2019-05-30 11:35:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 11:35:26 -HTTP METHOD : GET
2019-05-30 11:35:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 11:35:26 -参数 : [userType]
2019-05-30 11:35:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 11:35:26 -==> Parameters: userType(String)
2019-05-30 11:35:26 -<==      Total: 4
2019-05-30 11:35:26 -耗时 : 6
2019-05-30 11:35:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 12:03:14 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]
2019-05-30 12:32:41 -Validating all active sessions...
2019-05-30 12:32:41 -Finished session validation.  [1] sessions were stopped.
2019-05-30 12:33:14 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 863]
2019-05-30 13:02:38 -请求地址 : http://localhost:8081/login;JSESSIONID=6f45d0a6-d89e-424f-adf0-a83e3364e3bc
2019-05-30 13:02:38 -HTTP METHOD : GET
2019-05-30 13:02:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 13:02:38 -参数 : [{}]
2019-05-30 13:02:38 -耗时 : 3
2019-05-30 13:02:38 -返回值 : login
2019-05-30 13:02:39 -请求地址 : http://localhost:8081/getVerify
2019-05-30 13:02:39 -HTTP METHOD : GET
2019-05-30 13:02:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 13:02:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@17d2d5e9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@725232d5]
2019-05-30 13:02:39 -5784
2019-05-30 13:02:39 -耗时 : 127
2019-05-30 13:02:39 -返回值 : null
2019-05-30 13:02:46 -请求地址 : http://localhost:8081/login
2019-05-30 13:02:46 -HTTP METHOD : POST
2019-05-30 13:02:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-30 13:02:46 -参数 : [admin, 111111, 5784, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3e6781cd]
2019-05-30 13:02:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-30 13:02:46 -==> Parameters: admin(String)
2019-05-30 13:02:46 -<==      Total: 1
2019-05-30 13:02:46 -耗时 : 78
2019-05-30 13:02:46 -返回值 : {msg=操作成功, code=0}
2019-05-30 13:02:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 13:02:46 -==> Parameters: 1(Long), admin(String), 登录(String), 79(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-30 13:02:46.524(Timestamp)
2019-05-30 13:02:46 -请求地址 : http://localhost:8081/index
2019-05-30 13:02:46 -HTTP METHOD : GET
2019-05-30 13:02:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 13:02:46 -参数 : [{}]
2019-05-30 13:02:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 13:02:46 -==> Parameters: 1(Long)
2019-05-30 13:02:46 -<==    Updates: 1
2019-05-30 13:02:46 -<==      Total: 50
2019-05-30 13:02:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 13:02:46 -==> Parameters: 138(Long)
2019-05-30 13:02:46 -<==      Total: 1
2019-05-30 13:02:46 -耗时 : 325
2019-05-30 13:02:46 -返回值 : index_v1
2019-05-30 13:02:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 13:02:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 325(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 13:02:46.883(Timestamp)
2019-05-30 13:02:47 -请求地址 : http://localhost:8081/main
2019-05-30 13:02:47 -HTTP METHOD : GET
2019-05-30 13:02:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 13:02:47 -参数 : []
2019-05-30 13:02:47 -耗时 : 1
2019-05-30 13:02:47 -返回值 : main
2019-05-30 13:02:47 -<==    Updates: 1
2019-05-30 13:02:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 13:02:47 -HTTP METHOD : GET
2019-05-30 13:02:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 13:02:47 -参数 : []
2019-05-30 13:02:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 13:02:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 13:02:47 -<==      Total: 0
2019-05-30 13:02:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 13:02:47 -==> Parameters: 1(Long), 0(String)
2019-05-30 13:02:47 -<==      Total: 1
2019-05-30 13:02:47 -耗时 : 53
2019-05-30 13:02:47 -返回值 : com.bootdo.common.utils.PageUtils@6bf5b7bd
2019-05-30 13:02:47 -请求地址 : http://localhost:8081/main
2019-05-30 13:02:47 -HTTP METHOD : GET
2019-05-30 13:02:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 13:02:47 -参数 : []
2019-05-30 13:02:47 -耗时 : 0
2019-05-30 13:02:47 -返回值 : main
2019-05-30 13:02:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 13:02:50 -==> Parameters: 1(Long)
2019-05-30 13:02:50 -<==      Total: 94
2019-05-30 13:02:50 -请求地址 : http://localhost:8081/print/print
2019-05-30 13:02:50 -HTTP METHOD : GET
2019-05-30 13:02:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-30 13:02:50 -参数 : []
2019-05-30 13:02:50 -耗时 : 0
2019-05-30 13:02:50 -返回值 : print/print/print
2019-05-30 13:02:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 13:02:51 -HTTP METHOD : GET
2019-05-30 13:02:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 13:02:51 -参数 : [userType]
2019-05-30 13:02:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 13:02:51 -==> Parameters: userType(String)
2019-05-30 13:02:51 -请求地址 : http://localhost:8081/print/print/list
2019-05-30 13:02:51 -HTTP METHOD : GET
2019-05-30 13:02:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-30 13:02:51 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-30 13:02:51 -<==      Total: 4
2019-05-30 13:02:51 -耗时 : 141
2019-05-30 13:02:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 13:02:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-30 13:02:51 -==> Parameters: 0(Integer), 10(Integer)
2019-05-30 13:02:52 -<==      Total: 4
2019-05-30 13:02:52 -==>  Preparing: select count(*) from print 
2019-05-30 13:02:52 -==> Parameters: 
2019-05-30 13:02:52 -<==      Total: 1
2019-05-30 13:02:52 -耗时 : 283
2019-05-30 13:02:52 -返回值 : com.bootdo.common.utils.PageUtils@4251ed52
2019-05-30 13:02:54 -请求地址 : http://localhost:8081/print/print/printEdit/79
2019-05-30 13:02:54 -HTTP METHOD : GET
2019-05-30 13:02:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-30 13:02:54 -参数 : [79, {}]
2019-05-30 13:02:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 13:02:54 -==> Parameters: 79(Long)
2019-05-30 13:02:54 -<==      Total: 1
2019-05-30 13:02:54 -耗时 : 7
2019-05-30 13:02:54 -返回值 : print/print/printEdit
2019-05-30 13:03:08 -请求地址 : http://localhost:8081/print/print/printEdit/79
2019-05-30 13:03:08 -HTTP METHOD : GET
2019-05-30 13:03:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-30 13:03:08 -参数 : [79, {}]
2019-05-30 13:03:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 13:03:08 -==> Parameters: 79(Long)
2019-05-30 13:03:08 -<==      Total: 1
2019-05-30 13:03:08 -耗时 : 22
2019-05-30 13:03:08 -返回值 : print/print/printEdit
2019-05-30 13:03:10 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-30 13:03:14 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1297]
2019-05-30 13:05:24 -请求地址 : http://localhost:8081/print/print/edit/79
2019-05-30 13:05:24 -HTTP METHOD : GET
2019-05-30 13:05:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-05-30 13:05:24 -参数 : [79, {}]
2019-05-30 13:05:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 13:05:24 -==> Parameters: 79(Long)
2019-05-30 13:05:24 -<==      Total: 1
2019-05-30 13:05:24 -耗时 : 5
2019-05-30 13:05:24 -返回值 : print/print/edit
2019-05-30 13:05:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 13:05:25 -HTTP METHOD : GET
2019-05-30 13:05:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 13:05:25 -参数 : [userType]
2019-05-30 13:05:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 13:05:25 -==> Parameters: userType(String)
2019-05-30 13:05:25 -<==      Total: 4
2019-05-30 13:05:25 -耗时 : 4
2019-05-30 13:05:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 13:05:32 -请求地址 : http://localhost:8081/print/print/printEdit/79
2019-05-30 13:05:32 -HTTP METHOD : GET
2019-05-30 13:05:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-30 13:05:32 -参数 : [79, {}]
2019-05-30 13:05:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 13:05:32 -==> Parameters: 79(Long)
2019-05-30 13:05:32 -<==      Total: 1
2019-05-30 13:05:32 -耗时 : 4
2019-05-30 13:05:32 -返回值 : print/print/printEdit
2019-05-30 13:08:50 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-05-30 13:08:50 -HTTP METHOD : POST
2019-05-30 13:08:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-05-30 13:08:50 -参数 : [[Ljava.lang.Long;@699d23f4]
2019-05-30 13:08:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? , ? ) 
2019-05-30 13:08:50 -==> Parameters: 79(Long), 80(Long), 81(Long), 82(Long)
2019-05-30 13:08:50 -<==      Total: 4
2019-05-30 13:08:50 -耗时 : 175
2019-05-30 13:08:50 -返回值 : [com.bootdo.print.vo.PrintVo@37f706ae, com.bootdo.print.vo.PrintVo@25029244, com.bootdo.print.vo.PrintVo@4c0cfa6f, com.bootdo.print.vo.PrintVo@5d3f1eb8]
2019-05-30 13:08:54 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-05-30 13:08:54 -HTTP METHOD : POST
2019-05-30 13:08:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-05-30 13:08:54 -参数 : [[Ljava.lang.Long;@71321b]
2019-05-30 13:08:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? , ? ) 
2019-05-30 13:08:54 -==> Parameters: 79(Long), 80(Long), 81(Long), 82(Long)
2019-05-30 13:08:55 -<==      Total: 4
2019-05-30 13:08:55 -耗时 : 108
2019-05-30 13:08:55 -返回值 : [com.bootdo.print.vo.PrintVo@7a6c90, com.bootdo.print.vo.PrintVo@76aa5f31, com.bootdo.print.vo.PrintVo@1b034189, com.bootdo.print.vo.PrintVo@2850e728]
2019-05-30 13:15:27 -请求地址 : http://localhost:8081/index
2019-05-30 13:15:27 -HTTP METHOD : GET
2019-05-30 13:15:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 13:15:27 -参数 : [{}]
2019-05-30 13:15:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 13:15:27 -==> Parameters: 1(Long)
2019-05-30 13:15:27 -<==      Total: 50
2019-05-30 13:15:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 13:15:27 -==> Parameters: 138(Long)
2019-05-30 13:15:27 -<==      Total: 1
2019-05-30 13:15:27 -耗时 : 87
2019-05-30 13:15:27 -返回值 : index_v1
2019-05-30 13:15:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 13:15:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 87(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 13:15:27.602(Timestamp)
2019-05-30 13:15:27 -请求地址 : http://localhost:8081/main
2019-05-30 13:15:27 -HTTP METHOD : GET
2019-05-30 13:15:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 13:15:27 -参数 : []
2019-05-30 13:15:27 -耗时 : 0
2019-05-30 13:15:27 -返回值 : main
2019-05-30 13:15:27 -<==    Updates: 1
2019-05-30 13:15:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 13:15:28 -HTTP METHOD : GET
2019-05-30 13:15:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 13:15:28 -参数 : []
2019-05-30 13:15:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 13:15:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 13:15:28 -<==      Total: 0
2019-05-30 13:15:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 13:15:28 -==> Parameters: 1(Long), 0(String)
2019-05-30 13:15:28 -<==      Total: 1
2019-05-30 13:15:28 -耗时 : 8
2019-05-30 13:15:28 -返回值 : com.bootdo.common.utils.PageUtils@44b090a2
2019-05-30 13:15:28 -请求地址 : http://localhost:8081/main
2019-05-30 13:15:28 -HTTP METHOD : GET
2019-05-30 13:15:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 13:15:28 -参数 : []
2019-05-30 13:15:28 -耗时 : 0
2019-05-30 13:15:28 -返回值 : main
2019-05-30 13:15:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 13:15:31 -==> Parameters: 1(Long)
2019-05-30 13:15:31 -<==      Total: 94
2019-05-30 13:15:31 -请求地址 : http://localhost:8081/print/print
2019-05-30 13:15:31 -HTTP METHOD : GET
2019-05-30 13:15:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-30 13:15:31 -参数 : []
2019-05-30 13:15:31 -耗时 : 2
2019-05-30 13:15:31 -返回值 : print/print/print
2019-05-30 13:15:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 13:15:32 -HTTP METHOD : GET
2019-05-30 13:15:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 13:15:32 -参数 : [userType]
2019-05-30 13:15:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 13:15:32 -==> Parameters: userType(String)
2019-05-30 13:15:32 -<==      Total: 4
2019-05-30 13:15:32 -耗时 : 4
2019-05-30 13:15:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 13:15:32 -请求地址 : http://localhost:8081/print/print/list
2019-05-30 13:15:32 -HTTP METHOD : GET
2019-05-30 13:15:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-30 13:15:32 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-30 13:15:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-30 13:15:32 -==> Parameters: 0(Integer), 10(Integer)
2019-05-30 13:15:32 -<==      Total: 4
2019-05-30 13:15:32 -==>  Preparing: select count(*) from print 
2019-05-30 13:15:32 -==> Parameters: 
2019-05-30 13:15:32 -<==      Total: 1
2019-05-30 13:15:32 -耗时 : 9
2019-05-30 13:15:32 -返回值 : com.bootdo.common.utils.PageUtils@5ee496b6
2019-05-30 13:15:50 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-05-30 13:15:50 -HTTP METHOD : POST
2019-05-30 13:15:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-05-30 13:15:50 -参数 : [[Ljava.lang.Long;@a0bcc87]
2019-05-30 13:15:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? , ? ) 
2019-05-30 13:15:50 -==> Parameters: 79(Long), 80(Long), 81(Long), 82(Long)
2019-05-30 13:15:50 -<==      Total: 4
2019-05-30 13:15:50 -耗时 : 92
2019-05-30 13:15:50 -返回值 : [com.bootdo.print.vo.PrintVo@5ecce3c8, com.bootdo.print.vo.PrintVo@10d7b4c6, com.bootdo.print.vo.PrintVo@446c2daf, com.bootdo.print.vo.PrintVo@3a8474e0]
2019-05-30 13:15:55 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-05-30 13:15:55 -HTTP METHOD : POST
2019-05-30 13:15:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-05-30 13:15:55 -参数 : [[Ljava.lang.Long;@75e4fd53]
2019-05-30 13:15:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? , ? ) 
2019-05-30 13:15:55 -==> Parameters: 79(Long), 80(Long), 81(Long), 82(Long)
2019-05-30 13:15:55 -<==      Total: 4
2019-05-30 13:15:55 -耗时 : 26
2019-05-30 13:15:55 -返回值 : [com.bootdo.print.vo.PrintVo@758992d3, com.bootdo.print.vo.PrintVo@1dd87a76, com.bootdo.print.vo.PrintVo@4f8412fb, com.bootdo.print.vo.PrintVo@38458fbb]
2019-05-30 13:16:54 -请求地址 : http://localhost:8081/login;JSESSIONID=962bf133-330f-4617-9457-ad2a62a53519
2019-05-30 13:16:54 -HTTP METHOD : GET
2019-05-30 13:16:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 13:16:54 -参数 : [{}]
2019-05-30 13:16:54 -耗时 : 1
2019-05-30 13:16:54 -返回值 : login
2019-05-30 13:16:55 -请求地址 : http://localhost:8081/getVerify
2019-05-30 13:16:55 -HTTP METHOD : GET
2019-05-30 13:16:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 13:16:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@368cf699, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4fbde046]
2019-05-30 13:16:55 -2817
2019-05-30 13:16:55 -耗时 : 45
2019-05-30 13:16:55 -返回值 : null
2019-05-30 13:16:55 -请求地址 : http://localhost:8081/login
2019-05-30 13:16:55 -HTTP METHOD : GET
2019-05-30 13:16:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 13:16:55 -参数 : [{}]
2019-05-30 13:16:55 -耗时 : 0
2019-05-30 13:16:55 -返回值 : login
2019-05-30 13:16:59 -请求地址 : http://localhost:8081/login
2019-05-30 13:16:59 -HTTP METHOD : POST
2019-05-30 13:16:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-30 13:16:59 -参数 : [admin, 111111, 2817, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c1e95dc]
2019-05-30 13:16:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-30 13:16:59 -==> Parameters: admin(String)
2019-05-30 13:16:59 -<==      Total: 1
2019-05-30 13:16:59 -耗时 : 322
2019-05-30 13:16:59 -返回值 : {msg=操作成功, code=0}
2019-05-30 13:17:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 13:17:00 -请求地址 : http://localhost:8081/index
2019-05-30 13:17:00 -HTTP METHOD : GET
2019-05-30 13:17:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 13:17:00 -参数 : [{}]
2019-05-30 13:17:00 -==> Parameters: 1(Long), admin(String), 登录(String), 323(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-30 13:16:59.825(Timestamp)
2019-05-30 13:17:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 13:17:00 -==> Parameters: 1(Long)
2019-05-30 13:17:00 -<==    Updates: 1
2019-05-30 13:17:00 -<==      Total: 50
2019-05-30 13:17:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 13:17:00 -==> Parameters: 138(Long)
2019-05-30 13:17:00 -<==      Total: 1
2019-05-30 13:17:00 -耗时 : 436
2019-05-30 13:17:00 -返回值 : index_v1
2019-05-30 13:17:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 13:17:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 436(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 13:17:00.511(Timestamp)
2019-05-30 13:17:00 -<==    Updates: 1
2019-05-30 13:17:00 -请求地址 : http://localhost:8081/main
2019-05-30 13:17:00 -HTTP METHOD : GET
2019-05-30 13:17:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 13:17:00 -参数 : []
2019-05-30 13:17:00 -耗时 : 0
2019-05-30 13:17:00 -返回值 : main
2019-05-30 13:17:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 13:17:01 -HTTP METHOD : GET
2019-05-30 13:17:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 13:17:01 -参数 : []
2019-05-30 13:17:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 13:17:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 13:17:02 -请求地址 : http://localhost:8081/main
2019-05-30 13:17:02 -HTTP METHOD : GET
2019-05-30 13:17:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 13:17:02 -参数 : []
2019-05-30 13:17:02 -耗时 : 68
2019-05-30 13:17:02 -返回值 : main
2019-05-30 13:17:02 -<==      Total: 0
2019-05-30 13:17:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 13:17:02 -==> Parameters: 1(Long), 0(String)
2019-05-30 13:17:02 -<==      Total: 1
2019-05-30 13:17:02 -耗时 : 421
2019-05-30 13:17:02 -返回值 : com.bootdo.common.utils.PageUtils@60a261e
2019-05-30 13:17:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 13:17:04 -==> Parameters: 1(Long)
2019-05-30 13:17:04 -<==      Total: 94
2019-05-30 13:17:04 -请求地址 : http://localhost:8081/print/print
2019-05-30 13:17:04 -HTTP METHOD : GET
2019-05-30 13:17:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-30 13:17:04 -参数 : []
2019-05-30 13:17:04 -耗时 : 0
2019-05-30 13:17:04 -返回值 : print/print/print
2019-05-30 13:17:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 13:17:09 -HTTP METHOD : GET
2019-05-30 13:17:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 13:17:09 -参数 : [userType]
2019-05-30 13:17:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 13:17:09 -==> Parameters: userType(String)
2019-05-30 13:17:09 -请求地址 : http://localhost:8081/print/print/list
2019-05-30 13:17:09 -HTTP METHOD : GET
2019-05-30 13:17:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-30 13:17:09 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-30 13:17:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-30 13:17:09 -==> Parameters: 0(Integer), 10(Integer)
2019-05-30 13:17:09 -<==      Total: 4
2019-05-30 13:17:09 -==>  Preparing: select count(*) from print 
2019-05-30 13:17:09 -==> Parameters: 
2019-05-30 13:17:09 -<==      Total: 1
2019-05-30 13:17:09 -耗时 : 7
2019-05-30 13:17:09 -返回值 : com.bootdo.common.utils.PageUtils@432312fb
2019-05-30 13:17:09 -<==      Total: 4
2019-05-30 13:17:09 -耗时 : 196
2019-05-30 13:17:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 13:17:13 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-05-30 13:17:13 -HTTP METHOD : POST
2019-05-30 13:17:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-05-30 13:17:13 -参数 : [[Ljava.lang.Long;@58b325e8]
2019-05-30 13:17:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? , ? ) 
2019-05-30 13:17:13 -==> Parameters: 79(Long), 80(Long), 81(Long), 82(Long)
2019-05-30 13:17:13 -<==      Total: 4
2019-05-30 13:17:13 -耗时 : 112
2019-05-30 13:17:13 -返回值 : [com.bootdo.print.vo.PrintVo@3b4d80ec, com.bootdo.print.vo.PrintVo@7720bf50, com.bootdo.print.vo.PrintVo@36fd5839, com.bootdo.print.vo.PrintVo@1f923e18]
2019-05-30 13:27:29 -请求地址 : http://localhost:8081/index
2019-05-30 13:27:29 -HTTP METHOD : GET
2019-05-30 13:27:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 13:27:29 -参数 : [{}]
2019-05-30 13:27:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 13:27:29 -==> Parameters: 1(Long)
2019-05-30 13:27:29 -<==      Total: 50
2019-05-30 13:27:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 13:27:29 -==> Parameters: 138(Long)
2019-05-30 13:27:29 -<==      Total: 1
2019-05-30 13:27:29 -耗时 : 163
2019-05-30 13:27:29 -返回值 : index_v1
2019-05-30 13:27:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 13:27:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 164(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 13:27:29.906(Timestamp)
2019-05-30 13:27:30 -请求地址 : http://localhost:8081/main
2019-05-30 13:27:30 -HTTP METHOD : GET
2019-05-30 13:27:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 13:27:30 -参数 : []
2019-05-30 13:27:30 -耗时 : 0
2019-05-30 13:27:30 -返回值 : main
2019-05-30 13:27:30 -<==    Updates: 1
2019-05-30 13:27:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 13:27:30 -HTTP METHOD : GET
2019-05-30 13:27:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 13:27:30 -参数 : []
2019-05-30 13:27:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 13:27:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 13:27:30 -<==      Total: 0
2019-05-30 13:27:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 13:27:30 -==> Parameters: 1(Long), 0(String)
2019-05-30 13:27:30 -<==      Total: 1
2019-05-30 13:27:30 -耗时 : 22
2019-05-30 13:27:30 -返回值 : com.bootdo.common.utils.PageUtils@25d4833f
2019-05-30 13:27:30 -请求地址 : http://localhost:8081/main
2019-05-30 13:27:30 -HTTP METHOD : GET
2019-05-30 13:27:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 13:27:30 -参数 : []
2019-05-30 13:27:30 -耗时 : 1
2019-05-30 13:27:30 -返回值 : main
2019-05-30 13:27:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 13:27:44 -==> Parameters: 1(Long)
2019-05-30 13:27:44 -<==      Total: 94
2019-05-30 13:27:44 -请求地址 : http://localhost:8081/print/print
2019-05-30 13:27:44 -HTTP METHOD : GET
2019-05-30 13:27:44 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-30 13:27:44 -参数 : []
2019-05-30 13:27:44 -耗时 : 0
2019-05-30 13:27:44 -返回值 : print/print/print
2019-05-30 13:27:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 13:27:45 -HTTP METHOD : GET
2019-05-30 13:27:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 13:27:45 -参数 : [userType]
2019-05-30 13:27:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 13:27:45 -==> Parameters: userType(String)
2019-05-30 13:27:45 -<==      Total: 4
2019-05-30 13:27:45 -耗时 : 7
2019-05-30 13:27:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 13:27:45 -请求地址 : http://localhost:8081/print/print/list
2019-05-30 13:27:45 -HTTP METHOD : GET
2019-05-30 13:27:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-30 13:27:45 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-30 13:27:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-30 13:27:45 -==> Parameters: 0(Integer), 10(Integer)
2019-05-30 13:27:45 -<==      Total: 4
2019-05-30 13:27:45 -==>  Preparing: select count(*) from print 
2019-05-30 13:27:45 -==> Parameters: 
2019-05-30 13:27:45 -<==      Total: 1
2019-05-30 13:27:45 -耗时 : 8
2019-05-30 13:27:45 -返回值 : com.bootdo.common.utils.PageUtils@d344fb6
2019-05-30 13:28:54 -请求地址 : http://localhost:8081/index
2019-05-30 13:28:54 -HTTP METHOD : GET
2019-05-30 13:28:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 13:28:54 -参数 : [{}]
2019-05-30 13:28:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 13:28:54 -==> Parameters: 1(Long)
2019-05-30 13:28:54 -<==      Total: 50
2019-05-30 13:28:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 13:28:54 -==> Parameters: 138(Long)
2019-05-30 13:28:54 -<==      Total: 1
2019-05-30 13:28:54 -耗时 : 25
2019-05-30 13:28:54 -返回值 : index_v1
2019-05-30 13:28:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 13:28:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 13:28:54.23(Timestamp)
2019-05-30 13:28:54 -<==    Updates: 1
2019-05-30 13:28:54 -请求地址 : http://localhost:8081/main
2019-05-30 13:28:54 -HTTP METHOD : GET
2019-05-30 13:28:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 13:28:54 -参数 : []
2019-05-30 13:28:54 -耗时 : 2
2019-05-30 13:28:54 -返回值 : main
2019-05-30 13:28:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 13:28:55 -HTTP METHOD : GET
2019-05-30 13:28:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 13:28:55 -参数 : []
2019-05-30 13:28:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 13:28:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 13:28:55 -<==      Total: 0
2019-05-30 13:28:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 13:28:55 -==> Parameters: 1(Long), 0(String)
2019-05-30 13:28:55 -<==      Total: 1
2019-05-30 13:28:55 -耗时 : 19
2019-05-30 13:28:55 -返回值 : com.bootdo.common.utils.PageUtils@176bf06b
2019-05-30 13:28:55 -请求地址 : http://localhost:8081/main
2019-05-30 13:28:55 -HTTP METHOD : GET
2019-05-30 13:28:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 13:28:55 -参数 : []
2019-05-30 13:28:55 -耗时 : 0
2019-05-30 13:28:55 -返回值 : main
2019-05-30 13:28:58 -请求地址 : http://localhost:8081/print/print
2019-05-30 13:28:58 -HTTP METHOD : GET
2019-05-30 13:28:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-30 13:28:58 -参数 : []
2019-05-30 13:28:58 -耗时 : 0
2019-05-30 13:28:58 -返回值 : print/print/print
2019-05-30 13:28:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 13:28:59 -HTTP METHOD : GET
2019-05-30 13:28:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 13:28:59 -参数 : [userType]
2019-05-30 13:28:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 13:28:59 -==> Parameters: userType(String)
2019-05-30 13:28:59 -<==      Total: 4
2019-05-30 13:28:59 -耗时 : 3
2019-05-30 13:28:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 13:28:59 -请求地址 : http://localhost:8081/print/print/list
2019-05-30 13:28:59 -HTTP METHOD : GET
2019-05-30 13:28:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-30 13:28:59 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-30 13:28:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-30 13:28:59 -==> Parameters: 0(Integer), 10(Integer)
2019-05-30 13:28:59 -<==      Total: 4
2019-05-30 13:28:59 -==>  Preparing: select count(*) from print 
2019-05-30 13:28:59 -==> Parameters: 
2019-05-30 13:28:59 -<==      Total: 1
2019-05-30 13:28:59 -耗时 : 9
2019-05-30 13:28:59 -返回值 : com.bootdo.common.utils.PageUtils@31be6112
2019-05-30 13:29:06 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-05-30 13:29:06 -HTTP METHOD : POST
2019-05-30 13:29:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-05-30 13:29:06 -参数 : [[Ljava.lang.Long;@3e660a8a]
2019-05-30 13:29:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? , ? , ? ) 
2019-05-30 13:29:06 -==> Parameters: 79(Long), 80(Long), 81(Long), 82(Long)
2019-05-30 13:29:06 -<==      Total: 4
2019-05-30 13:29:06 -耗时 : 5
2019-05-30 13:29:06 -返回值 : [com.bootdo.print.vo.PrintVo@6f6e99f4, com.bootdo.print.vo.PrintVo@34115227, com.bootdo.print.vo.PrintVo@3a2d2c75, com.bootdo.print.vo.PrintVo@134dd85e]
2019-05-30 13:32:41 -Validating all active sessions...
2019-05-30 13:32:41 -Finished session validation.  No sessions were stopped.
2019-05-30 13:33:14 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1728]
2019-05-30 14:03:14 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2161]
2019-05-30 14:32:41 -Validating all active sessions...
2019-05-30 14:32:42 -Finished session validation.  [2] sessions were stopped.
2019-05-30 14:33:14 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2594]
2019-05-30 15:03:14 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3027]
2019-05-30 15:32:41 -Validating all active sessions...
2019-05-30 15:32:42 -Finished session validation.  No sessions were stopped.
2019-05-30 15:33:14 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 75], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 3405]
2019-05-30 16:03:14 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 75], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 3766]
2019-05-30 16:32:41 -Validating all active sessions...
2019-05-30 16:32:41 -Finished session validation.  No sessions were stopped.
2019-05-30 16:33:14 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 75], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 4127]
2019-05-30 16:50:00 -Starting BootdoApplication on PC-201905091110 with PID 5824 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-30 16:50:00 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-30 16:50:00 -The following profiles are active: dev
2019-05-30 16:50:05 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3234f74e: startup date [Thu May 30 16:50:05 CST 2019]; root of context hierarchy
2019-05-30 16:50:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-30 16:50:23 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ff9a62a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 16:50:23 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f1f3914e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 16:50:25 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 16:50:25 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 16:50:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 16:50:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-30 16:50:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-30 16:50:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 16:50:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 16:50:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 16:50:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 16:50:28 -Tomcat initialized with port(s): 8081 (http)
2019-05-30 16:50:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-30 16:50:28 -Starting service [Tomcat]
2019-05-30 16:50:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-30 16:50:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-30 16:50:29 -Initializing Spring embedded WebApplicationContext
2019-05-30 16:50:29 -Root WebApplicationContext: initialization completed in 24185 ms
2019-05-30 16:50:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-30 16:50:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-30 16:50:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-30 16:50:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-30 16:50:30 -Filter xssFilter was not registered (disabled)
2019-05-30 16:50:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-30 16:50:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-30 16:50:30 -Servlet statViewServlet mapped to [/druid/*]
2019-05-30 16:50:30 -Servlet dispatcherServlet mapped to [/]
2019-05-30 16:50:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3234f74e: startup date [Thu May 30 16:50:05 CST 2019]; root of context hierarchy
2019-05-30 16:50:36 -Using default implementation for ThreadExecutor
2019-05-30 16:50:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-30 16:50:37 -Quartz Scheduler v.2.2.1 created.
2019-05-30 16:50:37 -RAMJobStore initialized.
2019-05-30 16:50:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-30 16:50:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-30 16:50:37 -Quartz scheduler version: 2.2.1
2019-05-30 16:50:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@49f6c25e
2019-05-30 16:50:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-30 16:50:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-30 16:50:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-30 16:50:41 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 16:50:41 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-30 16:50:41 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 16:50:41 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-30 16:50:41 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-30 16:50:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-30 16:50:41 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 16:50:41 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 16:50:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-30 16:50:41 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 16:50:41 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-30 16:50:41 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 16:50:41 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-30 16:50:41 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-30 16:50:41 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 16:50:41 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-30 16:50:41 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 16:50:41 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-30 16:50:41 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 16:50:41 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 16:50:41 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-30 16:50:41 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 16:50:41 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-30 16:50:41 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-30 16:50:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-30 16:50:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-30 16:50:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-30 16:50:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-30 16:50:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-30 16:50:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-30 16:50:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-30 16:50:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-30 16:50:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-30 16:50:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-30 16:50:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-30 16:50:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-30 16:50:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 16:50:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-30 16:50:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 16:50:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-30 16:50:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-30 16:50:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-30 16:50:41 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-30 16:50:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-30 16:50:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-30 16:50:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-30 16:50:41 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-30 16:50:41 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-30 16:50:41 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 16:50:41 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 16:50:41 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-30 16:50:41 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-30 16:50:41 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 16:50:41 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-30 16:50:41 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-30 16:50:41 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-30 16:50:41 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-30 16:50:41 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-30 16:50:41 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-30 16:50:41 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 16:50:41 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-30 16:50:41 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-30 16:50:41 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-30 16:50:41 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-30 16:50:41 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-30 16:50:41 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-30 16:50:41 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-30 16:50:41 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 16:50:41 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-30 16:50:41 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-30 16:50:41 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 16:50:41 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 16:50:41 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-30 16:50:41 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 16:50:41 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-30 16:50:41 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-30 16:50:41 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-30 16:50:41 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-30 16:50:41 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-30 16:50:41 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-30 16:50:41 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-30 16:50:41 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-30 16:50:41 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 16:50:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-30 16:50:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-30 16:50:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-30 16:50:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-30 16:50:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-30 16:50:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-30 16:50:41 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-30 16:50:41 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-30 16:50:41 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-30 16:50:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-30 16:50:41 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-30 16:50:41 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-30 16:50:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-30 16:50:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-30 16:50:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-30 16:50:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-30 16:50:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-30 16:50:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-30 16:50:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-30 16:50:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-30 16:50:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-30 16:50:42 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-30 16:50:42 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-30 16:50:42 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-30 16:50:42 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 16:50:42 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:42 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-30 16:50:42 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-30 16:50:42 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-30 16:50:42 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:42 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-30 16:50:42 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-30 16:50:42 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-30 16:50:42 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 16:50:42 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-30 16:50:42 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-30 16:50:42 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-30 16:50:42 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-30 16:50:42 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-30 16:50:42 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-30 16:50:42 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-30 16:50:42 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-30 16:50:42 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:42 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-30 16:50:42 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-30 16:50:42 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-30 16:50:42 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-30 16:50:42 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:42 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-30 16:50:42 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-30 16:50:42 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-30 16:50:42 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:42 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-30 16:50:42 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-30 16:50:42 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-30 16:50:42 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 16:50:42 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-30 16:50:42 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-30 16:50:42 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-30 16:50:42 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 16:50:42 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-30 16:50:42 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 16:50:42 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:42 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 16:50:42 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-30 16:50:42 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-30 16:50:42 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-30 16:50:42 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-30 16:50:42 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-30 16:50:42 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:42 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-30 16:50:42 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:42 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-30 16:50:42 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:42 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 16:50:42 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-30 16:50:42 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:42 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-30 16:50:42 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-30 16:50:42 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-30 16:50:42 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 16:50:42 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 16:50:42 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 16:50:42 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-30 16:50:42 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 16:50:42 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-30 16:50:42 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 16:50:42 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 16:50:42 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-30 16:50:42 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 16:50:42 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-30 16:50:42 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-30 16:50:42 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-30 16:50:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-30 16:50:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-30 16:50:43 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-30 16:50:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 16:50:44 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3234f74e: startup date [Thu May 30 16:50:05 CST 2019]; root of context hierarchy
2019-05-30 16:50:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 16:50:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 16:50:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 16:50:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-30 16:50:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-30 16:50:49 -Registering beans for JMX exposure on startup
2019-05-30 16:50:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-30 16:50:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-30 16:50:49 -Starting beans in phase 2147483647
2019-05-30 16:50:49 -Context refreshed
2019-05-30 16:50:49 -Found 1 custom documentation plugin(s)
2019-05-30 16:50:50 -Scanning for api listing references
2019-05-30 16:50:50 -Generating unique operation named: getCountDUsingPOST_1
2019-05-30 16:50:51 -Generating unique operation named: removeUsingPOST_1
2019-05-30 16:50:51 -Generating unique operation named: addUsingGET_1
2019-05-30 16:50:51 -Generating unique operation named: editUsingGET_1
2019-05-30 16:50:51 -Generating unique operation named: listUsingGET_1
2019-05-30 16:50:51 -Generating unique operation named: removeUsingPOST_2
2019-05-30 16:50:51 -Generating unique operation named: removeUsingPOST_3
2019-05-30 16:50:51 -Generating unique operation named: saveUsingPOST_1
2019-05-30 16:50:51 -Generating unique operation named: updateUsingGET_1
2019-05-30 16:50:51 -Generating unique operation named: updateUsingHEAD_1
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPOST_1
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPUT_1
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPATCH_1
2019-05-30 16:50:51 -Generating unique operation named: updateUsingDELETE_1
2019-05-30 16:50:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-30 16:50:51 -Generating unique operation named: updateUsingTRACE_1
2019-05-30 16:50:51 -Generating unique operation named: addUsingGET_2
2019-05-30 16:50:51 -Generating unique operation named: editUsingGET_2
2019-05-30 16:50:51 -Generating unique operation named: listUsingGET_2
2019-05-30 16:50:51 -Generating unique operation named: removeUsingPOST_4
2019-05-30 16:50:51 -Generating unique operation named: removeUsingPOST_5
2019-05-30 16:50:51 -Generating unique operation named: saveUsingPOST_2
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPOST_2
2019-05-30 16:50:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-30 16:50:51 -Generating unique operation named: addUsingGET_3
2019-05-30 16:50:51 -Generating unique operation named: editUsingGET_3
2019-05-30 16:50:51 -Generating unique operation named: listUsingGET_3
2019-05-30 16:50:51 -Generating unique operation named: removeUsingPOST_6
2019-05-30 16:50:51 -Generating unique operation named: removeUsingPOST_7
2019-05-30 16:50:51 -Generating unique operation named: saveUsingPOST_3
2019-05-30 16:50:51 -Generating unique operation named: updateUsingGET_2
2019-05-30 16:50:51 -Generating unique operation named: updateUsingHEAD_2
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPOST_3
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPUT_2
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPATCH_2
2019-05-30 16:50:51 -Generating unique operation named: updateUsingDELETE_2
2019-05-30 16:50:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-30 16:50:51 -Generating unique operation named: updateUsingTRACE_2
2019-05-30 16:50:51 -Generating unique operation named: addUsingGET_4
2019-05-30 16:50:51 -Generating unique operation named: editUsingGET_4
2019-05-30 16:50:51 -Generating unique operation named: listUsingGET_4
2019-05-30 16:50:51 -Generating unique operation named: removeUsingPOST_8
2019-05-30 16:50:51 -Generating unique operation named: removeUsingPOST_9
2019-05-30 16:50:51 -Generating unique operation named: saveUsingPOST_4
2019-05-30 16:50:51 -Generating unique operation named: updateUsingGET_3
2019-05-30 16:50:51 -Generating unique operation named: updateUsingHEAD_3
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPOST_4
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPUT_3
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPATCH_3
2019-05-30 16:50:51 -Generating unique operation named: updateUsingDELETE_3
2019-05-30 16:50:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-30 16:50:51 -Generating unique operation named: updateUsingTRACE_3
2019-05-30 16:50:51 -Generating unique operation named: ElecUsingGET_1
2019-05-30 16:50:51 -Generating unique operation named: addUsingGET_5
2019-05-30 16:50:51 -Generating unique operation named: editUsingGET_5
2019-05-30 16:50:51 -Generating unique operation named: listUsingGET_5
2019-05-30 16:50:51 -Generating unique operation named: removeUsingPOST_10
2019-05-30 16:50:51 -Generating unique operation named: removeUsingPOST_11
2019-05-30 16:50:51 -Generating unique operation named: saveUsingPOST_5
2019-05-30 16:50:51 -Generating unique operation named: updateUsingGET_4
2019-05-30 16:50:51 -Generating unique operation named: updateUsingHEAD_4
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPOST_5
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPUT_4
2019-05-30 16:50:51 -Generating unique operation named: updateUsingPATCH_4
2019-05-30 16:50:52 -Generating unique operation named: updateUsingDELETE_4
2019-05-30 16:50:52 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-30 16:50:52 -Generating unique operation named: updateUsingTRACE_4
2019-05-30 16:50:52 -Generating unique operation named: editUsingGET_6
2019-05-30 16:50:52 -Generating unique operation named: listUsingGET_6
2019-05-30 16:50:52 -Generating unique operation named: updateUsingPOST_6
2019-05-30 16:50:52 -Generating unique operation named: addUsingGET_6
2019-05-30 16:50:52 -Generating unique operation named: editUsingGET_7
2019-05-30 16:50:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-30 16:50:52 -Generating unique operation named: listUsingGET_7
2019-05-30 16:50:52 -Generating unique operation named: removeUsingPOST_12
2019-05-30 16:50:52 -Generating unique operation named: removeUsingPOST_13
2019-05-30 16:50:52 -Generating unique operation named: saveUsingPOST_6
2019-05-30 16:50:52 -Generating unique operation named: updateUsingGET_5
2019-05-30 16:50:52 -Generating unique operation named: updateUsingHEAD_5
2019-05-30 16:50:52 -Generating unique operation named: updateUsingPOST_7
2019-05-30 16:50:52 -Generating unique operation named: updateUsingPUT_5
2019-05-30 16:50:52 -Generating unique operation named: updateUsingPATCH_5
2019-05-30 16:50:52 -Generating unique operation named: updateUsingDELETE_5
2019-05-30 16:50:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-30 16:50:52 -Generating unique operation named: updateUsingTRACE_5
2019-05-30 16:50:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-30 16:50:52 -Generating unique operation named: addUsingGET_7
2019-05-30 16:50:52 -Generating unique operation named: editUsingGET_8
2019-05-30 16:50:52 -Generating unique operation named: listUsingGET_8
2019-05-30 16:50:52 -Generating unique operation named: removeUsingPOST_14
2019-05-30 16:50:52 -Generating unique operation named: removeUsingPOST_15
2019-05-30 16:50:52 -Generating unique operation named: saveUsingPOST_7
2019-05-30 16:50:52 -Generating unique operation named: updateUsingGET_6
2019-05-30 16:50:52 -Generating unique operation named: updateUsingHEAD_6
2019-05-30 16:50:52 -Generating unique operation named: updateUsingPOST_8
2019-05-30 16:50:52 -Generating unique operation named: updateUsingPUT_6
2019-05-30 16:50:52 -Generating unique operation named: updateUsingPATCH_6
2019-05-30 16:50:52 -Generating unique operation named: updateUsingDELETE_6
2019-05-30 16:50:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-30 16:50:52 -Generating unique operation named: updateUsingTRACE_6
2019-05-30 16:50:52 -Generating unique operation named: addUsingGET_8
2019-05-30 16:50:52 -Generating unique operation named: editUsingGET_9
2019-05-30 16:50:52 -Generating unique operation named: listUsingGET_9
2019-05-30 16:50:52 -Generating unique operation named: removeUsingPOST_16
2019-05-30 16:50:52 -Generating unique operation named: removeUsingPOST_17
2019-05-30 16:50:52 -Generating unique operation named: saveUsingPOST_8
2019-05-30 16:50:52 -Generating unique operation named: updateUsingGET_7
2019-05-30 16:50:52 -Generating unique operation named: updateUsingHEAD_7
2019-05-30 16:50:52 -Generating unique operation named: updateUsingPOST_9
2019-05-30 16:50:52 -Generating unique operation named: updateUsingPUT_7
2019-05-30 16:50:52 -Generating unique operation named: updateUsingPATCH_7
2019-05-30 16:50:52 -Generating unique operation named: updateUsingDELETE_7
2019-05-30 16:50:52 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-30 16:50:52 -Generating unique operation named: updateUsingTRACE_7
2019-05-30 16:50:52 -Generating unique operation named: addUsingGET_9
2019-05-30 16:50:52 -Generating unique operation named: editUsingGET_10
2019-05-30 16:50:52 -Generating unique operation named: infoUsingGET_1
2019-05-30 16:50:52 -Generating unique operation named: infoUsingHEAD_1
2019-05-30 16:50:52 -Generating unique operation named: infoUsingPOST_1
2019-05-30 16:50:52 -Generating unique operation named: infoUsingPUT_1
2019-05-30 16:50:52 -Generating unique operation named: infoUsingPATCH_1
2019-05-30 16:50:52 -Generating unique operation named: infoUsingDELETE_1
2019-05-30 16:50:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-30 16:50:52 -Generating unique operation named: infoUsingTRACE_1
2019-05-30 16:50:52 -Generating unique operation named: listUsingGET_10
2019-05-30 16:50:52 -Generating unique operation named: removeUsingPOST_18
2019-05-30 16:50:52 -Generating unique operation named: removeUsingPOST_19
2019-05-30 16:50:52 -Generating unique operation named: saveUsingPOST_9
2019-05-30 16:50:52 -Generating unique operation named: updateUsingPOST_10
2019-05-30 16:50:52 -Generating unique operation named: listUsingGET_11
2019-05-30 16:50:52 -Generating unique operation named: removeUsingPOST_20
2019-05-30 16:50:52 -Generating unique operation named: welcomeUsingGET_1
2019-05-30 16:50:52 -Generating unique operation named: addUsingGET_10
2019-05-30 16:50:52 -Generating unique operation named: editUsingGET_11
2019-05-30 16:50:52 -Generating unique operation named: listUsingGET_12
2019-05-30 16:50:52 -Generating unique operation named: removeUsingPOST_21
2019-05-30 16:50:52 -Generating unique operation named: saveUsingPOST_10
2019-05-30 16:50:52 -Generating unique operation named: treeUsingGET_1
2019-05-30 16:50:52 -Generating unique operation named: treeUsingGET_2
2019-05-30 16:50:52 -Generating unique operation named: updateUsingPOST_11
2019-05-30 16:50:52 -Generating unique operation named: addUsingGET_11
2019-05-30 16:50:52 -Generating unique operation named: editUsingGET_12
2019-05-30 16:50:52 -Generating unique operation named: listUsingGET_13
2019-05-30 16:50:52 -Generating unique operation named: removeUsingPOST_22
2019-05-30 16:50:52 -Generating unique operation named: removeUsingPOST_23
2019-05-30 16:50:53 -Generating unique operation named: updateUsingPOST_12
2019-05-30 16:50:53 -Generating unique operation named: addUsingGET_12
2019-05-30 16:50:53 -Generating unique operation named: editUsingGET_13
2019-05-30 16:50:53 -Generating unique operation named: listUsingGET_14
2019-05-30 16:50:53 -Generating unique operation named: removeUsingPOST_24
2019-05-30 16:50:53 -Generating unique operation named: removeUsingPOST_25
2019-05-30 16:50:53 -Generating unique operation named: saveUsingPOST_11
2019-05-30 16:50:53 -Generating unique operation named: updateUsingGET_8
2019-05-30 16:50:53 -Generating unique operation named: updateUsingHEAD_8
2019-05-30 16:50:53 -Generating unique operation named: updateUsingPOST_13
2019-05-30 16:50:53 -Generating unique operation named: updateUsingPUT_8
2019-05-30 16:50:53 -Generating unique operation named: updateUsingPATCH_8
2019-05-30 16:50:53 -Generating unique operation named: updateUsingDELETE_8
2019-05-30 16:50:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-30 16:50:53 -Generating unique operation named: updateUsingTRACE_8
2019-05-30 16:50:53 -Generating unique operation named: addUsingGET_13
2019-05-30 16:50:53 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-30 16:50:53 -Generating unique operation named: editUsingGET_14
2019-05-30 16:50:53 -Generating unique operation named: listUsingGET_15
2019-05-30 16:50:53 -Generating unique operation named: printEditUsingGET_1
2019-05-30 16:50:53 -Generating unique operation named: removeUsingPOST_26
2019-05-30 16:50:53 -Generating unique operation named: saveUsingPOST_12
2019-05-30 16:50:53 -Generating unique operation named: updateUsingGET_9
2019-05-30 16:50:53 -Generating unique operation named: updateUsingHEAD_9
2019-05-30 16:50:53 -Generating unique operation named: updateUsingPOST_14
2019-05-30 16:50:53 -Generating unique operation named: updateUsingPUT_9
2019-05-30 16:50:53 -Generating unique operation named: updateUsingPATCH_9
2019-05-30 16:50:53 -Generating unique operation named: updateUsingDELETE_9
2019-05-30 16:50:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-30 16:50:53 -Generating unique operation named: updateUsingTRACE_9
2019-05-30 16:50:53 -Generating unique operation named: addUsingGET_14
2019-05-30 16:50:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-30 16:50:53 -Generating unique operation named: editUsingGET_15
2019-05-30 16:50:53 -Generating unique operation named: listUsingGET_16
2019-05-30 16:50:53 -Generating unique operation named: saveUsingPOST_13
2019-05-30 16:50:53 -Generating unique operation named: saveUsingPOST_14
2019-05-30 16:50:53 -Generating unique operation named: updateUsingPOST_15
2019-05-30 16:50:53 -Generating unique operation named: listUsingGET_17
2019-05-30 16:50:53 -Generating unique operation named: listUsingHEAD_1
2019-05-30 16:50:53 -Generating unique operation named: listUsingPOST_1
2019-05-30 16:50:53 -Generating unique operation named: listUsingPUT_1
2019-05-30 16:50:53 -Generating unique operation named: listUsingPATCH_1
2019-05-30 16:50:53 -Generating unique operation named: listUsingDELETE_1
2019-05-30 16:50:53 -Generating unique operation named: listUsingOPTIONS_1
2019-05-30 16:50:53 -Generating unique operation named: listUsingTRACE_1
2019-05-30 16:50:53 -Generating unique operation named: countDDUsingGET_1
2019-05-30 16:50:53 -Generating unique operation named: exportDDUsingGET_1
2019-05-30 16:50:53 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-30 16:50:53 -Generating unique operation named: addUsingGET_15
2019-05-30 16:50:53 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-30 16:50:53 -Generating unique operation named: editUsingGET_16
2019-05-30 16:50:54 -Generating unique operation named: listUsingGET_18
2019-05-30 16:50:54 -Generating unique operation named: removeUsingPOST_27
2019-05-30 16:50:54 -Generating unique operation named: saveUsingPOST_15
2019-05-30 16:50:54 -Generating unique operation named: treeUsingGET_3
2019-05-30 16:50:54 -Generating unique operation named: treeViewUsingGET_1
2019-05-30 16:50:54 -Generating unique operation named: updateUsingPOST_16
2019-05-30 16:50:54 -Generating unique operation named: addUsingGET_16
2019-05-30 16:50:54 -Generating unique operation named: editUsingGET_17
2019-05-30 16:50:54 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-30 16:50:54 -Generating unique operation named: listUsingGET_19
2019-05-30 16:50:54 -Generating unique operation named: removeUsingPOST_28
2019-05-30 16:50:54 -Generating unique operation named: removeUsingPOST_29
2019-05-30 16:50:54 -Generating unique operation named: saveUsingPOST_16
2019-05-30 16:50:54 -Generating unique operation named: updateUsingGET_10
2019-05-30 16:50:54 -Generating unique operation named: updateUsingHEAD_10
2019-05-30 16:50:54 -Generating unique operation named: updateUsingPOST_17
2019-05-30 16:50:54 -Generating unique operation named: updateUsingPUT_10
2019-05-30 16:50:54 -Generating unique operation named: updateUsingPATCH_10
2019-05-30 16:50:54 -Generating unique operation named: updateUsingDELETE_10
2019-05-30 16:50:54 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-30 16:50:54 -Generating unique operation named: updateUsingTRACE_10
2019-05-30 16:50:54 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-30 16:50:54 -Generating unique operation named: addUsingGET_17
2019-05-30 16:50:54 -Generating unique operation named: editUsingGET_18
2019-05-30 16:50:54 -Generating unique operation named: listUsingGET_20
2019-05-30 16:50:54 -Generating unique operation named: removeUsingPOST_30
2019-05-30 16:50:54 -Generating unique operation named: removeUsingPOST_31
2019-05-30 16:50:54 -Generating unique operation named: saveUsingPOST_17
2019-05-30 16:50:54 -Generating unique operation named: updateUsingGET_11
2019-05-30 16:50:54 -Generating unique operation named: updateUsingHEAD_11
2019-05-30 16:50:54 -Generating unique operation named: updateUsingPOST_18
2019-05-30 16:50:54 -Generating unique operation named: updateUsingPUT_11
2019-05-30 16:50:54 -Generating unique operation named: updateUsingPATCH_11
2019-05-30 16:50:54 -Generating unique operation named: updateUsingDELETE_11
2019-05-30 16:50:54 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-30 16:50:54 -Generating unique operation named: updateUsingTRACE_11
2019-05-30 16:50:54 -Generating unique operation named: addUsingGET_18
2019-05-30 16:50:54 -Generating unique operation named: editUsingGET_19
2019-05-30 16:50:54 -Generating unique operation named: listUsingGET_21
2019-05-30 16:50:54 -Generating unique operation named: removeUsingPOST_32
2019-05-30 16:50:54 -Generating unique operation named: removeUsingPOST_33
2019-05-30 16:50:54 -Generating unique operation named: saveUsingPOST_18
2019-05-30 16:50:54 -Generating unique operation named: updateUsingGET_12
2019-05-30 16:50:54 -Generating unique operation named: updateUsingHEAD_12
2019-05-30 16:50:54 -Generating unique operation named: updateUsingPOST_19
2019-05-30 16:50:54 -Generating unique operation named: updateUsingPUT_12
2019-05-30 16:50:54 -Generating unique operation named: updateUsingPATCH_12
2019-05-30 16:50:54 -Generating unique operation named: updateUsingDELETE_12
2019-05-30 16:50:54 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-30 16:50:54 -Generating unique operation named: updateUsingTRACE_12
2019-05-30 16:50:54 -Starting Quartz Scheduler now
2019-05-30 16:50:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-30 16:50:54 -Starting...
2019-05-30 16:50:54 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-30 16:50:54 -Started.
2019-05-30 16:50:54 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-30 16:50:54 -Using a shared selector for servlet write/read
2019-05-30 16:50:54 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-30 16:50:54 -Started BootdoApplication in 60.267 seconds (JVM running for 61.873)
2019-05-30 16:50:55 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-30 16:50:56 -==> Parameters: 
2019-05-30 16:50:57 -<==      Total: 1
2019-05-30 16:51:43 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-30 16:52:22 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-30 16:52:22 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-30 16:52:22 -FrameworkServlet 'dispatcherServlet': initialization completed in 103 ms
2019-05-30 16:52:23 -Enabling session validation scheduler...
2019-05-30 16:52:25 -请求地址 : http://localhost:8081/login;JSESSIONID=6733ec83-0eb3-4f45-9716-60e9646be468
2019-05-30 16:52:25 -请求地址 : http://localhost:8081/login;JSESSIONID=48e159a0-6861-4939-8eb4-9a833b781e53
2019-05-30 16:52:25 -HTTP METHOD : GET
2019-05-30 16:52:25 -HTTP METHOD : GET
2019-05-30 16:52:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 16:52:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 16:52:25 -参数 : [{}]
2019-05-30 16:52:25 -参数 : [{}]
2019-05-30 16:52:25 -耗时 : 5
2019-05-30 16:52:25 -耗时 : 5
2019-05-30 16:52:25 -返回值 : login
2019-05-30 16:52:25 -返回值 : login
2019-05-30 16:52:28 -请求地址 : http://localhost:8081/login;JSESSIONID=48e159a0-6861-4939-8eb4-9a833b781e53
2019-05-30 16:52:28 -HTTP METHOD : GET
2019-05-30 16:52:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 16:52:28 -参数 : [{}]
2019-05-30 16:52:28 -耗时 : 1
2019-05-30 16:52:28 -返回值 : login
2019-05-30 16:52:28 -请求地址 : http://localhost:8081/getVerify
2019-05-30 16:52:28 -HTTP METHOD : GET
2019-05-30 16:52:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 16:52:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@c0e1a48, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c9f5b9]
2019-05-30 16:52:30 -请求地址 : http://localhost:8081/getVerify
2019-05-30 16:52:30 -HTTP METHOD : GET
2019-05-30 16:52:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 16:52:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4244be7d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4c835845]
2019-05-30 16:52:53 -9767
2019-05-30 16:52:53 -5518
2019-05-30 16:52:54 -耗时 : 24158
2019-05-30 16:52:54 -返回值 : null
2019-05-30 16:52:54 -耗时 : 25532
2019-05-30 16:52:54 -返回值 : null
2019-05-30 16:56:20 -请求地址 : http://localhost:8081/login;JSESSIONID=e60dfaff-eef3-4bb2-9882-a542ddd99337
2019-05-30 16:56:20 -HTTP METHOD : GET
2019-05-30 16:56:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 16:56:20 -参数 : [{}]
2019-05-30 16:56:20 -耗时 : 0
2019-05-30 16:56:20 -返回值 : login
2019-05-30 16:56:22 -请求地址 : http://localhost:8081/getVerify
2019-05-30 16:56:22 -HTTP METHOD : GET
2019-05-30 16:56:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 16:56:22 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ab536ad, org.apache.shiro.web.servlet.ShiroHttpServletResponse@d168f80]
2019-05-30 16:56:22 -9468
2019-05-30 16:56:22 -耗时 : 7
2019-05-30 16:56:22 -返回值 : null
2019-05-30 16:56:30 -请求地址 : http://localhost:8081/login
2019-05-30 16:56:30 -HTTP METHOD : POST
2019-05-30 16:56:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-30 16:56:30 -参数 : [admin, 111111, 9468, org.apache.shiro.web.servlet.ShiroHttpServletRequest@543d6588]
2019-05-30 16:56:30 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-30 16:56:30 -==> Parameters: admin(String)
2019-05-30 16:56:31 -<==      Total: 1
2019-05-30 16:56:31 -耗时 : 1219
2019-05-30 16:56:31 -返回值 : {msg=操作成功, code=0}
2019-05-30 16:56:32 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-30 16:56:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 16:56:32 -==> Parameters: 1(Long), admin(String), 登录(String), 1219(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-30 16:56:32.247(Timestamp)
2019-05-30 16:56:33 -<==    Updates: 1
2019-05-30 16:56:33 -请求地址 : http://localhost:8081/index
2019-05-30 16:56:33 -HTTP METHOD : GET
2019-05-30 16:56:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 16:56:33 -参数 : [{}]
2019-05-30 16:56:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 16:56:35 -==> Parameters: 1(Long)
2019-05-30 16:56:36 -<==      Total: 50
2019-05-30 16:56:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 16:56:36 -==> Parameters: 138(Long)
2019-05-30 16:56:36 -<==      Total: 1
2019-05-30 16:56:36 -耗时 : 3070
2019-05-30 16:56:36 -返回值 : index_v1
2019-05-30 16:56:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 16:56:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 3070(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 16:56:37.414(Timestamp)
2019-05-30 16:56:37 -<==    Updates: 1
2019-05-30 16:56:37 -请求地址 : http://localhost:8081/main
2019-05-30 16:56:37 -HTTP METHOD : GET
2019-05-30 16:56:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 16:56:37 -参数 : []
2019-05-30 16:56:37 -耗时 : 0
2019-05-30 16:56:37 -返回值 : main
2019-05-30 16:56:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 16:56:40 -HTTP METHOD : GET
2019-05-30 16:56:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 16:56:40 -参数 : []
2019-05-30 16:56:40 -请求地址 : http://localhost:8081/main
2019-05-30 16:56:40 -HTTP METHOD : GET
2019-05-30 16:56:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 16:56:40 -参数 : []
2019-05-30 16:56:40 -耗时 : 1
2019-05-30 16:56:40 -返回值 : main
2019-05-30 16:56:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 16:56:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 16:56:41 -<==      Total: 0
2019-05-30 16:56:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 16:56:41 -==> Parameters: 1(Long), 0(String)
2019-05-30 16:56:41 -<==      Total: 1
2019-05-30 16:56:41 -耗时 : 1331
2019-05-30 16:56:41 -返回值 : com.bootdo.common.utils.PageUtils@58a08705
2019-05-30 16:58:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 16:58:05 -==> Parameters: 1(Long)
2019-05-30 16:58:05 -<==      Total: 94
2019-05-30 16:58:05 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-30 16:58:05 -HTTP METHOD : GET
2019-05-30 16:58:05 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-30 16:58:05 -参数 : []
2019-05-30 16:58:05 -耗时 : 91
2019-05-30 16:58:05 -返回值 : charts/tableDD
2019-05-30 16:58:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 16:58:22 -HTTP METHOD : GET
2019-05-30 16:58:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 16:58:22 -参数 : []
2019-05-30 16:58:22 -耗时 : 0
2019-05-30 16:58:22 -返回值 : system/dept/deptTree
2019-05-30 16:58:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 16:58:23 -HTTP METHOD : GET
2019-05-30 16:58:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 16:58:23 -参数 : []
2019-05-30 16:58:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 16:58:23 -==> Parameters: 
2019-05-30 16:58:23 -<==      Total: 3
2019-05-30 16:58:23 -耗时 : 166
2019-05-30 16:58:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 16:58:56 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-30 16:58:56 -HTTP METHOD : POST
2019-05-30 16:58:56 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-30 16:58:56 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5c8babb4, com.bootdo.moneyLog.vo.WaterLogVo@4d0312e1, com.bootdo.moneyLog.vo.HeatLogVo@1b5e6726]
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:58:57 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:58:57 -<==      Total: 1
2019-05-30 16:58:57 -耗时 : 905
2019-05-30 16:58:57 -返回值 : {WelecLogSumC=0.00, GelecLogCountC=0, TelecLogSumC=0.00, MheatLogCountC=0, TelecLogSumA=0.00, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, WJSum=0.00, SheatLogCountA=0, SelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, SwaterLogSumC=0.00, YXSum=0.00, YXGelecLogSumC=0.00, YXGelecLogSumA=0.00, SwaterLogSumA=0.00, Xtotal=0, MwaterLogSumA=0.00, SwaterLogCountC=0, MwaterLogSumC=0.00, SelecLogSumA=0.00, SelecLogSumC=0.00, Wsum=0.00, SwaterLogCountA=0, Wtotal=0, MelecLogSumC=0.00, MelecLogSumA=0.00, waterLogCountC=0, MwaterLogCountC=0, MwaterLogCountA=0, YXGelecLogCountC=0, YXGelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, Xsum=0.00, MheatLogSumA=0.00, MheatLogSumC=0.00, SelecLogCountC=0, WJTotal=0, GelecLogSumA=0.00, YXTotal=0, SheatLogSumA=0.00, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0.00, waterLogCountA=0, waterLogSumC=0.00, waterLogSumA=0.00, WelecLogSumA=0.00, SheatLogSumC=0.00}
2019-05-30 16:59:17 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-30 16:59:17 -HTTP METHOD : POST
2019-05-30 16:59:17 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-30 16:59:17 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@b880fee, com.bootdo.moneyLog.vo.WaterLogVo@3c663a4e, com.bootdo.moneyLog.vo.HeatLogVo@31bd8b62]
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:17 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:17 -<==      Total: 1
2019-05-30 16:59:17 -耗时 : 129
2019-05-30 16:59:17 -返回值 : {WelecLogSumC=0.00, GelecLogCountC=0, TelecLogSumC=0.00, MheatLogCountC=0, TelecLogSumA=0.00, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, WJSum=0.00, SheatLogCountA=0, SelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, SwaterLogSumC=0.00, YXSum=0.00, YXGelecLogSumC=0.00, YXGelecLogSumA=0.00, SwaterLogSumA=0.00, Xtotal=0, MwaterLogSumA=0.00, SwaterLogCountC=0, MwaterLogSumC=0.00, SelecLogSumA=0.00, SelecLogSumC=0.00, Wsum=0.00, SwaterLogCountA=0, Wtotal=0, MelecLogSumC=0.00, MelecLogSumA=0.00, waterLogCountC=0, MwaterLogCountC=0, MwaterLogCountA=0, YXGelecLogCountC=0, YXGelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, Xsum=0.00, MheatLogSumA=0.00, MheatLogSumC=0.00, SelecLogCountC=0, WJTotal=0, GelecLogSumA=0.00, YXTotal=0, SheatLogSumA=0.00, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0.00, waterLogCountA=0, waterLogSumC=0.00, waterLogSumA=0.00, WelecLogSumA=0.00, SheatLogSumC=0.00}
2019-05-30 16:59:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 16:59:18 -HTTP METHOD : GET
2019-05-30 16:59:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 16:59:18 -参数 : []
2019-05-30 16:59:18 -耗时 : 1
2019-05-30 16:59:18 -返回值 : system/dept/deptTree
2019-05-30 16:59:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 16:59:19 -HTTP METHOD : GET
2019-05-30 16:59:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 16:59:19 -参数 : []
2019-05-30 16:59:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 16:59:19 -==> Parameters: 
2019-05-30 16:59:19 -<==      Total: 3
2019-05-30 16:59:19 -耗时 : 5
2019-05-30 16:59:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 16:59:20 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-30 16:59:20 -HTTP METHOD : POST
2019-05-30 16:59:20 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-30 16:59:20 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6b9474f7, com.bootdo.moneyLog.vo.WaterLogVo@eb34c53, com.bootdo.moneyLog.vo.HeatLogVo@7b4b6481]
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:20 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:20 -<==      Total: 1
2019-05-30 16:59:20 -耗时 : 194
2019-05-30 16:59:20 -返回值 : {WelecLogSumC=0.00, GelecLogCountC=0, TelecLogSumC=0.00, MheatLogCountC=0, TelecLogSumA=0.00, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, WJSum=0.00, SheatLogCountA=0, SelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, SwaterLogSumC=0.00, YXSum=0.00, YXGelecLogSumC=0.00, YXGelecLogSumA=0.00, SwaterLogSumA=0.00, Xtotal=0, MwaterLogSumA=0.00, SwaterLogCountC=0, MwaterLogSumC=0.00, SelecLogSumA=0.00, SelecLogSumC=0.00, Wsum=0.00, SwaterLogCountA=0, Wtotal=0, MelecLogSumC=0.00, MelecLogSumA=0.00, waterLogCountC=0, MwaterLogCountC=0, MwaterLogCountA=0, YXGelecLogCountC=0, YXGelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, Xsum=0.00, MheatLogSumA=0.00, MheatLogSumC=0.00, SelecLogCountC=0, WJTotal=0, GelecLogSumA=0.00, YXTotal=0, SheatLogSumA=0.00, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0.00, waterLogCountA=0, waterLogSumC=0.00, waterLogSumA=0.00, WelecLogSumA=0.00, SheatLogSumC=0.00}
2019-05-30 16:59:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 16:59:23 -HTTP METHOD : GET
2019-05-30 16:59:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 16:59:23 -参数 : []
2019-05-30 16:59:23 -耗时 : 0
2019-05-30 16:59:23 -返回值 : system/dept/deptTree
2019-05-30 16:59:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 16:59:23 -HTTP METHOD : GET
2019-05-30 16:59:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 16:59:23 -参数 : []
2019-05-30 16:59:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 16:59:23 -==> Parameters: 
2019-05-30 16:59:23 -<==      Total: 3
2019-05-30 16:59:23 -耗时 : 4
2019-05-30 16:59:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 16:59:25 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-30 16:59:25 -HTTP METHOD : POST
2019-05-30 16:59:25 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-30 16:59:25 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@a0f7019, com.bootdo.moneyLog.vo.WaterLogVo@4d2445aa, com.bootdo.moneyLog.vo.HeatLogVo@ae1dc73]
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:25 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:25 -<==      Total: 1
2019-05-30 16:59:25 -耗时 : 125
2019-05-30 16:59:25 -返回值 : {WelecLogSumC=0.00, GelecLogCountC=0, TelecLogSumC=0.00, MheatLogCountC=0, TelecLogSumA=0.00, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, WJSum=0.00, SheatLogCountA=0, SelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, SwaterLogSumC=0.00, YXSum=0.00, YXGelecLogSumC=0.00, YXGelecLogSumA=0.00, SwaterLogSumA=0.00, Xtotal=0, MwaterLogSumA=0.00, SwaterLogCountC=0, MwaterLogSumC=0.00, SelecLogSumA=0.00, SelecLogSumC=0.00, Wsum=0.00, SwaterLogCountA=0, Wtotal=0, MelecLogSumC=0.00, MelecLogSumA=0.00, waterLogCountC=0, MwaterLogCountC=0, MwaterLogCountA=0, YXGelecLogCountC=0, YXGelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, Xsum=0.00, MheatLogSumA=0.00, MheatLogSumC=0.00, SelecLogCountC=0, WJTotal=0, GelecLogSumA=0.00, YXTotal=0, SheatLogSumA=0.00, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0.00, waterLogCountA=0, waterLogSumC=0.00, waterLogSumA=0.00, WelecLogSumA=0.00, SheatLogSumC=0.00}
2019-05-30 16:59:26 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-30 16:59:26 -HTTP METHOD : POST
2019-05-30 16:59:26 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-30 16:59:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4b7fda72, com.bootdo.moneyLog.vo.WaterLogVo@38c8c6b7, com.bootdo.moneyLog.vo.HeatLogVo@1e17ca3c]
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:26 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:26 -<==      Total: 1
2019-05-30 16:59:26 -耗时 : 304
2019-05-30 16:59:26 -返回值 : {WelecLogSumC=0.00, GelecLogCountC=0, TelecLogSumC=0.00, MheatLogCountC=0, TelecLogSumA=0.00, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, WJSum=0.00, SheatLogCountA=0, SelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, SwaterLogSumC=0.00, YXSum=0.00, YXGelecLogSumC=0.00, YXGelecLogSumA=0.00, SwaterLogSumA=0.00, Xtotal=0, MwaterLogSumA=0.00, SwaterLogCountC=0, MwaterLogSumC=0.00, SelecLogSumA=0.00, SelecLogSumC=0.00, Wsum=0.00, SwaterLogCountA=0, Wtotal=0, MelecLogSumC=0.00, MelecLogSumA=0.00, waterLogCountC=0, MwaterLogCountC=0, MwaterLogCountA=0, YXGelecLogCountC=0, YXGelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, Xsum=0.00, MheatLogSumA=0.00, MheatLogSumC=0.00, SelecLogCountC=0, WJTotal=0, GelecLogSumA=0.00, YXTotal=0, SheatLogSumA=0.00, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0.00, waterLogCountA=0, waterLogSumC=0.00, waterLogSumA=0.00, WelecLogSumA=0.00, SheatLogSumC=0.00}
2019-05-30 16:59:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 16:59:31 -HTTP METHOD : GET
2019-05-30 16:59:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 16:59:31 -参数 : []
2019-05-30 16:59:31 -耗时 : 1
2019-05-30 16:59:31 -返回值 : system/dept/deptTree
2019-05-30 16:59:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 16:59:31 -HTTP METHOD : GET
2019-05-30 16:59:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 16:59:31 -参数 : []
2019-05-30 16:59:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 16:59:31 -==> Parameters: 
2019-05-30 16:59:31 -<==      Total: 3
2019-05-30 16:59:31 -耗时 : 5
2019-05-30 16:59:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 16:59:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 16:59:33 -HTTP METHOD : GET
2019-05-30 16:59:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 16:59:33 -参数 : []
2019-05-30 16:59:33 -耗时 : 0
2019-05-30 16:59:33 -返回值 : system/dept/deptTree
2019-05-30 16:59:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 16:59:33 -HTTP METHOD : GET
2019-05-30 16:59:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 16:59:33 -参数 : []
2019-05-30 16:59:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 16:59:33 -==> Parameters: 
2019-05-30 16:59:33 -<==      Total: 3
2019-05-30 16:59:33 -耗时 : 3
2019-05-30 16:59:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 16:59:35 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-30 16:59:35 -HTTP METHOD : POST
2019-05-30 16:59:35 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-30 16:59:35 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3d0a6bd1, com.bootdo.moneyLog.vo.WaterLogVo@236dd3d9, com.bootdo.moneyLog.vo.HeatLogVo@3df3ae97]
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:35 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 3(String)
2019-05-30 16:59:35 -<==      Total: 1
2019-05-30 16:59:35 -耗时 : 458
2019-05-30 16:59:35 -返回值 : {WelecLogSumC=0.00, GelecLogCountC=0, TelecLogSumC=0.00, MheatLogCountC=0, TelecLogSumA=0.00, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, WJSum=0.00, SheatLogCountA=0, SelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, SwaterLogSumC=0.00, YXSum=0.00, YXGelecLogSumC=0.00, YXGelecLogSumA=0.00, SwaterLogSumA=0.00, Xtotal=0, MwaterLogSumA=0.00, SwaterLogCountC=0, MwaterLogSumC=0.00, SelecLogSumA=0.00, SelecLogSumC=0.00, Wsum=0.00, SwaterLogCountA=0, Wtotal=0, MelecLogSumC=0.00, MelecLogSumA=0.00, waterLogCountC=0, MwaterLogCountC=0, MwaterLogCountA=0, YXGelecLogCountC=0, YXGelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, Xsum=0.00, MheatLogSumA=0.00, MheatLogSumC=0.00, SelecLogCountC=0, WJTotal=0, GelecLogSumA=0.00, YXTotal=0, SheatLogSumA=0.00, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0.00, waterLogCountA=0, waterLogSumC=0.00, waterLogSumA=0.00, WelecLogSumA=0.00, SheatLogSumC=0.00}
2019-05-30 16:59:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 16:59:37 -HTTP METHOD : GET
2019-05-30 16:59:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 16:59:37 -参数 : []
2019-05-30 16:59:37 -耗时 : 0
2019-05-30 16:59:37 -返回值 : system/dept/deptTree
2019-05-30 16:59:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 16:59:37 -HTTP METHOD : GET
2019-05-30 16:59:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 16:59:37 -参数 : []
2019-05-30 16:59:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 16:59:37 -==> Parameters: 
2019-05-30 16:59:37 -<==      Total: 3
2019-05-30 16:59:37 -耗时 : 17
2019-05-30 16:59:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 16:59:38 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-30 16:59:38 -HTTP METHOD : POST
2019-05-30 16:59:38 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-30 16:59:38 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@156a054, com.bootdo.moneyLog.vo.WaterLogVo@57452318, com.bootdo.moneyLog.vo.HeatLogVo@3f16e36]
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 16:59:38 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 16:59:38 -<==      Total: 1
2019-05-30 16:59:38 -耗时 : 110
2019-05-30 16:59:38 -返回值 : {WelecLogSumC=0.00, GelecLogCountC=0, TelecLogSumC=0.00, MheatLogCountC=0, TelecLogSumA=0.00, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, WJSum=0.00, SheatLogCountA=0, SelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, SwaterLogSumC=0.00, YXSum=0.00, YXGelecLogSumC=0.00, YXGelecLogSumA=0.00, SwaterLogSumA=0.00, Xtotal=0, MwaterLogSumA=0.00, SwaterLogCountC=0, MwaterLogSumC=0.00, SelecLogSumA=0.00, SelecLogSumC=0.00, Wsum=0.00, SwaterLogCountA=0, Wtotal=0, MelecLogSumC=0.00, MelecLogSumA=0.00, waterLogCountC=0, MwaterLogCountC=0, MwaterLogCountA=0, YXGelecLogCountC=0, YXGelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, Xsum=0.00, MheatLogSumA=0.00, MheatLogSumC=0.00, SelecLogCountC=0, WJTotal=0, GelecLogSumA=0.00, YXTotal=0, SheatLogSumA=0.00, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0.00, waterLogCountA=0, waterLogSumC=0.00, waterLogSumA=0.00, WelecLogSumA=0.00, SheatLogSumC=0.00}
2019-05-30 17:00:32 -请求地址 : http://localhost:8081/index
2019-05-30 17:00:32 -HTTP METHOD : GET
2019-05-30 17:00:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 17:00:32 -参数 : [{}]
2019-05-30 17:00:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 17:00:32 -==> Parameters: 1(Long)
2019-05-30 17:00:32 -<==      Total: 50
2019-05-30 17:00:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 17:00:32 -==> Parameters: 138(Long)
2019-05-30 17:00:32 -<==      Total: 1
2019-05-30 17:00:32 -耗时 : 82
2019-05-30 17:00:32 -返回值 : index_v1
2019-05-30 17:00:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:00:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 82(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 17:00:32.976(Timestamp)
2019-05-30 17:00:33 -请求地址 : http://localhost:8081/main
2019-05-30 17:00:33 -HTTP METHOD : GET
2019-05-30 17:00:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:00:33 -参数 : []
2019-05-30 17:00:33 -耗时 : 1
2019-05-30 17:00:33 -返回值 : main
2019-05-30 17:00:33 -<==    Updates: 1
2019-05-30 17:00:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 17:00:33 -HTTP METHOD : GET
2019-05-30 17:00:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 17:00:33 -参数 : []
2019-05-30 17:00:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 17:00:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 17:00:33 -<==      Total: 0
2019-05-30 17:00:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 17:00:33 -==> Parameters: 1(Long), 0(String)
2019-05-30 17:00:33 -<==      Total: 1
2019-05-30 17:00:33 -耗时 : 49
2019-05-30 17:00:33 -返回值 : com.bootdo.common.utils.PageUtils@465b7c
2019-05-30 17:00:33 -请求地址 : http://localhost:8081/main
2019-05-30 17:00:33 -HTTP METHOD : GET
2019-05-30 17:00:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:00:33 -参数 : []
2019-05-30 17:00:33 -耗时 : 0
2019-05-30 17:00:33 -返回值 : main
2019-05-30 17:00:36 -请求地址 : http://localhost:8081/charts/countMM
2019-05-30 17:00:36 -HTTP METHOD : GET
2019-05-30 17:00:36 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-30 17:00:36 -参数 : []
2019-05-30 17:00:36 -耗时 : 14
2019-05-30 17:00:36 -返回值 : charts/countMM
2019-05-30 17:00:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 17:00:37 -HTTP METHOD : GET
2019-05-30 17:00:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 17:00:37 -参数 : [userType]
2019-05-30 17:00:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 17:00:37 -==> Parameters: userType(String)
2019-05-30 17:00:37 -<==      Total: 4
2019-05-30 17:00:37 -耗时 : 111
2019-05-30 17:00:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 17:00:37 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-30 17:00:37 -HTTP METHOD : GET
2019-05-30 17:00:37 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-30 17:00:37 -参数 : []
2019-05-30 17:00:37 -耗时 : 0
2019-05-30 17:00:37 -返回值 : charts/tableDD
2019-05-30 17:00:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 17:00:44 -HTTP METHOD : GET
2019-05-30 17:00:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 17:00:44 -参数 : []
2019-05-30 17:00:44 -耗时 : 0
2019-05-30 17:00:44 -返回值 : system/dept/deptTree
2019-05-30 17:00:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 17:00:45 -HTTP METHOD : GET
2019-05-30 17:00:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 17:00:45 -参数 : []
2019-05-30 17:00:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 17:00:45 -==> Parameters: 
2019-05-30 17:00:45 -<==      Total: 3
2019-05-30 17:00:45 -耗时 : 3
2019-05-30 17:00:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 17:00:47 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-30 17:00:47 -HTTP METHOD : POST
2019-05-30 17:00:47 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-30 17:00:47 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@715f4e69, com.bootdo.moneyLog.vo.WaterLogVo@1832afc3, com.bootdo.moneyLog.vo.HeatLogVo@46ba0a7d]
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "3" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type = "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "A" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and water_type != "1" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-30 17:00:47 -==> Parameters: 2019-05-27 00:00:00(String), 2019-05-27 23:59:59(String), 2(String)
2019-05-30 17:00:47 -<==      Total: 1
2019-05-30 17:00:47 -耗时 : 216
2019-05-30 17:00:47 -返回值 : {WelecLogSumC=0.00, GelecLogCountC=0, TelecLogSumC=0.00, MheatLogCountC=0, TelecLogSumA=0.00, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, WJSum=60.00, SheatLogCountA=0, SelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, SwaterLogSumC=0.00, YXSum=60.00, YXGelecLogSumC=0.00, YXGelecLogSumA=0.00, SwaterLogSumA=0.00, Xtotal=2, MwaterLogSumA=0.00, SwaterLogCountC=0, MwaterLogSumC=0.00, SelecLogSumA=0.00, SelecLogSumC=40.00, Wsum=40.00, SwaterLogCountA=0, Wtotal=2, MelecLogSumC=0.00, MelecLogSumA=20.00, waterLogCountC=0, MwaterLogCountC=0, MwaterLogCountA=0, YXGelecLogCountC=0, YXGelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, Xsum=20.00, MheatLogSumA=0.00, MheatLogSumC=0.00, SelecLogCountC=2, WJTotal=4, GelecLogSumA=0.00, YXTotal=4, SheatLogSumA=0.00, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0.00, waterLogCountA=0, waterLogSumC=0.00, waterLogSumA=0.00, WelecLogSumA=0.00, SheatLogSumC=0.00}
2019-05-30 17:12:48 -Starting BootdoApplication on PC-201905091110 with PID 25236 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-30 17:12:48 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-30 17:12:48 -The following profiles are active: dev
2019-05-30 17:12:48 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@773cbf4f: startup date [Thu May 30 17:12:48 CST 2019]; root of context hierarchy
2019-05-30 17:13:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-30 17:13:06 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b979dc92] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 17:13:06 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$abd30b39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 17:13:08 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 17:13:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 17:13:09 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 17:13:09 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-30 17:13:09 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-30 17:13:09 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 17:13:09 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 17:13:09 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 17:13:09 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 17:13:10 -Tomcat initialized with port(s): 8081 (http)
2019-05-30 17:13:10 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-30 17:13:11 -Starting service [Tomcat]
2019-05-30 17:13:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-30 17:13:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-30 17:13:11 -Initializing Spring embedded WebApplicationContext
2019-05-30 17:13:11 -Root WebApplicationContext: initialization completed in 22596 ms
2019-05-30 17:13:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-30 17:13:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-30 17:13:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-30 17:13:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-30 17:13:12 -Filter xssFilter was not registered (disabled)
2019-05-30 17:13:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-30 17:13:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-30 17:13:12 -Servlet statViewServlet mapped to [/druid/*]
2019-05-30 17:13:12 -Servlet dispatcherServlet mapped to [/]
2019-05-30 17:13:17 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@773cbf4f: startup date [Thu May 30 17:12:48 CST 2019]; root of context hierarchy
2019-05-30 17:13:18 -Using default implementation for ThreadExecutor
2019-05-30 17:13:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-30 17:13:18 -Quartz Scheduler v.2.2.1 created.
2019-05-30 17:13:18 -RAMJobStore initialized.
2019-05-30 17:13:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-30 17:13:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-30 17:13:18 -Quartz scheduler version: 2.2.1
2019-05-30 17:13:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@446a5aa5
2019-05-30 17:13:18 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-30 17:13:18 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-30 17:13:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-30 17:13:23 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 17:13:23 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 17:13:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-30 17:13:23 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-30 17:13:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-30 17:13:23 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-30 17:13:23 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 17:13:23 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-30 17:13:23 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 17:13:23 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-30 17:13:23 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 17:13:23 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 17:13:23 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-30 17:13:23 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-30 17:13:23 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 17:13:23 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-30 17:13:23 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 17:13:23 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 17:13:23 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-30 17:13:23 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 17:13:23 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-30 17:13:23 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 17:13:23 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-30 17:13:23 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-30 17:13:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-30 17:13:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-30 17:13:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-30 17:13:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-30 17:13:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-30 17:13:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-30 17:13:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-30 17:13:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-30 17:13:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-30 17:13:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-30 17:13:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-30 17:13:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-30 17:13:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 17:13:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 17:13:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-30 17:13:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-30 17:13:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-30 17:13:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-30 17:13:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-30 17:13:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-30 17:13:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-30 17:13:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-30 17:13:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-30 17:13:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-30 17:13:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 17:13:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 17:13:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-30 17:13:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-30 17:13:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 17:13:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-30 17:13:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-30 17:13:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-30 17:13:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-30 17:13:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-30 17:13:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-30 17:13:23 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-30 17:13:23 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 17:13:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-30 17:13:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-30 17:13:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-30 17:13:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-30 17:13:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-30 17:13:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-30 17:13:23 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 17:13:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-30 17:13:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-30 17:13:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 17:13:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 17:13:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-30 17:13:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-30 17:13:23 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-30 17:13:23 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-30 17:13:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-30 17:13:23 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-30 17:13:23 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-30 17:13:23 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-30 17:13:23 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-30 17:13:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-30 17:13:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-30 17:13:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-30 17:13:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-30 17:13:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-30 17:13:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-30 17:13:23 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-30 17:13:23 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-30 17:13:23 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-30 17:13:23 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-30 17:13:23 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-30 17:13:23 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-30 17:13:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-30 17:13:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-30 17:13:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-30 17:13:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-30 17:13:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-30 17:13:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-30 17:13:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-30 17:13:23 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 17:13:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-30 17:13:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-30 17:13:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-30 17:13:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-30 17:13:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-30 17:13:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-30 17:13:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-30 17:13:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-30 17:13:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-30 17:13:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-30 17:13:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-30 17:13:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-30 17:13:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-30 17:13:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-30 17:13:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-30 17:13:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-30 17:13:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 17:13:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 17:13:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-30 17:13:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 17:13:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-30 17:13:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-30 17:13:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-30 17:13:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-30 17:13:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-30 17:13:23 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 17:13:23 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-30 17:13:23 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-30 17:13:23 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-30 17:13:23 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-30 17:13:23 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 17:13:23 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 17:13:23 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 17:13:23 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-30 17:13:23 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 17:13:23 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-30 17:13:23 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-30 17:13:23 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 17:13:23 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 17:13:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 17:13:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-30 17:13:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-30 17:13:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-30 17:13:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-30 17:13:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-30 17:13:24 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-30 17:13:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 17:13:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@773cbf4f: startup date [Thu May 30 17:12:48 CST 2019]; root of context hierarchy
2019-05-30 17:13:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 17:13:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 17:13:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 17:13:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-30 17:13:26 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-30 17:13:29 -Registering beans for JMX exposure on startup
2019-05-30 17:13:29 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-30 17:13:29 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-30 17:13:29 -Starting beans in phase 2147483647
2019-05-30 17:13:29 -Context refreshed
2019-05-30 17:13:29 -Found 1 custom documentation plugin(s)
2019-05-30 17:13:29 -Scanning for api listing references
2019-05-30 17:13:30 -Generating unique operation named: getCountDUsingPOST_1
2019-05-30 17:13:30 -Generating unique operation named: removeUsingPOST_1
2019-05-30 17:13:30 -Generating unique operation named: addUsingGET_1
2019-05-30 17:13:31 -Generating unique operation named: editUsingGET_1
2019-05-30 17:13:31 -Generating unique operation named: listUsingGET_1
2019-05-30 17:13:31 -Generating unique operation named: removeUsingPOST_2
2019-05-30 17:13:31 -Generating unique operation named: removeUsingPOST_3
2019-05-30 17:13:31 -Generating unique operation named: saveUsingPOST_1
2019-05-30 17:13:31 -Generating unique operation named: updateUsingGET_1
2019-05-30 17:13:31 -Generating unique operation named: updateUsingHEAD_1
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPOST_1
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPUT_1
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPATCH_1
2019-05-30 17:13:31 -Generating unique operation named: updateUsingDELETE_1
2019-05-30 17:13:31 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-30 17:13:31 -Generating unique operation named: updateUsingTRACE_1
2019-05-30 17:13:31 -Generating unique operation named: addUsingGET_2
2019-05-30 17:13:31 -Generating unique operation named: editUsingGET_2
2019-05-30 17:13:31 -Generating unique operation named: listUsingGET_2
2019-05-30 17:13:31 -Generating unique operation named: removeUsingPOST_4
2019-05-30 17:13:31 -Generating unique operation named: removeUsingPOST_5
2019-05-30 17:13:31 -Generating unique operation named: saveUsingPOST_2
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPOST_2
2019-05-30 17:13:31 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-30 17:13:31 -Generating unique operation named: addUsingGET_3
2019-05-30 17:13:31 -Generating unique operation named: editUsingGET_3
2019-05-30 17:13:31 -Generating unique operation named: listUsingGET_3
2019-05-30 17:13:31 -Generating unique operation named: removeUsingPOST_6
2019-05-30 17:13:31 -Generating unique operation named: removeUsingPOST_7
2019-05-30 17:13:31 -Generating unique operation named: saveUsingPOST_3
2019-05-30 17:13:31 -Generating unique operation named: updateUsingGET_2
2019-05-30 17:13:31 -Generating unique operation named: updateUsingHEAD_2
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPOST_3
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPUT_2
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPATCH_2
2019-05-30 17:13:31 -Generating unique operation named: updateUsingDELETE_2
2019-05-30 17:13:31 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-30 17:13:31 -Generating unique operation named: updateUsingTRACE_2
2019-05-30 17:13:31 -Generating unique operation named: addUsingGET_4
2019-05-30 17:13:31 -Generating unique operation named: editUsingGET_4
2019-05-30 17:13:31 -Generating unique operation named: listUsingGET_4
2019-05-30 17:13:31 -Generating unique operation named: removeUsingPOST_8
2019-05-30 17:13:31 -Generating unique operation named: removeUsingPOST_9
2019-05-30 17:13:31 -Generating unique operation named: saveUsingPOST_4
2019-05-30 17:13:31 -Generating unique operation named: updateUsingGET_3
2019-05-30 17:13:31 -Generating unique operation named: updateUsingHEAD_3
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPOST_4
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPUT_3
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPATCH_3
2019-05-30 17:13:31 -Generating unique operation named: updateUsingDELETE_3
2019-05-30 17:13:31 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-30 17:13:31 -Generating unique operation named: updateUsingTRACE_3
2019-05-30 17:13:31 -Generating unique operation named: ElecUsingGET_1
2019-05-30 17:13:31 -Generating unique operation named: addUsingGET_5
2019-05-30 17:13:31 -Generating unique operation named: editUsingGET_5
2019-05-30 17:13:31 -Generating unique operation named: listUsingGET_5
2019-05-30 17:13:31 -Generating unique operation named: removeUsingPOST_10
2019-05-30 17:13:31 -Generating unique operation named: removeUsingPOST_11
2019-05-30 17:13:31 -Generating unique operation named: saveUsingPOST_5
2019-05-30 17:13:31 -Generating unique operation named: updateUsingGET_4
2019-05-30 17:13:31 -Generating unique operation named: updateUsingHEAD_4
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPOST_5
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPUT_4
2019-05-30 17:13:31 -Generating unique operation named: updateUsingPATCH_4
2019-05-30 17:13:31 -Generating unique operation named: updateUsingDELETE_4
2019-05-30 17:13:31 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-30 17:13:31 -Generating unique operation named: updateUsingTRACE_4
2019-05-30 17:13:31 -Generating unique operation named: editUsingGET_6
2019-05-30 17:13:31 -Generating unique operation named: listUsingGET_6
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPOST_6
2019-05-30 17:13:32 -Generating unique operation named: addUsingGET_6
2019-05-30 17:13:32 -Generating unique operation named: editUsingGET_7
2019-05-30 17:13:32 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-30 17:13:32 -Generating unique operation named: listUsingGET_7
2019-05-30 17:13:32 -Generating unique operation named: removeUsingPOST_12
2019-05-30 17:13:32 -Generating unique operation named: removeUsingPOST_13
2019-05-30 17:13:32 -Generating unique operation named: saveUsingPOST_6
2019-05-30 17:13:32 -Generating unique operation named: updateUsingGET_5
2019-05-30 17:13:32 -Generating unique operation named: updateUsingHEAD_5
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPOST_7
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPUT_5
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPATCH_5
2019-05-30 17:13:32 -Generating unique operation named: updateUsingDELETE_5
2019-05-30 17:13:32 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-30 17:13:32 -Generating unique operation named: updateUsingTRACE_5
2019-05-30 17:13:32 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-30 17:13:32 -Generating unique operation named: addUsingGET_7
2019-05-30 17:13:32 -Generating unique operation named: editUsingGET_8
2019-05-30 17:13:32 -Generating unique operation named: listUsingGET_8
2019-05-30 17:13:32 -Generating unique operation named: removeUsingPOST_14
2019-05-30 17:13:32 -Generating unique operation named: removeUsingPOST_15
2019-05-30 17:13:32 -Generating unique operation named: saveUsingPOST_7
2019-05-30 17:13:32 -Generating unique operation named: updateUsingGET_6
2019-05-30 17:13:32 -Generating unique operation named: updateUsingHEAD_6
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPOST_8
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPUT_6
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPATCH_6
2019-05-30 17:13:32 -Generating unique operation named: updateUsingDELETE_6
2019-05-30 17:13:32 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-30 17:13:32 -Generating unique operation named: updateUsingTRACE_6
2019-05-30 17:13:32 -Generating unique operation named: addUsingGET_8
2019-05-30 17:13:32 -Generating unique operation named: editUsingGET_9
2019-05-30 17:13:32 -Generating unique operation named: listUsingGET_9
2019-05-30 17:13:32 -Generating unique operation named: removeUsingPOST_16
2019-05-30 17:13:32 -Generating unique operation named: removeUsingPOST_17
2019-05-30 17:13:32 -Generating unique operation named: saveUsingPOST_8
2019-05-30 17:13:32 -Generating unique operation named: updateUsingGET_7
2019-05-30 17:13:32 -Generating unique operation named: updateUsingHEAD_7
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPOST_9
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPUT_7
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPATCH_7
2019-05-30 17:13:32 -Generating unique operation named: updateUsingDELETE_7
2019-05-30 17:13:32 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-30 17:13:32 -Generating unique operation named: updateUsingTRACE_7
2019-05-30 17:13:32 -Generating unique operation named: addUsingGET_9
2019-05-30 17:13:32 -Generating unique operation named: editUsingGET_10
2019-05-30 17:13:32 -Generating unique operation named: infoUsingGET_1
2019-05-30 17:13:32 -Generating unique operation named: infoUsingHEAD_1
2019-05-30 17:13:32 -Generating unique operation named: infoUsingPOST_1
2019-05-30 17:13:32 -Generating unique operation named: infoUsingPUT_1
2019-05-30 17:13:32 -Generating unique operation named: infoUsingPATCH_1
2019-05-30 17:13:32 -Generating unique operation named: infoUsingDELETE_1
2019-05-30 17:13:32 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-30 17:13:32 -Generating unique operation named: infoUsingTRACE_1
2019-05-30 17:13:32 -Generating unique operation named: listUsingGET_10
2019-05-30 17:13:32 -Generating unique operation named: removeUsingPOST_18
2019-05-30 17:13:32 -Generating unique operation named: removeUsingPOST_19
2019-05-30 17:13:32 -Generating unique operation named: saveUsingPOST_9
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPOST_10
2019-05-30 17:13:32 -Generating unique operation named: listUsingGET_11
2019-05-30 17:13:32 -Generating unique operation named: removeUsingPOST_20
2019-05-30 17:13:32 -Generating unique operation named: welcomeUsingGET_1
2019-05-30 17:13:32 -Generating unique operation named: addUsingGET_10
2019-05-30 17:13:32 -Generating unique operation named: editUsingGET_11
2019-05-30 17:13:32 -Generating unique operation named: listUsingGET_12
2019-05-30 17:13:32 -Generating unique operation named: removeUsingPOST_21
2019-05-30 17:13:32 -Generating unique operation named: saveUsingPOST_10
2019-05-30 17:13:32 -Generating unique operation named: treeUsingGET_1
2019-05-30 17:13:32 -Generating unique operation named: treeUsingGET_2
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPOST_11
2019-05-30 17:13:32 -Generating unique operation named: addUsingGET_11
2019-05-30 17:13:32 -Generating unique operation named: editUsingGET_12
2019-05-30 17:13:32 -Generating unique operation named: listUsingGET_13
2019-05-30 17:13:32 -Generating unique operation named: removeUsingPOST_22
2019-05-30 17:13:32 -Generating unique operation named: removeUsingPOST_23
2019-05-30 17:13:32 -Generating unique operation named: updateUsingPOST_12
2019-05-30 17:13:32 -Generating unique operation named: addUsingGET_12
2019-05-30 17:13:32 -Generating unique operation named: editUsingGET_13
2019-05-30 17:13:32 -Generating unique operation named: listUsingGET_14
2019-05-30 17:13:33 -Generating unique operation named: removeUsingPOST_24
2019-05-30 17:13:33 -Generating unique operation named: removeUsingPOST_25
2019-05-30 17:13:33 -Generating unique operation named: saveUsingPOST_11
2019-05-30 17:13:33 -Generating unique operation named: updateUsingGET_8
2019-05-30 17:13:33 -Generating unique operation named: updateUsingHEAD_8
2019-05-30 17:13:33 -Generating unique operation named: updateUsingPOST_13
2019-05-30 17:13:33 -Generating unique operation named: updateUsingPUT_8
2019-05-30 17:13:33 -Generating unique operation named: updateUsingPATCH_8
2019-05-30 17:13:33 -Generating unique operation named: updateUsingDELETE_8
2019-05-30 17:13:33 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-30 17:13:33 -Generating unique operation named: updateUsingTRACE_8
2019-05-30 17:13:33 -Generating unique operation named: addUsingGET_13
2019-05-30 17:13:33 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-30 17:13:33 -Generating unique operation named: editUsingGET_14
2019-05-30 17:13:33 -Generating unique operation named: listUsingGET_15
2019-05-30 17:13:33 -Generating unique operation named: printEditUsingGET_1
2019-05-30 17:13:33 -Generating unique operation named: removeUsingPOST_26
2019-05-30 17:13:33 -Generating unique operation named: saveUsingPOST_12
2019-05-30 17:13:33 -Generating unique operation named: updateUsingGET_9
2019-05-30 17:13:33 -Generating unique operation named: updateUsingHEAD_9
2019-05-30 17:13:33 -Generating unique operation named: updateUsingPOST_14
2019-05-30 17:13:33 -Generating unique operation named: updateUsingPUT_9
2019-05-30 17:13:33 -Generating unique operation named: updateUsingPATCH_9
2019-05-30 17:13:33 -Generating unique operation named: updateUsingDELETE_9
2019-05-30 17:13:33 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-30 17:13:33 -Generating unique operation named: updateUsingTRACE_9
2019-05-30 17:13:33 -Generating unique operation named: addUsingGET_14
2019-05-30 17:13:33 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-30 17:13:33 -Generating unique operation named: editUsingGET_15
2019-05-30 17:13:33 -Generating unique operation named: listUsingGET_16
2019-05-30 17:13:33 -Generating unique operation named: saveUsingPOST_13
2019-05-30 17:13:33 -Generating unique operation named: saveUsingPOST_14
2019-05-30 17:13:33 -Generating unique operation named: updateUsingPOST_15
2019-05-30 17:13:33 -Generating unique operation named: listUsingGET_17
2019-05-30 17:13:33 -Generating unique operation named: listUsingHEAD_1
2019-05-30 17:13:33 -Generating unique operation named: listUsingPOST_1
2019-05-30 17:13:33 -Generating unique operation named: listUsingPUT_1
2019-05-30 17:13:33 -Generating unique operation named: listUsingPATCH_1
2019-05-30 17:13:33 -Generating unique operation named: listUsingDELETE_1
2019-05-30 17:13:33 -Generating unique operation named: listUsingOPTIONS_1
2019-05-30 17:13:33 -Generating unique operation named: listUsingTRACE_1
2019-05-30 17:13:33 -Generating unique operation named: countDDUsingGET_1
2019-05-30 17:13:33 -Generating unique operation named: exportDDUsingGET_1
2019-05-30 17:13:33 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-30 17:13:33 -Generating unique operation named: addUsingGET_15
2019-05-30 17:13:33 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-30 17:13:33 -Generating unique operation named: editUsingGET_16
2019-05-30 17:13:33 -Generating unique operation named: listUsingGET_18
2019-05-30 17:13:33 -Generating unique operation named: removeUsingPOST_27
2019-05-30 17:13:33 -Generating unique operation named: saveUsingPOST_15
2019-05-30 17:13:33 -Generating unique operation named: treeUsingGET_3
2019-05-30 17:13:33 -Generating unique operation named: treeViewUsingGET_1
2019-05-30 17:13:33 -Generating unique operation named: updateUsingPOST_16
2019-05-30 17:13:33 -Generating unique operation named: addUsingGET_16
2019-05-30 17:13:33 -Generating unique operation named: editUsingGET_17
2019-05-30 17:13:33 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-30 17:13:34 -Generating unique operation named: listUsingGET_19
2019-05-30 17:13:34 -Generating unique operation named: removeUsingPOST_28
2019-05-30 17:13:34 -Generating unique operation named: removeUsingPOST_29
2019-05-30 17:13:34 -Generating unique operation named: saveUsingPOST_16
2019-05-30 17:13:34 -Generating unique operation named: updateUsingGET_10
2019-05-30 17:13:34 -Generating unique operation named: updateUsingHEAD_10
2019-05-30 17:13:34 -Generating unique operation named: updateUsingPOST_17
2019-05-30 17:13:34 -Generating unique operation named: updateUsingPUT_10
2019-05-30 17:13:34 -Generating unique operation named: updateUsingPATCH_10
2019-05-30 17:13:34 -Generating unique operation named: updateUsingDELETE_10
2019-05-30 17:13:34 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-30 17:13:34 -Generating unique operation named: updateUsingTRACE_10
2019-05-30 17:13:34 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-30 17:13:34 -Generating unique operation named: addUsingGET_17
2019-05-30 17:13:34 -Generating unique operation named: editUsingGET_18
2019-05-30 17:13:34 -Generating unique operation named: listUsingGET_20
2019-05-30 17:13:34 -Generating unique operation named: removeUsingPOST_30
2019-05-30 17:13:34 -Generating unique operation named: removeUsingPOST_31
2019-05-30 17:13:34 -Generating unique operation named: saveUsingPOST_17
2019-05-30 17:13:34 -Generating unique operation named: updateUsingGET_11
2019-05-30 17:13:34 -Generating unique operation named: updateUsingHEAD_11
2019-05-30 17:13:34 -Generating unique operation named: updateUsingPOST_18
2019-05-30 17:13:34 -Generating unique operation named: updateUsingPUT_11
2019-05-30 17:13:34 -Generating unique operation named: updateUsingPATCH_11
2019-05-30 17:13:34 -Generating unique operation named: updateUsingDELETE_11
2019-05-30 17:13:34 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-30 17:13:34 -Generating unique operation named: updateUsingTRACE_11
2019-05-30 17:13:34 -Generating unique operation named: addUsingGET_18
2019-05-30 17:13:34 -Generating unique operation named: editUsingGET_19
2019-05-30 17:13:34 -Generating unique operation named: listUsingGET_21
2019-05-30 17:13:34 -Generating unique operation named: removeUsingPOST_32
2019-05-30 17:13:34 -Generating unique operation named: removeUsingPOST_33
2019-05-30 17:13:34 -Generating unique operation named: saveUsingPOST_18
2019-05-30 17:13:34 -Generating unique operation named: updateUsingGET_12
2019-05-30 17:13:34 -Generating unique operation named: updateUsingHEAD_12
2019-05-30 17:13:34 -Generating unique operation named: updateUsingPOST_19
2019-05-30 17:13:34 -Generating unique operation named: updateUsingPUT_12
2019-05-30 17:13:34 -Generating unique operation named: updateUsingPATCH_12
2019-05-30 17:13:34 -Generating unique operation named: updateUsingDELETE_12
2019-05-30 17:13:34 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-30 17:13:34 -Generating unique operation named: updateUsingTRACE_12
2019-05-30 17:13:34 -Starting Quartz Scheduler now
2019-05-30 17:13:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-30 17:13:34 -Starting...
2019-05-30 17:13:34 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-30 17:13:34 -Started.
2019-05-30 17:13:34 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-30 17:13:34 -Using a shared selector for servlet write/read
2019-05-30 17:13:34 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-30 17:13:34 -Started BootdoApplication in 48.947 seconds (JVM running for 50.88)
2019-05-30 17:13:34 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-30 17:13:35 -==> Parameters: 
2019-05-30 17:13:35 -<==      Total: 1
2019-05-30 17:14:24 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-30 17:15:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-30 17:15:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-30 17:15:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 118 ms
2019-05-30 17:15:05 -Enabling session validation scheduler...
2019-05-30 17:15:05 -请求地址 : http://localhost:8081/login;JSESSIONID=273711e2-aec2-4a51-9147-80ba9396c6ca
2019-05-30 17:15:05 -HTTP METHOD : GET
2019-05-30 17:15:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 17:15:05 -参数 : [{}]
2019-05-30 17:15:05 -耗时 : 4
2019-05-30 17:15:05 -返回值 : login
2019-05-30 17:15:07 -请求地址 : http://localhost:8081/getVerify
2019-05-30 17:15:07 -HTTP METHOD : GET
2019-05-30 17:15:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 17:15:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@55c49b3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@21e43cdf]
2019-05-30 17:15:12 -4726
2019-05-30 17:15:12 -耗时 : 5510
2019-05-30 17:15:12 -返回值 : null
2019-05-30 17:15:22 -请求地址 : http://localhost:8081/login
2019-05-30 17:15:22 -HTTP METHOD : POST
2019-05-30 17:15:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-30 17:15:22 -参数 : [admin, 111111, 4726, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5da83d6c]
2019-05-30 17:15:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-30 17:15:22 -==> Parameters: admin(String)
2019-05-30 17:15:22 -<==      Total: 1
2019-05-30 17:15:22 -耗时 : 263
2019-05-30 17:15:22 -返回值 : {msg=操作成功, code=0}
2019-05-30 17:15:22 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-30 17:15:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:15:22 -==> Parameters: 1(Long), admin(String), 登录(String), 264(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-30 17:15:22.849(Timestamp)
2019-05-30 17:15:23 -<==    Updates: 1
2019-05-30 17:15:23 -请求地址 : http://localhost:8081/index
2019-05-30 17:15:23 -HTTP METHOD : GET
2019-05-30 17:15:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 17:15:23 -参数 : [{}]
2019-05-30 17:15:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 17:15:23 -==> Parameters: 1(Long)
2019-05-30 17:15:23 -<==      Total: 50
2019-05-30 17:15:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 17:15:23 -==> Parameters: 138(Long)
2019-05-30 17:15:23 -<==      Total: 1
2019-05-30 17:15:23 -耗时 : 500
2019-05-30 17:15:23 -返回值 : index_v1
2019-05-30 17:15:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:15:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 500(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 17:15:24.011(Timestamp)
2019-05-30 17:15:24 -<==    Updates: 1
2019-05-30 17:15:24 -请求地址 : http://localhost:8081/main
2019-05-30 17:15:24 -HTTP METHOD : GET
2019-05-30 17:15:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:15:24 -参数 : []
2019-05-30 17:15:24 -耗时 : 1
2019-05-30 17:15:24 -返回值 : main
2019-05-30 17:15:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 17:15:24 -HTTP METHOD : GET
2019-05-30 17:15:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 17:15:24 -参数 : []
2019-05-30 17:15:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 17:15:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 17:15:24 -<==      Total: 0
2019-05-30 17:15:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 17:15:24 -==> Parameters: 1(Long), 0(String)
2019-05-30 17:15:24 -<==      Total: 1
2019-05-30 17:15:24 -耗时 : 88
2019-05-30 17:15:24 -返回值 : com.bootdo.common.utils.PageUtils@292a3c96
2019-05-30 17:15:24 -请求地址 : http://localhost:8081/main
2019-05-30 17:15:24 -HTTP METHOD : GET
2019-05-30 17:15:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:15:24 -参数 : []
2019-05-30 17:15:24 -耗时 : 0
2019-05-30 17:15:24 -返回值 : main
2019-05-30 17:16:37 -请求地址 : http://localhost:8081/getVerify
2019-05-30 17:16:37 -HTTP METHOD : GET
2019-05-30 17:16:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 17:16:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4cf1f12a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36445f27]
2019-05-30 17:16:37 -0473
2019-05-30 17:16:37 -耗时 : 13
2019-05-30 17:16:37 -返回值 : null
2019-05-30 17:16:38 -请求地址 : http://localhost:8081/main
2019-05-30 17:16:38 -HTTP METHOD : GET
2019-05-30 17:16:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:16:38 -参数 : []
2019-05-30 17:16:38 -耗时 : 1
2019-05-30 17:16:38 -返回值 : main
2019-05-30 17:16:41 -请求地址 : http://localhost:8081/index
2019-05-30 17:16:41 -HTTP METHOD : GET
2019-05-30 17:16:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 17:16:41 -参数 : [{}]
2019-05-30 17:16:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 17:16:41 -==> Parameters: 1(Long)
2019-05-30 17:16:41 -<==      Total: 50
2019-05-30 17:16:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 17:16:41 -==> Parameters: 138(Long)
2019-05-30 17:16:41 -<==      Total: 1
2019-05-30 17:16:41 -耗时 : 125
2019-05-30 17:16:41 -返回值 : index_v1
2019-05-30 17:16:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:16:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 125(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 17:16:41.278(Timestamp)
2019-05-30 17:16:41 -请求地址 : http://localhost:8081/main
2019-05-30 17:16:41 -HTTP METHOD : GET
2019-05-30 17:16:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:16:41 -参数 : []
2019-05-30 17:16:41 -耗时 : 0
2019-05-30 17:16:41 -返回值 : main
2019-05-30 17:16:41 -<==    Updates: 1
2019-05-30 17:16:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 17:16:41 -HTTP METHOD : GET
2019-05-30 17:16:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 17:16:41 -参数 : []
2019-05-30 17:16:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 17:16:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 17:16:41 -<==      Total: 0
2019-05-30 17:16:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 17:16:41 -==> Parameters: 1(Long), 0(String)
2019-05-30 17:16:41 -<==      Total: 1
2019-05-30 17:16:41 -耗时 : 7
2019-05-30 17:16:41 -返回值 : com.bootdo.common.utils.PageUtils@7c8e11e8
2019-05-30 17:16:42 -请求地址 : http://localhost:8081/main
2019-05-30 17:16:42 -HTTP METHOD : GET
2019-05-30 17:16:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:16:42 -参数 : []
2019-05-30 17:16:42 -耗时 : 1
2019-05-30 17:16:42 -返回值 : main
2019-05-30 17:16:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 17:16:49 -==> Parameters: 1(Long)
2019-05-30 17:16:49 -<==      Total: 94
2019-05-30 17:16:49 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-30 17:16:49 -HTTP METHOD : GET
2019-05-30 17:16:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 17:16:49 -参数 : []
2019-05-30 17:16:49 -耗时 : 12
2019-05-30 17:16:49 -返回值 : charts/tableElecMM
2019-05-30 17:16:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 17:16:50 -HTTP METHOD : GET
2019-05-30 17:16:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 17:16:50 -参数 : [userType]
2019-05-30 17:16:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 17:16:50 -==> Parameters: userType(String)
2019-05-30 17:16:50 -<==      Total: 4
2019-05-30 17:16:50 -耗时 : 110
2019-05-30 17:16:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 17:16:51 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-30 17:16:51 -HTTP METHOD : GET
2019-05-30 17:16:51 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-30 17:16:51 -参数 : []
2019-05-30 17:16:51 -耗时 : 15
2019-05-30 17:16:51 -返回值 : charts/tableDD
2019-05-30 17:16:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 17:16:55 -HTTP METHOD : GET
2019-05-30 17:16:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 17:16:55 -参数 : []
2019-05-30 17:16:55 -耗时 : 1
2019-05-30 17:16:55 -返回值 : system/dept/deptTree
2019-05-30 17:16:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 17:16:55 -HTTP METHOD : GET
2019-05-30 17:16:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 17:16:55 -参数 : []
2019-05-30 17:16:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 17:16:55 -==> Parameters: 
2019-05-30 17:16:55 -<==      Total: 3
2019-05-30 17:16:55 -耗时 : 217
2019-05-30 17:16:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 17:16:57 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-30 17:16:57 -HTTP METHOD : POST
2019-05-30 17:16:57 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-30 17:16:57 -参数 : [com.bootdo.elec.vo.ElecVo@3d276491, com.bootdo.moneyLog.vo.ElecLogVo@5558d989]
2019-05-30 17:16:57 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:57 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:57 -<==      Total: 1
2019-05-30 17:16:57 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:57 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:57 -<==      Total: 1
2019-05-30 17:16:57 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:57 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:57 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-30 17:16:58 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-05-30 17:16:58 -<==      Total: 1
2019-05-30 17:16:58 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-30 17:16:58 -==> Parameters: 
2019-05-30 17:16:58 -<==      Total: 2
2019-05-30 17:16:58 -耗时 : 949
2019-05-30 17:16:58 -返回值 : {G1PreElecCountMMNew=0, WMOweElecSumMMNew=0.00, MSElecLogMMCount=0, G3TotalyuNew=0.00, MSPreElecSumMMNew=0.00, MSOweElecCountMMOld=0, TotalPreyuNew=0.00, WGTotalyuNew=0.00, TotalCostyu=0.00, SElecPrice=2.600, WSElecPrice=0.810, WGTotalhuOld=0, G2PreElecSumMMNew=0.00, G3TotalhuOld=0, WSPreElecSumMMOld=0.00, TotalOwehuNew=0, TotalCosthu=0, G1ElecAmountMM=0, G2ElecAmountMM=0, MSElecAmountMM=0, WMPreElecSumMMOld=0.00, MSTotalyuOld=0.00, G3ElecAmountMM=0, STotalhuNew=0, MTotalyuOld=0.00, WGPreElecCountMMOld=0, ZElecPrice=0.970, MMTotalhuNew=0, ZOweElecSumMMOld=0.00, MMPreElecCountMMNew=0, ZTotalyuOld=0.00, MMOweElecCountMMNew=0, WGElecPrice=0.970, WMTotalyuOld=0.00, G2OweElecCountMMOld=0, WSTotalhuNew=0, SElecLogMMSum=0.00, WGElecAmountMM=0, ZElecLogMMSum=0.00, G1PreElecSumMMNew=0.00, WMElecAmountMM=0, G3OweElecCountMMOld=0, MMElecCostMMCount=0, WGOweElecCountMMNew=0, MElecLogMMSum=0.00, MSPreElecCountMMOld=0, G1ElecCostMMSum=0.00, WSOweElecSumMMNew=0.00, G1ElecPrice=0.970, G1OweElecCountMMNew=0, WSOweElecCountMMNew=0, WGOweElecSumMMNew=0.00, G2ElecCostMMCount=0, WGElecCostMMCount=0, G3PreElecSumMMNew=0.00, WGPreElecSumMMOld=0.00, G2OweElecSumMMNew=0.00, G2TotalyuNew=0.00, G2PreElecCountMMNew=0, WSElecAmountMM=0, MMElecAmountMM=0, G2TotalhuOld=0, MOweElecSumMMOld=0.00, ZOweElecCountMMOld=0, MOweElecCountMMOld=0, WGElecLogMMCount=0, TotalAllyuOld=0.00, MMPreElecCountMMOld=0, ZOweElecCountMMNew=0, ZTotalyuNew=0.00, MSTotalhuOld=0, STotalyuNew=0.00, MMTotalyuNew=0.00, MMElecLogMMSum=0.00, ZPreElecSumMMOld=0.00, G2PreElecSumMMOld=0.00, WGTotalyuOld=0.00, MSOweElecCountMMNew=0, TotalPreyuOld=0.00, G3TotalyuOld=0.00, G1PreElecCountMMOld=0, STotalhuOld=0, G3PreElecCountMMOld=0, SPreElecSumMMOld=0.00, WGElecCostMMSum=0.00, MMTotalhuOld=0, MElecLogMMCount=0, MSTotalyuNew=0.00, MTotalhuNew=0, MTotalyuNew=0.00, G1TotalyuNew=0.00, WGPreElecCountMMNew=0, G3ElecPrice=0.400, ZTotalhuOld=0, G1PreElecSumMMOld=0.00, G3OweElecCountMMNew=0, G1TotalhuOld=0, WMElecCostMMCount=0, WGOweElecSumMMOld=0.00, MSPreElecCountMMNew=0, TotalOweyuNew=0.00, TotalPrehuOld=0, G3OweElecSumMMNew=0.00, MOweElecSumMMNew=0.00, WMPreElecCountMMNew=0, TotalOwehuOld=0, MSElecCostMMCount=0, MElecCostMMCount=0, WSPreElecCountMMNew=0, ZPreElecCountMMOld=0, WGPreElecSumMMNew=0.00, WSElecCostMMSum=0.00, G2TotalyuOld=0.00, G3ElecCostMMCount=0, TotalAllyuNew=0.00, MMPreElecSumMMNew=0.00, TotalAllhuOld=0, MMElecCostMMSum=0.00, MSElecLogMMSum=0.00, MSOweElecSumMMNew=0.00, STotalyuOld=0.00, ZElecCostMMCount=0, SPreElecCountMMOld=0, WMElecLogMMSum=0.00, ZElecAmountMM=0, WGElecLogMMSum=0.00, WMOweElecCountMMNew=0, MMTotalyuOld=0.00, WSElecLogMMCount=0, type=2, MSTotalhuNew=0, WSElecLogMMSum=0.00, WSTotalyuOld=0.00, SElecAmountMM=0, G2ElecLogMMCount=0, ZPreElecSumMMNew=0.00, MElecPrice=1.800, MPreElecSumMMNew=0.00, MMOweElecSumMMOld=0.00, TotalLogyu=0.00, ZTotalhuNew=0, SElecCostMMCount=0, WMElecPrice=0.465, SPreElecSumMMNew=0.00, TotalLoghu=0, G3PreElecCountMMNew=0, TotalOweyuOld=0.00, MMPreElecSumMMOld=0.00, G3OweElecSumMMOld=0.00, MTotalhuOld=0, ZOweElecSumMMNew=0.00, SOweElecSumMMNew=0.00, SElecCostMMSum=0.00, G1TotalyuOld=0.00, TotalPrehuNew=0, G3ElecCostMMSum=0.00, ZPreElecCountMMNew=0, WSPreElecCountMMOld=0, SOweElecCountMMOld=0, G1ElecLogMMSum=0.00, G3TotalhuNew=0, G3ElecLogMMSum=0.00, G1OweElecSumMMOld=0.00, PriceTotal=10.725, MElecCostMMSum=0.00, WMTotalhuNew=0, MPreElecCountMMNew=0, WMPreElecCountMMOld=0, WGTotalhuNew=0, G2ElecLogMMSum=0.00, MSOweElecSumMMOld=0.00, SElecLogMMCount=0, TotalAllhuNew=0, G3ElecLogMMCount=0, WSElecCostMMCount=0, WMOweElecSumMMOld=0.00, MSPreElecSumMMOld=0.00, SPreElecCountMMNew=0, G2TotalhuNew=0, WSPreElecSumMMNew=0.00, G2ElecCostMMSum=0.00, MMOweElecSumMMNew=0.00, MPreElecSumMMOld=0.00, MMElecLogMMCount=0, G2ElecPrice=0.465, WMElecLogMMCount=0, WSTotalyuNew=0.00, G1TotalhuNew=0, WMPreElecSumMMNew=0.00, WSOweElecSumMMOld=0.00, MMOweElecCountMMOld=0, ZElecCostMMSum=0.00, MMElecPrice=0.465, ZElecLogMMCount=0, MSElecCostMMSum=0.00, G2OweElecCountMMNew=0, WGOweElecCountMMOld=0, WMTotalyuNew=0.00, G1OweElecCountMMOld=0, G1ElecCostMMCount=0, MSElecPrice=0.810, AmountTotalMM=0, WMElecCostMMSum=0.00, WSTotalhuOld=0, SOweElecCountMMNew=0, WSOweElecCountMMOld=0, SOweElecSumMMOld=0.00, WMTotalhuOld=0, G3PreElecSumMMOld=0.00, G2PreElecCountMMOld=0, G2OweElecSumMMOld=0.00, MElecAmountMM=0, MPreElecCountMMOld=0, WMOweElecCountMMOld=0, MOweElecCountMMNew=0, G1OweElecSumMMNew=0.00, G1ElecLogMMCount=0}
2019-05-30 17:17:08 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-30 17:17:42 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-30 17:17:42 -HTTP METHOD : GET
2019-05-30 17:17:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-30 17:17:42 -参数 : []
2019-05-30 17:17:42 -耗时 : 1
2019-05-30 17:17:42 -返回值 : /moneyList/moneyList
2019-05-30 17:19:24 -请求地址 : http://localhost:8081/index
2019-05-30 17:19:24 -HTTP METHOD : GET
2019-05-30 17:19:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 17:19:24 -参数 : [{}]
2019-05-30 17:19:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 17:19:24 -==> Parameters: 1(Long)
2019-05-30 17:19:24 -<==      Total: 50
2019-05-30 17:19:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 17:19:24 -==> Parameters: 138(Long)
2019-05-30 17:19:24 -<==      Total: 1
2019-05-30 17:19:24 -耗时 : 55
2019-05-30 17:19:24 -返回值 : index_v1
2019-05-30 17:19:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:19:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 55(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 17:19:24.602(Timestamp)
2019-05-30 17:19:24 -请求地址 : http://localhost:8081/main
2019-05-30 17:19:24 -HTTP METHOD : GET
2019-05-30 17:19:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:19:24 -参数 : []
2019-05-30 17:19:24 -耗时 : 0
2019-05-30 17:19:24 -返回值 : main
2019-05-30 17:19:24 -<==    Updates: 1
2019-05-30 17:19:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 17:19:24 -HTTP METHOD : GET
2019-05-30 17:19:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 17:19:24 -参数 : []
2019-05-30 17:19:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 17:19:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 17:19:24 -<==      Total: 0
2019-05-30 17:19:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 17:19:24 -==> Parameters: 1(Long), 0(String)
2019-05-30 17:19:24 -<==      Total: 1
2019-05-30 17:19:24 -耗时 : 7
2019-05-30 17:19:24 -返回值 : com.bootdo.common.utils.PageUtils@705e41a2
2019-05-30 17:19:25 -请求地址 : http://localhost:8081/main
2019-05-30 17:19:25 -HTTP METHOD : GET
2019-05-30 17:19:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:19:25 -参数 : []
2019-05-30 17:19:25 -耗时 : 0
2019-05-30 17:19:25 -返回值 : main
2019-05-30 17:19:26 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-30 17:19:26 -HTTP METHOD : GET
2019-05-30 17:19:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-30 17:19:26 -参数 : []
2019-05-30 17:19:26 -耗时 : 1
2019-05-30 17:19:26 -返回值 : /moneyList/moneyList
2019-05-30 17:19:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 17:19:32 -HTTP METHOD : GET
2019-05-30 17:19:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 17:19:32 -参数 : []
2019-05-30 17:19:32 -耗时 : 1
2019-05-30 17:19:32 -返回值 : system/dept/deptTree
2019-05-30 17:19:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 17:19:32 -HTTP METHOD : GET
2019-05-30 17:19:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 17:19:32 -参数 : []
2019-05-30 17:19:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 17:19:32 -==> Parameters: 
2019-05-30 17:19:32 -<==      Total: 3
2019-05-30 17:19:32 -耗时 : 4
2019-05-30 17:19:32 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 17:19:40 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:19:40 -HTTP METHOD : POST
2019-05-30 17:19:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:19:40 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5fce763a]
2019-05-30 17:19:40 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:19:40 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:19:41 -<==      Total: 3
2019-05-30 17:19:41 -耗时 : 384
2019-05-30 17:19:41 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1e455e50, com.bootdo.moneyList.damain.MoneyListDO@2d2dd662, com.bootdo.moneyList.damain.MoneyListDO@32480f6b]
2019-05-30 17:19:55 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 17:19:55 -HTTP METHOD : POST
2019-05-30 17:19:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 17:19:55 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@76d8ee88]
2019-05-30 17:19:55 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:19:55 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:19:55 -<==      Total: 3
2019-05-30 17:19:55 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 17:19:55 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:19:55 -<==      Total: 1
2019-05-30 17:19:55 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 17:19:55 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:19:55 -<==      Total: 1
2019-05-30 17:19:55 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 17:19:55 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:19:55 -<==      Total: 2
2019-05-30 17:19:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:19:55 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.getWaterPrint(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyListServiceImpl.getWaterPrint(MoneyListServiceImpl.java:59)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:299)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$fcde2e45.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-05-30 17:19:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-05-30 17:19:55.622(Timestamp)
2019-05-30 17:19:55 -<==    Updates: 1
2019-05-30 17:19:57 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:19:57 -HTTP METHOD : POST
2019-05-30 17:19:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:19:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4673b7ef]
2019-05-30 17:19:57 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:19:57 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:19:57 -<==      Total: 3
2019-05-30 17:19:57 -耗时 : 15
2019-05-30 17:19:57 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2729c85e, com.bootdo.moneyList.damain.MoneyListDO@335964cb, com.bootdo.moneyList.damain.MoneyListDO@44fdf954]
2019-05-30 17:21:36 -请求地址 : http://localhost:8081/index
2019-05-30 17:21:36 -HTTP METHOD : GET
2019-05-30 17:21:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 17:21:36 -参数 : [{}]
2019-05-30 17:21:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 17:21:36 -==> Parameters: 1(Long)
2019-05-30 17:21:36 -<==      Total: 50
2019-05-30 17:21:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 17:21:36 -==> Parameters: 138(Long)
2019-05-30 17:21:36 -<==      Total: 1
2019-05-30 17:21:36 -耗时 : 159
2019-05-30 17:21:36 -返回值 : index_v1
2019-05-30 17:21:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:21:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 159(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 17:21:36.539(Timestamp)
2019-05-30 17:21:36 -请求地址 : http://localhost:8081/main
2019-05-30 17:21:36 -HTTP METHOD : GET
2019-05-30 17:21:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:21:36 -参数 : []
2019-05-30 17:21:36 -耗时 : 1
2019-05-30 17:21:36 -返回值 : main
2019-05-30 17:21:36 -<==    Updates: 1
2019-05-30 17:21:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 17:21:36 -HTTP METHOD : GET
2019-05-30 17:21:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 17:21:36 -参数 : []
2019-05-30 17:21:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 17:21:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 17:21:36 -<==      Total: 0
2019-05-30 17:21:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 17:21:36 -==> Parameters: 1(Long), 0(String)
2019-05-30 17:21:36 -<==      Total: 1
2019-05-30 17:21:36 -耗时 : 8
2019-05-30 17:21:36 -返回值 : com.bootdo.common.utils.PageUtils@224e3bb4
2019-05-30 17:21:36 -请求地址 : http://localhost:8081/main
2019-05-30 17:21:36 -HTTP METHOD : GET
2019-05-30 17:21:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:21:36 -参数 : []
2019-05-30 17:21:36 -耗时 : 3
2019-05-30 17:21:36 -返回值 : main
2019-05-30 17:21:40 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-30 17:21:40 -HTTP METHOD : GET
2019-05-30 17:21:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-30 17:21:40 -参数 : []
2019-05-30 17:21:40 -耗时 : 1
2019-05-30 17:21:40 -返回值 : /moneyList/moneyList
2019-05-30 17:21:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 17:21:48 -HTTP METHOD : GET
2019-05-30 17:21:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 17:21:48 -参数 : []
2019-05-30 17:21:48 -耗时 : 1
2019-05-30 17:21:48 -返回值 : system/dept/deptTree
2019-05-30 17:21:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 17:21:48 -HTTP METHOD : GET
2019-05-30 17:21:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 17:21:48 -参数 : []
2019-05-30 17:21:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 17:21:48 -==> Parameters: 
2019-05-30 17:21:48 -<==      Total: 3
2019-05-30 17:21:48 -耗时 : 5
2019-05-30 17:21:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 17:21:50 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:21:50 -HTTP METHOD : POST
2019-05-30 17:21:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:21:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5d629b4f]
2019-05-30 17:21:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:21:50 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:21:50 -<==      Total: 3
2019-05-30 17:21:50 -耗时 : 5
2019-05-30 17:21:50 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@286001cc, com.bootdo.moneyList.damain.MoneyListDO@473f0cb, com.bootdo.moneyList.damain.MoneyListDO@4d82abe9]
2019-05-30 17:21:59 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 17:21:59 -HTTP METHOD : POST
2019-05-30 17:21:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 17:21:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@643c4be9]
2019-05-30 17:21:59 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:21:59 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:21:59 -<==      Total: 3
2019-05-30 17:21:59 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 17:21:59 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:21:59 -<==      Total: 1
2019-05-30 17:21:59 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 17:21:59 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:21:59 -<==      Total: 1
2019-05-30 17:21:59 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 17:21:59 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:21:59 -<==      Total: 2
2019-05-30 17:21:59 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.getWaterPrint(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyListServiceImpl.getWaterPrint(MoneyListServiceImpl.java:59)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:299)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$fcde2e45.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-05-30 17:21:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:21:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-05-30 17:21:59.882(Timestamp)
2019-05-30 17:21:59 -<==    Updates: 1
2019-05-30 17:22:01 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:22:01 -HTTP METHOD : POST
2019-05-30 17:22:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:22:01 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@508f4bc1]
2019-05-30 17:22:01 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:22:01 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:22:01 -<==      Total: 3
2019-05-30 17:22:01 -耗时 : 8
2019-05-30 17:22:01 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@15213e51, com.bootdo.moneyList.damain.MoneyListDO@176c8271, com.bootdo.moneyList.damain.MoneyListDO@32b79396]
2019-05-30 17:26:38 -请求地址 : http://localhost:8081/index
2019-05-30 17:26:38 -HTTP METHOD : GET
2019-05-30 17:26:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 17:26:38 -参数 : [{}]
2019-05-30 17:26:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 17:26:38 -==> Parameters: 1(Long)
2019-05-30 17:26:38 -<==      Total: 50
2019-05-30 17:26:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 17:26:38 -==> Parameters: 138(Long)
2019-05-30 17:26:38 -<==      Total: 1
2019-05-30 17:26:38 -耗时 : 203
2019-05-30 17:26:38 -返回值 : index_v1
2019-05-30 17:26:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:26:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 203(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 17:26:38.49(Timestamp)
2019-05-30 17:26:38 -请求地址 : http://localhost:8081/main
2019-05-30 17:26:38 -HTTP METHOD : GET
2019-05-30 17:26:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:26:38 -参数 : []
2019-05-30 17:26:38 -耗时 : 1
2019-05-30 17:26:38 -返回值 : main
2019-05-30 17:26:39 -<==    Updates: 1
2019-05-30 17:26:39 -请求地址 : http://localhost:8081/main
2019-05-30 17:26:39 -HTTP METHOD : GET
2019-05-30 17:26:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:26:39 -参数 : []
2019-05-30 17:26:39 -耗时 : 0
2019-05-30 17:26:39 -返回值 : main
2019-05-30 17:26:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 17:26:39 -HTTP METHOD : GET
2019-05-30 17:26:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 17:26:39 -参数 : []
2019-05-30 17:26:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 17:26:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 17:26:39 -<==      Total: 0
2019-05-30 17:26:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 17:26:39 -==> Parameters: 1(Long), 0(String)
2019-05-30 17:26:39 -<==      Total: 1
2019-05-30 17:26:39 -耗时 : 188
2019-05-30 17:26:39 -返回值 : com.bootdo.common.utils.PageUtils@5eae89ed
2019-05-30 17:26:40 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-30 17:26:40 -HTTP METHOD : GET
2019-05-30 17:26:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-30 17:26:40 -参数 : []
2019-05-30 17:26:40 -耗时 : 1
2019-05-30 17:26:40 -返回值 : /moneyList/moneyList
2019-05-30 17:26:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 17:26:49 -HTTP METHOD : GET
2019-05-30 17:26:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 17:26:49 -参数 : []
2019-05-30 17:26:49 -耗时 : 0
2019-05-30 17:26:49 -返回值 : system/dept/deptTree
2019-05-30 17:26:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 17:26:49 -HTTP METHOD : GET
2019-05-30 17:26:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 17:26:49 -参数 : []
2019-05-30 17:26:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 17:26:49 -==> Parameters: 
2019-05-30 17:26:49 -<==      Total: 3
2019-05-30 17:26:49 -耗时 : 4
2019-05-30 17:26:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 17:26:51 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:26:51 -HTTP METHOD : POST
2019-05-30 17:26:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:26:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@71f9d181]
2019-05-30 17:26:51 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:26:51 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:26:51 -<==      Total: 3
2019-05-30 17:26:51 -耗时 : 53
2019-05-30 17:26:51 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@22cfafd2, com.bootdo.moneyList.damain.MoneyListDO@2f75d34d, com.bootdo.moneyList.damain.MoneyListDO@103f6afb]
2019-05-30 17:26:56 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 17:26:56 -HTTP METHOD : POST
2019-05-30 17:26:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 17:26:56 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@60029ead]
2019-05-30 17:26:56 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:26:56 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:26:56 -<==      Total: 3
2019-05-30 17:26:56 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 17:26:56 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:26:56 -<==      Total: 1
2019-05-30 17:26:56 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 17:26:56 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:26:56 -<==      Total: 1
2019-05-30 17:26:56 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 17:26:56 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:26:56 -<==      Total: 2
2019-05-30 17:26:56 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.getWaterPrint(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyListServiceImpl.getWaterPrint(MoneyListServiceImpl.java:59)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:299)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$fcde2e45.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-05-30 17:26:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:26:56 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-05-30 17:26:56.147(Timestamp)
2019-05-30 17:26:56 -<==    Updates: 1
2019-05-30 17:26:57 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:26:57 -HTTP METHOD : POST
2019-05-30 17:26:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:26:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@184eeede]
2019-05-30 17:26:57 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:26:57 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:26:57 -<==      Total: 3
2019-05-30 17:26:57 -耗时 : 4
2019-05-30 17:26:57 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4f5ee44b, com.bootdo.moneyList.damain.MoneyListDO@32372e56, com.bootdo.moneyList.damain.MoneyListDO@5d601ed0]
2019-05-30 17:29:01 -请求地址 : http://localhost:8081/login;JSESSIONID=c86cbb84-4ef3-48c6-bc40-b0977593df58
2019-05-30 17:29:01 -HTTP METHOD : GET
2019-05-30 17:29:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 17:29:01 -参数 : [{}]
2019-05-30 17:29:01 -耗时 : 1
2019-05-30 17:29:01 -返回值 : login
2019-05-30 17:29:02 -请求地址 : http://localhost:8081/getVerify
2019-05-30 17:29:02 -HTTP METHOD : GET
2019-05-30 17:29:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 17:29:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@e8d8469, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6fc006e1]
2019-05-30 17:29:02 -9448
2019-05-30 17:29:02 -耗时 : 10
2019-05-30 17:29:02 -返回值 : null
2019-05-30 17:29:02 -请求地址 : http://localhost:8081/login
2019-05-30 17:29:02 -HTTP METHOD : GET
2019-05-30 17:29:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 17:29:02 -参数 : [{}]
2019-05-30 17:29:02 -耗时 : 0
2019-05-30 17:29:02 -返回值 : login
2019-05-30 17:29:08 -请求地址 : http://localhost:8081/login
2019-05-30 17:29:08 -HTTP METHOD : POST
2019-05-30 17:29:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-30 17:29:08 -参数 : [admin, 111111, 9448, org.apache.shiro.web.servlet.ShiroHttpServletRequest@527e416c]
2019-05-30 17:29:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-30 17:29:08 -==> Parameters: admin(String)
2019-05-30 17:29:08 -<==      Total: 1
2019-05-30 17:29:08 -耗时 : 92
2019-05-30 17:29:08 -返回值 : {msg=操作成功, code=0}
2019-05-30 17:29:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:29:08 -==> Parameters: 1(Long), admin(String), 登录(String), 92(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-30 17:29:08.217(Timestamp)
2019-05-30 17:29:08 -请求地址 : http://localhost:8081/index
2019-05-30 17:29:08 -HTTP METHOD : GET
2019-05-30 17:29:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 17:29:08 -参数 : [{}]
2019-05-30 17:29:08 -<==    Updates: 1
2019-05-30 17:29:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 17:29:08 -==> Parameters: 1(Long)
2019-05-30 17:29:08 -<==      Total: 50
2019-05-30 17:29:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 17:29:08 -==> Parameters: 138(Long)
2019-05-30 17:29:08 -<==      Total: 1
2019-05-30 17:29:08 -耗时 : 344
2019-05-30 17:29:08 -返回值 : index_v1
2019-05-30 17:29:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:29:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 344(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 17:29:08.58(Timestamp)
2019-05-30 17:29:08 -请求地址 : http://localhost:8081/main
2019-05-30 17:29:08 -HTTP METHOD : GET
2019-05-30 17:29:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:29:08 -参数 : []
2019-05-30 17:29:08 -耗时 : 0
2019-05-30 17:29:08 -返回值 : main
2019-05-30 17:29:08 -<==    Updates: 1
2019-05-30 17:29:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 17:29:09 -HTTP METHOD : GET
2019-05-30 17:29:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 17:29:09 -参数 : []
2019-05-30 17:29:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 17:29:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 17:29:09 -<==      Total: 0
2019-05-30 17:29:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 17:29:09 -==> Parameters: 1(Long), 0(String)
2019-05-30 17:29:09 -<==      Total: 1
2019-05-30 17:29:09 -耗时 : 22
2019-05-30 17:29:09 -返回值 : com.bootdo.common.utils.PageUtils@4e43e20
2019-05-30 17:29:09 -请求地址 : http://localhost:8081/main
2019-05-30 17:29:09 -HTTP METHOD : GET
2019-05-30 17:29:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:29:09 -参数 : []
2019-05-30 17:29:09 -耗时 : 0
2019-05-30 17:29:09 -返回值 : main
2019-05-30 17:29:23 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 17:29:23 -==> Parameters: 1(Long)
2019-05-30 17:29:23 -<==      Total: 94
2019-05-30 17:29:23 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-30 17:29:23 -HTTP METHOD : GET
2019-05-30 17:29:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-30 17:29:23 -参数 : []
2019-05-30 17:29:23 -耗时 : 0
2019-05-30 17:29:23 -返回值 : /moneyList/moneyList
2019-05-30 17:29:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 17:29:29 -HTTP METHOD : GET
2019-05-30 17:29:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 17:29:29 -参数 : []
2019-05-30 17:29:29 -耗时 : 0
2019-05-30 17:29:29 -返回值 : system/dept/deptTree
2019-05-30 17:29:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 17:29:29 -HTTP METHOD : GET
2019-05-30 17:29:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 17:29:29 -参数 : []
2019-05-30 17:29:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 17:29:29 -==> Parameters: 
2019-05-30 17:29:29 -<==      Total: 3
2019-05-30 17:29:29 -耗时 : 44
2019-05-30 17:29:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 17:29:32 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:29:32 -HTTP METHOD : POST
2019-05-30 17:29:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:29:32 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@53846f0e]
2019-05-30 17:29:32 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:29:32 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:29:32 -<==      Total: 3
2019-05-30 17:29:32 -耗时 : 438
2019-05-30 17:29:32 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@72c4771c, com.bootdo.moneyList.damain.MoneyListDO@a5fd5e1, com.bootdo.moneyList.damain.MoneyListDO@7ad327bb]
2019-05-30 17:29:37 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 17:29:37 -HTTP METHOD : POST
2019-05-30 17:29:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 17:29:37 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@20cb2801]
2019-05-30 17:29:37 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:29:37 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:29:37 -<==      Total: 3
2019-05-30 17:29:37 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 17:29:37 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:29:37 -<==      Total: 1
2019-05-30 17:29:37 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 17:29:37 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:29:37 -<==      Total: 1
2019-05-30 17:29:37 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 17:29:37 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:29:37 -<==      Total: 2
2019-05-30 17:29:37 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.getWaterPrint(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyListServiceImpl.getWaterPrint(MoneyListServiceImpl.java:59)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:299)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$fcde2e45.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-05-30 17:29:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:29:37 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-05-30 17:29:37.552(Timestamp)
2019-05-30 17:29:38 -<==    Updates: 1
2019-05-30 17:29:38 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:29:38 -HTTP METHOD : POST
2019-05-30 17:29:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:29:38 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@50e602d4]
2019-05-30 17:29:38 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:29:38 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:29:38 -<==      Total: 3
2019-05-30 17:29:38 -耗时 : 32
2019-05-30 17:29:38 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@754fce46, com.bootdo.moneyList.damain.MoneyListDO@16c2c1ab, com.bootdo.moneyList.damain.MoneyListDO@76d28105]
2019-05-30 17:31:24 -请求地址 : http://localhost:8081/index
2019-05-30 17:31:24 -HTTP METHOD : GET
2019-05-30 17:31:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 17:31:24 -参数 : [{}]
2019-05-30 17:31:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 17:31:24 -==> Parameters: 1(Long)
2019-05-30 17:31:24 -<==      Total: 50
2019-05-30 17:31:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 17:31:24 -==> Parameters: 138(Long)
2019-05-30 17:31:24 -<==      Total: 1
2019-05-30 17:31:24 -耗时 : 67
2019-05-30 17:31:24 -返回值 : index_v1
2019-05-30 17:31:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:31:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 67(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 17:31:24.441(Timestamp)
2019-05-30 17:31:24 -<==    Updates: 1
2019-05-30 17:31:24 -请求地址 : http://localhost:8081/main
2019-05-30 17:31:24 -HTTP METHOD : GET
2019-05-30 17:31:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:31:24 -参数 : []
2019-05-30 17:31:24 -耗时 : 1
2019-05-30 17:31:24 -返回值 : main
2019-05-30 17:31:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 17:31:25 -HTTP METHOD : GET
2019-05-30 17:31:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 17:31:25 -参数 : []
2019-05-30 17:31:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 17:31:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 17:31:25 -<==      Total: 0
2019-05-30 17:31:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 17:31:25 -==> Parameters: 1(Long), 0(String)
2019-05-30 17:31:25 -<==      Total: 1
2019-05-30 17:31:25 -耗时 : 92
2019-05-30 17:31:25 -返回值 : com.bootdo.common.utils.PageUtils@6f700ec4
2019-05-30 17:31:25 -请求地址 : http://localhost:8081/main
2019-05-30 17:31:25 -HTTP METHOD : GET
2019-05-30 17:31:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:31:25 -参数 : []
2019-05-30 17:31:25 -耗时 : 3
2019-05-30 17:31:25 -返回值 : main
2019-05-30 17:31:32 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-30 17:31:32 -HTTP METHOD : GET
2019-05-30 17:31:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-30 17:31:32 -参数 : []
2019-05-30 17:31:32 -耗时 : 0
2019-05-30 17:31:32 -返回值 : /moneyList/moneyList
2019-05-30 17:31:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 17:31:38 -HTTP METHOD : GET
2019-05-30 17:31:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 17:31:38 -参数 : []
2019-05-30 17:31:38 -耗时 : 1
2019-05-30 17:31:38 -返回值 : system/dept/deptTree
2019-05-30 17:31:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 17:31:38 -HTTP METHOD : GET
2019-05-30 17:31:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 17:31:38 -参数 : []
2019-05-30 17:31:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 17:31:38 -==> Parameters: 
2019-05-30 17:31:38 -<==      Total: 3
2019-05-30 17:31:38 -耗时 : 7
2019-05-30 17:31:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 17:31:42 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:31:42 -HTTP METHOD : POST
2019-05-30 17:31:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:31:42 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@51f0f13]
2019-05-30 17:31:42 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:31:42 -==> Parameters: 2019-02(String), 2(String), 7-1234(String), 2019-02(String), 2(String), 7-1234(String), 2019-02(String), 2(String), 7-1234(String)
2019-05-30 17:31:42 -<==      Total: 3
2019-05-30 17:31:42 -耗时 : 5
2019-05-30 17:31:42 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4ed012cb, com.bootdo.moneyList.damain.MoneyListDO@3594defa, com.bootdo.moneyList.damain.MoneyListDO@480e38cc]
2019-05-30 17:31:48 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:31:48 -HTTP METHOD : POST
2019-05-30 17:31:48 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:31:48 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6a42d0ba]
2019-05-30 17:31:48 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:31:48 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:31:48 -<==      Total: 3
2019-05-30 17:31:48 -耗时 : 5
2019-05-30 17:31:48 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@41b90185, com.bootdo.moneyList.damain.MoneyListDO@dd2f21b, com.bootdo.moneyList.damain.MoneyListDO@71e9341b]
2019-05-30 17:31:52 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 17:31:52 -HTTP METHOD : POST
2019-05-30 17:31:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 17:31:52 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4409f557]
2019-05-30 17:31:52 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:31:52 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:31:52 -<==      Total: 3
2019-05-30 17:31:52 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 17:31:52 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:31:52 -<==      Total: 1
2019-05-30 17:31:52 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 17:31:52 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:31:52 -<==      Total: 1
2019-05-30 17:31:52 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 17:31:52 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:31:52 -<==      Total: 2
2019-05-30 17:31:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:31:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-05-30 17:31:52.483(Timestamp)
2019-05-30 17:31:52 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.getWaterPrint(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyListServiceImpl.getWaterPrint(MoneyListServiceImpl.java:59)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:299)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$fcde2e45.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-05-30 17:31:52 -<==    Updates: 1
2019-05-30 17:31:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:31:53 -HTTP METHOD : POST
2019-05-30 17:31:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:31:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6c22e502]
2019-05-30 17:31:53 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:31:53 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:31:53 -<==      Total: 3
2019-05-30 17:31:53 -耗时 : 9
2019-05-30 17:31:53 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@a9f5b21, com.bootdo.moneyList.damain.MoneyListDO@3cd086ec, com.bootdo.moneyList.damain.MoneyListDO@47217e81]
2019-05-30 17:33:09 -请求地址 : http://localhost:8081/index
2019-05-30 17:33:09 -HTTP METHOD : GET
2019-05-30 17:33:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 17:33:09 -参数 : [{}]
2019-05-30 17:33:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 17:33:09 -==> Parameters: 1(Long)
2019-05-30 17:33:09 -<==      Total: 50
2019-05-30 17:33:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 17:33:09 -==> Parameters: 138(Long)
2019-05-30 17:33:09 -<==      Total: 1
2019-05-30 17:33:09 -耗时 : 126
2019-05-30 17:33:09 -返回值 : index_v1
2019-05-30 17:33:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:33:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 126(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 17:33:09.694(Timestamp)
2019-05-30 17:33:09 -请求地址 : http://localhost:8081/main
2019-05-30 17:33:09 -HTTP METHOD : GET
2019-05-30 17:33:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:33:09 -参数 : []
2019-05-30 17:33:09 -耗时 : 0
2019-05-30 17:33:09 -返回值 : main
2019-05-30 17:33:10 -<==    Updates: 1
2019-05-30 17:33:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 17:33:10 -HTTP METHOD : GET
2019-05-30 17:33:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 17:33:10 -参数 : []
2019-05-30 17:33:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 17:33:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 17:33:10 -<==      Total: 0
2019-05-30 17:33:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 17:33:10 -==> Parameters: 1(Long), 0(String)
2019-05-30 17:33:10 -<==      Total: 1
2019-05-30 17:33:10 -耗时 : 44
2019-05-30 17:33:10 -返回值 : com.bootdo.common.utils.PageUtils@c4aba69
2019-05-30 17:33:10 -请求地址 : http://localhost:8081/main
2019-05-30 17:33:10 -HTTP METHOD : GET
2019-05-30 17:33:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:33:10 -参数 : []
2019-05-30 17:33:10 -耗时 : 2
2019-05-30 17:33:10 -返回值 : main
2019-05-30 17:33:11 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-30 17:33:11 -HTTP METHOD : GET
2019-05-30 17:33:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-30 17:33:11 -参数 : []
2019-05-30 17:33:11 -耗时 : 0
2019-05-30 17:33:11 -返回值 : /moneyList/moneyList
2019-05-30 17:33:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 17:33:18 -HTTP METHOD : GET
2019-05-30 17:33:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 17:33:18 -参数 : []
2019-05-30 17:33:18 -耗时 : 1
2019-05-30 17:33:18 -返回值 : system/dept/deptTree
2019-05-30 17:33:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 17:33:18 -HTTP METHOD : GET
2019-05-30 17:33:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 17:33:18 -参数 : []
2019-05-30 17:33:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 17:33:18 -==> Parameters: 
2019-05-30 17:33:18 -<==      Total: 3
2019-05-30 17:33:18 -耗时 : 20
2019-05-30 17:33:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 17:33:21 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:33:21 -HTTP METHOD : POST
2019-05-30 17:33:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:33:21 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5a95eec4]
2019-05-30 17:33:21 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:33:21 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:33:21 -<==      Total: 3
2019-05-30 17:33:21 -耗时 : 28
2019-05-30 17:33:21 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1d4b3171, com.bootdo.moneyList.damain.MoneyListDO@1542998e, com.bootdo.moneyList.damain.MoneyListDO@60d4b62c]
2019-05-30 17:33:24 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 17:33:24 -HTTP METHOD : POST
2019-05-30 17:33:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 17:33:24 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@d0fbc52]
2019-05-30 17:33:24 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:33:24 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:33:24 -<==      Total: 3
2019-05-30 17:33:24 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 17:33:24 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:33:24 -<==      Total: 1
2019-05-30 17:33:24 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 17:33:24 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:33:24 -<==      Total: 1
2019-05-30 17:33:24 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 17:33:24 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:33:24 -<==      Total: 1
2019-05-30 17:33:24 -==>  Preparing: update water set water_sum = water_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:33:24 -==> Parameters: 1(String), A(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:33:24 -<==    Updates: 1
2019-05-30 17:33:24 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:33:25 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-30 17:33:24.7(Timestamp), 2019-02(String), 1(Long), 2019-05-30 17:33:24.7(Timestamp), 1(Long), null
2019-05-30 17:33:25 -<==    Updates: 1
2019-05-30 17:33:25 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:33:25 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(Integer), 2(Integer), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), null, 3.50(BigDecimal), 55.67(BigDecimal), 100.00(BigDecimal), -72.35(BigDecimal), null, 6.30(BigDecimal), null, 28.00(BigDecimal), 1(BigDecimal), 2019-05-30 17:33:24.71(Timestamp), 2019-02(String), admin(String), 2019-05-30 17:33:24.71(Timestamp), admin(String), null
2019-05-30 17:33:25 -<==    Updates: 1
2019-05-30 17:33:25 -耗时 : 651
2019-05-30 17:33:25 -返回值 : 83
2019-05-30 17:33:26 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:33:26 -HTTP METHOD : POST
2019-05-30 17:33:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:33:26 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@46ca6007]
2019-05-30 17:33:26 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:33:26 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:33:26 -<==      Total: 3
2019-05-30 17:33:26 -耗时 : 6
2019-05-30 17:33:26 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3c198855, com.bootdo.moneyList.damain.MoneyListDO@30c3865e, com.bootdo.moneyList.damain.MoneyListDO@259c0219]
2019-05-30 17:33:28 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/83
2019-05-30 17:33:28 -HTTP METHOD : GET
2019-05-30 17:33:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-05-30 17:33:28 -参数 : [83, {}]
2019-05-30 17:33:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 17:33:28 -==> Parameters: 83(Long)
2019-05-30 17:33:28 -<==      Total: 1
2019-05-30 17:33:28 -耗时 : 35
2019-05-30 17:33:28 -返回值 : moneyList/moneyPrint
2019-05-30 17:33:28 -[THYMELEAF][http-nio-8081-exec-6] Exception processing template "moneyList/moneyPrint": An error happened during template parsing (template: "class path resource [templates/moneyList/moneyPrint.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyList/moneyPrint.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "print.costPoper" (template: "moneyList/moneyPrint" - line 67, col 58)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "print.costPoper" (template: "moneyList/moneyPrint" - line 67, col 58)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'costPoper' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-05-30 17:33:28 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyList/moneyPrint.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'costPoper' cannot be found on object of type 'com.bootdo.print.vo.PrintVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-30 17:39:12 -请求地址 : http://localhost:8081/index
2019-05-30 17:39:12 -HTTP METHOD : GET
2019-05-30 17:39:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 17:39:12 -参数 : [{}]
2019-05-30 17:39:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 17:39:12 -==> Parameters: 1(Long)
2019-05-30 17:39:12 -<==      Total: 50
2019-05-30 17:39:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 17:39:12 -==> Parameters: 138(Long)
2019-05-30 17:39:12 -<==      Total: 1
2019-05-30 17:39:12 -耗时 : 37
2019-05-30 17:39:12 -返回值 : index_v1
2019-05-30 17:39:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:39:13 -请求地址 : http://localhost:8081/main
2019-05-30 17:39:13 -HTTP METHOD : GET
2019-05-30 17:39:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:39:13 -参数 : []
2019-05-30 17:39:13 -耗时 : 0
2019-05-30 17:39:13 -返回值 : main
2019-05-30 17:39:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 17:39:12.828(Timestamp)
2019-05-30 17:39:13 -<==    Updates: 1
2019-05-30 17:39:18 -请求地址 : http://localhost:8081/main
2019-05-30 17:39:18 -HTTP METHOD : GET
2019-05-30 17:39:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 17:39:18 -参数 : []
2019-05-30 17:39:18 -耗时 : 1
2019-05-30 17:39:18 -返回值 : main
2019-05-30 17:39:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 17:39:18 -HTTP METHOD : GET
2019-05-30 17:39:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 17:39:18 -参数 : []
2019-05-30 17:39:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 17:39:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 17:39:18 -<==      Total: 0
2019-05-30 17:39:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 17:39:18 -==> Parameters: 1(Long), 0(String)
2019-05-30 17:39:19 -<==      Total: 1
2019-05-30 17:39:19 -耗时 : 474
2019-05-30 17:39:19 -返回值 : com.bootdo.common.utils.PageUtils@25976de4
2019-05-30 17:39:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 17:39:41 -==> Parameters: 1(Long)
2019-05-30 17:39:41 -<==      Total: 94
2019-05-30 17:39:41 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-30 17:39:41 -HTTP METHOD : GET
2019-05-30 17:39:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-30 17:39:41 -参数 : []
2019-05-30 17:39:41 -耗时 : 24
2019-05-30 17:39:41 -返回值 : /moneyList/moneyList
2019-05-30 17:39:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 17:39:46 -HTTP METHOD : GET
2019-05-30 17:39:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 17:39:46 -参数 : []
2019-05-30 17:39:46 -耗时 : 11
2019-05-30 17:39:46 -返回值 : system/dept/deptTree
2019-05-30 17:39:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 17:39:46 -HTTP METHOD : GET
2019-05-30 17:39:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 17:39:46 -参数 : []
2019-05-30 17:39:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 17:39:46 -==> Parameters: 
2019-05-30 17:39:46 -<==      Total: 3
2019-05-30 17:39:46 -耗时 : 4
2019-05-30 17:39:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 17:39:49 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:39:49 -HTTP METHOD : POST
2019-05-30 17:39:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:39:49 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5b11142a]
2019-05-30 17:39:49 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:39:49 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:39:49 -<==      Total: 3
2019-05-30 17:39:49 -耗时 : 4
2019-05-30 17:39:49 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@73dee1f5, com.bootdo.moneyList.damain.MoneyListDO@75173996, com.bootdo.moneyList.damain.MoneyListDO@2674d35a]
2019-05-30 17:40:00 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 17:40:00 -HTTP METHOD : POST
2019-05-30 17:40:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 17:40:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4d836f0c]
2019-05-30 17:40:00 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:40:00 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:40:00 -<==      Total: 3
2019-05-30 17:40:00 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 17:40:00 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:40:00 -<==      Total: 1
2019-05-30 17:40:00 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 17:40:00 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:40:00 -<==      Total: 1
2019-05-30 17:40:00 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 17:40:00 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 17:40:00 -<==      Total: 1
2019-05-30 17:40:00 -==>  Preparing: update water set water_sum = water_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:40:00 -==> Parameters: 1(String), A(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:40:00 -<==    Updates: 1
2019-05-30 17:40:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:40:00 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-30 17:40:00.816(Timestamp), 2019-02(String), 1(Long), 2019-05-30 17:40:00.816(Timestamp), 1(Long), null
2019-05-30 17:40:01 -<==    Updates: 1
2019-05-30 17:40:01 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 17:40:01 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(Integer), 2(Integer), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), null, 3.50(BigDecimal), 55.67(BigDecimal), 100.00(BigDecimal), -72.35(BigDecimal), null, 6.30(BigDecimal), null, 29.00(BigDecimal), 1(BigDecimal), 2019-05-30 17:40:00.826(Timestamp), 2019-02(String), admin(String), 2019-05-30 17:40:00.826(Timestamp), admin(String), null
2019-05-30 17:40:01 -<==    Updates: 1
2019-05-30 17:40:01 -耗时 : 395
2019-05-30 17:40:01 -返回值 : 84
2019-05-30 17:40:02 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 17:40:02 -HTTP METHOD : POST
2019-05-30 17:40:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 17:40:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@713fa4d8]
2019-05-30 17:40:02 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 17:40:02 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 17:40:02 -<==      Total: 3
2019-05-30 17:40:02 -耗时 : 6
2019-05-30 17:40:02 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2a3c1d40, com.bootdo.moneyList.damain.MoneyListDO@550d5efb, com.bootdo.moneyList.damain.MoneyListDO@591839e6]
2019-05-30 17:40:07 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/84
2019-05-30 17:40:07 -HTTP METHOD : GET
2019-05-30 17:40:07 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-05-30 17:40:07 -参数 : [84, {}]
2019-05-30 17:40:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 17:40:07 -==> Parameters: 84(Long)
2019-05-30 17:40:07 -<==      Total: 1
2019-05-30 17:40:07 -耗时 : 4
2019-05-30 17:40:07 -返回值 : moneyList/moneyPrint
2019-05-30 17:44:24 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(10)-CONNECTED(10)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 120], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 20], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 416]
2019-05-30 18:03:55 -Starting BootdoApplication on PC-201905091110 with PID 38932 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-30 18:03:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-30 18:03:55 -The following profiles are active: dev
2019-05-30 18:03:55 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b78a709: startup date [Thu May 30 18:03:55 CST 2019]; root of context hierarchy
2019-05-30 18:04:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-30 18:04:06 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5eb56ad0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 18:04:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$510e9977] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 18:04:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 18:04:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 18:04:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 18:04:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-30 18:04:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-30 18:04:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 18:04:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 18:04:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 18:04:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 18:04:21 -Tomcat initialized with port(s): 8081 (http)
2019-05-30 18:04:21 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-30 18:04:21 -Starting service [Tomcat]
2019-05-30 18:04:21 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-30 18:04:21 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-30 18:04:22 -Initializing Spring embedded WebApplicationContext
2019-05-30 18:04:22 -Root WebApplicationContext: initialization completed in 26989 ms
2019-05-30 18:04:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-30 18:04:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-30 18:04:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-30 18:04:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-30 18:04:23 -Filter xssFilter was not registered (disabled)
2019-05-30 18:04:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-30 18:04:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-30 18:04:23 -Servlet statViewServlet mapped to [/druid/*]
2019-05-30 18:04:23 -Servlet dispatcherServlet mapped to [/]
2019-05-30 18:04:29 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b78a709: startup date [Thu May 30 18:03:55 CST 2019]; root of context hierarchy
2019-05-30 18:04:30 -Using default implementation for ThreadExecutor
2019-05-30 18:04:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-30 18:04:30 -Quartz Scheduler v.2.2.1 created.
2019-05-30 18:04:30 -RAMJobStore initialized.
2019-05-30 18:04:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-30 18:04:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-30 18:04:30 -Quartz scheduler version: 2.2.1
2019-05-30 18:04:30 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4ca4f762
2019-05-30 18:04:32 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-30 18:04:32 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-30 18:04:37 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-30 18:04:37 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 18:04:37 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 18:04:37 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-30 18:04:37 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-30 18:04:37 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-30 18:04:37 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 18:04:37 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-30 18:04:37 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-30 18:04:37 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 18:04:37 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-30 18:04:37 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 18:04:37 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-30 18:04:37 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 18:04:37 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 18:04:37 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-30 18:04:37 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 18:04:37 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-30 18:04:37 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 18:04:37 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-30 18:04:37 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 18:04:37 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-30 18:04:37 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-30 18:04:37 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 18:04:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-30 18:04:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-30 18:04:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-30 18:04:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-30 18:04:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-30 18:04:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-30 18:04:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-30 18:04:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-30 18:04:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-30 18:04:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-30 18:04:37 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-30 18:04:37 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-30 18:04:37 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-30 18:04:37 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 18:04:37 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 18:04:37 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-30 18:04:37 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-30 18:04:37 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-30 18:04:37 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-30 18:04:37 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-30 18:04:37 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-30 18:04:37 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-30 18:04:37 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-30 18:04:37 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-30 18:04:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-30 18:04:37 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 18:04:37 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 18:04:37 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-30 18:04:37 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-30 18:04:37 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 18:04:37 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-30 18:04:37 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-30 18:04:37 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-30 18:04:37 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-30 18:04:37 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-30 18:04:37 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-30 18:04:37 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-30 18:04:37 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 18:04:37 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-30 18:04:37 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-30 18:04:37 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-30 18:04:37 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-30 18:04:37 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-30 18:04:37 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-30 18:04:37 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 18:04:37 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-30 18:04:37 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-30 18:04:37 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 18:04:37 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 18:04:37 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-30 18:04:37 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-30 18:04:37 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-30 18:04:37 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-30 18:04:37 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-30 18:04:37 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-30 18:04:37 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-30 18:04:37 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-30 18:04:37 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-30 18:04:37 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 18:04:37 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-30 18:04:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-30 18:04:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-30 18:04:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-30 18:04:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-30 18:04:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-30 18:04:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-30 18:04:37 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-30 18:04:37 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-30 18:04:37 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-30 18:04:37 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-30 18:04:37 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-30 18:04:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-30 18:04:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-30 18:04:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-30 18:04:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-30 18:04:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-30 18:04:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-30 18:04:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-30 18:04:37 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 18:04:37 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-30 18:04:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-30 18:04:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-30 18:04:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-30 18:04:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-30 18:04:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-30 18:04:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-30 18:04:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-30 18:04:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-30 18:04:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-30 18:04:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-30 18:04:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-30 18:04:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-30 18:04:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-30 18:04:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-30 18:04:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-30 18:04:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 18:04:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 18:04:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-30 18:04:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 18:04:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-30 18:04:37 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-30 18:04:37 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-30 18:04:37 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-30 18:04:37 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-30 18:04:37 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-30 18:04:37 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 18:04:37 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-30 18:04:37 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-30 18:04:37 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-30 18:04:37 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-30 18:04:37 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 18:04:37 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 18:04:37 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 18:04:37 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-30 18:04:37 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 18:04:37 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-30 18:04:37 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-30 18:04:37 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 18:04:37 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 18:04:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 18:04:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-30 18:04:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-30 18:04:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-30 18:04:38 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-30 18:04:38 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-30 18:04:38 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-30 18:04:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 18:04:42 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b78a709: startup date [Thu May 30 18:03:55 CST 2019]; root of context hierarchy
2019-05-30 18:04:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 18:04:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 18:04:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 18:04:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-30 18:04:43 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-30 18:04:47 -Registering beans for JMX exposure on startup
2019-05-30 18:04:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-30 18:04:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-30 18:04:47 -Starting beans in phase 2147483647
2019-05-30 18:04:47 -Context refreshed
2019-05-30 18:04:47 -Found 1 custom documentation plugin(s)
2019-05-30 18:04:47 -Scanning for api listing references
2019-05-30 18:04:48 -Generating unique operation named: getCountDUsingPOST_1
2019-05-30 18:04:49 -Generating unique operation named: removeUsingPOST_1
2019-05-30 18:04:49 -Generating unique operation named: addUsingGET_1
2019-05-30 18:04:49 -Generating unique operation named: editUsingGET_1
2019-05-30 18:04:49 -Generating unique operation named: listUsingGET_1
2019-05-30 18:04:49 -Generating unique operation named: removeUsingPOST_2
2019-05-30 18:04:49 -Generating unique operation named: removeUsingPOST_3
2019-05-30 18:04:49 -Generating unique operation named: saveUsingPOST_1
2019-05-30 18:04:49 -Generating unique operation named: updateUsingGET_1
2019-05-30 18:04:49 -Generating unique operation named: updateUsingHEAD_1
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPOST_1
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPUT_1
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPATCH_1
2019-05-30 18:04:49 -Generating unique operation named: updateUsingDELETE_1
2019-05-30 18:04:49 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-30 18:04:49 -Generating unique operation named: updateUsingTRACE_1
2019-05-30 18:04:49 -Generating unique operation named: addUsingGET_2
2019-05-30 18:04:49 -Generating unique operation named: editUsingGET_2
2019-05-30 18:04:49 -Generating unique operation named: listUsingGET_2
2019-05-30 18:04:49 -Generating unique operation named: removeUsingPOST_4
2019-05-30 18:04:49 -Generating unique operation named: removeUsingPOST_5
2019-05-30 18:04:49 -Generating unique operation named: saveUsingPOST_2
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPOST_2
2019-05-30 18:04:49 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-30 18:04:49 -Generating unique operation named: addUsingGET_3
2019-05-30 18:04:49 -Generating unique operation named: editUsingGET_3
2019-05-30 18:04:49 -Generating unique operation named: listUsingGET_3
2019-05-30 18:04:49 -Generating unique operation named: removeUsingPOST_6
2019-05-30 18:04:49 -Generating unique operation named: removeUsingPOST_7
2019-05-30 18:04:49 -Generating unique operation named: saveUsingPOST_3
2019-05-30 18:04:49 -Generating unique operation named: updateUsingGET_2
2019-05-30 18:04:49 -Generating unique operation named: updateUsingHEAD_2
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPOST_3
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPUT_2
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPATCH_2
2019-05-30 18:04:49 -Generating unique operation named: updateUsingDELETE_2
2019-05-30 18:04:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-30 18:04:49 -Generating unique operation named: updateUsingTRACE_2
2019-05-30 18:04:49 -Generating unique operation named: addUsingGET_4
2019-05-30 18:04:49 -Generating unique operation named: editUsingGET_4
2019-05-30 18:04:49 -Generating unique operation named: listUsingGET_4
2019-05-30 18:04:49 -Generating unique operation named: removeUsingPOST_8
2019-05-30 18:04:49 -Generating unique operation named: removeUsingPOST_9
2019-05-30 18:04:49 -Generating unique operation named: saveUsingPOST_4
2019-05-30 18:04:49 -Generating unique operation named: updateUsingGET_3
2019-05-30 18:04:49 -Generating unique operation named: updateUsingHEAD_3
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPOST_4
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPUT_3
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPATCH_3
2019-05-30 18:04:49 -Generating unique operation named: updateUsingDELETE_3
2019-05-30 18:04:49 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-30 18:04:49 -Generating unique operation named: updateUsingTRACE_3
2019-05-30 18:04:49 -Generating unique operation named: ElecUsingGET_1
2019-05-30 18:04:49 -Generating unique operation named: addUsingGET_5
2019-05-30 18:04:49 -Generating unique operation named: editUsingGET_5
2019-05-30 18:04:49 -Generating unique operation named: listUsingGET_5
2019-05-30 18:04:49 -Generating unique operation named: removeUsingPOST_10
2019-05-30 18:04:49 -Generating unique operation named: removeUsingPOST_11
2019-05-30 18:04:49 -Generating unique operation named: saveUsingPOST_5
2019-05-30 18:04:49 -Generating unique operation named: updateUsingGET_4
2019-05-30 18:04:49 -Generating unique operation named: updateUsingHEAD_4
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPOST_5
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPUT_4
2019-05-30 18:04:49 -Generating unique operation named: updateUsingPATCH_4
2019-05-30 18:04:49 -Generating unique operation named: updateUsingDELETE_4
2019-05-30 18:04:49 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-30 18:04:49 -Generating unique operation named: updateUsingTRACE_4
2019-05-30 18:04:50 -Generating unique operation named: editUsingGET_6
2019-05-30 18:04:50 -Generating unique operation named: listUsingGET_6
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPOST_6
2019-05-30 18:04:50 -Generating unique operation named: addUsingGET_6
2019-05-30 18:04:50 -Generating unique operation named: editUsingGET_7
2019-05-30 18:04:50 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-30 18:04:50 -Generating unique operation named: listUsingGET_7
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_12
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_13
2019-05-30 18:04:50 -Generating unique operation named: saveUsingPOST_6
2019-05-30 18:04:50 -Generating unique operation named: updateUsingGET_5
2019-05-30 18:04:50 -Generating unique operation named: updateUsingHEAD_5
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPOST_7
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPUT_5
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPATCH_5
2019-05-30 18:04:50 -Generating unique operation named: updateUsingDELETE_5
2019-05-30 18:04:50 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-30 18:04:50 -Generating unique operation named: updateUsingTRACE_5
2019-05-30 18:04:50 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-30 18:04:50 -Generating unique operation named: addUsingGET_7
2019-05-30 18:04:50 -Generating unique operation named: editUsingGET_8
2019-05-30 18:04:50 -Generating unique operation named: listUsingGET_8
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_14
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_15
2019-05-30 18:04:50 -Generating unique operation named: saveUsingPOST_7
2019-05-30 18:04:50 -Generating unique operation named: updateUsingGET_6
2019-05-30 18:04:50 -Generating unique operation named: updateUsingHEAD_6
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPOST_8
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPUT_6
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPATCH_6
2019-05-30 18:04:50 -Generating unique operation named: updateUsingDELETE_6
2019-05-30 18:04:50 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-30 18:04:50 -Generating unique operation named: updateUsingTRACE_6
2019-05-30 18:04:50 -Generating unique operation named: addUsingGET_8
2019-05-30 18:04:50 -Generating unique operation named: editUsingGET_9
2019-05-30 18:04:50 -Generating unique operation named: listUsingGET_9
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_16
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_17
2019-05-30 18:04:50 -Generating unique operation named: saveUsingPOST_8
2019-05-30 18:04:50 -Generating unique operation named: updateUsingGET_7
2019-05-30 18:04:50 -Generating unique operation named: updateUsingHEAD_7
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPOST_9
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPUT_7
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPATCH_7
2019-05-30 18:04:50 -Generating unique operation named: updateUsingDELETE_7
2019-05-30 18:04:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-30 18:04:50 -Generating unique operation named: updateUsingTRACE_7
2019-05-30 18:04:50 -Generating unique operation named: addUsingGET_9
2019-05-30 18:04:50 -Generating unique operation named: editUsingGET_10
2019-05-30 18:04:50 -Generating unique operation named: infoUsingGET_1
2019-05-30 18:04:50 -Generating unique operation named: infoUsingHEAD_1
2019-05-30 18:04:50 -Generating unique operation named: infoUsingPOST_1
2019-05-30 18:04:50 -Generating unique operation named: infoUsingPUT_1
2019-05-30 18:04:50 -Generating unique operation named: infoUsingPATCH_1
2019-05-30 18:04:50 -Generating unique operation named: infoUsingDELETE_1
2019-05-30 18:04:50 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-30 18:04:50 -Generating unique operation named: infoUsingTRACE_1
2019-05-30 18:04:50 -Generating unique operation named: listUsingGET_10
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_18
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_19
2019-05-30 18:04:50 -Generating unique operation named: saveUsingPOST_9
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPOST_10
2019-05-30 18:04:50 -Generating unique operation named: listUsingGET_11
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_20
2019-05-30 18:04:50 -Generating unique operation named: welcomeUsingGET_1
2019-05-30 18:04:50 -Generating unique operation named: addUsingGET_10
2019-05-30 18:04:50 -Generating unique operation named: editUsingGET_11
2019-05-30 18:04:50 -Generating unique operation named: listUsingGET_12
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_21
2019-05-30 18:04:50 -Generating unique operation named: saveUsingPOST_10
2019-05-30 18:04:50 -Generating unique operation named: treeUsingGET_1
2019-05-30 18:04:50 -Generating unique operation named: treeUsingGET_2
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPOST_11
2019-05-30 18:04:50 -Generating unique operation named: addUsingGET_11
2019-05-30 18:04:50 -Generating unique operation named: editUsingGET_12
2019-05-30 18:04:50 -Generating unique operation named: listUsingGET_13
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_22
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_23
2019-05-30 18:04:50 -Generating unique operation named: updateUsingPOST_12
2019-05-30 18:04:50 -Generating unique operation named: addUsingGET_12
2019-05-30 18:04:50 -Generating unique operation named: editUsingGET_13
2019-05-30 18:04:50 -Generating unique operation named: listUsingGET_14
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_24
2019-05-30 18:04:50 -Generating unique operation named: removeUsingPOST_25
2019-05-30 18:04:51 -Generating unique operation named: saveUsingPOST_11
2019-05-30 18:04:51 -Generating unique operation named: updateUsingGET_8
2019-05-30 18:04:51 -Generating unique operation named: updateUsingHEAD_8
2019-05-30 18:04:51 -Generating unique operation named: updateUsingPOST_13
2019-05-30 18:04:51 -Generating unique operation named: updateUsingPUT_8
2019-05-30 18:04:51 -Generating unique operation named: updateUsingPATCH_8
2019-05-30 18:04:51 -Generating unique operation named: updateUsingDELETE_8
2019-05-30 18:04:51 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-30 18:04:51 -Generating unique operation named: updateUsingTRACE_8
2019-05-30 18:04:51 -Generating unique operation named: addUsingGET_13
2019-05-30 18:04:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-30 18:04:51 -Generating unique operation named: editUsingGET_14
2019-05-30 18:04:51 -Generating unique operation named: listUsingGET_15
2019-05-30 18:04:51 -Generating unique operation named: printEditUsingGET_1
2019-05-30 18:04:51 -Generating unique operation named: removeUsingPOST_26
2019-05-30 18:04:51 -Generating unique operation named: saveUsingPOST_12
2019-05-30 18:04:51 -Generating unique operation named: updateUsingGET_9
2019-05-30 18:04:51 -Generating unique operation named: updateUsingHEAD_9
2019-05-30 18:04:51 -Generating unique operation named: updateUsingPOST_14
2019-05-30 18:04:51 -Generating unique operation named: updateUsingPUT_9
2019-05-30 18:04:51 -Generating unique operation named: updateUsingPATCH_9
2019-05-30 18:04:51 -Generating unique operation named: updateUsingDELETE_9
2019-05-30 18:04:51 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-30 18:04:51 -Generating unique operation named: updateUsingTRACE_9
2019-05-30 18:04:51 -Generating unique operation named: addUsingGET_14
2019-05-30 18:04:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-30 18:04:51 -Generating unique operation named: editUsingGET_15
2019-05-30 18:04:51 -Generating unique operation named: listUsingGET_16
2019-05-30 18:04:51 -Generating unique operation named: saveUsingPOST_13
2019-05-30 18:04:51 -Generating unique operation named: saveUsingPOST_14
2019-05-30 18:04:51 -Generating unique operation named: updateUsingPOST_15
2019-05-30 18:04:51 -Generating unique operation named: listUsingGET_17
2019-05-30 18:04:51 -Generating unique operation named: listUsingHEAD_1
2019-05-30 18:04:51 -Generating unique operation named: listUsingPOST_1
2019-05-30 18:04:51 -Generating unique operation named: listUsingPUT_1
2019-05-30 18:04:51 -Generating unique operation named: listUsingPATCH_1
2019-05-30 18:04:51 -Generating unique operation named: listUsingDELETE_1
2019-05-30 18:04:51 -Generating unique operation named: listUsingOPTIONS_1
2019-05-30 18:04:51 -Generating unique operation named: listUsingTRACE_1
2019-05-30 18:04:51 -Generating unique operation named: countDDUsingGET_1
2019-05-30 18:04:51 -Generating unique operation named: exportDDUsingGET_1
2019-05-30 18:04:51 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-30 18:04:51 -Generating unique operation named: addUsingGET_15
2019-05-30 18:04:51 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-30 18:04:51 -Generating unique operation named: editUsingGET_16
2019-05-30 18:04:51 -Generating unique operation named: listUsingGET_18
2019-05-30 18:04:51 -Generating unique operation named: removeUsingPOST_27
2019-05-30 18:04:51 -Generating unique operation named: saveUsingPOST_15
2019-05-30 18:04:51 -Generating unique operation named: treeUsingGET_3
2019-05-30 18:04:51 -Generating unique operation named: treeViewUsingGET_1
2019-05-30 18:04:51 -Generating unique operation named: updateUsingPOST_16
2019-05-30 18:04:51 -Generating unique operation named: addUsingGET_16
2019-05-30 18:04:51 -Generating unique operation named: editUsingGET_17
2019-05-30 18:04:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-30 18:04:51 -Generating unique operation named: listUsingGET_19
2019-05-30 18:04:51 -Generating unique operation named: removeUsingPOST_28
2019-05-30 18:04:51 -Generating unique operation named: removeUsingPOST_29
2019-05-30 18:04:51 -Generating unique operation named: saveUsingPOST_16
2019-05-30 18:04:51 -Generating unique operation named: updateUsingGET_10
2019-05-30 18:04:51 -Generating unique operation named: updateUsingHEAD_10
2019-05-30 18:04:51 -Generating unique operation named: updateUsingPOST_17
2019-05-30 18:04:51 -Generating unique operation named: updateUsingPUT_10
2019-05-30 18:04:51 -Generating unique operation named: updateUsingPATCH_10
2019-05-30 18:04:51 -Generating unique operation named: updateUsingDELETE_10
2019-05-30 18:04:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-30 18:04:51 -Generating unique operation named: updateUsingTRACE_10
2019-05-30 18:04:51 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-30 18:04:52 -Generating unique operation named: addUsingGET_17
2019-05-30 18:04:52 -Generating unique operation named: editUsingGET_18
2019-05-30 18:04:52 -Generating unique operation named: listUsingGET_20
2019-05-30 18:04:52 -Generating unique operation named: removeUsingPOST_30
2019-05-30 18:04:52 -Generating unique operation named: removeUsingPOST_31
2019-05-30 18:04:52 -Generating unique operation named: saveUsingPOST_17
2019-05-30 18:04:52 -Generating unique operation named: updateUsingGET_11
2019-05-30 18:04:52 -Generating unique operation named: updateUsingHEAD_11
2019-05-30 18:04:52 -Generating unique operation named: updateUsingPOST_18
2019-05-30 18:04:52 -Generating unique operation named: updateUsingPUT_11
2019-05-30 18:04:52 -Generating unique operation named: updateUsingPATCH_11
2019-05-30 18:04:52 -Generating unique operation named: updateUsingDELETE_11
2019-05-30 18:04:52 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-30 18:04:52 -Generating unique operation named: updateUsingTRACE_11
2019-05-30 18:04:52 -Generating unique operation named: addUsingGET_18
2019-05-30 18:04:52 -Generating unique operation named: editUsingGET_19
2019-05-30 18:04:52 -Generating unique operation named: listUsingGET_21
2019-05-30 18:04:52 -Generating unique operation named: removeUsingPOST_32
2019-05-30 18:04:52 -Generating unique operation named: removeUsingPOST_33
2019-05-30 18:04:52 -Generating unique operation named: saveUsingPOST_18
2019-05-30 18:04:52 -Generating unique operation named: updateUsingGET_12
2019-05-30 18:04:52 -Generating unique operation named: updateUsingHEAD_12
2019-05-30 18:04:52 -Generating unique operation named: updateUsingPOST_19
2019-05-30 18:04:52 -Generating unique operation named: updateUsingPUT_12
2019-05-30 18:04:52 -Generating unique operation named: updateUsingPATCH_12
2019-05-30 18:04:52 -Generating unique operation named: updateUsingDELETE_12
2019-05-30 18:04:52 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-30 18:04:52 -Generating unique operation named: updateUsingTRACE_12
2019-05-30 18:04:52 -Starting Quartz Scheduler now
2019-05-30 18:04:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-30 18:04:52 -Starting...
2019-05-30 18:04:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-30 18:04:52 -Started.
2019-05-30 18:04:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-30 18:04:52 -Using a shared selector for servlet write/read
2019-05-30 18:04:52 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-30 18:04:52 -Started BootdoApplication in 60.061 seconds (JVM running for 61.781)
2019-05-30 18:04:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-30 18:04:53 -==> Parameters: 
2019-05-30 18:04:53 -<==      Total: 1
2019-05-30 18:05:38 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-30 18:07:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-30 18:07:05 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-30 18:07:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 118 ms
2019-05-30 18:07:05 -Enabling session validation scheduler...
2019-05-30 18:07:05 -请求地址 : http://localhost:8081/login;JSESSIONID=883aab5b-c929-46e1-a67e-e2b88d477966
2019-05-30 18:07:05 -HTTP METHOD : GET
2019-05-30 18:07:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 18:07:05 -参数 : [{}]
2019-05-30 18:07:05 -耗时 : 4
2019-05-30 18:07:05 -返回值 : login
2019-05-30 18:07:07 -请求地址 : http://localhost:8081/getVerify
2019-05-30 18:07:07 -HTTP METHOD : GET
2019-05-30 18:07:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 18:07:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c458024, org.apache.shiro.web.servlet.ShiroHttpServletResponse@94717c8]
2019-05-30 18:07:18 -2328
2019-05-30 18:07:19 -耗时 : 11717
2019-05-30 18:07:19 -返回值 : null
2019-05-30 18:07:28 -请求地址 : http://localhost:8081/login
2019-05-30 18:07:28 -HTTP METHOD : POST
2019-05-30 18:07:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-30 18:07:28 -参数 : [admin, 111111, 2328, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2a1a2f96]
2019-05-30 18:07:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-30 18:07:29 -==> Parameters: admin(String)
2019-05-30 18:07:29 -<==      Total: 1
2019-05-30 18:07:29 -耗时 : 522
2019-05-30 18:07:29 -返回值 : {msg=操作成功, code=0}
2019-05-30 18:07:29 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-30 18:07:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 18:07:29 -==> Parameters: 1(Long), admin(String), 登录(String), 522(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-30 18:07:29.793(Timestamp)
2019-05-30 18:07:30 -请求地址 : http://localhost:8081/index
2019-05-30 18:07:30 -HTTP METHOD : GET
2019-05-30 18:07:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 18:07:30 -参数 : [{}]
2019-05-30 18:07:30 -<==    Updates: 1
2019-05-30 18:07:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 18:07:30 -==> Parameters: 1(Long)
2019-05-30 18:07:30 -<==      Total: 50
2019-05-30 18:07:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 18:07:30 -==> Parameters: 138(Long)
2019-05-30 18:07:30 -<==      Total: 1
2019-05-30 18:07:30 -耗时 : 645
2019-05-30 18:07:30 -返回值 : index_v1
2019-05-30 18:07:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 18:07:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 645(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 18:07:30.906(Timestamp)
2019-05-30 18:07:31 -<==    Updates: 1
2019-05-30 18:07:31 -请求地址 : http://localhost:8081/main
2019-05-30 18:07:31 -HTTP METHOD : GET
2019-05-30 18:07:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 18:07:31 -参数 : []
2019-05-30 18:07:31 -耗时 : 0
2019-05-30 18:07:31 -返回值 : main
2019-05-30 18:07:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 18:07:31 -HTTP METHOD : GET
2019-05-30 18:07:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 18:07:31 -参数 : []
2019-05-30 18:07:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 18:07:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 18:07:32 -请求地址 : http://localhost:8081/main
2019-05-30 18:07:32 -HTTP METHOD : GET
2019-05-30 18:07:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 18:07:32 -参数 : []
2019-05-30 18:07:32 -耗时 : 0
2019-05-30 18:07:32 -返回值 : main
2019-05-30 18:07:32 -<==      Total: 0
2019-05-30 18:07:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 18:07:32 -==> Parameters: 1(Long), 0(String)
2019-05-30 18:07:32 -<==      Total: 1
2019-05-30 18:07:32 -耗时 : 839
2019-05-30 18:07:32 -返回值 : com.bootdo.common.utils.PageUtils@10aa5c83
2019-05-30 18:07:39 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 18:07:39 -==> Parameters: 1(Long)
2019-05-30 18:07:39 -<==      Total: 94
2019-05-30 18:07:39 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-30 18:07:39 -HTTP METHOD : GET
2019-05-30 18:07:39 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-30 18:07:39 -参数 : []
2019-05-30 18:07:39 -耗时 : 0
2019-05-30 18:07:39 -返回值 : /moneyList/moneyList
2019-05-30 18:07:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 18:07:45 -HTTP METHOD : GET
2019-05-30 18:07:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 18:07:45 -参数 : []
2019-05-30 18:07:45 -耗时 : 0
2019-05-30 18:07:45 -返回值 : system/dept/deptTree
2019-05-30 18:07:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 18:07:45 -HTTP METHOD : GET
2019-05-30 18:07:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 18:07:45 -参数 : []
2019-05-30 18:07:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 18:07:45 -==> Parameters: 
2019-05-30 18:07:46 -<==      Total: 3
2019-05-30 18:07:46 -耗时 : 111
2019-05-30 18:07:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 18:07:48 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 18:07:48 -HTTP METHOD : POST
2019-05-30 18:07:48 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 18:07:48 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@29218996]
2019-05-30 18:07:48 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:07:48 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 18:07:49 -<==      Total: 3
2019-05-30 18:07:49 -耗时 : 314
2019-05-30 18:07:49 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7bfcd68e, com.bootdo.moneyList.damain.MoneyListDO@5bbe44bc, com.bootdo.moneyList.damain.MoneyListDO@198f9393]
2019-05-30 18:08:02 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 18:08:02 -HTTP METHOD : POST
2019-05-30 18:08:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 18:08:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@291a8199]
2019-05-30 18:08:02 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:08:02 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 18:08:02 -<==      Total: 3
2019-05-30 18:08:02 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 18:08:02 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 18:08:02 -<==      Total: 1
2019-05-30 18:08:02 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 18:08:02 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 18:08:02 -<==      Total: 1
2019-05-30 18:08:02 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 18:08:02 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 18:08:02 -<==      Total: 1
2019-05-30 18:08:02 -==>  Preparing: update water set water_sum = water_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:08:02 -==> Parameters: 1(String), A(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 18:08:02 -<==    Updates: 1
2019-05-30 18:08:02 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 18:08:02 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-30 18:08:02.329(Timestamp), 2019-02(String), 1(Long), 2019-05-30 18:08:02.33(Timestamp), 1(Long), null
2019-05-30 18:08:02 -<==    Updates: 1
2019-05-30 18:08:02 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 18:08:02 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), null, null, null, null, null, null, null, null, null, null, null, null, null, 6.30(BigDecimal), null, 30.00(BigDecimal), 1(BigDecimal), 2019-05-30 18:08:02.349(Timestamp), 2019-02(String), admin(String), 2019-05-30 18:08:02.349(Timestamp), admin(String), null
2019-05-30 18:08:02 -<==    Updates: 1
2019-05-30 18:08:02 -耗时 : 350
2019-05-30 18:08:02 -返回值 : 85
2019-05-30 18:08:04 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 18:08:04 -HTTP METHOD : POST
2019-05-30 18:08:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 18:08:04 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@74c086a]
2019-05-30 18:08:04 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:08:04 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 18:08:04 -<==      Total: 3
2019-05-30 18:08:04 -耗时 : 75
2019-05-30 18:08:04 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6f815156, com.bootdo.moneyList.damain.MoneyListDO@3f4b4e1c, com.bootdo.moneyList.damain.MoneyListDO@5da44185]
2019-05-30 18:08:07 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/85
2019-05-30 18:08:07 -HTTP METHOD : GET
2019-05-30 18:08:07 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-05-30 18:08:07 -参数 : [85, {}]
2019-05-30 18:08:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 18:08:07 -==> Parameters: 85(Long)
2019-05-30 18:08:07 -<==      Total: 1
2019-05-30 18:08:07 -耗时 : 32
2019-05-30 18:08:07 -返回值 : moneyList/moneyPrint
2019-05-30 18:09:02 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 18:09:02 -HTTP METHOD : POST
2019-05-30 18:09:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 18:09:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@bf0175e]
2019-05-30 18:09:02 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:09:02 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 18:09:02 -<==      Total: 3
2019-05-30 18:09:02 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 18:09:02 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 18:09:02 -<==      Total: 1
2019-05-30 18:09:02 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 18:09:02 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 18:09:02 -<==      Total: 1
2019-05-30 18:09:02 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 18:09:02 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 18:09:02 -<==      Total: 1
2019-05-30 18:09:02 -==>  Preparing: update water set water_sum = water_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:09:02 -==> Parameters: 1(String), A(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 18:09:02 -<==    Updates: 1
2019-05-30 18:09:02 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 18:09:02 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-30 18:09:02.314(Timestamp), 2019-02(String), 1(Long), 2019-05-30 18:09:02.314(Timestamp), 1(Long), null
2019-05-30 18:09:02 -<==    Updates: 1
2019-05-30 18:09:02 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 18:09:02 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), null, null, null, null, null, null, null, null, null, null, null, null, null, 6.30(BigDecimal), null, 31.00(BigDecimal), 1(BigDecimal), 2019-05-30 18:09:02.329(Timestamp), 2019-02(String), admin(String), 2019-05-30 18:09:02.329(Timestamp), admin(String), null
2019-05-30 18:09:02 -<==    Updates: 1
2019-05-30 18:09:02 -耗时 : 317
2019-05-30 18:09:02 -返回值 : 86
2019-05-30 18:09:03 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 18:09:03 -HTTP METHOD : POST
2019-05-30 18:09:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 18:09:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@df98c54]
2019-05-30 18:09:03 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:09:03 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 18:09:03 -<==      Total: 3
2019-05-30 18:09:03 -耗时 : 10
2019-05-30 18:09:03 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@39ff431c, com.bootdo.moneyList.damain.MoneyListDO@23a8f941, com.bootdo.moneyList.damain.MoneyListDO@196fba0f]
2019-05-30 18:09:06 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/86
2019-05-30 18:09:06 -HTTP METHOD : GET
2019-05-30 18:09:06 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-05-30 18:09:06 -参数 : [86, {}]
2019-05-30 18:09:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 18:09:06 -==> Parameters: 86(Long)
2019-05-30 18:09:06 -<==      Total: 1
2019-05-30 18:09:06 -耗时 : 6
2019-05-30 18:09:06 -返回值 : moneyList/moneyPrint
2019-05-30 18:18:22 -请求地址 : http://localhost:8081/login;JSESSIONID=8a64f913-9876-412f-bcd6-b65c18d835c9
2019-05-30 18:18:22 -HTTP METHOD : GET
2019-05-30 18:18:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 18:18:22 -参数 : [{}]
2019-05-30 18:18:22 -耗时 : 0
2019-05-30 18:18:22 -返回值 : login
2019-05-30 18:18:23 -请求地址 : http://localhost:8081/login
2019-05-30 18:18:23 -HTTP METHOD : GET
2019-05-30 18:18:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 18:18:23 -参数 : [{}]
2019-05-30 18:18:23 -耗时 : 0
2019-05-30 18:18:23 -返回值 : login
2019-05-30 18:18:30 -请求地址 : http://localhost:8081/login
2019-05-30 18:18:30 -HTTP METHOD : GET
2019-05-30 18:18:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 18:18:30 -参数 : [{}]
2019-05-30 18:18:30 -耗时 : 0
2019-05-30 18:18:30 -返回值 : login
2019-05-30 18:18:31 -请求地址 : http://localhost:8081/getVerify
2019-05-30 18:18:31 -HTTP METHOD : GET
2019-05-30 18:18:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 18:18:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@49658884, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5c48315f]
2019-05-30 18:18:31 -6873
2019-05-30 18:18:31 -耗时 : 15
2019-05-30 18:18:31 -返回值 : null
2019-05-30 18:18:31 -请求地址 : http://localhost:8081/login
2019-05-30 18:18:31 -HTTP METHOD : GET
2019-05-30 18:18:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 18:18:31 -参数 : [{}]
2019-05-30 18:18:31 -耗时 : 0
2019-05-30 18:18:31 -返回值 : login
2019-05-30 18:18:38 -请求地址 : http://localhost:8081/login
2019-05-30 18:18:38 -HTTP METHOD : POST
2019-05-30 18:18:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-30 18:18:38 -参数 : [admin, 111111, 6873, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2957eb90]
2019-05-30 18:18:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-30 18:18:38 -==> Parameters: admin(String)
2019-05-30 18:18:38 -<==      Total: 1
2019-05-30 18:18:38 -耗时 : 77
2019-05-30 18:18:38 -返回值 : {msg=操作成功, code=0}
2019-05-30 18:18:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 18:18:38 -==> Parameters: 1(Long), admin(String), 登录(String), 78(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-30 18:18:38.36(Timestamp)
2019-05-30 18:18:38 -请求地址 : http://localhost:8081/index
2019-05-30 18:18:38 -HTTP METHOD : GET
2019-05-30 18:18:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 18:18:38 -参数 : [{}]
2019-05-30 18:18:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 18:18:38 -==> Parameters: 1(Long)
2019-05-30 18:18:38 -<==    Updates: 1
2019-05-30 18:18:38 -<==      Total: 50
2019-05-30 18:18:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 18:18:38 -==> Parameters: 138(Long)
2019-05-30 18:18:38 -<==      Total: 1
2019-05-30 18:18:38 -耗时 : 183
2019-05-30 18:18:38 -返回值 : index_v1
2019-05-30 18:18:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 18:18:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 183(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 18:18:38.564(Timestamp)
2019-05-30 18:18:38 -请求地址 : http://localhost:8081/main
2019-05-30 18:18:38 -HTTP METHOD : GET
2019-05-30 18:18:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 18:18:38 -参数 : []
2019-05-30 18:18:38 -耗时 : 1
2019-05-30 18:18:38 -返回值 : main
2019-05-30 18:18:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 18:18:39 -HTTP METHOD : GET
2019-05-30 18:18:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 18:18:39 -参数 : []
2019-05-30 18:18:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 18:18:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 18:18:39 -<==      Total: 0
2019-05-30 18:18:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 18:18:39 -==> Parameters: 1(Long), 0(String)
2019-05-30 18:18:39 -<==      Total: 1
2019-05-30 18:18:39 -耗时 : 8
2019-05-30 18:18:39 -返回值 : com.bootdo.common.utils.PageUtils@79ff811c
2019-05-30 18:18:39 -请求地址 : http://localhost:8081/main
2019-05-30 18:18:39 -HTTP METHOD : GET
2019-05-30 18:18:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 18:18:39 -参数 : []
2019-05-30 18:18:39 -耗时 : 0
2019-05-30 18:18:39 -返回值 : main
2019-05-30 18:18:39 -<==    Updates: 1
2019-05-30 18:18:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 18:18:42 -==> Parameters: 1(Long)
2019-05-30 18:18:42 -<==      Total: 94
2019-05-30 18:18:42 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-30 18:18:42 -HTTP METHOD : GET
2019-05-30 18:18:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-30 18:18:42 -参数 : []
2019-05-30 18:18:42 -耗时 : 1
2019-05-30 18:18:42 -返回值 : /moneyList/moneyList
2019-05-30 18:18:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 18:18:46 -HTTP METHOD : GET
2019-05-30 18:18:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 18:18:46 -参数 : []
2019-05-30 18:18:46 -耗时 : 0
2019-05-30 18:18:46 -返回值 : system/dept/deptTree
2019-05-30 18:18:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 18:18:47 -HTTP METHOD : GET
2019-05-30 18:18:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 18:18:47 -参数 : []
2019-05-30 18:18:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 18:18:47 -==> Parameters: 
2019-05-30 18:18:47 -<==      Total: 3
2019-05-30 18:18:47 -耗时 : 6
2019-05-30 18:18:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 18:18:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 18:18:55 -HTTP METHOD : GET
2019-05-30 18:18:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 18:18:55 -参数 : []
2019-05-30 18:18:55 -耗时 : 0
2019-05-30 18:18:55 -返回值 : system/dept/deptTree
2019-05-30 18:18:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 18:18:55 -HTTP METHOD : GET
2019-05-30 18:18:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 18:18:55 -参数 : []
2019-05-30 18:18:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 18:18:55 -==> Parameters: 
2019-05-30 18:18:55 -<==      Total: 3
2019-05-30 18:18:55 -耗时 : 3
2019-05-30 18:18:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 18:18:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 18:18:57 -HTTP METHOD : GET
2019-05-30 18:18:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 18:18:57 -参数 : []
2019-05-30 18:18:57 -耗时 : 1
2019-05-30 18:18:57 -返回值 : system/dept/deptTree
2019-05-30 18:18:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 18:18:57 -HTTP METHOD : GET
2019-05-30 18:18:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 18:18:57 -参数 : []
2019-05-30 18:18:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 18:18:57 -==> Parameters: 
2019-05-30 18:18:57 -<==      Total: 3
2019-05-30 18:18:57 -耗时 : 4
2019-05-30 18:18:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 18:18:59 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 18:18:59 -HTTP METHOD : POST
2019-05-30 18:18:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 18:18:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5a308cde]
2019-05-30 18:18:59 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:18:59 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-05-30 18:19:00 -<==      Total: 3
2019-05-30 18:19:00 -耗时 : 241
2019-05-30 18:19:00 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@31432050, com.bootdo.moneyList.damain.MoneyListDO@3d6b8105, com.bootdo.moneyList.damain.MoneyListDO@2ed6b318]
2019-05-30 18:19:05 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 18:19:05 -HTTP METHOD : POST
2019-05-30 18:19:05 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 18:19:05 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@632a0dab]
2019-05-30 18:19:05 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:19:05 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-05-30 18:19:05 -<==      Total: 3
2019-05-30 18:19:05 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 18:19:05 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-05-30 18:19:05 -<==      Total: 0
2019-05-30 18:19:05 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 18:19:05 -==> Parameters: 1-0001(String), 2019-05(String), 2(String)
2019-05-30 18:19:05 -<==      Total: 0
2019-05-30 18:19:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 18:19:05 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), java.lang.NullPointerException(String), null, 2019-05-30 18:19:05.769(Timestamp)
2019-05-30 18:19:05 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:292)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$22fba3fc.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-30 18:19:05 -<==    Updates: 1
2019-05-30 18:19:11 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 18:19:11 -HTTP METHOD : POST
2019-05-30 18:19:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 18:19:11 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3b9b2c3c]
2019-05-30 18:19:11 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:19:11 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String), 2019-05(String), 2(String), 1-0001(String)
2019-05-30 18:19:11 -<==      Total: 3
2019-05-30 18:19:11 -耗时 : 9
2019-05-30 18:19:11 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7399b46e, com.bootdo.moneyList.damain.MoneyListDO@1e8b9923, com.bootdo.moneyList.damain.MoneyListDO@7c93ac02]
2019-05-30 18:19:18 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-30 18:19:34 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 18:19:34 -HTTP METHOD : POST
2019-05-30 18:19:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 18:19:34 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@16c1432b]
2019-05-30 18:19:34 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:19:34 -==> Parameters: 2018-02(String), 2(String), 1-0001(String), 2018-02(String), 2(String), 1-0001(String), 2018-02(String), 2(String), 1-0001(String)
2019-05-30 18:19:34 -<==      Total: 3
2019-05-30 18:19:34 -耗时 : 6
2019-05-30 18:19:34 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@45c25534, com.bootdo.moneyList.damain.MoneyListDO@52d8d430, com.bootdo.moneyList.damain.MoneyListDO@4e1c0d5b]
2019-05-30 18:19:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 18:19:37 -HTTP METHOD : GET
2019-05-30 18:19:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 18:19:37 -参数 : []
2019-05-30 18:19:37 -耗时 : 0
2019-05-30 18:19:37 -返回值 : system/dept/deptTree
2019-05-30 18:19:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 18:19:37 -HTTP METHOD : GET
2019-05-30 18:19:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 18:19:37 -参数 : []
2019-05-30 18:19:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 18:19:37 -==> Parameters: 
2019-05-30 18:19:37 -<==      Total: 3
2019-05-30 18:19:37 -耗时 : 6
2019-05-30 18:19:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 18:19:52 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 18:19:52 -HTTP METHOD : POST
2019-05-30 18:19:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 18:19:52 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3bf249e5]
2019-05-30 18:19:52 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:19:52 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 18:19:52 -<==      Total: 3
2019-05-30 18:19:52 -耗时 : 8
2019-05-30 18:19:52 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@36c9273, com.bootdo.moneyList.damain.MoneyListDO@7fdb64b4, com.bootdo.moneyList.damain.MoneyListDO@fe60242]
2019-05-30 18:19:59 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 18:19:59 -HTTP METHOD : POST
2019-05-30 18:19:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 18:19:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@686c5cea]
2019-05-30 18:19:59 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:19:59 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 18:19:59 -<==      Total: 3
2019-05-30 18:19:59 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 18:19:59 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 18:19:59 -<==      Total: 1
2019-05-30 18:19:59 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 18:19:59 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 18:19:59 -<==      Total: 1
2019-05-30 18:19:59 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 18:19:59 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 18:19:59 -<==      Total: 1
2019-05-30 18:19:59 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:19:59 -==> Parameters: 1(String), A(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 18:19:59 -<==    Updates: 1
2019-05-30 18:19:59 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 18:19:59 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-30 18:19:59.799(Timestamp), 2019-02(String), 1(Long), 2019-05-30 18:19:59.8(Timestamp), 1(Long), null
2019-05-30 18:20:00 -<==    Updates: 1
2019-05-30 18:20:00 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 18:20:00 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 55.67(BigDecimal), 100.00(BigDecimal), -72.35(BigDecimal), 1(BigDecimal), null, null, null, null, 2019-05-30 18:19:59.808(Timestamp), 2019-02(String), admin(String), 2019-05-30 18:19:59.808(Timestamp), admin(String), null
2019-05-30 18:20:00 -<==    Updates: 1
2019-05-30 18:20:00 -耗时 : 407
2019-05-30 18:20:00 -返回值 : 87
2019-05-30 18:20:01 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 18:20:01 -HTTP METHOD : POST
2019-05-30 18:20:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 18:20:01 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@18e90b6e]
2019-05-30 18:20:01 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 18:20:01 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 18:20:01 -<==      Total: 3
2019-05-30 18:20:01 -耗时 : 63
2019-05-30 18:20:01 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@483a127f, com.bootdo.moneyList.damain.MoneyListDO@748d7aa5, com.bootdo.moneyList.damain.MoneyListDO@24efbd21]
2019-05-30 18:20:03 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/87
2019-05-30 18:20:03 -HTTP METHOD : GET
2019-05-30 18:20:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-05-30 18:20:03 -参数 : [87, {}]
2019-05-30 18:20:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 18:20:03 -==> Parameters: 87(Long)
2019-05-30 18:20:03 -<==      Total: 1
2019-05-30 18:20:03 -耗时 : 7
2019-05-30 18:20:03 -返回值 : moneyList/moneyPrint
2019-05-30 21:28:29 -Starting BootdoApplication on PC-201905091110 with PID 36420 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-30 21:28:29 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-30 21:28:29 -The following profiles are active: dev
2019-05-30 21:28:30 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74cadd41: startup date [Thu May 30 21:28:30 CST 2019]; root of context hierarchy
2019-05-30 21:28:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-30 21:28:41 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$50f1a346] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 21:28:41 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$434ad1ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 21:28:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 21:28:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 21:28:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 21:28:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-30 21:28:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-30 21:28:43 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 21:28:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 21:28:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 21:28:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 21:28:45 -Tomcat initialized with port(s): 8081 (http)
2019-05-30 21:28:45 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-30 21:28:45 -Starting service [Tomcat]
2019-05-30 21:28:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-30 21:28:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;.]
2019-05-30 21:28:46 -Initializing Spring embedded WebApplicationContext
2019-05-30 21:28:46 -Root WebApplicationContext: initialization completed in 15702 ms
2019-05-30 21:28:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-30 21:28:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-30 21:28:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-30 21:28:46 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-30 21:28:46 -Filter xssFilter was not registered (disabled)
2019-05-30 21:28:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-30 21:28:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-30 21:28:46 -Servlet statViewServlet mapped to [/druid/*]
2019-05-30 21:28:46 -Servlet dispatcherServlet mapped to [/]
2019-05-30 21:28:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74cadd41: startup date [Thu May 30 21:28:30 CST 2019]; root of context hierarchy
2019-05-30 21:28:52 -Using default implementation for ThreadExecutor
2019-05-30 21:28:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-30 21:28:52 -Quartz Scheduler v.2.2.1 created.
2019-05-30 21:28:52 -RAMJobStore initialized.
2019-05-30 21:28:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-30 21:28:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-30 21:28:52 -Quartz scheduler version: 2.2.1
2019-05-30 21:28:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@ace2408
2019-05-30 21:28:53 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-30 21:28:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-30 21:28:56 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-30 21:28:56 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 21:28:56 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-30 21:28:56 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 21:28:56 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-30 21:28:56 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-30 21:28:56 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 21:28:56 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-30 21:28:56 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-30 21:28:56 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 21:28:56 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 21:28:56 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-30 21:28:56 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 21:28:56 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-30 21:28:56 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 21:28:56 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-30 21:28:56 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 21:28:56 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-30 21:28:56 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-30 21:28:56 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 21:28:56 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 21:28:56 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-30 21:28:56 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 21:28:56 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-30 21:28:56 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-30 21:28:56 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-30 21:28:56 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-30 21:28:56 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-30 21:28:56 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-30 21:28:56 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-30 21:28:56 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-30 21:28:56 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-30 21:28:56 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-30 21:28:56 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-30 21:28:56 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-30 21:28:56 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-30 21:28:56 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-30 21:28:56 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 21:28:56 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-30 21:28:56 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 21:28:56 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-30 21:28:56 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-30 21:28:56 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-30 21:28:56 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-30 21:28:56 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-30 21:28:56 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-30 21:28:56 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-30 21:28:56 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-30 21:28:56 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-30 21:28:56 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 21:28:56 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 21:28:56 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-30 21:28:56 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-30 21:28:56 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 21:28:56 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-30 21:28:56 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-30 21:28:56 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-30 21:28:56 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-30 21:28:56 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-30 21:28:56 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-30 21:28:56 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 21:28:56 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-30 21:28:56 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-30 21:28:56 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-30 21:28:56 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-30 21:28:56 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-30 21:28:56 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-30 21:28:56 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-30 21:28:56 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 21:28:56 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-30 21:28:56 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-30 21:28:56 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 21:28:56 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 21:28:56 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-30 21:28:56 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-30 21:28:56 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 21:28:56 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-30 21:28:56 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-30 21:28:56 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-30 21:28:56 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-30 21:28:56 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-30 21:28:56 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-30 21:28:56 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-30 21:28:56 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 21:28:56 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-30 21:28:56 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-30 21:28:56 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-30 21:28:56 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-30 21:28:56 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-30 21:28:56 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-30 21:28:56 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-30 21:28:56 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-30 21:28:56 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-30 21:28:56 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-30 21:28:56 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-30 21:28:56 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-30 21:28:56 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-30 21:28:56 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-30 21:28:56 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-30 21:28:56 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-30 21:28:56 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-30 21:28:56 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-30 21:28:56 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-30 21:28:56 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 21:28:56 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-30 21:28:56 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-30 21:28:56 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-30 21:28:56 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-30 21:28:56 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-30 21:28:56 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-30 21:28:56 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-30 21:28:56 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-30 21:28:56 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-30 21:28:56 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-30 21:28:56 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-30 21:28:56 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-30 21:28:56 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-30 21:28:56 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-30 21:28:56 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-30 21:28:56 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-30 21:28:56 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-30 21:28:56 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 21:28:56 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 21:28:56 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 21:28:56 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-30 21:28:56 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-30 21:28:56 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-30 21:28:56 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-30 21:28:56 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-30 21:28:56 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 21:28:56 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-30 21:28:56 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-30 21:28:56 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-30 21:28:56 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-30 21:28:56 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 21:28:56 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 21:28:56 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 21:28:56 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 21:28:56 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-30 21:28:56 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 21:28:56 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-30 21:28:56 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-30 21:28:56 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 21:28:56 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 21:28:56 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-30 21:28:56 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-30 21:28:56 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-30 21:28:57 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-30 21:28:57 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-30 21:28:57 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-30 21:28:58 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 21:28:58 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74cadd41: startup date [Thu May 30 21:28:30 CST 2019]; root of context hierarchy
2019-05-30 21:28:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 21:28:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 21:28:59 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 21:28:59 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-30 21:28:59 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-30 21:29:02 -Registering beans for JMX exposure on startup
2019-05-30 21:29:02 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-30 21:29:02 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-30 21:29:02 -Starting beans in phase 2147483647
2019-05-30 21:29:02 -Context refreshed
2019-05-30 21:29:02 -Found 1 custom documentation plugin(s)
2019-05-30 21:29:02 -Scanning for api listing references
2019-05-30 21:29:03 -Generating unique operation named: getCountDUsingPOST_1
2019-05-30 21:29:03 -Generating unique operation named: removeUsingPOST_1
2019-05-30 21:29:03 -Generating unique operation named: addUsingGET_1
2019-05-30 21:29:03 -Generating unique operation named: editUsingGET_1
2019-05-30 21:29:03 -Generating unique operation named: listUsingGET_1
2019-05-30 21:29:03 -Generating unique operation named: removeUsingPOST_2
2019-05-30 21:29:03 -Generating unique operation named: removeUsingPOST_3
2019-05-30 21:29:04 -Generating unique operation named: saveUsingPOST_1
2019-05-30 21:29:04 -Generating unique operation named: updateUsingGET_1
2019-05-30 21:29:04 -Generating unique operation named: updateUsingHEAD_1
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPOST_1
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPUT_1
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPATCH_1
2019-05-30 21:29:04 -Generating unique operation named: updateUsingDELETE_1
2019-05-30 21:29:04 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-30 21:29:04 -Generating unique operation named: updateUsingTRACE_1
2019-05-30 21:29:04 -Generating unique operation named: addUsingGET_2
2019-05-30 21:29:04 -Generating unique operation named: editUsingGET_2
2019-05-30 21:29:04 -Generating unique operation named: listUsingGET_2
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_4
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_5
2019-05-30 21:29:04 -Generating unique operation named: saveUsingPOST_2
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPOST_2
2019-05-30 21:29:04 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-30 21:29:04 -Generating unique operation named: addUsingGET_3
2019-05-30 21:29:04 -Generating unique operation named: editUsingGET_3
2019-05-30 21:29:04 -Generating unique operation named: listUsingGET_3
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_6
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_7
2019-05-30 21:29:04 -Generating unique operation named: saveUsingPOST_3
2019-05-30 21:29:04 -Generating unique operation named: updateUsingGET_2
2019-05-30 21:29:04 -Generating unique operation named: updateUsingHEAD_2
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPOST_3
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPUT_2
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPATCH_2
2019-05-30 21:29:04 -Generating unique operation named: updateUsingDELETE_2
2019-05-30 21:29:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-30 21:29:04 -Generating unique operation named: updateUsingTRACE_2
2019-05-30 21:29:04 -Generating unique operation named: addUsingGET_4
2019-05-30 21:29:04 -Generating unique operation named: editUsingGET_4
2019-05-30 21:29:04 -Generating unique operation named: listUsingGET_4
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_8
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_9
2019-05-30 21:29:04 -Generating unique operation named: saveUsingPOST_4
2019-05-30 21:29:04 -Generating unique operation named: updateUsingGET_3
2019-05-30 21:29:04 -Generating unique operation named: updateUsingHEAD_3
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPOST_4
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPUT_3
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPATCH_3
2019-05-30 21:29:04 -Generating unique operation named: updateUsingDELETE_3
2019-05-30 21:29:04 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-30 21:29:04 -Generating unique operation named: updateUsingTRACE_3
2019-05-30 21:29:04 -Generating unique operation named: ElecUsingGET_1
2019-05-30 21:29:04 -Generating unique operation named: addUsingGET_5
2019-05-30 21:29:04 -Generating unique operation named: editUsingGET_5
2019-05-30 21:29:04 -Generating unique operation named: listUsingGET_5
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_10
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_11
2019-05-30 21:29:04 -Generating unique operation named: saveUsingPOST_5
2019-05-30 21:29:04 -Generating unique operation named: updateUsingGET_4
2019-05-30 21:29:04 -Generating unique operation named: updateUsingHEAD_4
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPOST_5
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPUT_4
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPATCH_4
2019-05-30 21:29:04 -Generating unique operation named: updateUsingDELETE_4
2019-05-30 21:29:04 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-30 21:29:04 -Generating unique operation named: updateUsingTRACE_4
2019-05-30 21:29:04 -Generating unique operation named: editUsingGET_6
2019-05-30 21:29:04 -Generating unique operation named: listUsingGET_6
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPOST_6
2019-05-30 21:29:04 -Generating unique operation named: addUsingGET_6
2019-05-30 21:29:04 -Generating unique operation named: editUsingGET_7
2019-05-30 21:29:04 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-30 21:29:04 -Generating unique operation named: listUsingGET_7
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_12
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_13
2019-05-30 21:29:04 -Generating unique operation named: saveUsingPOST_6
2019-05-30 21:29:04 -Generating unique operation named: updateUsingGET_5
2019-05-30 21:29:04 -Generating unique operation named: updateUsingHEAD_5
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPOST_7
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPUT_5
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPATCH_5
2019-05-30 21:29:04 -Generating unique operation named: updateUsingDELETE_5
2019-05-30 21:29:04 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-30 21:29:04 -Generating unique operation named: updateUsingTRACE_5
2019-05-30 21:29:04 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-30 21:29:04 -Generating unique operation named: addUsingGET_7
2019-05-30 21:29:04 -Generating unique operation named: editUsingGET_8
2019-05-30 21:29:04 -Generating unique operation named: listUsingGET_8
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_14
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_15
2019-05-30 21:29:04 -Generating unique operation named: saveUsingPOST_7
2019-05-30 21:29:04 -Generating unique operation named: updateUsingGET_6
2019-05-30 21:29:04 -Generating unique operation named: updateUsingHEAD_6
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPOST_8
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPUT_6
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPATCH_6
2019-05-30 21:29:04 -Generating unique operation named: updateUsingDELETE_6
2019-05-30 21:29:04 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-30 21:29:04 -Generating unique operation named: updateUsingTRACE_6
2019-05-30 21:29:04 -Generating unique operation named: addUsingGET_8
2019-05-30 21:29:04 -Generating unique operation named: editUsingGET_9
2019-05-30 21:29:04 -Generating unique operation named: listUsingGET_9
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_16
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_17
2019-05-30 21:29:04 -Generating unique operation named: saveUsingPOST_8
2019-05-30 21:29:04 -Generating unique operation named: updateUsingGET_7
2019-05-30 21:29:04 -Generating unique operation named: updateUsingHEAD_7
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPOST_9
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPUT_7
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPATCH_7
2019-05-30 21:29:04 -Generating unique operation named: updateUsingDELETE_7
2019-05-30 21:29:04 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-30 21:29:04 -Generating unique operation named: updateUsingTRACE_7
2019-05-30 21:29:04 -Generating unique operation named: addUsingGET_9
2019-05-30 21:29:04 -Generating unique operation named: editUsingGET_10
2019-05-30 21:29:04 -Generating unique operation named: infoUsingGET_1
2019-05-30 21:29:04 -Generating unique operation named: infoUsingHEAD_1
2019-05-30 21:29:04 -Generating unique operation named: infoUsingPOST_1
2019-05-30 21:29:04 -Generating unique operation named: infoUsingPUT_1
2019-05-30 21:29:04 -Generating unique operation named: infoUsingPATCH_1
2019-05-30 21:29:04 -Generating unique operation named: infoUsingDELETE_1
2019-05-30 21:29:04 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-30 21:29:04 -Generating unique operation named: infoUsingTRACE_1
2019-05-30 21:29:04 -Generating unique operation named: listUsingGET_10
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_18
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_19
2019-05-30 21:29:04 -Generating unique operation named: saveUsingPOST_9
2019-05-30 21:29:04 -Generating unique operation named: updateUsingPOST_10
2019-05-30 21:29:04 -Generating unique operation named: listUsingGET_11
2019-05-30 21:29:04 -Generating unique operation named: removeUsingPOST_20
2019-05-30 21:29:04 -Generating unique operation named: welcomeUsingGET_1
2019-05-30 21:29:05 -Generating unique operation named: addUsingGET_10
2019-05-30 21:29:05 -Generating unique operation named: editUsingGET_11
2019-05-30 21:29:05 -Generating unique operation named: listUsingGET_12
2019-05-30 21:29:05 -Generating unique operation named: removeUsingPOST_21
2019-05-30 21:29:05 -Generating unique operation named: saveUsingPOST_10
2019-05-30 21:29:05 -Generating unique operation named: treeUsingGET_1
2019-05-30 21:29:05 -Generating unique operation named: treeUsingGET_2
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPOST_11
2019-05-30 21:29:05 -Generating unique operation named: addUsingGET_11
2019-05-30 21:29:05 -Generating unique operation named: editUsingGET_12
2019-05-30 21:29:05 -Generating unique operation named: listUsingGET_13
2019-05-30 21:29:05 -Generating unique operation named: removeUsingPOST_22
2019-05-30 21:29:05 -Generating unique operation named: removeUsingPOST_23
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPOST_12
2019-05-30 21:29:05 -Generating unique operation named: addUsingGET_12
2019-05-30 21:29:05 -Generating unique operation named: editUsingGET_13
2019-05-30 21:29:05 -Generating unique operation named: listUsingGET_14
2019-05-30 21:29:05 -Generating unique operation named: removeUsingPOST_24
2019-05-30 21:29:05 -Generating unique operation named: removeUsingPOST_25
2019-05-30 21:29:05 -Generating unique operation named: saveUsingPOST_11
2019-05-30 21:29:05 -Generating unique operation named: updateUsingGET_8
2019-05-30 21:29:05 -Generating unique operation named: updateUsingHEAD_8
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPOST_13
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPUT_8
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPATCH_8
2019-05-30 21:29:05 -Generating unique operation named: updateUsingDELETE_8
2019-05-30 21:29:05 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-30 21:29:05 -Generating unique operation named: updateUsingTRACE_8
2019-05-30 21:29:05 -Generating unique operation named: addUsingGET_13
2019-05-30 21:29:05 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-30 21:29:05 -Generating unique operation named: editUsingGET_14
2019-05-30 21:29:05 -Generating unique operation named: listUsingGET_15
2019-05-30 21:29:05 -Generating unique operation named: printEditUsingGET_1
2019-05-30 21:29:05 -Generating unique operation named: removeUsingPOST_26
2019-05-30 21:29:05 -Generating unique operation named: saveUsingPOST_12
2019-05-30 21:29:05 -Generating unique operation named: updateUsingGET_9
2019-05-30 21:29:05 -Generating unique operation named: updateUsingHEAD_9
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPOST_14
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPUT_9
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPATCH_9
2019-05-30 21:29:05 -Generating unique operation named: updateUsingDELETE_9
2019-05-30 21:29:05 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-30 21:29:05 -Generating unique operation named: updateUsingTRACE_9
2019-05-30 21:29:05 -Generating unique operation named: addUsingGET_14
2019-05-30 21:29:05 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-30 21:29:05 -Generating unique operation named: editUsingGET_15
2019-05-30 21:29:05 -Generating unique operation named: listUsingGET_16
2019-05-30 21:29:05 -Generating unique operation named: saveUsingPOST_13
2019-05-30 21:29:05 -Generating unique operation named: saveUsingPOST_14
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPOST_15
2019-05-30 21:29:05 -Generating unique operation named: listUsingGET_17
2019-05-30 21:29:05 -Generating unique operation named: listUsingHEAD_1
2019-05-30 21:29:05 -Generating unique operation named: listUsingPOST_1
2019-05-30 21:29:05 -Generating unique operation named: listUsingPUT_1
2019-05-30 21:29:05 -Generating unique operation named: listUsingPATCH_1
2019-05-30 21:29:05 -Generating unique operation named: listUsingDELETE_1
2019-05-30 21:29:05 -Generating unique operation named: listUsingOPTIONS_1
2019-05-30 21:29:05 -Generating unique operation named: listUsingTRACE_1
2019-05-30 21:29:05 -Generating unique operation named: countDDUsingGET_1
2019-05-30 21:29:05 -Generating unique operation named: exportDDUsingGET_1
2019-05-30 21:29:05 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-30 21:29:05 -Generating unique operation named: addUsingGET_15
2019-05-30 21:29:05 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-30 21:29:05 -Generating unique operation named: editUsingGET_16
2019-05-30 21:29:05 -Generating unique operation named: listUsingGET_18
2019-05-30 21:29:05 -Generating unique operation named: removeUsingPOST_27
2019-05-30 21:29:05 -Generating unique operation named: saveUsingPOST_15
2019-05-30 21:29:05 -Generating unique operation named: treeUsingGET_3
2019-05-30 21:29:05 -Generating unique operation named: treeViewUsingGET_1
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPOST_16
2019-05-30 21:29:05 -Generating unique operation named: addUsingGET_16
2019-05-30 21:29:05 -Generating unique operation named: editUsingGET_17
2019-05-30 21:29:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-30 21:29:05 -Generating unique operation named: listUsingGET_19
2019-05-30 21:29:05 -Generating unique operation named: removeUsingPOST_28
2019-05-30 21:29:05 -Generating unique operation named: removeUsingPOST_29
2019-05-30 21:29:05 -Generating unique operation named: saveUsingPOST_16
2019-05-30 21:29:05 -Generating unique operation named: updateUsingGET_10
2019-05-30 21:29:05 -Generating unique operation named: updateUsingHEAD_10
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPOST_17
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPUT_10
2019-05-30 21:29:05 -Generating unique operation named: updateUsingPATCH_10
2019-05-30 21:29:05 -Generating unique operation named: updateUsingDELETE_10
2019-05-30 21:29:05 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-30 21:29:05 -Generating unique operation named: updateUsingTRACE_10
2019-05-30 21:29:05 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-30 21:29:05 -Generating unique operation named: addUsingGET_17
2019-05-30 21:29:05 -Generating unique operation named: editUsingGET_18
2019-05-30 21:29:06 -Generating unique operation named: listUsingGET_20
2019-05-30 21:29:06 -Generating unique operation named: removeUsingPOST_30
2019-05-30 21:29:06 -Generating unique operation named: removeUsingPOST_31
2019-05-30 21:29:06 -Generating unique operation named: saveUsingPOST_17
2019-05-30 21:29:06 -Generating unique operation named: updateUsingGET_11
2019-05-30 21:29:06 -Generating unique operation named: updateUsingHEAD_11
2019-05-30 21:29:06 -Generating unique operation named: updateUsingPOST_18
2019-05-30 21:29:06 -Generating unique operation named: updateUsingPUT_11
2019-05-30 21:29:06 -Generating unique operation named: updateUsingPATCH_11
2019-05-30 21:29:06 -Generating unique operation named: updateUsingDELETE_11
2019-05-30 21:29:06 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-30 21:29:06 -Generating unique operation named: updateUsingTRACE_11
2019-05-30 21:29:06 -Generating unique operation named: addUsingGET_18
2019-05-30 21:29:06 -Generating unique operation named: editUsingGET_19
2019-05-30 21:29:06 -Generating unique operation named: listUsingGET_21
2019-05-30 21:29:06 -Generating unique operation named: removeUsingPOST_32
2019-05-30 21:29:06 -Generating unique operation named: removeUsingPOST_33
2019-05-30 21:29:06 -Generating unique operation named: saveUsingPOST_18
2019-05-30 21:29:06 -Generating unique operation named: updateUsingGET_12
2019-05-30 21:29:06 -Generating unique operation named: updateUsingHEAD_12
2019-05-30 21:29:06 -Generating unique operation named: updateUsingPOST_19
2019-05-30 21:29:06 -Generating unique operation named: updateUsingPUT_12
2019-05-30 21:29:06 -Generating unique operation named: updateUsingPATCH_12
2019-05-30 21:29:06 -Generating unique operation named: updateUsingDELETE_12
2019-05-30 21:29:06 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-30 21:29:06 -Generating unique operation named: updateUsingTRACE_12
2019-05-30 21:29:06 -Starting Quartz Scheduler now
2019-05-30 21:29:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-30 21:29:06 -Starting...
2019-05-30 21:29:06 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-30 21:29:06 -Started.
2019-05-30 21:29:06 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-30 21:29:06 -Using a shared selector for servlet write/read
2019-05-30 21:29:06 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-30 21:29:06 -Started BootdoApplication in 45.057 seconds (JVM running for 74.682)
2019-05-30 21:29:06 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-30 21:29:06 -==> Parameters: 
2019-05-30 21:29:06 -<==      Total: 1
2019-05-30 21:29:57 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-30 21:31:46 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-30 21:31:46 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-30 21:31:46 -FrameworkServlet 'dispatcherServlet': initialization completed in 81 ms
2019-05-30 21:31:46 -Enabling session validation scheduler...
2019-05-30 21:31:46 -请求地址 : http://localhost:8081/login;JSESSIONID=504c6b1f-3866-4be0-8cf8-da189e15e7eb
2019-05-30 21:31:46 -HTTP METHOD : GET
2019-05-30 21:31:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 21:31:46 -参数 : [{}]
2019-05-30 21:31:46 -耗时 : 53
2019-05-30 21:31:46 -返回值 : login
2019-05-30 21:31:51 -请求地址 : http://localhost:8081/getVerify
2019-05-30 21:31:51 -HTTP METHOD : GET
2019-05-30 21:31:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 21:31:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6d3629ac, org.apache.shiro.web.servlet.ShiroHttpServletResponse@63f1ca7a]
2019-05-30 21:31:58 -9999
2019-05-30 21:31:58 -耗时 : 7119
2019-05-30 21:31:58 -返回值 : null
2019-05-30 21:32:11 -请求地址 : http://localhost:8081/login
2019-05-30 21:32:11 -HTTP METHOD : POST
2019-05-30 21:32:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-30 21:32:11 -参数 : [admin, 111111, 9999, org.apache.shiro.web.servlet.ShiroHttpServletRequest@424ca63d]
2019-05-30 21:32:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-30 21:32:11 -==> Parameters: admin(String)
2019-05-30 21:32:12 -<==      Total: 1
2019-05-30 21:32:12 -耗时 : 750
2019-05-30 21:32:12 -返回值 : {msg=操作成功, code=0}
2019-05-30 21:32:12 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-30 21:32:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 21:32:12 -==> Parameters: 1(Long), admin(String), 登录(String), 750(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-30 21:32:12.376(Timestamp)
2019-05-30 21:32:12 -请求地址 : http://localhost:8081/index
2019-05-30 21:32:12 -HTTP METHOD : GET
2019-05-30 21:32:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 21:32:12 -参数 : [{}]
2019-05-30 21:32:13 -<==    Updates: 1
2019-05-30 21:32:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 21:32:13 -==> Parameters: 1(Long)
2019-05-30 21:32:13 -<==      Total: 50
2019-05-30 21:32:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 21:32:13 -==> Parameters: 138(Long)
2019-05-30 21:32:13 -<==      Total: 1
2019-05-30 21:32:13 -耗时 : 926
2019-05-30 21:32:13 -返回值 : index_v1
2019-05-30 21:32:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 21:32:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 926(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 21:32:14.446(Timestamp)
2019-05-30 21:32:14 -请求地址 : http://localhost:8081/main
2019-05-30 21:32:14 -HTTP METHOD : GET
2019-05-30 21:32:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 21:32:14 -参数 : []
2019-05-30 21:32:14 -耗时 : 0
2019-05-30 21:32:14 -返回值 : main
2019-05-30 21:32:14 -<==    Updates: 1
2019-05-30 21:32:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 21:32:16 -HTTP METHOD : GET
2019-05-30 21:32:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 21:32:16 -参数 : []
2019-05-30 21:32:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 21:32:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 21:32:16 -请求地址 : http://localhost:8081/main
2019-05-30 21:32:16 -HTTP METHOD : GET
2019-05-30 21:32:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 21:32:16 -参数 : []
2019-05-30 21:32:16 -耗时 : 0
2019-05-30 21:32:16 -返回值 : main
2019-05-30 21:32:16 -<==      Total: 0
2019-05-30 21:32:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 21:32:16 -==> Parameters: 1(Long), 0(String)
2019-05-30 21:32:16 -<==      Total: 1
2019-05-30 21:32:16 -耗时 : 252
2019-05-30 21:32:16 -返回值 : com.bootdo.common.utils.PageUtils@2ab3ba22
2019-05-30 21:32:21 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/501/bogjf218/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-30 21:32:21 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-30 21:32:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 21:32:25 -==> Parameters: 1(Long)
2019-05-30 21:32:25 -<==      Total: 94
2019-05-30 21:32:25 -请求地址 : http://localhost:8081/print/print
2019-05-30 21:32:25 -HTTP METHOD : GET
2019-05-30 21:32:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-30 21:32:25 -参数 : []
2019-05-30 21:32:25 -耗时 : 1
2019-05-30 21:32:25 -返回值 : print/print/print
2019-05-30 21:32:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 21:32:25 -HTTP METHOD : GET
2019-05-30 21:32:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 21:32:25 -参数 : [userType]
2019-05-30 21:32:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 21:32:25 -==> Parameters: userType(String)
2019-05-30 21:32:25 -请求地址 : http://localhost:8081/print/print/list
2019-05-30 21:32:25 -HTTP METHOD : GET
2019-05-30 21:32:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-30 21:32:25 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-30 21:32:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-30 21:32:25 -==> Parameters: 0(Integer), 10(Integer)
2019-05-30 21:32:25 -<==      Total: 4
2019-05-30 21:32:25 -耗时 : 125
2019-05-30 21:32:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 21:32:26 -<==      Total: 5
2019-05-30 21:32:26 -==>  Preparing: select count(*) from print 
2019-05-30 21:32:26 -==> Parameters: 
2019-05-30 21:32:26 -<==      Total: 1
2019-05-30 21:32:26 -耗时 : 245
2019-05-30 21:32:26 -返回值 : com.bootdo.common.utils.PageUtils@263210b3
2019-05-30 21:32:27 -请求地址 : http://localhost:8081/print/print/printEdit/83
2019-05-30 21:32:27 -HTTP METHOD : GET
2019-05-30 21:32:27 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-30 21:32:27 -参数 : [83, {}]
2019-05-30 21:32:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 21:32:27 -==> Parameters: 83(Long)
2019-05-30 21:32:27 -<==      Total: 1
2019-05-30 21:32:27 -耗时 : 44
2019-05-30 21:32:27 -返回值 : print/print/printEdit
2019-05-30 21:32:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 21:32:28 -HTTP METHOD : GET
2019-05-30 21:32:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 21:32:28 -参数 : [userType]
2019-05-30 21:32:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 21:32:28 -==> Parameters: userType(String)
2019-05-30 21:32:28 -<==      Total: 4
2019-05-30 21:32:28 -耗时 : 121
2019-05-30 21:32:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 21:38:11 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-05-30 21:38:11 -HTTP METHOD : POST
2019-05-30 21:38:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-05-30 21:38:11 -参数 : [[Ljava.lang.Long;@57da9439]
2019-05-30 21:38:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? ) 
2019-05-30 21:38:11 -==> Parameters: 83(Long), 84(Long)
2019-05-30 21:38:11 -<==      Total: 2
2019-05-30 21:38:11 -耗时 : 112
2019-05-30 21:38:11 -返回值 : [com.bootdo.print.vo.PrintVo@47894283, com.bootdo.print.vo.PrintVo@7183b92]
2019-05-30 21:39:01 -请求地址 : http://localhost:8081/index
2019-05-30 21:39:01 -HTTP METHOD : GET
2019-05-30 21:39:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 21:39:01 -参数 : [{}]
2019-05-30 21:39:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 21:39:01 -==> Parameters: 1(Long)
2019-05-30 21:39:01 -<==      Total: 50
2019-05-30 21:39:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 21:39:01 -==> Parameters: 138(Long)
2019-05-30 21:39:01 -<==      Total: 1
2019-05-30 21:39:01 -耗时 : 154
2019-05-30 21:39:01 -返回值 : index_v1
2019-05-30 21:39:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 21:39:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 155(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 21:39:01.885(Timestamp)
2019-05-30 21:39:02 -请求地址 : http://localhost:8081/main
2019-05-30 21:39:02 -HTTP METHOD : GET
2019-05-30 21:39:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 21:39:02 -参数 : []
2019-05-30 21:39:02 -耗时 : 1
2019-05-30 21:39:02 -返回值 : main
2019-05-30 21:39:02 -<==    Updates: 1
2019-05-30 21:39:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 21:39:02 -HTTP METHOD : GET
2019-05-30 21:39:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 21:39:02 -参数 : []
2019-05-30 21:39:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 21:39:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 21:39:02 -<==      Total: 0
2019-05-30 21:39:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 21:39:02 -==> Parameters: 1(Long), 0(String)
2019-05-30 21:39:02 -<==      Total: 1
2019-05-30 21:39:02 -耗时 : 75
2019-05-30 21:39:02 -返回值 : com.bootdo.common.utils.PageUtils@25b3b889
2019-05-30 21:39:02 -请求地址 : http://localhost:8081/main
2019-05-30 21:39:02 -HTTP METHOD : GET
2019-05-30 21:39:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 21:39:02 -参数 : []
2019-05-30 21:39:02 -耗时 : 0
2019-05-30 21:39:02 -返回值 : main
2019-05-30 21:39:16 -请求地址 : http://localhost:8081/print/print
2019-05-30 21:39:16 -HTTP METHOD : GET
2019-05-30 21:39:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-30 21:39:16 -参数 : []
2019-05-30 21:39:16 -耗时 : 1
2019-05-30 21:39:16 -返回值 : print/print/print
2019-05-30 21:39:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 21:39:17 -HTTP METHOD : GET
2019-05-30 21:39:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 21:39:17 -参数 : [userType]
2019-05-30 21:39:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 21:39:17 -==> Parameters: userType(String)
2019-05-30 21:39:17 -<==      Total: 4
2019-05-30 21:39:17 -耗时 : 8
2019-05-30 21:39:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 21:39:17 -请求地址 : http://localhost:8081/print/print/list
2019-05-30 21:39:17 -HTTP METHOD : GET
2019-05-30 21:39:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-30 21:39:17 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-30 21:39:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-30 21:39:17 -==> Parameters: 0(Integer), 10(Integer)
2019-05-30 21:39:17 -<==      Total: 5
2019-05-30 21:39:17 -==>  Preparing: select count(*) from print 
2019-05-30 21:39:17 -==> Parameters: 
2019-05-30 21:39:17 -<==      Total: 1
2019-05-30 21:39:17 -耗时 : 10
2019-05-30 21:39:17 -返回值 : com.bootdo.common.utils.PageUtils@46f5edb7
2019-05-30 21:39:26 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-05-30 21:39:26 -HTTP METHOD : POST
2019-05-30 21:39:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-05-30 21:39:26 -参数 : [[Ljava.lang.Long;@630711ba]
2019-05-30 21:39:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? ) 
2019-05-30 21:39:26 -==> Parameters: 84(Long), 85(Long)
2019-05-30 21:39:26 -<==      Total: 2
2019-05-30 21:39:26 -耗时 : 43
2019-05-30 21:39:26 -返回值 : [com.bootdo.print.vo.PrintVo@4e52044f, com.bootdo.print.vo.PrintVo@10bf8723]
2019-05-30 21:39:36 -请求地址 : http://localhost:8081/index
2019-05-30 21:39:36 -HTTP METHOD : GET
2019-05-30 21:39:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 21:39:36 -参数 : [{}]
2019-05-30 21:39:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 21:39:36 -==> Parameters: 1(Long)
2019-05-30 21:39:36 -<==      Total: 50
2019-05-30 21:39:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 21:39:36 -==> Parameters: 138(Long)
2019-05-30 21:39:36 -<==      Total: 1
2019-05-30 21:39:36 -耗时 : 112
2019-05-30 21:39:36 -返回值 : index_v1
2019-05-30 21:39:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 21:39:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 112(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 21:39:36.195(Timestamp)
2019-05-30 21:39:36 -<==    Updates: 1
2019-05-30 21:39:36 -请求地址 : http://localhost:8081/main
2019-05-30 21:39:36 -HTTP METHOD : GET
2019-05-30 21:39:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 21:39:36 -参数 : []
2019-05-30 21:39:36 -耗时 : 1
2019-05-30 21:39:36 -返回值 : main
2019-05-30 21:39:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 21:39:38 -HTTP METHOD : GET
2019-05-30 21:39:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 21:39:38 -参数 : []
2019-05-30 21:39:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 21:39:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 21:39:38 -<==      Total: 0
2019-05-30 21:39:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 21:39:38 -==> Parameters: 1(Long), 0(String)
2019-05-30 21:39:38 -<==      Total: 1
2019-05-30 21:39:38 -耗时 : 12
2019-05-30 21:39:38 -返回值 : com.bootdo.common.utils.PageUtils@256d5658
2019-05-30 21:39:38 -请求地址 : http://localhost:8081/main
2019-05-30 21:39:38 -HTTP METHOD : GET
2019-05-30 21:39:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 21:39:38 -参数 : []
2019-05-30 21:39:38 -耗时 : 0
2019-05-30 21:39:38 -返回值 : main
2019-05-30 21:39:43 -请求地址 : http://localhost:8081/print/print
2019-05-30 21:39:43 -HTTP METHOD : GET
2019-05-30 21:39:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-30 21:39:43 -参数 : []
2019-05-30 21:39:43 -耗时 : 0
2019-05-30 21:39:43 -返回值 : print/print/print
2019-05-30 21:39:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 21:39:44 -HTTP METHOD : GET
2019-05-30 21:39:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 21:39:44 -参数 : [userType]
2019-05-30 21:39:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 21:39:44 -==> Parameters: userType(String)
2019-05-30 21:39:44 -<==      Total: 4
2019-05-30 21:39:44 -耗时 : 13
2019-05-30 21:39:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 21:39:44 -请求地址 : http://localhost:8081/print/print/list
2019-05-30 21:39:44 -HTTP METHOD : GET
2019-05-30 21:39:44 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-30 21:39:44 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-30 21:39:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-30 21:39:44 -==> Parameters: 0(Integer), 10(Integer)
2019-05-30 21:39:44 -<==      Total: 5
2019-05-30 21:39:44 -==>  Preparing: select count(*) from print 
2019-05-30 21:39:44 -==> Parameters: 
2019-05-30 21:39:44 -<==      Total: 1
2019-05-30 21:39:44 -耗时 : 30
2019-05-30 21:39:44 -返回值 : com.bootdo.common.utils.PageUtils@48ff537d
2019-05-30 21:39:54 -请求地址 : http://localhost:8081/print/print/batchPrint
2019-05-30 21:39:54 -HTTP METHOD : POST
2019-05-30 21:39:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.batchPrint
2019-05-30 21:39:54 -参数 : [[Ljava.lang.Long;@2609c50f]
2019-05-30 21:39:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id in ( ? , ? ) 
2019-05-30 21:39:54 -==> Parameters: 83(Long), 84(Long)
2019-05-30 21:39:54 -<==      Total: 2
2019-05-30 21:39:54 -耗时 : 7
2019-05-30 21:39:54 -返回值 : [com.bootdo.print.vo.PrintVo@7bcc185, com.bootdo.print.vo.PrintVo@41ecd14c]
2019-05-30 21:40:20 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-30 21:46:52 -请求地址 : http://localhost:8081/print/print/printEdit/83
2019-05-30 21:46:52 -HTTP METHOD : GET
2019-05-30 21:46:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-30 21:46:52 -参数 : [83, {}]
2019-05-30 21:46:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 21:46:52 -==> Parameters: 83(Long)
2019-05-30 21:46:52 -<==      Total: 1
2019-05-30 21:46:52 -耗时 : 121
2019-05-30 21:46:52 -返回值 : print/print/printEdit
2019-05-30 21:46:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 21:46:52 -HTTP METHOD : GET
2019-05-30 21:46:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 21:46:52 -参数 : [userType]
2019-05-30 21:46:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 21:46:52 -==> Parameters: userType(String)
2019-05-30 21:46:52 -<==      Total: 4
2019-05-30 21:46:52 -耗时 : 3
2019-05-30 21:46:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 21:56:36 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74cadd41: startup date [Thu May 30 21:28:30 CST 2019]; root of context hierarchy
2019-05-30 21:56:36 -Stopping beans in phase 2147483647
2019-05-30 21:56:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-05-30 21:56:36 -Stopping...
2019-05-30 21:56:36 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-30 21:56:36 -Stopped.
2019-05-30 21:56:37 -Unregistering JMX-exposed beans on shutdown
2019-05-30 21:56:37 -Unregistering JMX-exposed beans
2019-05-30 21:56:37 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-05-30 21:56:37 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-05-30 21:56:37 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-05-30 21:56:37 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-05-30 21:56:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-05-30 21:56:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-05-30 21:56:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-05-30 21:56:37 -Shutting down Quartz Scheduler
2019-05-30 21:56:37 -Disabled session validation scheduler.
2019-05-30 22:25:43 -Starting BootdoApplication on PC-201905091110 with PID 16196 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-30 22:25:43 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-30 22:25:43 -The following profiles are active: dev
2019-05-30 22:25:43 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b5894c8: startup date [Thu May 30 22:25:43 CST 2019]; root of context hierarchy
2019-05-30 22:25:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-30 22:25:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ed3e875a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 22:25:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$df97b601] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 22:25:55 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 22:25:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 22:25:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 22:25:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-30 22:25:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-30 22:25:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 22:25:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 22:25:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 22:25:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-30 22:25:57 -Tomcat initialized with port(s): 8081 (http)
2019-05-30 22:25:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-30 22:25:57 -Starting service [Tomcat]
2019-05-30 22:25:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-30 22:25:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-30 22:25:58 -Initializing Spring embedded WebApplicationContext
2019-05-30 22:25:58 -Root WebApplicationContext: initialization completed in 14836 ms
2019-05-30 22:25:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-30 22:25:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-30 22:25:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-30 22:25:59 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-30 22:25:59 -Filter xssFilter was not registered (disabled)
2019-05-30 22:25:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-30 22:25:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-30 22:25:59 -Servlet statViewServlet mapped to [/druid/*]
2019-05-30 22:25:59 -Servlet dispatcherServlet mapped to [/]
2019-05-30 22:26:05 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b5894c8: startup date [Thu May 30 22:25:43 CST 2019]; root of context hierarchy
2019-05-30 22:26:06 -Using default implementation for ThreadExecutor
2019-05-30 22:26:06 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-30 22:26:06 -Quartz Scheduler v.2.2.1 created.
2019-05-30 22:26:06 -RAMJobStore initialized.
2019-05-30 22:26:06 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-30 22:26:06 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-30 22:26:06 -Quartz scheduler version: 2.2.1
2019-05-30 22:26:06 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4f356b98
2019-05-30 22:26:08 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-30 22:26:08 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-30 22:26:14 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 22:26:14 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-30 22:26:14 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 22:26:14 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-30 22:26:14 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-30 22:26:14 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-30 22:26:14 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 22:26:14 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-30 22:26:14 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-30 22:26:14 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 22:26:14 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 22:26:14 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-30 22:26:14 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 22:26:14 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-30 22:26:14 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-30 22:26:14 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-30 22:26:14 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 22:26:14 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-30 22:26:14 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-30 22:26:14 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-30 22:26:14 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 22:26:14 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-30 22:26:14 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-30 22:26:14 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-30 22:26:14 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-30 22:26:14 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-30 22:26:14 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-30 22:26:14 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-30 22:26:14 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-30 22:26:14 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-30 22:26:14 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-30 22:26:14 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-30 22:26:14 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-30 22:26:14 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-30 22:26:14 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-30 22:26:14 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-30 22:26:14 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-30 22:26:14 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 22:26:14 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-30 22:26:14 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-30 22:26:14 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-30 22:26:14 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-30 22:26:14 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-30 22:26:14 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-30 22:26:14 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-30 22:26:14 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-30 22:26:14 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-30 22:26:14 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-30 22:26:14 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-30 22:26:14 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 22:26:14 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 22:26:14 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-30 22:26:14 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-30 22:26:14 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 22:26:14 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-30 22:26:14 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-30 22:26:14 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-30 22:26:14 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-30 22:26:14 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-30 22:26:14 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-30 22:26:14 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 22:26:14 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-30 22:26:14 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-30 22:26:14 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-30 22:26:14 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-30 22:26:14 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-30 22:26:14 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-30 22:26:14 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-30 22:26:14 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 22:26:14 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-30 22:26:14 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-30 22:26:14 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 22:26:14 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-30 22:26:14 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-30 22:26:14 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 22:26:14 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-30 22:26:14 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-30 22:26:14 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-30 22:26:14 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-30 22:26:14 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-30 22:26:14 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-30 22:26:14 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-30 22:26:14 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-30 22:26:14 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-30 22:26:14 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-30 22:26:14 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-30 22:26:14 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-30 22:26:14 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-30 22:26:14 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-30 22:26:14 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-30 22:26:14 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-30 22:26:14 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-30 22:26:14 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:14 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-30 22:26:14 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-30 22:26:14 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-30 22:26:14 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:14 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-30 22:26:14 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:14 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-30 22:26:15 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-30 22:26:15 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-30 22:26:15 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-30 22:26:15 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-30 22:26:15 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-30 22:26:15 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-30 22:26:15 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-30 22:26:15 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-30 22:26:15 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-30 22:26:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-30 22:26:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 22:26:15 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-30 22:26:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-30 22:26:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-30 22:26:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-30 22:26:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-30 22:26:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-30 22:26:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 22:26:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-30 22:26:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-30 22:26:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-30 22:26:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-30 22:26:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-30 22:26:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-30 22:26:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-30 22:26:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-30 22:26:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-30 22:26:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-30 22:26:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-30 22:26:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-30 22:26:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-30 22:26:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-30 22:26:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-30 22:26:15 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-30 22:26:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-30 22:26:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 22:26:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-30 22:26:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 22:26:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-30 22:26:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-30 22:26:15 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-30 22:26:15 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-30 22:26:15 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-30 22:26:15 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-30 22:26:15 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-30 22:26:15 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:15 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-30 22:26:15 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-30 22:26:15 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:15 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-30 22:26:15 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:15 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-30 22:26:15 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-30 22:26:15 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-30 22:26:15 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-30 22:26:15 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 22:26:15 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-30 22:26:15 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-30 22:26:15 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-30 22:26:15 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-30 22:26:15 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-30 22:26:15 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-30 22:26:15 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-30 22:26:15 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-30 22:26:15 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-30 22:26:15 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-30 22:26:15 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-30 22:26:15 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-30 22:26:16 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-30 22:26:16 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-30 22:26:16 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-30 22:26:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 22:26:18 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b5894c8: startup date [Thu May 30 22:25:43 CST 2019]; root of context hierarchy
2019-05-30 22:26:18 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 22:26:18 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 22:26:18 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-30 22:26:18 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-30 22:26:18 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-30 22:26:22 -Registering beans for JMX exposure on startup
2019-05-30 22:26:22 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-30 22:26:22 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-30 22:26:22 -Starting beans in phase 2147483647
2019-05-30 22:26:22 -Context refreshed
2019-05-30 22:26:23 -Found 1 custom documentation plugin(s)
2019-05-30 22:26:23 -Scanning for api listing references
2019-05-30 22:26:24 -Generating unique operation named: getCountDUsingPOST_1
2019-05-30 22:26:24 -Generating unique operation named: removeUsingPOST_1
2019-05-30 22:26:24 -Generating unique operation named: addUsingGET_1
2019-05-30 22:26:24 -Generating unique operation named: editUsingGET_1
2019-05-30 22:26:24 -Generating unique operation named: listUsingGET_1
2019-05-30 22:26:24 -Generating unique operation named: removeUsingPOST_2
2019-05-30 22:26:24 -Generating unique operation named: removeUsingPOST_3
2019-05-30 22:26:24 -Generating unique operation named: saveUsingPOST_1
2019-05-30 22:26:24 -Generating unique operation named: updateUsingGET_1
2019-05-30 22:26:24 -Generating unique operation named: updateUsingHEAD_1
2019-05-30 22:26:24 -Generating unique operation named: updateUsingPOST_1
2019-05-30 22:26:24 -Generating unique operation named: updateUsingPUT_1
2019-05-30 22:26:24 -Generating unique operation named: updateUsingPATCH_1
2019-05-30 22:26:24 -Generating unique operation named: updateUsingDELETE_1
2019-05-30 22:26:24 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-30 22:26:24 -Generating unique operation named: updateUsingTRACE_1
2019-05-30 22:26:24 -Generating unique operation named: addUsingGET_2
2019-05-30 22:26:24 -Generating unique operation named: editUsingGET_2
2019-05-30 22:26:24 -Generating unique operation named: listUsingGET_2
2019-05-30 22:26:24 -Generating unique operation named: removeUsingPOST_4
2019-05-30 22:26:24 -Generating unique operation named: removeUsingPOST_5
2019-05-30 22:26:24 -Generating unique operation named: saveUsingPOST_2
2019-05-30 22:26:24 -Generating unique operation named: updateUsingPOST_2
2019-05-30 22:26:24 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-30 22:26:24 -Generating unique operation named: addUsingGET_3
2019-05-30 22:26:24 -Generating unique operation named: editUsingGET_3
2019-05-30 22:26:24 -Generating unique operation named: listUsingGET_3
2019-05-30 22:26:24 -Generating unique operation named: removeUsingPOST_6
2019-05-30 22:26:24 -Generating unique operation named: removeUsingPOST_7
2019-05-30 22:26:24 -Generating unique operation named: saveUsingPOST_3
2019-05-30 22:26:24 -Generating unique operation named: updateUsingGET_2
2019-05-30 22:26:24 -Generating unique operation named: updateUsingHEAD_2
2019-05-30 22:26:24 -Generating unique operation named: updateUsingPOST_3
2019-05-30 22:26:24 -Generating unique operation named: updateUsingPUT_2
2019-05-30 22:26:24 -Generating unique operation named: updateUsingPATCH_2
2019-05-30 22:26:24 -Generating unique operation named: updateUsingDELETE_2
2019-05-30 22:26:24 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-30 22:26:24 -Generating unique operation named: updateUsingTRACE_2
2019-05-30 22:26:24 -Generating unique operation named: addUsingGET_4
2019-05-30 22:26:24 -Generating unique operation named: editUsingGET_4
2019-05-30 22:26:24 -Generating unique operation named: listUsingGET_4
2019-05-30 22:26:24 -Generating unique operation named: removeUsingPOST_8
2019-05-30 22:26:24 -Generating unique operation named: removeUsingPOST_9
2019-05-30 22:26:25 -Generating unique operation named: saveUsingPOST_4
2019-05-30 22:26:25 -Generating unique operation named: updateUsingGET_3
2019-05-30 22:26:25 -Generating unique operation named: updateUsingHEAD_3
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPOST_4
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPUT_3
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPATCH_3
2019-05-30 22:26:25 -Generating unique operation named: updateUsingDELETE_3
2019-05-30 22:26:25 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-30 22:26:25 -Generating unique operation named: updateUsingTRACE_3
2019-05-30 22:26:25 -Generating unique operation named: ElecUsingGET_1
2019-05-30 22:26:25 -Generating unique operation named: addUsingGET_5
2019-05-30 22:26:25 -Generating unique operation named: editUsingGET_5
2019-05-30 22:26:25 -Generating unique operation named: listUsingGET_5
2019-05-30 22:26:25 -Generating unique operation named: removeUsingPOST_10
2019-05-30 22:26:25 -Generating unique operation named: removeUsingPOST_11
2019-05-30 22:26:25 -Generating unique operation named: saveUsingPOST_5
2019-05-30 22:26:25 -Generating unique operation named: updateUsingGET_4
2019-05-30 22:26:25 -Generating unique operation named: updateUsingHEAD_4
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPOST_5
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPUT_4
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPATCH_4
2019-05-30 22:26:25 -Generating unique operation named: updateUsingDELETE_4
2019-05-30 22:26:25 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-30 22:26:25 -Generating unique operation named: updateUsingTRACE_4
2019-05-30 22:26:25 -Generating unique operation named: editUsingGET_6
2019-05-30 22:26:25 -Generating unique operation named: listUsingGET_6
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPOST_6
2019-05-30 22:26:25 -Generating unique operation named: addUsingGET_6
2019-05-30 22:26:25 -Generating unique operation named: editUsingGET_7
2019-05-30 22:26:25 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-30 22:26:25 -Generating unique operation named: listUsingGET_7
2019-05-30 22:26:25 -Generating unique operation named: removeUsingPOST_12
2019-05-30 22:26:25 -Generating unique operation named: removeUsingPOST_13
2019-05-30 22:26:25 -Generating unique operation named: saveUsingPOST_6
2019-05-30 22:26:25 -Generating unique operation named: updateUsingGET_5
2019-05-30 22:26:25 -Generating unique operation named: updateUsingHEAD_5
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPOST_7
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPUT_5
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPATCH_5
2019-05-30 22:26:25 -Generating unique operation named: updateUsingDELETE_5
2019-05-30 22:26:25 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-30 22:26:25 -Generating unique operation named: updateUsingTRACE_5
2019-05-30 22:26:25 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-30 22:26:25 -Generating unique operation named: addUsingGET_7
2019-05-30 22:26:25 -Generating unique operation named: editUsingGET_8
2019-05-30 22:26:25 -Generating unique operation named: listUsingGET_8
2019-05-30 22:26:25 -Generating unique operation named: removeUsingPOST_14
2019-05-30 22:26:25 -Generating unique operation named: removeUsingPOST_15
2019-05-30 22:26:25 -Generating unique operation named: saveUsingPOST_7
2019-05-30 22:26:25 -Generating unique operation named: updateUsingGET_6
2019-05-30 22:26:25 -Generating unique operation named: updateUsingHEAD_6
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPOST_8
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPUT_6
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPATCH_6
2019-05-30 22:26:25 -Generating unique operation named: updateUsingDELETE_6
2019-05-30 22:26:25 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-30 22:26:25 -Generating unique operation named: updateUsingTRACE_6
2019-05-30 22:26:25 -Generating unique operation named: addUsingGET_8
2019-05-30 22:26:25 -Generating unique operation named: editUsingGET_9
2019-05-30 22:26:25 -Generating unique operation named: listUsingGET_9
2019-05-30 22:26:25 -Generating unique operation named: removeUsingPOST_16
2019-05-30 22:26:25 -Generating unique operation named: removeUsingPOST_17
2019-05-30 22:26:25 -Generating unique operation named: saveUsingPOST_8
2019-05-30 22:26:25 -Generating unique operation named: updateUsingGET_7
2019-05-30 22:26:25 -Generating unique operation named: updateUsingHEAD_7
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPOST_9
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPUT_7
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPATCH_7
2019-05-30 22:26:25 -Generating unique operation named: updateUsingDELETE_7
2019-05-30 22:26:25 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-30 22:26:25 -Generating unique operation named: updateUsingTRACE_7
2019-05-30 22:26:25 -Generating unique operation named: addUsingGET_9
2019-05-30 22:26:25 -Generating unique operation named: editUsingGET_10
2019-05-30 22:26:25 -Generating unique operation named: infoUsingGET_1
2019-05-30 22:26:25 -Generating unique operation named: infoUsingHEAD_1
2019-05-30 22:26:25 -Generating unique operation named: infoUsingPOST_1
2019-05-30 22:26:25 -Generating unique operation named: infoUsingPUT_1
2019-05-30 22:26:25 -Generating unique operation named: infoUsingPATCH_1
2019-05-30 22:26:25 -Generating unique operation named: infoUsingDELETE_1
2019-05-30 22:26:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-30 22:26:25 -Generating unique operation named: infoUsingTRACE_1
2019-05-30 22:26:25 -Generating unique operation named: listUsingGET_10
2019-05-30 22:26:25 -Generating unique operation named: removeUsingPOST_18
2019-05-30 22:26:25 -Generating unique operation named: removeUsingPOST_19
2019-05-30 22:26:25 -Generating unique operation named: saveUsingPOST_9
2019-05-30 22:26:25 -Generating unique operation named: updateUsingPOST_10
2019-05-30 22:26:26 -Generating unique operation named: listUsingGET_11
2019-05-30 22:26:26 -Generating unique operation named: removeUsingPOST_20
2019-05-30 22:26:26 -Generating unique operation named: welcomeUsingGET_1
2019-05-30 22:26:26 -Generating unique operation named: addUsingGET_10
2019-05-30 22:26:26 -Generating unique operation named: editUsingGET_11
2019-05-30 22:26:26 -Generating unique operation named: listUsingGET_12
2019-05-30 22:26:26 -Generating unique operation named: removeUsingPOST_21
2019-05-30 22:26:26 -Generating unique operation named: saveUsingPOST_10
2019-05-30 22:26:26 -Generating unique operation named: treeUsingGET_1
2019-05-30 22:26:26 -Generating unique operation named: treeUsingGET_2
2019-05-30 22:26:26 -Generating unique operation named: updateUsingPOST_11
2019-05-30 22:26:26 -Generating unique operation named: addUsingGET_11
2019-05-30 22:26:26 -Generating unique operation named: editUsingGET_12
2019-05-30 22:26:26 -Generating unique operation named: listUsingGET_13
2019-05-30 22:26:26 -Generating unique operation named: removeUsingPOST_22
2019-05-30 22:26:26 -Generating unique operation named: removeUsingPOST_23
2019-05-30 22:26:26 -Generating unique operation named: updateUsingPOST_12
2019-05-30 22:26:26 -Generating unique operation named: addUsingGET_12
2019-05-30 22:26:26 -Generating unique operation named: editUsingGET_13
2019-05-30 22:26:26 -Generating unique operation named: listUsingGET_14
2019-05-30 22:26:26 -Generating unique operation named: removeUsingPOST_24
2019-05-30 22:26:26 -Generating unique operation named: removeUsingPOST_25
2019-05-30 22:26:26 -Generating unique operation named: saveUsingPOST_11
2019-05-30 22:26:26 -Generating unique operation named: updateUsingGET_8
2019-05-30 22:26:26 -Generating unique operation named: updateUsingHEAD_8
2019-05-30 22:26:26 -Generating unique operation named: updateUsingPOST_13
2019-05-30 22:26:26 -Generating unique operation named: updateUsingPUT_8
2019-05-30 22:26:26 -Generating unique operation named: updateUsingPATCH_8
2019-05-30 22:26:26 -Generating unique operation named: updateUsingDELETE_8
2019-05-30 22:26:26 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-30 22:26:26 -Generating unique operation named: updateUsingTRACE_8
2019-05-30 22:26:26 -Generating unique operation named: addUsingGET_13
2019-05-30 22:26:26 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-30 22:26:26 -Generating unique operation named: editUsingGET_14
2019-05-30 22:26:26 -Generating unique operation named: listUsingGET_15
2019-05-30 22:26:26 -Generating unique operation named: printEditUsingGET_1
2019-05-30 22:26:26 -Generating unique operation named: removeUsingPOST_26
2019-05-30 22:26:26 -Generating unique operation named: saveUsingPOST_12
2019-05-30 22:26:26 -Generating unique operation named: updateUsingGET_9
2019-05-30 22:26:26 -Generating unique operation named: updateUsingHEAD_9
2019-05-30 22:26:26 -Generating unique operation named: updateUsingPOST_14
2019-05-30 22:26:26 -Generating unique operation named: updateUsingPUT_9
2019-05-30 22:26:26 -Generating unique operation named: updateUsingPATCH_9
2019-05-30 22:26:26 -Generating unique operation named: updateUsingDELETE_9
2019-05-30 22:26:26 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-30 22:26:26 -Generating unique operation named: updateUsingTRACE_9
2019-05-30 22:26:26 -Generating unique operation named: addUsingGET_14
2019-05-30 22:26:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-30 22:26:26 -Generating unique operation named: editUsingGET_15
2019-05-30 22:26:26 -Generating unique operation named: listUsingGET_16
2019-05-30 22:26:26 -Generating unique operation named: saveUsingPOST_13
2019-05-30 22:26:26 -Generating unique operation named: saveUsingPOST_14
2019-05-30 22:26:26 -Generating unique operation named: updateUsingPOST_15
2019-05-30 22:26:26 -Generating unique operation named: listUsingGET_17
2019-05-30 22:26:26 -Generating unique operation named: listUsingHEAD_1
2019-05-30 22:26:26 -Generating unique operation named: listUsingPOST_1
2019-05-30 22:26:26 -Generating unique operation named: listUsingPUT_1
2019-05-30 22:26:26 -Generating unique operation named: listUsingPATCH_1
2019-05-30 22:26:26 -Generating unique operation named: listUsingDELETE_1
2019-05-30 22:26:26 -Generating unique operation named: listUsingOPTIONS_1
2019-05-30 22:26:26 -Generating unique operation named: listUsingTRACE_1
2019-05-30 22:26:26 -Generating unique operation named: countDDUsingGET_1
2019-05-30 22:26:26 -Generating unique operation named: exportDDUsingGET_1
2019-05-30 22:26:26 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-30 22:26:27 -Generating unique operation named: addUsingGET_15
2019-05-30 22:26:27 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-30 22:26:27 -Generating unique operation named: editUsingGET_16
2019-05-30 22:26:27 -Generating unique operation named: listUsingGET_18
2019-05-30 22:26:27 -Generating unique operation named: removeUsingPOST_27
2019-05-30 22:26:27 -Generating unique operation named: saveUsingPOST_15
2019-05-30 22:26:27 -Generating unique operation named: treeUsingGET_3
2019-05-30 22:26:27 -Generating unique operation named: treeViewUsingGET_1
2019-05-30 22:26:27 -Generating unique operation named: updateUsingPOST_16
2019-05-30 22:26:27 -Generating unique operation named: addUsingGET_16
2019-05-30 22:26:27 -Generating unique operation named: editUsingGET_17
2019-05-30 22:26:27 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-30 22:26:27 -Generating unique operation named: listUsingGET_19
2019-05-30 22:26:27 -Generating unique operation named: removeUsingPOST_28
2019-05-30 22:26:27 -Generating unique operation named: removeUsingPOST_29
2019-05-30 22:26:27 -Generating unique operation named: saveUsingPOST_16
2019-05-30 22:26:27 -Generating unique operation named: updateUsingGET_10
2019-05-30 22:26:27 -Generating unique operation named: updateUsingHEAD_10
2019-05-30 22:26:27 -Generating unique operation named: updateUsingPOST_17
2019-05-30 22:26:27 -Generating unique operation named: updateUsingPUT_10
2019-05-30 22:26:27 -Generating unique operation named: updateUsingPATCH_10
2019-05-30 22:26:27 -Generating unique operation named: updateUsingDELETE_10
2019-05-30 22:26:27 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-30 22:26:27 -Generating unique operation named: updateUsingTRACE_10
2019-05-30 22:26:27 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-30 22:26:27 -Generating unique operation named: addUsingGET_17
2019-05-30 22:26:27 -Generating unique operation named: editUsingGET_18
2019-05-30 22:26:27 -Generating unique operation named: listUsingGET_20
2019-05-30 22:26:27 -Generating unique operation named: removeUsingPOST_30
2019-05-30 22:26:27 -Generating unique operation named: removeUsingPOST_31
2019-05-30 22:26:27 -Generating unique operation named: saveUsingPOST_17
2019-05-30 22:26:27 -Generating unique operation named: updateUsingGET_11
2019-05-30 22:26:27 -Generating unique operation named: updateUsingHEAD_11
2019-05-30 22:26:27 -Generating unique operation named: updateUsingPOST_18
2019-05-30 22:26:27 -Generating unique operation named: updateUsingPUT_11
2019-05-30 22:26:27 -Generating unique operation named: updateUsingPATCH_11
2019-05-30 22:26:27 -Generating unique operation named: updateUsingDELETE_11
2019-05-30 22:26:27 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-30 22:26:27 -Generating unique operation named: updateUsingTRACE_11
2019-05-30 22:26:27 -Generating unique operation named: addUsingGET_18
2019-05-30 22:26:27 -Generating unique operation named: editUsingGET_19
2019-05-30 22:26:27 -Generating unique operation named: listUsingGET_21
2019-05-30 22:26:27 -Generating unique operation named: removeUsingPOST_32
2019-05-30 22:26:27 -Generating unique operation named: removeUsingPOST_33
2019-05-30 22:26:27 -Generating unique operation named: saveUsingPOST_18
2019-05-30 22:26:27 -Generating unique operation named: updateUsingGET_12
2019-05-30 22:26:27 -Generating unique operation named: updateUsingHEAD_12
2019-05-30 22:26:27 -Generating unique operation named: updateUsingPOST_19
2019-05-30 22:26:27 -Generating unique operation named: updateUsingPUT_12
2019-05-30 22:26:27 -Generating unique operation named: updateUsingPATCH_12
2019-05-30 22:26:27 -Generating unique operation named: updateUsingDELETE_12
2019-05-30 22:26:27 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-30 22:26:27 -Generating unique operation named: updateUsingTRACE_12
2019-05-30 22:26:27 -Starting Quartz Scheduler now
2019-05-30 22:26:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-30 22:26:27 -Starting...
2019-05-30 22:26:27 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-30 22:26:27 -Started.
2019-05-30 22:26:27 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-30 22:26:27 -Using a shared selector for servlet write/read
2019-05-30 22:26:27 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-30 22:26:27 -Started BootdoApplication in 47.668 seconds (JVM running for 52.527)
2019-05-30 22:26:28 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-30 22:26:28 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-30 22:26:28 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-30 22:26:28 -FrameworkServlet 'dispatcherServlet': initialization completed in 107 ms
2019-05-30 22:26:28 -Enabling session validation scheduler...
2019-05-30 22:26:28 -==> Parameters: 
2019-05-30 22:26:28 -请求地址 : http://localhost:8081/login;JSESSIONID=a9bd9638-305a-4ce7-941f-ddeb1b9d5d79
2019-05-30 22:26:28 -HTTP METHOD : GET
2019-05-30 22:26:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-30 22:26:28 -参数 : [{}]
2019-05-30 22:26:28 -耗时 : 6
2019-05-30 22:26:28 -返回值 : login
2019-05-30 22:26:28 -<==      Total: 1
2019-05-30 22:26:30 -请求地址 : http://localhost:8081/getVerify
2019-05-30 22:26:30 -HTTP METHOD : GET
2019-05-30 22:26:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-30 22:26:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1dde657d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@131998b6]
2019-05-30 22:26:39 -1890
2019-05-30 22:26:40 -耗时 : 9782
2019-05-30 22:26:40 -返回值 : null
2019-05-30 22:26:44 -请求地址 : http://localhost:8081/login
2019-05-30 22:26:44 -HTTP METHOD : POST
2019-05-30 22:26:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-30 22:26:44 -参数 : [admin, 111111, 1890, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e5a1101]
2019-05-30 22:26:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-30 22:26:44 -==> Parameters: admin(String)
2019-05-30 22:26:44 -<==      Total: 1
2019-05-30 22:26:44 -耗时 : 210
2019-05-30 22:26:44 -返回值 : {msg=操作成功, code=0}
2019-05-30 22:26:44 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-30 22:26:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:26:44 -==> Parameters: 1(Long), admin(String), 登录(String), 210(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-30 22:26:44.484(Timestamp)
2019-05-30 22:26:44 -<==    Updates: 1
2019-05-30 22:26:44 -请求地址 : http://localhost:8081/index
2019-05-30 22:26:44 -HTTP METHOD : GET
2019-05-30 22:26:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 22:26:44 -参数 : [{}]
2019-05-30 22:26:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 22:26:45 -==> Parameters: 1(Long)
2019-05-30 22:26:45 -<==      Total: 50
2019-05-30 22:26:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 22:26:45 -==> Parameters: 138(Long)
2019-05-30 22:26:45 -<==      Total: 1
2019-05-30 22:26:45 -耗时 : 295
2019-05-30 22:26:45 -返回值 : index_v1
2019-05-30 22:26:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:26:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 297(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 22:26:45.323(Timestamp)
2019-05-30 22:26:45 -<==    Updates: 1
2019-05-30 22:26:45 -请求地址 : http://localhost:8081/main
2019-05-30 22:26:45 -HTTP METHOD : GET
2019-05-30 22:26:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 22:26:45 -参数 : []
2019-05-30 22:26:45 -耗时 : 0
2019-05-30 22:26:45 -返回值 : main
2019-05-30 22:26:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 22:26:45 -HTTP METHOD : GET
2019-05-30 22:26:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 22:26:45 -参数 : []
2019-05-30 22:26:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 22:26:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 22:26:46 -请求地址 : http://localhost:8081/main
2019-05-30 22:26:46 -HTTP METHOD : GET
2019-05-30 22:26:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 22:26:46 -参数 : []
2019-05-30 22:26:46 -耗时 : 0
2019-05-30 22:26:46 -返回值 : main
2019-05-30 22:26:46 -<==      Total: 0
2019-05-30 22:26:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 22:26:46 -==> Parameters: 1(Long), 0(String)
2019-05-30 22:26:46 -<==      Total: 1
2019-05-30 22:26:46 -耗时 : 156
2019-05-30 22:26:46 -返回值 : com.bootdo.common.utils.PageUtils@7ff96ea8
2019-05-30 22:26:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 22:26:56 -==> Parameters: 1(Long)
2019-05-30 22:26:56 -<==      Total: 94
2019-05-30 22:26:56 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-30 22:26:56 -HTTP METHOD : GET
2019-05-30 22:26:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-30 22:26:56 -参数 : []
2019-05-30 22:26:56 -耗时 : 1
2019-05-30 22:26:56 -返回值 : /moneyList/moneyList
2019-05-30 22:27:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 22:27:02 -HTTP METHOD : GET
2019-05-30 22:27:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 22:27:02 -参数 : []
2019-05-30 22:27:02 -耗时 : 1
2019-05-30 22:27:02 -返回值 : system/dept/deptTree
2019-05-30 22:27:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 22:27:02 -HTTP METHOD : GET
2019-05-30 22:27:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 22:27:02 -参数 : []
2019-05-30 22:27:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 22:27:02 -==> Parameters: 
2019-05-30 22:27:02 -<==      Total: 3
2019-05-30 22:27:02 -耗时 : 117
2019-05-30 22:27:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 22:27:11 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 22:27:11 -HTTP METHOD : POST
2019-05-30 22:27:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 22:27:11 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@567bf154]
2019-05-30 22:27:11 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:27:11 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:27:11 -<==      Total: 3
2019-05-30 22:27:11 -耗时 : 175
2019-05-30 22:27:11 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@35532a11, com.bootdo.moneyList.damain.MoneyListDO@2929ff2f, com.bootdo.moneyList.damain.MoneyListDO@1d56e56e]
2019-05-30 22:27:16 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-05-30 22:29:16 -请求地址 : http://localhost:8081/print/print
2019-05-30 22:29:16 -HTTP METHOD : GET
2019-05-30 22:29:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-30 22:29:16 -参数 : []
2019-05-30 22:29:16 -耗时 : 1
2019-05-30 22:29:16 -返回值 : print/print/print
2019-05-30 22:29:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 22:29:17 -HTTP METHOD : GET
2019-05-30 22:29:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 22:29:17 -参数 : [userType]
2019-05-30 22:29:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 22:29:17 -==> Parameters: userType(String)
2019-05-30 22:29:17 -<==      Total: 4
2019-05-30 22:29:17 -耗时 : 50
2019-05-30 22:29:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 22:29:17 -请求地址 : http://localhost:8081/print/print/list
2019-05-30 22:29:17 -HTTP METHOD : GET
2019-05-30 22:29:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-30 22:29:17 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-30 22:29:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-30 22:29:17 -==> Parameters: 0(Integer), 10(Integer)
2019-05-30 22:29:17 -<==      Total: 5
2019-05-30 22:29:17 -==>  Preparing: select count(*) from print 
2019-05-30 22:29:17 -==> Parameters: 
2019-05-30 22:29:17 -<==      Total: 1
2019-05-30 22:29:17 -耗时 : 167
2019-05-30 22:29:17 -返回值 : com.bootdo.common.utils.PageUtils@6014008e
2019-05-30 22:29:19 -请求地址 : http://localhost:8081/print/print/printEdit/83
2019-05-30 22:29:19 -HTTP METHOD : GET
2019-05-30 22:29:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-30 22:29:19 -参数 : [83, {}]
2019-05-30 22:29:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 22:29:19 -==> Parameters: 83(Long)
2019-05-30 22:29:19 -<==      Total: 1
2019-05-30 22:29:19 -耗时 : 14
2019-05-30 22:29:19 -返回值 : print/print/printEdit
2019-05-30 22:29:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 22:29:19 -HTTP METHOD : GET
2019-05-30 22:29:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 22:29:19 -参数 : [userType]
2019-05-30 22:29:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 22:29:19 -==> Parameters: userType(String)
2019-05-30 22:29:19 -<==      Total: 4
2019-05-30 22:29:19 -耗时 : 9
2019-05-30 22:29:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 22:29:24 -请求地址 : http://localhost:8081/print/print/printEdit/87
2019-05-30 22:29:24 -HTTP METHOD : GET
2019-05-30 22:29:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-30 22:29:24 -参数 : [87, {}]
2019-05-30 22:29:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-30 22:29:24 -==> Parameters: 87(Long)
2019-05-30 22:29:24 -<==      Total: 1
2019-05-30 22:29:24 -耗时 : 8
2019-05-30 22:29:24 -返回值 : print/print/printEdit
2019-05-30 22:29:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-30 22:29:25 -HTTP METHOD : GET
2019-05-30 22:29:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-30 22:29:25 -参数 : [userType]
2019-05-30 22:29:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-30 22:29:25 -==> Parameters: userType(String)
2019-05-30 22:29:25 -<==      Total: 4
2019-05-30 22:29:25 -耗时 : 8
2019-05-30 22:29:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-30 22:46:08 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 22:46:08 -HTTP METHOD : POST
2019-05-30 22:46:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 22:46:08 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@508725d9]
2019-05-30 22:46:08 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:46:08 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:46:08 -<==      Total: 3
2019-05-30 22:46:08 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 22:46:08 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:46:08 -<==      Total: 1
2019-05-30 22:46:08 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 22:46:08 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:46:08 -<==      Total: 1
2019-05-30 22:46:08 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 22:46:08 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:46:08 -<==      Total: 1
2019-05-30 22:46:08 -==>  Preparing: update water set water_sum = water_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:46:08 -==> Parameters: 1(String), A(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:46:08 -<==    Updates: 1
2019-05-30 22:46:08 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:46:08 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-30 22:46:08.357(Timestamp), 2019-02(String), 1(Long), 2019-05-30 22:46:08.357(Timestamp), 1(Long), null
2019-05-30 22:46:08 -<==    Updates: 1
2019-05-30 22:46:08 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:46:08 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), null, null, null, null, null, null, null, null, null, null, null, null, null, 6.30(BigDecimal), null, 32.00(BigDecimal), 1(BigDecimal), 2019-05-30 22:46:08.378(Timestamp), 2019-02(String), admin(String), 2019-05-30 22:46:08.378(Timestamp), admin(String), null
2019-05-30 22:46:08 -<==    Updates: 1
2019-05-30 22:46:08 -耗时 : 545
2019-05-30 22:46:08 -返回值 : 88
2019-05-30 22:46:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 22:46:10 -HTTP METHOD : POST
2019-05-30 22:46:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 22:46:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@330405a3]
2019-05-30 22:46:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:46:10 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:46:10 -<==      Total: 3
2019-05-30 22:46:10 -耗时 : 26
2019-05-30 22:46:10 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@563697eb, com.bootdo.moneyList.damain.MoneyListDO@2cae6c8b, com.bootdo.moneyList.damain.MoneyListDO@3f944da0]
2019-05-30 22:46:18 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 22:46:18 -HTTP METHOD : POST
2019-05-30 22:46:18 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 22:46:18 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3101cebf]
2019-05-30 22:46:18 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:46:18 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:46:18 -<==      Total: 3
2019-05-30 22:46:18 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 22:46:18 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:46:18 -<==      Total: 1
2019-05-30 22:46:18 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 22:46:18 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:46:18 -<==      Total: 1
2019-05-30 22:46:18 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 22:46:18 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:46:18 -<==      Total: 1
2019-05-30 22:46:18 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:46:18 -==> Parameters: 1(String), A(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:46:18 -<==    Updates: 1
2019-05-30 22:46:18 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:46:18 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-30 22:46:18.465(Timestamp), 2019-02(String), 1(Long), 2019-05-30 22:46:18.465(Timestamp), 1(Long), null
2019-05-30 22:46:18 -<==    Updates: 1
2019-05-30 22:46:18 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:46:18 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 55.67(BigDecimal), 100.00(BigDecimal), -71.35(BigDecimal), 1(BigDecimal), null, null, null, null, 2019-05-30 22:46:18.476(Timestamp), 2019-02(String), admin(String), 2019-05-30 22:46:18.476(Timestamp), admin(String), null
2019-05-30 22:46:18 -<==    Updates: 1
2019-05-30 22:46:18 -耗时 : 358
2019-05-30 22:46:18 -返回值 : 89
2019-05-30 22:46:19 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 22:46:19 -HTTP METHOD : POST
2019-05-30 22:46:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 22:46:19 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@435ba755]
2019-05-30 22:46:19 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:46:19 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:46:20 -<==      Total: 3
2019-05-30 22:46:20 -耗时 : 68
2019-05-30 22:46:20 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@64976832, com.bootdo.moneyList.damain.MoneyListDO@46acd647, com.bootdo.moneyList.damain.MoneyListDO@5853a0c8]
2019-05-30 22:50:18 -请求地址 : http://localhost:8081/index
2019-05-30 22:50:18 -HTTP METHOD : GET
2019-05-30 22:50:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 22:50:18 -参数 : [{}]
2019-05-30 22:50:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 22:50:18 -==> Parameters: 1(Long)
2019-05-30 22:50:18 -<==      Total: 50
2019-05-30 22:50:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 22:50:18 -==> Parameters: 138(Long)
2019-05-30 22:50:19 -<==      Total: 1
2019-05-30 22:50:19 -耗时 : 60
2019-05-30 22:50:19 -返回值 : index_v1
2019-05-30 22:50:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:50:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 60(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 22:50:19.005(Timestamp)
2019-05-30 22:50:19 -<==    Updates: 1
2019-05-30 22:50:19 -请求地址 : http://localhost:8081/main
2019-05-30 22:50:19 -HTTP METHOD : GET
2019-05-30 22:50:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 22:50:19 -参数 : []
2019-05-30 22:50:19 -耗时 : 0
2019-05-30 22:50:19 -返回值 : main
2019-05-30 22:50:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 22:50:19 -HTTP METHOD : GET
2019-05-30 22:50:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 22:50:19 -参数 : []
2019-05-30 22:50:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 22:50:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 22:50:19 -<==      Total: 0
2019-05-30 22:50:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 22:50:19 -==> Parameters: 1(Long), 0(String)
2019-05-30 22:50:19 -<==      Total: 1
2019-05-30 22:50:19 -耗时 : 11
2019-05-30 22:50:19 -返回值 : com.bootdo.common.utils.PageUtils@c2ec1cf
2019-05-30 22:50:19 -请求地址 : http://localhost:8081/main
2019-05-30 22:50:19 -HTTP METHOD : GET
2019-05-30 22:50:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 22:50:19 -参数 : []
2019-05-30 22:50:19 -耗时 : 0
2019-05-30 22:50:19 -返回值 : main
2019-05-30 22:50:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-30 22:50:21 -==> Parameters: 1(Long)
2019-05-30 22:50:21 -<==      Total: 94
2019-05-30 22:50:21 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-30 22:50:21 -HTTP METHOD : GET
2019-05-30 22:50:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-30 22:50:21 -参数 : []
2019-05-30 22:50:21 -耗时 : 1
2019-05-30 22:50:21 -返回值 : /moneyList/moneyList
2019-05-30 22:50:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-30 22:50:26 -HTTP METHOD : GET
2019-05-30 22:50:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-30 22:50:26 -参数 : []
2019-05-30 22:50:26 -耗时 : 0
2019-05-30 22:50:26 -返回值 : system/dept/deptTree
2019-05-30 22:50:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-30 22:50:26 -HTTP METHOD : GET
2019-05-30 22:50:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-30 22:50:26 -参数 : []
2019-05-30 22:50:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-30 22:50:26 -==> Parameters: 
2019-05-30 22:50:26 -<==      Total: 3
2019-05-30 22:50:26 -耗时 : 7
2019-05-30 22:50:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-30 22:50:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 22:50:29 -HTTP METHOD : POST
2019-05-30 22:50:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 22:50:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@376da311]
2019-05-30 22:50:29 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:50:29 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:50:29 -<==      Total: 3
2019-05-30 22:50:29 -耗时 : 18
2019-05-30 22:50:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@13ced6fd, com.bootdo.moneyList.damain.MoneyListDO@130b014a, com.bootdo.moneyList.damain.MoneyListDO@7149935f]
2019-05-30 22:50:36 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 22:50:36 -HTTP METHOD : POST
2019-05-30 22:50:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 22:50:36 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@57a5f90f]
2019-05-30 22:50:36 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:50:36 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:50:36 -<==      Total: 3
2019-05-30 22:50:36 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 22:50:36 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:50:36 -<==      Total: 1
2019-05-30 22:50:36 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 22:50:36 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:50:36 -<==      Total: 1
2019-05-30 22:50:36 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 22:50:36 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:50:36 -<==      Total: 1
2019-05-30 22:50:36 -==>  Preparing: update water set water_sum = water_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:50:36 -==> Parameters: 1(String), A(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:50:36 -<==    Updates: 1
2019-05-30 22:50:36 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:50:36 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-30 22:50:36.771(Timestamp), 2019-02(String), 1(Long), 2019-05-30 22:50:36.771(Timestamp), 1(Long), null
2019-05-30 22:50:37 -<==    Updates: 1
2019-05-30 22:50:37 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:50:37 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), null, null, null, null, null, null, null, null, null, null, null, null, null, 6.30(BigDecimal), null, 33.00(BigDecimal), 1(BigDecimal), 2019-05-30 22:50:36.786(Timestamp), 2019-02(String), admin(String), 2019-05-30 22:50:36.786(Timestamp), admin(String), null
2019-05-30 22:50:37 -<==    Updates: 1
2019-05-30 22:50:37 -耗时 : 299
2019-05-30 22:50:37 -返回值 : 90
2019-05-30 22:50:38 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 22:50:38 -HTTP METHOD : POST
2019-05-30 22:50:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 22:50:38 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@27f9362e]
2019-05-30 22:50:38 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:50:38 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:50:38 -<==      Total: 3
2019-05-30 22:50:38 -耗时 : 12
2019-05-30 22:50:38 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@15dac252, com.bootdo.moneyList.damain.MoneyListDO@67808a79, com.bootdo.moneyList.damain.MoneyListDO@92698e1]
2019-05-30 22:50:45 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 22:50:45 -HTTP METHOD : POST
2019-05-30 22:50:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 22:50:45 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6b12c5b1]
2019-05-30 22:50:45 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:50:45 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:50:45 -<==      Total: 3
2019-05-30 22:50:45 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 22:50:45 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:50:45 -<==      Total: 1
2019-05-30 22:50:45 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 22:50:45 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:50:45 -<==      Total: 1
2019-05-30 22:50:45 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 22:50:45 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:50:45 -<==      Total: 1
2019-05-30 22:50:45 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:50:45 -==> Parameters: 2(String), A(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:50:45 -<==    Updates: 1
2019-05-30 22:50:45 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:50:45 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 2(BigDecimal), 2019-05-30 22:50:45.803(Timestamp), 2019-02(String), 1(Long), 2019-05-30 22:50:45.803(Timestamp), 1(Long), null
2019-05-30 22:50:45 -<==    Updates: 1
2019-05-30 22:50:45 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:50:45 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 55.67(BigDecimal), 100.00(BigDecimal), -70.35(BigDecimal), 2(BigDecimal), null, null, null, null, 2019-05-30 22:50:45.818(Timestamp), 2019-02(String), admin(String), 2019-05-30 22:50:45.818(Timestamp), admin(String), null
2019-05-30 22:50:45 -<==    Updates: 1
2019-05-30 22:50:45 -耗时 : 164
2019-05-30 22:50:45 -返回值 : 91
2019-05-30 22:50:47 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 22:50:47 -HTTP METHOD : POST
2019-05-30 22:50:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 22:50:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@412bf9cb]
2019-05-30 22:50:47 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:50:47 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:50:47 -<==      Total: 3
2019-05-30 22:50:47 -耗时 : 9
2019-05-30 22:50:47 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4bc483c0, com.bootdo.moneyList.damain.MoneyListDO@3cf8ccd9, com.bootdo.moneyList.damain.MoneyListDO@22039f2c]
2019-05-30 22:50:54 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 22:50:54 -HTTP METHOD : POST
2019-05-30 22:50:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 22:50:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@75eb17d]
2019-05-30 22:50:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:50:54 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:50:54 -<==      Total: 3
2019-05-30 22:50:54 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 22:50:54 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:50:54 -<==      Total: 1
2019-05-30 22:50:54 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 22:50:54 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:50:54 -<==      Total: 1
2019-05-30 22:50:54 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 22:50:54 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:50:54 -<==      Total: 1
2019-05-30 22:50:54 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:50:54 -==> Parameters: 3(String), A(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:50:54 -<==    Updates: 1
2019-05-30 22:50:54 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:50:54 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 3(BigDecimal), 2019-05-30 22:50:54.269(Timestamp), 2019-02(String), 1(Long), 2019-05-30 22:50:54.269(Timestamp), 1(Long), null
2019-05-30 22:50:54 -<==    Updates: 1
2019-05-30 22:50:54 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 22:50:54 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(Integer), 2(Integer), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 3(BigDecimal), null, null, null, null, null, null, null, null, null, 2019-05-30 22:50:54.279(Timestamp), 2019-02(String), admin(String), 2019-05-30 22:50:54.279(Timestamp), admin(String), null
2019-05-30 22:50:54 -<==    Updates: 1
2019-05-30 22:50:54 -耗时 : 252
2019-05-30 22:50:54 -返回值 : 92
2019-05-30 22:50:55 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-30 22:50:55 -HTTP METHOD : POST
2019-05-30 22:50:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-30 22:50:55 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@48b79e5e]
2019-05-30 22:50:55 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:50:55 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:50:55 -<==      Total: 3
2019-05-30 22:50:55 -耗时 : 9
2019-05-30 22:50:55 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@66e18525, com.bootdo.moneyList.damain.MoneyListDO@5b8f31cd, com.bootdo.moneyList.damain.MoneyListDO@2f3e018c]
2019-05-30 22:57:16 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 439]
2019-05-30 22:58:14 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-30 22:58:14 -HTTP METHOD : POST
2019-05-30 22:58:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-30 22:58:14 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@444ec762]
2019-05-30 22:58:14 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-05-30 22:58:14 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-05-30 22:58:14 -<==      Total: 3
2019-05-30 22:58:14 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-05-30 22:58:14 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:58:14 -<==      Total: 1
2019-05-30 22:58:14 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-05-30 22:58:14 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:58:14 -<==      Total: 1
2019-05-30 22:58:14 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-05-30 22:58:14 -==> Parameters: 1-0001(String), 2019-02(String), 2(String)
2019-05-30 22:58:14 -<==      Total: 1
2019-05-30 23:06:21 -请求地址 : http://localhost:8081/index
2019-05-30 23:06:21 -HTTP METHOD : GET
2019-05-30 23:06:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-30 23:06:21 -参数 : [{}]
2019-05-30 23:06:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-30 23:06:21 -==> Parameters: 1(Long)
2019-05-30 23:06:21 -<==      Total: 50
2019-05-30 23:06:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-30 23:06:21 -==> Parameters: 138(Long)
2019-05-30 23:06:21 -<==      Total: 1
2019-05-30 23:06:21 -耗时 : 45
2019-05-30 23:06:21 -返回值 : index_v1
2019-05-30 23:06:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-30 23:06:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 45(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-30 23:06:21.132(Timestamp)
2019-05-30 23:06:21 -请求地址 : http://localhost:8081/main
2019-05-30 23:06:21 -HTTP METHOD : GET
2019-05-30 23:06:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 23:06:21 -参数 : []
2019-05-30 23:06:21 -耗时 : 0
2019-05-30 23:06:21 -返回值 : main
2019-05-30 23:06:21 -<==    Updates: 1
2019-05-30 23:06:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-30 23:06:21 -HTTP METHOD : GET
2019-05-30 23:06:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-30 23:06:21 -参数 : []
2019-05-30 23:06:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-30 23:06:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-30 23:06:21 -<==      Total: 0
2019-05-30 23:06:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-30 23:06:21 -==> Parameters: 1(Long), 0(String)
2019-05-30 23:06:21 -<==      Total: 1
2019-05-30 23:06:21 -耗时 : 9
2019-05-30 23:06:21 -返回值 : com.bootdo.common.utils.PageUtils@6b2bfd45
2019-05-30 23:06:21 -请求地址 : http://localhost:8081/main
2019-05-30 23:06:21 -HTTP METHOD : GET
2019-05-30 23:06:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-30 23:06:21 -参数 : []
2019-05-30 23:06:21 -耗时 : 0
2019-05-30 23:06:21 -返回值 : main

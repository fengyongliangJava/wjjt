2019-04-01 08:58:17 -Starting BootdoApplication on ZJZL-20180906VX with PID 11556 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-01 08:58:17 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-01 08:58:17 -The following profiles are active: dev
2019-04-01 08:58:18 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 01 08:58:18 CST 2019]; root of context hierarchy
2019-04-01 08:58:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-01 08:58:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$606fb005] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 08:58:31 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$52c8deac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 08:58:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 08:58:33 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 08:58:33 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 08:58:33 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-01 08:58:33 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-01 08:58:33 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 08:58:33 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 08:58:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 08:58:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 08:58:35 -Tomcat initialized with port(s): 8081 (http)
2019-04-01 08:58:35 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-01 08:58:35 -Starting service [Tomcat]
2019-04-01 08:58:35 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-01 08:58:35 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-01 08:58:35 -Initializing Spring embedded WebApplicationContext
2019-04-01 08:58:35 -Root WebApplicationContext: initialization completed in 17911 ms
2019-04-01 08:58:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-01 08:58:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-01 08:58:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-01 08:58:36 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-01 08:58:36 -Filter xssFilter was not registered (disabled)
2019-04-01 08:58:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-01 08:58:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-01 08:58:36 -Servlet statViewServlet mapped to [/druid/*]
2019-04-01 08:58:36 -Servlet dispatcherServlet mapped to [/]
2019-04-01 08:58:41 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 01 08:58:18 CST 2019]; root of context hierarchy
2019-04-01 08:58:41 -Using default implementation for ThreadExecutor
2019-04-01 08:58:41 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-01 08:58:41 -Quartz Scheduler v.2.2.1 created.
2019-04-01 08:58:41 -RAMJobStore initialized.
2019-04-01 08:58:41 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-01 08:58:41 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-01 08:58:41 -Quartz scheduler version: 2.2.1
2019-04-01 08:58:41 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@216f01
2019-04-01 08:58:42 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-01 08:58:42 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-01 08:58:44 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-01 08:58:44 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-01 08:58:44 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-01 08:58:44 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-01 08:58:44 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-01 08:58:44 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-01 08:58:44 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-01 08:58:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-01 08:58:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-01 08:58:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-01 08:58:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-01 08:58:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-01 08:58:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-01 08:58:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-01 08:58:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-01 08:58:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-01 08:58:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-01 08:58:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-01 08:58:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-01 08:58:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-01 08:58:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-01 08:58:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-01 08:58:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-01 08:58:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-01 08:58:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-01 08:58:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-01 08:58:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 08:58:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-01 08:58:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 08:58:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-01 08:58:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-01 08:58:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-01 08:58:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-01 08:58:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-01 08:58:44 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-01 08:58:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-01 08:58:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-01 08:58:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-01 08:58:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-01 08:58:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-01 08:58:44 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-01 08:58:44 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-01 08:58:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 08:58:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 08:58:44 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-01 08:58:45 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-01 08:58:45 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-01 08:58:45 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-01 08:58:45 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 08:58:45 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-01 08:58:45 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 08:58:45 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-01 08:58:45 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-01 08:58:45 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-01 08:58:45 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-01 08:58:45 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-01 08:58:45 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-01 08:58:45 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-01 08:58:45 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-01 08:58:45 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-01 08:58:45 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-01 08:58:45 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-01 08:58:45 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-01 08:58:45 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-01 08:58:45 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-01 08:58:45 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 08:58:45 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-01 08:58:45 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 08:58:45 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-01 08:58:45 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 08:58:45 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 08:58:45 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-01 08:58:45 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-01 08:58:45 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 08:58:45 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-01 08:58:45 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 08:58:45 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-01 08:58:45 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-01 08:58:45 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-01 08:58:45 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-01 08:58:45 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-01 08:58:45 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-01 08:58:45 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 08:58:45 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-01 08:58:45 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-01 08:58:45 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-01 08:58:45 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-01 08:58:45 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-01 08:58:45 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-01 08:58:45 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-01 08:58:45 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-01 08:58:45 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-01 08:58:45 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-04-01 08:58:45 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-01 08:58:45 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 08:58:45 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-01 08:58:45 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-01 08:58:45 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-01 08:58:45 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-01 08:58:45 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-01 08:58:45 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-01 08:58:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-01 08:58:45 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-01 08:58:45 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 08:58:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 08:58:45 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-01 08:58:45 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-01 08:58:45 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-01 08:58:45 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-01 08:58:45 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-01 08:58:45 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-01 08:58:45 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-01 08:58:45 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-01 08:58:45 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-01 08:58:45 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-01 08:58:45 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-01 08:58:45 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-01 08:58:45 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-01 08:58:45 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-01 08:58:45 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-01 08:58:45 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-01 08:58:45 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 08:58:45 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 08:58:45 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 08:58:45 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-01 08:58:45 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-01 08:58:45 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-01 08:58:45 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-01 08:58:45 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-01 08:58:45 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 08:58:45 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-01 08:58:45 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 08:58:45 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-01 08:58:45 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-01 08:58:45 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-01 08:58:45 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-01 08:58:45 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 08:58:45 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 08:58:45 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 08:58:45 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 08:58:45 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-01 08:58:45 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-01 08:58:45 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 08:58:45 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 08:58:45 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-01 08:58:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 08:58:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-01 08:58:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-01 08:58:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-01 08:58:46 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-01 08:58:46 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-01 08:58:46 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-01 08:58:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 08:58:47 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 01 08:58:18 CST 2019]; root of context hierarchy
2019-04-01 08:58:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 08:58:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 08:58:47 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 08:58:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-01 08:58:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-01 08:58:50 -Registering beans for JMX exposure on startup
2019-04-01 08:58:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-01 08:58:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-01 08:58:50 -Starting beans in phase 2147483647
2019-04-01 08:58:50 -Context refreshed
2019-04-01 08:58:50 -Found 1 custom documentation plugin(s)
2019-04-01 08:58:50 -Scanning for api listing references
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_1
2019-04-01 08:58:51 -Generating unique operation named: addUsingGET_1
2019-04-01 08:58:51 -Generating unique operation named: editUsingGET_1
2019-04-01 08:58:51 -Generating unique operation named: listUsingGET_1
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_2
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_3
2019-04-01 08:58:51 -Generating unique operation named: saveUsingPOST_1
2019-04-01 08:58:51 -Generating unique operation named: updateUsingGET_1
2019-04-01 08:58:51 -Generating unique operation named: updateUsingHEAD_1
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPOST_1
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPUT_1
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPATCH_1
2019-04-01 08:58:51 -Generating unique operation named: updateUsingDELETE_1
2019-04-01 08:58:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-01 08:58:51 -Generating unique operation named: updateUsingTRACE_1
2019-04-01 08:58:51 -Generating unique operation named: addUsingGET_2
2019-04-01 08:58:51 -Generating unique operation named: editUsingGET_2
2019-04-01 08:58:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-01 08:58:51 -Generating unique operation named: listUsingGET_2
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_4
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_5
2019-04-01 08:58:51 -Generating unique operation named: saveUsingPOST_2
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPOST_2
2019-04-01 08:58:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-01 08:58:51 -Generating unique operation named: addUsingGET_3
2019-04-01 08:58:51 -Generating unique operation named: editUsingGET_3
2019-04-01 08:58:51 -Generating unique operation named: listUsingGET_3
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_6
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_7
2019-04-01 08:58:51 -Generating unique operation named: saveUsingPOST_3
2019-04-01 08:58:51 -Generating unique operation named: updateUsingGET_2
2019-04-01 08:58:51 -Generating unique operation named: updateUsingHEAD_2
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPOST_3
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPUT_2
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPATCH_2
2019-04-01 08:58:51 -Generating unique operation named: updateUsingDELETE_2
2019-04-01 08:58:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-01 08:58:51 -Generating unique operation named: updateUsingTRACE_2
2019-04-01 08:58:51 -Generating unique operation named: addUsingGET_4
2019-04-01 08:58:51 -Generating unique operation named: editUsingGET_4
2019-04-01 08:58:51 -Generating unique operation named: listUsingGET_4
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_8
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_9
2019-04-01 08:58:51 -Generating unique operation named: saveUsingPOST_4
2019-04-01 08:58:51 -Generating unique operation named: updateUsingGET_3
2019-04-01 08:58:51 -Generating unique operation named: updateUsingHEAD_3
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPOST_4
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPUT_3
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPATCH_3
2019-04-01 08:58:51 -Generating unique operation named: updateUsingDELETE_3
2019-04-01 08:58:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-01 08:58:51 -Generating unique operation named: updateUsingTRACE_3
2019-04-01 08:58:51 -Generating unique operation named: ElecUsingGET_1
2019-04-01 08:58:51 -Generating unique operation named: addUsingGET_5
2019-04-01 08:58:51 -Generating unique operation named: editUsingGET_5
2019-04-01 08:58:51 -Generating unique operation named: listUsingGET_5
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_10
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_11
2019-04-01 08:58:51 -Generating unique operation named: saveUsingPOST_5
2019-04-01 08:58:51 -Generating unique operation named: updateUsingGET_4
2019-04-01 08:58:51 -Generating unique operation named: updateUsingHEAD_4
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPOST_5
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPUT_4
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPATCH_4
2019-04-01 08:58:51 -Generating unique operation named: updateUsingDELETE_4
2019-04-01 08:58:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-01 08:58:51 -Generating unique operation named: updateUsingTRACE_4
2019-04-01 08:58:51 -Generating unique operation named: editUsingGET_6
2019-04-01 08:58:51 -Generating unique operation named: listUsingGET_6
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPOST_6
2019-04-01 08:58:51 -Generating unique operation named: addUsingGET_6
2019-04-01 08:58:51 -Generating unique operation named: editUsingGET_7
2019-04-01 08:58:51 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-01 08:58:51 -Generating unique operation named: listUsingGET_7
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_12
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_13
2019-04-01 08:58:51 -Generating unique operation named: saveUsingPOST_6
2019-04-01 08:58:51 -Generating unique operation named: updateUsingGET_5
2019-04-01 08:58:51 -Generating unique operation named: updateUsingHEAD_5
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPOST_7
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPUT_5
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPATCH_5
2019-04-01 08:58:51 -Generating unique operation named: updateUsingDELETE_5
2019-04-01 08:58:51 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-01 08:58:51 -Generating unique operation named: updateUsingTRACE_5
2019-04-01 08:58:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-01 08:58:51 -Generating unique operation named: addUsingGET_7
2019-04-01 08:58:51 -Generating unique operation named: editUsingGET_8
2019-04-01 08:58:51 -Generating unique operation named: listUsingGET_8
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_14
2019-04-01 08:58:51 -Generating unique operation named: removeUsingPOST_15
2019-04-01 08:58:51 -Generating unique operation named: saveUsingPOST_7
2019-04-01 08:58:51 -Generating unique operation named: updateUsingGET_6
2019-04-01 08:58:51 -Generating unique operation named: updateUsingHEAD_6
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPOST_8
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPUT_6
2019-04-01 08:58:51 -Generating unique operation named: updateUsingPATCH_6
2019-04-01 08:58:51 -Generating unique operation named: updateUsingDELETE_6
2019-04-01 08:58:51 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-01 08:58:52 -Generating unique operation named: updateUsingTRACE_6
2019-04-01 08:58:52 -Generating unique operation named: addUsingGET_8
2019-04-01 08:58:52 -Generating unique operation named: editUsingGET_9
2019-04-01 08:58:52 -Generating unique operation named: listUsingGET_9
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_16
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_17
2019-04-01 08:58:52 -Generating unique operation named: saveUsingPOST_8
2019-04-01 08:58:52 -Generating unique operation named: updateUsingGET_7
2019-04-01 08:58:52 -Generating unique operation named: updateUsingHEAD_7
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPOST_9
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPUT_7
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPATCH_7
2019-04-01 08:58:52 -Generating unique operation named: updateUsingDELETE_7
2019-04-01 08:58:52 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-01 08:58:52 -Generating unique operation named: updateUsingTRACE_7
2019-04-01 08:58:52 -Generating unique operation named: addUsingGET_9
2019-04-01 08:58:52 -Generating unique operation named: editUsingGET_10
2019-04-01 08:58:52 -Generating unique operation named: infoUsingGET_1
2019-04-01 08:58:52 -Generating unique operation named: infoUsingHEAD_1
2019-04-01 08:58:52 -Generating unique operation named: infoUsingPOST_1
2019-04-01 08:58:52 -Generating unique operation named: infoUsingPUT_1
2019-04-01 08:58:52 -Generating unique operation named: infoUsingPATCH_1
2019-04-01 08:58:52 -Generating unique operation named: infoUsingDELETE_1
2019-04-01 08:58:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-01 08:58:52 -Generating unique operation named: infoUsingTRACE_1
2019-04-01 08:58:52 -Generating unique operation named: listUsingGET_10
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_18
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_19
2019-04-01 08:58:52 -Generating unique operation named: saveUsingPOST_9
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPOST_10
2019-04-01 08:58:52 -Generating unique operation named: listUsingGET_11
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_20
2019-04-01 08:58:52 -Generating unique operation named: welcomeUsingGET_1
2019-04-01 08:58:52 -Generating unique operation named: addUsingGET_10
2019-04-01 08:58:52 -Generating unique operation named: editUsingGET_11
2019-04-01 08:58:52 -Generating unique operation named: listUsingGET_12
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_21
2019-04-01 08:58:52 -Generating unique operation named: saveUsingPOST_10
2019-04-01 08:58:52 -Generating unique operation named: treeUsingGET_1
2019-04-01 08:58:52 -Generating unique operation named: treeUsingGET_2
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPOST_11
2019-04-01 08:58:52 -Generating unique operation named: addUsingGET_11
2019-04-01 08:58:52 -Generating unique operation named: editUsingGET_12
2019-04-01 08:58:52 -Generating unique operation named: listUsingGET_13
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_22
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_23
2019-04-01 08:58:52 -Generating unique operation named: saveUsingPOST_11
2019-04-01 08:58:52 -Generating unique operation named: updateUsingGET_8
2019-04-01 08:58:52 -Generating unique operation named: updateUsingHEAD_8
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPOST_12
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPUT_8
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPATCH_8
2019-04-01 08:58:52 -Generating unique operation named: updateUsingDELETE_8
2019-04-01 08:58:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-01 08:58:52 -Generating unique operation named: updateUsingTRACE_8
2019-04-01 08:58:52 -Generating unique operation named: addUsingGET_12
2019-04-01 08:58:52 -Generating unique operation named: editUsingGET_13
2019-04-01 08:58:52 -Generating unique operation named: listUsingGET_14
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_24
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_25
2019-04-01 08:58:52 -Generating unique operation named: saveUsingPOST_12
2019-04-01 08:58:52 -Generating unique operation named: updateUsingGET_9
2019-04-01 08:58:52 -Generating unique operation named: updateUsingHEAD_9
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPOST_13
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPUT_9
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPATCH_9
2019-04-01 08:58:52 -Generating unique operation named: updateUsingDELETE_9
2019-04-01 08:58:52 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-01 08:58:52 -Generating unique operation named: updateUsingTRACE_9
2019-04-01 08:58:52 -Generating unique operation named: addUsingGET_13
2019-04-01 08:58:52 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-01 08:58:52 -Generating unique operation named: editUsingGET_14
2019-04-01 08:58:52 -Generating unique operation named: listUsingGET_15
2019-04-01 08:58:52 -Generating unique operation named: saveUsingPOST_13
2019-04-01 08:58:52 -Generating unique operation named: saveUsingPOST_14
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPOST_14
2019-04-01 08:58:52 -Generating unique operation named: listUsingGET_16
2019-04-01 08:58:52 -Generating unique operation named: listUsingHEAD_1
2019-04-01 08:58:52 -Generating unique operation named: listUsingPOST_1
2019-04-01 08:58:52 -Generating unique operation named: listUsingPUT_1
2019-04-01 08:58:52 -Generating unique operation named: listUsingPATCH_1
2019-04-01 08:58:52 -Generating unique operation named: listUsingDELETE_1
2019-04-01 08:58:52 -Generating unique operation named: listUsingOPTIONS_1
2019-04-01 08:58:52 -Generating unique operation named: listUsingTRACE_1
2019-04-01 08:58:52 -Generating unique operation named: addUsingGET_14
2019-04-01 08:58:52 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-01 08:58:52 -Generating unique operation named: editUsingGET_15
2019-04-01 08:58:52 -Generating unique operation named: listUsingGET_17
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_26
2019-04-01 08:58:52 -Generating unique operation named: saveUsingPOST_15
2019-04-01 08:58:52 -Generating unique operation named: treeUsingGET_3
2019-04-01 08:58:52 -Generating unique operation named: treeViewUsingGET_1
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPOST_15
2019-04-01 08:58:52 -Generating unique operation named: addUsingGET_15
2019-04-01 08:58:52 -Generating unique operation named: editUsingGET_16
2019-04-01 08:58:52 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-01 08:58:52 -Generating unique operation named: listUsingGET_18
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_27
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_28
2019-04-01 08:58:52 -Generating unique operation named: saveUsingPOST_16
2019-04-01 08:58:52 -Generating unique operation named: updateUsingGET_10
2019-04-01 08:58:52 -Generating unique operation named: updateUsingHEAD_10
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPOST_16
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPUT_10
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPATCH_10
2019-04-01 08:58:52 -Generating unique operation named: updateUsingDELETE_10
2019-04-01 08:58:52 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-01 08:58:52 -Generating unique operation named: updateUsingTRACE_10
2019-04-01 08:58:52 -Generating unique operation named: exprotExcelUsingGET_6
2019-04-01 08:58:52 -Generating unique operation named: addUsingGET_16
2019-04-01 08:58:52 -Generating unique operation named: editUsingGET_17
2019-04-01 08:58:52 -Generating unique operation named: listUsingGET_19
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_29
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_30
2019-04-01 08:58:52 -Generating unique operation named: saveUsingPOST_17
2019-04-01 08:58:52 -Generating unique operation named: updateUsingGET_11
2019-04-01 08:58:52 -Generating unique operation named: updateUsingHEAD_11
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPOST_17
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPUT_11
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPATCH_11
2019-04-01 08:58:52 -Generating unique operation named: updateUsingDELETE_11
2019-04-01 08:58:52 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-01 08:58:52 -Generating unique operation named: updateUsingTRACE_11
2019-04-01 08:58:52 -Generating unique operation named: addUsingGET_17
2019-04-01 08:58:52 -Generating unique operation named: editUsingGET_18
2019-04-01 08:58:52 -Generating unique operation named: listUsingGET_20
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_31
2019-04-01 08:58:52 -Generating unique operation named: removeUsingPOST_32
2019-04-01 08:58:52 -Generating unique operation named: saveUsingPOST_18
2019-04-01 08:58:52 -Generating unique operation named: updateUsingGET_12
2019-04-01 08:58:52 -Generating unique operation named: updateUsingHEAD_12
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPOST_18
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPUT_12
2019-04-01 08:58:52 -Generating unique operation named: updateUsingPATCH_12
2019-04-01 08:58:52 -Generating unique operation named: updateUsingDELETE_12
2019-04-01 08:58:52 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-01 08:58:52 -Generating unique operation named: updateUsingTRACE_12
2019-04-01 08:58:53 -Starting Quartz Scheduler now
2019-04-01 08:58:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-01 08:58:53 -Starting...
2019-04-01 08:58:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 08:58:53 -Started.
2019-04-01 08:58:53 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-01 08:58:53 -Using a shared selector for servlet write/read
2019-04-01 08:58:53 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-01 08:58:53 -Started BootdoApplication in 40.805 seconds (JVM running for 45.497)
2019-04-01 08:58:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-01 08:58:53 -==> Parameters: 
2019-04-01 08:58:53 -<==      Total: 1
2019-04-01 08:59:17 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-01 08:59:17 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-01 08:59:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-04-01 08:59:18 -Enabling session validation scheduler...
2019-04-01 08:59:18 -请求地址 : http://localhost:8081/login;JSESSIONID=4b89d8cc-9a6d-4b38-8fff-e44ced2d04a5
2019-04-01 08:59:18 -HTTP METHOD : GET
2019-04-01 08:59:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 08:59:18 -参数 : [{}]
2019-04-01 08:59:18 -耗时 : 3
2019-04-01 08:59:18 -返回值 : login
2019-04-01 08:59:23 -请求地址 : http://localhost:8081/getVerify
2019-04-01 08:59:23 -HTTP METHOD : GET
2019-04-01 08:59:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 08:59:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@409e6e60, org.apache.shiro.web.servlet.ShiroHttpServletResponse@62eb19b2]
2019-04-01 08:59:35 -2891
2019-04-01 08:59:35 -耗时 : 12209
2019-04-01 08:59:35 -返回值 : null
2019-04-01 08:59:46 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-01 08:59:47 -请求地址 : http://localhost:8081/login
2019-04-01 08:59:47 -HTTP METHOD : POST
2019-04-01 08:59:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-01 08:59:47 -参数 : [admin, 111111, 2891, org.apache.shiro.web.servlet.ShiroHttpServletRequest@177439cd]
2019-04-01 08:59:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-01 08:59:47 -==> Parameters: admin(String)
2019-04-01 08:59:47 -<==      Total: 1
2019-04-01 08:59:47 -耗时 : 623
2019-04-01 08:59:47 -返回值 : {msg=操作成功, code=0}
2019-04-01 08:59:47 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-01 08:59:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 08:59:47 -==> Parameters: 1(Long), admin(String), 登录(String), 623(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-01 08:59:47.851(Timestamp)
2019-04-01 08:59:48 -<==    Updates: 1
2019-04-01 08:59:48 -请求地址 : http://localhost:8081/index
2019-04-01 08:59:48 -HTTP METHOD : GET
2019-04-01 08:59:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 08:59:48 -参数 : [{}]
2019-04-01 08:59:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 08:59:48 -==> Parameters: 1(Long)
2019-04-01 08:59:48 -<==      Total: 46
2019-04-01 08:59:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 08:59:48 -==> Parameters: 138(Long)
2019-04-01 08:59:49 -<==      Total: 1
2019-04-01 08:59:49 -耗时 : 794
2019-04-01 08:59:49 -返回值 : index_v1
2019-04-01 08:59:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 08:59:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 796(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 08:59:49.188(Timestamp)
2019-04-01 08:59:49 -<==    Updates: 1
2019-04-01 08:59:49 -请求地址 : http://localhost:8081/main
2019-04-01 08:59:49 -HTTP METHOD : GET
2019-04-01 08:59:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 08:59:49 -参数 : []
2019-04-01 08:59:49 -耗时 : 1
2019-04-01 08:59:49 -返回值 : main
2019-04-01 08:59:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 08:59:52 -HTTP METHOD : GET
2019-04-01 08:59:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 08:59:52 -参数 : []
2019-04-01 08:59:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 08:59:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 08:59:53 -<==      Total: 0
2019-04-01 08:59:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 08:59:53 -==> Parameters: 1(Long), 0(String)
2019-04-01 08:59:53 -<==      Total: 1
2019-04-01 08:59:53 -耗时 : 140
2019-04-01 08:59:53 -返回值 : com.bootdo.common.utils.PageUtils@6e204700
2019-04-01 08:59:53 -请求地址 : http://localhost:8081/main
2019-04-01 08:59:53 -HTTP METHOD : GET
2019-04-01 08:59:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 08:59:53 -参数 : []
2019-04-01 08:59:53 -耗时 : 0
2019-04-01 08:59:53 -返回值 : main
2019-04-01 09:00:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 09:00:00 -==> Parameters: 1(Long)
2019-04-01 09:00:00 -<==      Total: 90
2019-04-01 09:00:00 -请求地址 : http://localhost:8081/charts/countDD
2019-04-01 09:00:00 -HTTP METHOD : GET
2019-04-01 09:00:00 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-01 09:00:00 -参数 : []
2019-04-01 09:00:00 -耗时 : 1
2019-04-01 09:00:00 -返回值 : charts/countDD
2019-04-01 09:00:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:00:01 -HTTP METHOD : GET
2019-04-01 09:00:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:00:01 -参数 : [userType]
2019-04-01 09:00:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:00:01 -==> Parameters: userType(String)
2019-04-01 09:00:01 -<==      Total: 2
2019-04-01 09:00:01 -耗时 : 95
2019-04-01 09:00:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:00:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 09:00:17 -HTTP METHOD : GET
2019-04-01 09:00:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 09:00:17 -参数 : []
2019-04-01 09:00:17 -耗时 : 0
2019-04-01 09:00:17 -返回值 : system/dept/deptTree
2019-04-01 09:00:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 09:00:17 -HTTP METHOD : GET
2019-04-01 09:00:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 09:00:17 -参数 : []
2019-04-01 09:00:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 09:00:18 -==> Parameters: 
2019-04-01 09:00:18 -<==      Total: 3
2019-04-01 09:00:18 -耗时 : 119
2019-04-01 09:00:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 09:00:20 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:00:20 -HTTP METHOD : POST
2019-04-01 09:00:20 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:00:20 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@33d08e3c, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@17b630ba, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@5994a722, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@33d08e3c, com.bootdo.moneyLog.vo.WaterLogVo@17b630ba, com.bootdo.moneyLog.vo.HeatLogVo@5994a722]
2019-04-01 09:00:20 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:00:20 -==> Parameters: A(String), 2(String)
2019-04-01 09:00:20 -<==      Total: 1
2019-04-01 09:00:20 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:00:20 -==> Parameters: A(String), 2(String)
2019-04-01 09:00:20 -<==      Total: 1
2019-04-01 09:00:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:00:20 -==> Parameters: A(String), 2(String)
2019-04-01 09:00:20 -<==      Total: 1
2019-04-01 09:00:20 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:00:20 -==> Parameters: A(String), 2(String)
2019-04-01 09:00:20 -<==      Total: 1
2019-04-01 09:00:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:00:20 -==> Parameters: A(String), 2(String)
2019-04-01 09:00:20 -<==      Total: 1
2019-04-01 09:00:20 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:00:20 -==> Parameters: A(String), 2(String)
2019-04-01 09:00:20 -<==      Total: 1
2019-04-01 09:00:20 -耗时 : 187
2019-04-01 09:00:20 -返回值 : com.bootdo.charts.vo.CountDayVo@a1210df
2019-04-01 09:01:39 -请求地址 : http://localhost:8081/index
2019-04-01 09:01:39 -HTTP METHOD : GET
2019-04-01 09:01:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:01:39 -参数 : [{}]
2019-04-01 09:01:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:01:39 -==> Parameters: 1(Long)
2019-04-01 09:01:39 -<==      Total: 46
2019-04-01 09:01:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:01:39 -==> Parameters: 138(Long)
2019-04-01 09:01:39 -<==      Total: 1
2019-04-01 09:01:39 -耗时 : 102
2019-04-01 09:01:39 -返回值 : index_v1
2019-04-01 09:01:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:01:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 103(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:01:39.843(Timestamp)
2019-04-01 09:01:39 -<==    Updates: 1
2019-04-01 09:01:40 -请求地址 : http://localhost:8081/main
2019-04-01 09:01:40 -HTTP METHOD : GET
2019-04-01 09:01:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:01:40 -参数 : []
2019-04-01 09:01:40 -耗时 : 0
2019-04-01 09:01:40 -返回值 : main
2019-04-01 09:01:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:01:40 -HTTP METHOD : GET
2019-04-01 09:01:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:01:40 -参数 : []
2019-04-01 09:01:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:01:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:01:40 -<==      Total: 0
2019-04-01 09:01:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:01:40 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:01:40 -<==      Total: 1
2019-04-01 09:01:40 -耗时 : 9
2019-04-01 09:01:40 -返回值 : com.bootdo.common.utils.PageUtils@40b4ae6
2019-04-01 09:01:40 -请求地址 : http://localhost:8081/main
2019-04-01 09:01:40 -HTTP METHOD : GET
2019-04-01 09:01:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:01:40 -参数 : []
2019-04-01 09:01:40 -耗时 : 1
2019-04-01 09:01:40 -返回值 : main
2019-04-01 09:01:44 -请求地址 : http://localhost:8081/charts/countDD
2019-04-01 09:01:44 -HTTP METHOD : GET
2019-04-01 09:01:44 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-01 09:01:44 -参数 : []
2019-04-01 09:01:44 -耗时 : 1
2019-04-01 09:01:44 -返回值 : charts/countDD
2019-04-01 09:01:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:01:45 -HTTP METHOD : GET
2019-04-01 09:01:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:01:45 -参数 : [userType]
2019-04-01 09:01:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:01:45 -==> Parameters: userType(String)
2019-04-01 09:01:45 -<==      Total: 2
2019-04-01 09:01:45 -耗时 : 4
2019-04-01 09:01:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:01:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 09:01:55 -HTTP METHOD : GET
2019-04-01 09:01:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 09:01:55 -参数 : []
2019-04-01 09:01:55 -耗时 : 1
2019-04-01 09:01:55 -返回值 : system/dept/deptTree
2019-04-01 09:01:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 09:01:55 -HTTP METHOD : GET
2019-04-01 09:01:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 09:01:55 -参数 : []
2019-04-01 09:01:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 09:01:55 -==> Parameters: 
2019-04-01 09:01:55 -<==      Total: 3
2019-04-01 09:01:55 -耗时 : 4
2019-04-01 09:01:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 09:01:57 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:01:57 -HTTP METHOD : POST
2019-04-01 09:01:57 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:01:57 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@165e5684, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@215c0d54, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@478cea4a, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@165e5684, com.bootdo.moneyLog.vo.WaterLogVo@215c0d54, com.bootdo.moneyLog.vo.HeatLogVo@478cea4a]
2019-04-01 09:01:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:57 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:57 -<==      Total: 1
2019-04-01 09:01:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:57 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:57 -<==      Total: 1
2019-04-01 09:01:57 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:57 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:57 -<==      Total: 1
2019-04-01 09:01:57 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:57 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:57 -<==      Total: 1
2019-04-01 09:01:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:57 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:57 -<==      Total: 1
2019-04-01 09:01:57 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:57 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:57 -<==      Total: 1
2019-04-01 09:01:57 -耗时 : 29
2019-04-01 09:01:57 -返回值 : com.bootdo.charts.vo.CountDayVo@3dc540d0
2019-04-01 09:01:59 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:01:59 -HTTP METHOD : POST
2019-04-01 09:01:59 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:01:59 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@7164bfa5, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2bb7e350, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@10975d51, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@7164bfa5, com.bootdo.moneyLog.vo.WaterLogVo@2bb7e350, com.bootdo.moneyLog.vo.HeatLogVo@10975d51]
2019-04-01 09:01:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:59 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:59 -<==      Total: 1
2019-04-01 09:01:59 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:59 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:59 -<==      Total: 1
2019-04-01 09:01:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:59 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:59 -<==      Total: 1
2019-04-01 09:01:59 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:59 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:59 -<==      Total: 1
2019-04-01 09:01:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:59 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:59 -<==      Total: 1
2019-04-01 09:01:59 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:59 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:59 -<==      Total: 1
2019-04-01 09:01:59 -耗时 : 18
2019-04-01 09:01:59 -返回值 : com.bootdo.charts.vo.CountDayVo@68c5689b
2019-04-01 09:01:59 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:01:59 -HTTP METHOD : POST
2019-04-01 09:01:59 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:01:59 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@fd79e3e, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@3330933b, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@52744b75, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@fd79e3e, com.bootdo.moneyLog.vo.WaterLogVo@3330933b, com.bootdo.moneyLog.vo.HeatLogVo@52744b75]
2019-04-01 09:01:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:59 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:59 -<==      Total: 1
2019-04-01 09:01:59 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:59 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:59 -<==      Total: 1
2019-04-01 09:01:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:59 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:59 -<==      Total: 1
2019-04-01 09:01:59 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:59 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:59 -<==      Total: 1
2019-04-01 09:01:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:59 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:59 -<==      Total: 1
2019-04-01 09:01:59 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:01:59 -==> Parameters: A(String), 2(String)
2019-04-01 09:01:59 -<==      Total: 1
2019-04-01 09:01:59 -耗时 : 16
2019-04-01 09:01:59 -返回值 : com.bootdo.charts.vo.CountDayVo@4ad6dda5
2019-04-01 09:02:00 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:02:00 -HTTP METHOD : POST
2019-04-01 09:02:00 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:02:00 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@448669a9, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@45e76a02, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@46a8c85a, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@448669a9, com.bootdo.moneyLog.vo.WaterLogVo@45e76a02, com.bootdo.moneyLog.vo.HeatLogVo@46a8c85a]
2019-04-01 09:02:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:00 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:00 -<==      Total: 1
2019-04-01 09:02:00 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:00 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:00 -<==      Total: 1
2019-04-01 09:02:00 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:00 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:00 -<==      Total: 1
2019-04-01 09:02:00 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:00 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:00 -<==      Total: 1
2019-04-01 09:02:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:00 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:00 -<==      Total: 1
2019-04-01 09:02:00 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:00 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:00 -<==      Total: 1
2019-04-01 09:02:00 -耗时 : 17
2019-04-01 09:02:00 -返回值 : com.bootdo.charts.vo.CountDayVo@6102d2a5
2019-04-01 09:02:26 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 09:02:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 09:02:26 -HTTP METHOD : GET
2019-04-01 09:02:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 09:02:26 -参数 : []
2019-04-01 09:02:26 -耗时 : 1
2019-04-01 09:02:26 -返回值 : system/dept/deptTree
2019-04-01 09:02:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 09:02:26 -HTTP METHOD : GET
2019-04-01 09:02:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 09:02:26 -参数 : []
2019-04-01 09:02:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 09:02:26 -==> Parameters: 
2019-04-01 09:02:26 -<==      Total: 3
2019-04-01 09:02:26 -耗时 : 4
2019-04-01 09:02:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 09:02:29 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:02:29 -HTTP METHOD : POST
2019-04-01 09:02:29 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:02:29 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@7364edcf, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@3f8f6f77, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@6948eb89, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@7364edcf, com.bootdo.moneyLog.vo.WaterLogVo@3f8f6f77, com.bootdo.moneyLog.vo.HeatLogVo@6948eb89]
2019-04-01 09:02:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:29 -<==      Total: 1
2019-04-01 09:02:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:29 -<==      Total: 1
2019-04-01 09:02:29 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:29 -<==      Total: 1
2019-04-01 09:02:29 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:29 -<==      Total: 1
2019-04-01 09:02:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:29 -<==      Total: 1
2019-04-01 09:02:29 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:29 -<==      Total: 1
2019-04-01 09:02:29 -耗时 : 19
2019-04-01 09:02:29 -返回值 : com.bootdo.charts.vo.CountDayVo@2d65243
2019-04-01 09:02:30 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:02:30 -HTTP METHOD : POST
2019-04-01 09:02:30 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:02:30 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@66de07fa, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@7cdd6908, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@fd46087, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@66de07fa, com.bootdo.moneyLog.vo.WaterLogVo@7cdd6908, com.bootdo.moneyLog.vo.HeatLogVo@fd46087]
2019-04-01 09:02:30 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:30 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:30 -<==      Total: 1
2019-04-01 09:02:30 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:30 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:30 -<==      Total: 1
2019-04-01 09:02:30 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:30 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:30 -<==      Total: 1
2019-04-01 09:02:30 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:30 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:30 -<==      Total: 1
2019-04-01 09:02:30 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:30 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:30 -<==      Total: 1
2019-04-01 09:02:30 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:02:30 -==> Parameters: A(String), 2(String)
2019-04-01 09:02:30 -<==      Total: 1
2019-04-01 09:02:30 -耗时 : 19
2019-04-01 09:02:30 -返回值 : com.bootdo.charts.vo.CountDayVo@74c87e94
2019-04-01 09:02:47 -请求地址 : http://localhost:8081/index
2019-04-01 09:02:47 -HTTP METHOD : GET
2019-04-01 09:02:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:02:47 -参数 : [{}]
2019-04-01 09:02:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:02:47 -==> Parameters: 1(Long)
2019-04-01 09:02:47 -<==      Total: 46
2019-04-01 09:02:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:02:47 -==> Parameters: 138(Long)
2019-04-01 09:02:47 -<==      Total: 1
2019-04-01 09:02:47 -耗时 : 28
2019-04-01 09:02:47 -返回值 : index_v1
2019-04-01 09:02:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:02:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:02:47.087(Timestamp)
2019-04-01 09:02:47 -请求地址 : http://localhost:8081/main
2019-04-01 09:02:47 -HTTP METHOD : GET
2019-04-01 09:02:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:02:47 -参数 : []
2019-04-01 09:02:47 -耗时 : 0
2019-04-01 09:02:47 -返回值 : main
2019-04-01 09:02:47 -<==    Updates: 1
2019-04-01 09:02:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:02:47 -HTTP METHOD : GET
2019-04-01 09:02:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:02:47 -参数 : []
2019-04-01 09:02:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:02:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:02:47 -<==      Total: 0
2019-04-01 09:02:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:02:47 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:02:47 -<==      Total: 1
2019-04-01 09:02:47 -耗时 : 7
2019-04-01 09:02:47 -返回值 : com.bootdo.common.utils.PageUtils@590dc652
2019-04-01 09:02:47 -请求地址 : http://localhost:8081/main
2019-04-01 09:02:47 -HTTP METHOD : GET
2019-04-01 09:02:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:02:47 -参数 : []
2019-04-01 09:02:47 -耗时 : 1
2019-04-01 09:02:47 -返回值 : main
2019-04-01 09:02:51 -请求地址 : http://localhost:8081/charts/countDD
2019-04-01 09:02:51 -HTTP METHOD : GET
2019-04-01 09:02:51 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-01 09:02:51 -参数 : []
2019-04-01 09:02:51 -耗时 : 0
2019-04-01 09:02:51 -返回值 : charts/countDD
2019-04-01 09:02:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:02:51 -HTTP METHOD : GET
2019-04-01 09:02:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:02:51 -参数 : [userType]
2019-04-01 09:02:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:02:51 -==> Parameters: userType(String)
2019-04-01 09:02:51 -<==      Total: 2
2019-04-01 09:02:52 -耗时 : 6
2019-04-01 09:02:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:03:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 09:03:05 -HTTP METHOD : GET
2019-04-01 09:03:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 09:03:05 -参数 : []
2019-04-01 09:03:05 -耗时 : 1
2019-04-01 09:03:05 -返回值 : system/dept/deptTree
2019-04-01 09:03:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 09:03:05 -HTTP METHOD : GET
2019-04-01 09:03:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 09:03:05 -参数 : []
2019-04-01 09:03:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 09:03:05 -==> Parameters: 
2019-04-01 09:03:05 -<==      Total: 3
2019-04-01 09:03:05 -耗时 : 9
2019-04-01 09:03:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 09:03:06 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:03:06 -HTTP METHOD : POST
2019-04-01 09:03:06 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:03:06 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@449214a3, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@3cb63c4f, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@102092dc, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@449214a3, com.bootdo.moneyLog.vo.WaterLogVo@3cb63c4f, com.bootdo.moneyLog.vo.HeatLogVo@102092dc]
2019-04-01 09:03:06 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:03:06 -==> Parameters: A(String), 2(String)
2019-04-01 09:03:06 -<==      Total: 1
2019-04-01 09:03:06 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:03:06 -==> Parameters: A(String), 2(String)
2019-04-01 09:03:06 -<==      Total: 1
2019-04-01 09:03:06 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:03:06 -==> Parameters: A(String), 2(String)
2019-04-01 09:03:06 -<==      Total: 1
2019-04-01 09:03:06 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:03:06 -==> Parameters: A(String), 2(String)
2019-04-01 09:03:06 -<==      Total: 1
2019-04-01 09:03:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:03:06 -==> Parameters: A(String), 2(String)
2019-04-01 09:03:06 -<==      Total: 1
2019-04-01 09:03:06 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:03:06 -==> Parameters: A(String), 2(String)
2019-04-01 09:03:06 -<==      Total: 1
2019-04-01 09:03:06 -耗时 : 34
2019-04-01 09:03:06 -返回值 : com.bootdo.charts.vo.CountDayVo@283c4902
2019-04-01 09:03:08 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:03:08 -HTTP METHOD : POST
2019-04-01 09:03:08 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:03:08 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@28463113, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@701309cb, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@680f753c, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@28463113, com.bootdo.moneyLog.vo.WaterLogVo@701309cb, com.bootdo.moneyLog.vo.HeatLogVo@680f753c]
2019-04-01 09:03:08 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:03:08 -==> Parameters: A(String), 2(String)
2019-04-01 09:03:08 -<==      Total: 1
2019-04-01 09:03:08 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:03:08 -==> Parameters: A(String), 2(String)
2019-04-01 09:03:08 -<==      Total: 1
2019-04-01 09:03:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:03:08 -==> Parameters: A(String), 2(String)
2019-04-01 09:03:08 -<==      Total: 1
2019-04-01 09:03:08 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:03:08 -==> Parameters: A(String), 2(String)
2019-04-01 09:03:08 -<==      Total: 1
2019-04-01 09:03:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:03:08 -==> Parameters: A(String), 2(String)
2019-04-01 09:03:08 -<==      Total: 1
2019-04-01 09:03:08 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:03:08 -==> Parameters: A(String), 2(String)
2019-04-01 09:03:08 -<==      Total: 1
2019-04-01 09:03:08 -耗时 : 23
2019-04-01 09:03:08 -返回值 : com.bootdo.charts.vo.CountDayVo@6c582b39
2019-04-01 09:05:12 -请求地址 : http://localhost:8081/index
2019-04-01 09:05:12 -HTTP METHOD : GET
2019-04-01 09:05:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:05:12 -参数 : [{}]
2019-04-01 09:05:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:05:12 -==> Parameters: 1(Long)
2019-04-01 09:05:12 -<==      Total: 46
2019-04-01 09:05:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:05:12 -==> Parameters: 138(Long)
2019-04-01 09:05:12 -<==      Total: 1
2019-04-01 09:05:12 -耗时 : 26
2019-04-01 09:05:12 -返回值 : index_v1
2019-04-01 09:05:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:05:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:05:12.043(Timestamp)
2019-04-01 09:05:12 -请求地址 : http://localhost:8081/main
2019-04-01 09:05:12 -HTTP METHOD : GET
2019-04-01 09:05:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:05:12 -参数 : []
2019-04-01 09:05:12 -耗时 : 20
2019-04-01 09:05:12 -返回值 : main
2019-04-01 09:05:12 -<==    Updates: 1
2019-04-01 09:05:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:05:12 -HTTP METHOD : GET
2019-04-01 09:05:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:05:12 -参数 : []
2019-04-01 09:05:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:05:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:05:12 -<==      Total: 0
2019-04-01 09:05:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:05:12 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:05:12 -<==      Total: 1
2019-04-01 09:05:12 -耗时 : 7
2019-04-01 09:05:12 -返回值 : com.bootdo.common.utils.PageUtils@6d17ee81
2019-04-01 09:05:12 -请求地址 : http://localhost:8081/main
2019-04-01 09:05:12 -HTTP METHOD : GET
2019-04-01 09:05:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:05:12 -参数 : []
2019-04-01 09:05:12 -耗时 : 4
2019-04-01 09:05:12 -返回值 : main
2019-04-01 09:05:15 -请求地址 : http://localhost:8081/charts/countDD
2019-04-01 09:05:15 -HTTP METHOD : GET
2019-04-01 09:05:15 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-01 09:05:15 -参数 : []
2019-04-01 09:05:15 -耗时 : 1
2019-04-01 09:05:15 -返回值 : charts/countDD
2019-04-01 09:05:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:05:16 -HTTP METHOD : GET
2019-04-01 09:05:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:05:16 -参数 : [userType]
2019-04-01 09:05:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:05:16 -==> Parameters: userType(String)
2019-04-01 09:05:16 -<==      Total: 2
2019-04-01 09:05:16 -耗时 : 8
2019-04-01 09:05:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:05:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 09:05:26 -HTTP METHOD : GET
2019-04-01 09:05:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 09:05:26 -参数 : []
2019-04-01 09:05:26 -耗时 : 1
2019-04-01 09:05:26 -返回值 : system/dept/deptTree
2019-04-01 09:05:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 09:05:26 -HTTP METHOD : GET
2019-04-01 09:05:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 09:05:26 -参数 : []
2019-04-01 09:05:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 09:05:26 -==> Parameters: 
2019-04-01 09:05:26 -<==      Total: 3
2019-04-01 09:05:26 -耗时 : 5
2019-04-01 09:05:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 09:05:28 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:05:28 -HTTP METHOD : POST
2019-04-01 09:05:28 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:05:28 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@649a2ac4, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@7637094b, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@ef7f117, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@649a2ac4, com.bootdo.moneyLog.vo.WaterLogVo@7637094b, com.bootdo.moneyLog.vo.HeatLogVo@ef7f117]
2019-04-01 09:05:28 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:28 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:28 -<==      Total: 1
2019-04-01 09:05:28 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:28 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:28 -<==      Total: 1
2019-04-01 09:05:28 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:28 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:28 -<==      Total: 1
2019-04-01 09:05:28 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:28 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:28 -<==      Total: 1
2019-04-01 09:05:28 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:28 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:28 -<==      Total: 1
2019-04-01 09:05:28 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:28 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:28 -<==      Total: 1
2019-04-01 09:05:28 -耗时 : 17
2019-04-01 09:05:28 -返回值 : com.bootdo.charts.vo.CountDayVo@7a7abc9b
2019-04-01 09:05:29 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:05:29 -HTTP METHOD : POST
2019-04-01 09:05:29 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:05:29 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@72c5bf15, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@380a63c, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@4998ccce, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@72c5bf15, com.bootdo.moneyLog.vo.WaterLogVo@380a63c, com.bootdo.moneyLog.vo.HeatLogVo@4998ccce]
2019-04-01 09:05:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:29 -<==      Total: 1
2019-04-01 09:05:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:29 -<==      Total: 1
2019-04-01 09:05:29 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:29 -<==      Total: 1
2019-04-01 09:05:29 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:29 -<==      Total: 1
2019-04-01 09:05:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:29 -<==      Total: 1
2019-04-01 09:05:29 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:29 -<==      Total: 1
2019-04-01 09:05:29 -耗时 : 16
2019-04-01 09:05:29 -返回值 : com.bootdo.charts.vo.CountDayVo@1bd8d9ea
2019-04-01 09:05:29 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:05:29 -HTTP METHOD : POST
2019-04-01 09:05:29 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:05:29 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@3b939fff, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@7bef8d5f, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@26642c68, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@3b939fff, com.bootdo.moneyLog.vo.WaterLogVo@7bef8d5f, com.bootdo.moneyLog.vo.HeatLogVo@26642c68]
2019-04-01 09:05:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:29 -<==      Total: 1
2019-04-01 09:05:29 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:29 -<==      Total: 1
2019-04-01 09:05:29 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:29 -<==      Total: 1
2019-04-01 09:05:29 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:29 -<==      Total: 1
2019-04-01 09:05:29 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:29 -<==      Total: 1
2019-04-01 09:05:29 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:29 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:29 -<==      Total: 1
2019-04-01 09:05:29 -耗时 : 15
2019-04-01 09:05:29 -返回值 : com.bootdo.charts.vo.CountDayVo@225e5b20
2019-04-01 09:05:30 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:05:30 -HTTP METHOD : POST
2019-04-01 09:05:30 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:05:30 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@2a2ff0eb, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@53dedadb, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@2eef0e88, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@2a2ff0eb, com.bootdo.moneyLog.vo.WaterLogVo@53dedadb, com.bootdo.moneyLog.vo.HeatLogVo@2eef0e88]
2019-04-01 09:05:30 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:30 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:30 -<==      Total: 1
2019-04-01 09:05:30 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:30 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:30 -<==      Total: 1
2019-04-01 09:05:30 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:30 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:30 -<==      Total: 1
2019-04-01 09:05:30 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:30 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:30 -<==      Total: 1
2019-04-01 09:05:30 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:30 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:30 -<==      Total: 1
2019-04-01 09:05:30 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:30 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:30 -<==      Total: 1
2019-04-01 09:05:30 -耗时 : 14
2019-04-01 09:05:30 -返回值 : com.bootdo.charts.vo.CountDayVo@21755f27
2019-04-01 09:05:31 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 09:05:31 -HTTP METHOD : POST
2019-04-01 09:05:31 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 09:05:31 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@174cbee6, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@53366c84, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@3b97dc1f, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@174cbee6, com.bootdo.moneyLog.vo.WaterLogVo@53366c84, com.bootdo.moneyLog.vo.HeatLogVo@3b97dc1f]
2019-04-01 09:05:31 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:31 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:31 -<==      Total: 1
2019-04-01 09:05:31 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:31 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:31 -<==      Total: 1
2019-04-01 09:05:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:31 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:31 -<==      Total: 1
2019-04-01 09:05:31 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:31 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:31 -<==      Total: 1
2019-04-01 09:05:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:31 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:31 -<==      Total: 1
2019-04-01 09:05:31 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 09:05:31 -==> Parameters: A(String), 2(String)
2019-04-01 09:05:31 -<==      Total: 1
2019-04-01 09:05:31 -耗时 : 15
2019-04-01 09:05:31 -返回值 : com.bootdo.charts.vo.CountDayVo@7e4faf08
2019-04-01 09:20:41 -请求地址 : http://localhost:8081/login;JSESSIONID=b5352911-e259-4e29-8cee-567e1ed15c3e
2019-04-01 09:20:41 -HTTP METHOD : GET
2019-04-01 09:20:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 09:20:41 -参数 : [{}]
2019-04-01 09:20:41 -耗时 : 0
2019-04-01 09:20:41 -返回值 : login
2019-04-01 09:20:42 -请求地址 : http://localhost:8081/getVerify
2019-04-01 09:20:42 -HTTP METHOD : GET
2019-04-01 09:20:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 09:20:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@17d0d20a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@38d4c542]
2019-04-01 09:20:42 -9784
2019-04-01 09:20:42 -耗时 : 40
2019-04-01 09:20:42 -返回值 : null
2019-04-01 09:20:42 -请求地址 : http://localhost:8081/login
2019-04-01 09:20:42 -HTTP METHOD : GET
2019-04-01 09:20:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 09:20:42 -参数 : [{}]
2019-04-01 09:20:42 -耗时 : 1
2019-04-01 09:20:42 -返回值 : login
2019-04-01 09:20:53 -请求地址 : http://localhost:8081/login
2019-04-01 09:20:53 -HTTP METHOD : POST
2019-04-01 09:20:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-01 09:20:53 -参数 : [admin, 111111, 9784, org.apache.shiro.web.servlet.ShiroHttpServletRequest@26516c2]
2019-04-01 09:20:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-01 09:20:53 -==> Parameters: admin(String)
2019-04-01 09:20:53 -<==      Total: 1
2019-04-01 09:20:53 -耗时 : 7
2019-04-01 09:20:53 -返回值 : {msg=操作成功, code=0}
2019-04-01 09:20:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:20:53 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-01 09:20:53.227(Timestamp)
2019-04-01 09:20:53 -请求地址 : http://localhost:8081/index
2019-04-01 09:20:53 -HTTP METHOD : GET
2019-04-01 09:20:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:20:53 -参数 : [{}]
2019-04-01 09:20:53 -<==    Updates: 1
2019-04-01 09:20:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:20:53 -==> Parameters: 1(Long)
2019-04-01 09:20:53 -<==      Total: 46
2019-04-01 09:20:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:20:53 -==> Parameters: 138(Long)
2019-04-01 09:20:53 -<==      Total: 1
2019-04-01 09:20:53 -耗时 : 414
2019-04-01 09:20:53 -返回值 : index_v1
2019-04-01 09:20:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:20:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 414(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:20:53.682(Timestamp)
2019-04-01 09:20:53 -请求地址 : http://localhost:8081/main
2019-04-01 09:20:53 -HTTP METHOD : GET
2019-04-01 09:20:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:20:53 -参数 : []
2019-04-01 09:20:53 -耗时 : 0
2019-04-01 09:20:53 -返回值 : main
2019-04-01 09:20:53 -<==    Updates: 1
2019-04-01 09:20:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:20:54 -HTTP METHOD : GET
2019-04-01 09:20:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:20:54 -参数 : []
2019-04-01 09:20:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:20:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:20:54 -请求地址 : http://localhost:8081/main
2019-04-01 09:20:54 -HTTP METHOD : GET
2019-04-01 09:20:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:20:54 -参数 : []
2019-04-01 09:20:54 -耗时 : 0
2019-04-01 09:20:54 -返回值 : main
2019-04-01 09:20:54 -<==      Total: 0
2019-04-01 09:20:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:20:54 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:20:54 -<==      Total: 1
2019-04-01 09:20:54 -耗时 : 195
2019-04-01 09:20:54 -返回值 : com.bootdo.common.utils.PageUtils@744d551a
2019-04-01 09:21:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 09:21:00 -==> Parameters: 1(Long)
2019-04-01 09:21:00 -<==      Total: 90
2019-04-01 09:21:00 -请求地址 : http://localhost:8081/charts/countDD
2019-04-01 09:21:00 -HTTP METHOD : GET
2019-04-01 09:21:00 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-01 09:21:00 -参数 : []
2019-04-01 09:21:00 -耗时 : 0
2019-04-01 09:21:00 -返回值 : charts/countDD
2019-04-01 09:21:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:21:01 -HTTP METHOD : GET
2019-04-01 09:21:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:21:01 -参数 : [userType]
2019-04-01 09:21:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:21:01 -==> Parameters: userType(String)
2019-04-01 09:21:01 -<==      Total: 2
2019-04-01 09:21:01 -耗时 : 5
2019-04-01 09:21:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:21:20 -请求地址 : http://localhost:8081/index
2019-04-01 09:21:20 -HTTP METHOD : GET
2019-04-01 09:21:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:21:20 -参数 : [{}]
2019-04-01 09:21:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:21:20 -==> Parameters: 1(Long)
2019-04-01 09:21:20 -<==      Total: 46
2019-04-01 09:21:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:21:20 -==> Parameters: 138(Long)
2019-04-01 09:21:20 -<==      Total: 1
2019-04-01 09:21:20 -耗时 : 25
2019-04-01 09:21:20 -返回值 : index_v1
2019-04-01 09:21:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:21:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:21:20.419(Timestamp)
2019-04-01 09:21:20 -请求地址 : http://localhost:8081/main
2019-04-01 09:21:20 -HTTP METHOD : GET
2019-04-01 09:21:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:21:20 -参数 : []
2019-04-01 09:21:20 -耗时 : 3
2019-04-01 09:21:20 -返回值 : main
2019-04-01 09:21:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:21:20 -HTTP METHOD : GET
2019-04-01 09:21:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:21:20 -参数 : []
2019-04-01 09:21:20 -<==    Updates: 1
2019-04-01 09:21:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:21:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:21:20 -请求地址 : http://localhost:8081/main
2019-04-01 09:21:20 -HTTP METHOD : GET
2019-04-01 09:21:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:21:20 -参数 : []
2019-04-01 09:21:20 -耗时 : 0
2019-04-01 09:21:20 -返回值 : main
2019-04-01 09:21:20 -<==      Total: 0
2019-04-01 09:21:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:21:20 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:21:20 -<==      Total: 1
2019-04-01 09:21:20 -耗时 : 137
2019-04-01 09:21:20 -返回值 : com.bootdo.common.utils.PageUtils@68337cd9
2019-04-01 09:21:23 -请求地址 : http://localhost:8081/charts/countDD
2019-04-01 09:21:23 -HTTP METHOD : GET
2019-04-01 09:21:23 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-01 09:21:23 -参数 : []
2019-04-01 09:21:23 -耗时 : 1
2019-04-01 09:21:23 -返回值 : charts/countDD
2019-04-01 09:21:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:21:23 -HTTP METHOD : GET
2019-04-01 09:21:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:21:23 -参数 : [userType]
2019-04-01 09:21:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:21:23 -==> Parameters: userType(String)
2019-04-01 09:21:23 -<==      Total: 2
2019-04-01 09:21:23 -耗时 : 88
2019-04-01 09:21:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:22:51 -请求地址 : http://localhost:8081/index
2019-04-01 09:22:51 -HTTP METHOD : GET
2019-04-01 09:22:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:22:51 -参数 : [{}]
2019-04-01 09:22:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:22:51 -==> Parameters: 1(Long)
2019-04-01 09:22:51 -<==      Total: 46
2019-04-01 09:22:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:22:51 -==> Parameters: 138(Long)
2019-04-01 09:22:51 -<==      Total: 1
2019-04-01 09:22:51 -耗时 : 91
2019-04-01 09:22:51 -返回值 : index_v1
2019-04-01 09:22:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:22:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 91(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:22:51.76(Timestamp)
2019-04-01 09:22:51 -<==    Updates: 1
2019-04-01 09:22:52 -请求地址 : http://localhost:8081/main
2019-04-01 09:22:52 -HTTP METHOD : GET
2019-04-01 09:22:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:22:52 -参数 : []
2019-04-01 09:22:52 -耗时 : 0
2019-04-01 09:22:52 -返回值 : main
2019-04-01 09:22:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:22:52 -HTTP METHOD : GET
2019-04-01 09:22:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:22:52 -参数 : []
2019-04-01 09:22:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:22:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:22:52 -<==      Total: 0
2019-04-01 09:22:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:22:52 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:22:52 -<==      Total: 1
2019-04-01 09:22:52 -耗时 : 18
2019-04-01 09:22:52 -返回值 : com.bootdo.common.utils.PageUtils@6d92c14
2019-04-01 09:22:52 -请求地址 : http://localhost:8081/main
2019-04-01 09:22:52 -HTTP METHOD : GET
2019-04-01 09:22:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:22:52 -参数 : []
2019-04-01 09:22:52 -耗时 : 0
2019-04-01 09:22:52 -返回值 : main
2019-04-01 09:22:55 -请求地址 : http://localhost:8081/charts/countDD
2019-04-01 09:22:55 -HTTP METHOD : GET
2019-04-01 09:22:55 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-01 09:22:55 -参数 : []
2019-04-01 09:22:55 -耗时 : 0
2019-04-01 09:22:55 -返回值 : charts/countDD
2019-04-01 09:22:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:22:55 -HTTP METHOD : GET
2019-04-01 09:22:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:22:55 -参数 : [userType]
2019-04-01 09:22:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:22:55 -==> Parameters: userType(String)
2019-04-01 09:22:55 -<==      Total: 2
2019-04-01 09:22:55 -耗时 : 4
2019-04-01 09:22:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:23:07 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 09:23:07 -HTTP METHOD : GET
2019-04-01 09:23:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 09:23:07 -参数 : []
2019-04-01 09:23:07 -耗时 : 1
2019-04-01 09:23:07 -返回值 : system/dept/deptTree
2019-04-01 09:23:08 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 09:23:08 -HTTP METHOD : GET
2019-04-01 09:23:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 09:23:08 -参数 : []
2019-04-01 09:23:08 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 09:23:08 -==> Parameters: 
2019-04-01 09:23:08 -<==      Total: 3
2019-04-01 09:23:08 -耗时 : 52
2019-04-01 09:23:08 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 09:23:10 -请求地址 : http://localhost:8081/charts/countDD/exportCountDD
2019-04-01 09:23:10 -HTTP METHOD : GET
2019-04-01 09:23:10 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exprotExcel
2019-04-01 09:23:10 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@79a1b82f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4eb80be0]
2019-04-01 09:23:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and create_time = ? 
2019-04-01 09:23:10 -==> Parameters: A(String), 2(String), 2019-03-19(String)
2019-04-01 09:23:10 -<==      Total: 0
2019-04-01 09:23:11 -耗时 : 1316
2019-04-01 09:23:11 -返回值 : null
2019-04-01 09:24:40 -请求地址 : http://localhost:8081/index
2019-04-01 09:24:40 -HTTP METHOD : GET
2019-04-01 09:24:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:24:40 -参数 : [{}]
2019-04-01 09:24:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:24:40 -==> Parameters: 1(Long)
2019-04-01 09:24:40 -<==      Total: 46
2019-04-01 09:24:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:24:40 -==> Parameters: 138(Long)
2019-04-01 09:24:40 -<==      Total: 1
2019-04-01 09:24:40 -耗时 : 28
2019-04-01 09:24:40 -返回值 : index_v1
2019-04-01 09:24:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:24:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:24:40.399(Timestamp)
2019-04-01 09:24:40 -请求地址 : http://localhost:8081/main
2019-04-01 09:24:40 -HTTP METHOD : GET
2019-04-01 09:24:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:24:40 -参数 : []
2019-04-01 09:24:40 -耗时 : 1
2019-04-01 09:24:40 -返回值 : main
2019-04-01 09:24:40 -<==    Updates: 1
2019-04-01 09:24:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:24:40 -HTTP METHOD : GET
2019-04-01 09:24:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:24:40 -参数 : []
2019-04-01 09:24:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:24:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:24:40 -<==      Total: 0
2019-04-01 09:24:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:24:40 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:24:40 -<==      Total: 1
2019-04-01 09:24:40 -耗时 : 7
2019-04-01 09:24:40 -返回值 : com.bootdo.common.utils.PageUtils@1912770f
2019-04-01 09:24:40 -请求地址 : http://localhost:8081/main
2019-04-01 09:24:40 -HTTP METHOD : GET
2019-04-01 09:24:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:24:40 -参数 : []
2019-04-01 09:24:40 -耗时 : 1
2019-04-01 09:24:40 -返回值 : main
2019-04-01 09:24:45 -请求地址 : http://localhost:8081/charts/countDD
2019-04-01 09:24:45 -HTTP METHOD : GET
2019-04-01 09:24:45 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-01 09:24:45 -参数 : []
2019-04-01 09:24:45 -耗时 : 0
2019-04-01 09:24:45 -返回值 : charts/countDD
2019-04-01 09:24:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:24:46 -HTTP METHOD : GET
2019-04-01 09:24:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:24:46 -参数 : [userType]
2019-04-01 09:24:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:24:46 -==> Parameters: userType(String)
2019-04-01 09:24:46 -<==      Total: 2
2019-04-01 09:24:46 -耗时 : 24
2019-04-01 09:24:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:29:46 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(8)-CONNECTED(8)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 96], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 16], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]
2019-04-01 09:31:59 -请求地址 : http://localhost:8081/index
2019-04-01 09:31:59 -HTTP METHOD : GET
2019-04-01 09:31:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:31:59 -参数 : [{}]
2019-04-01 09:31:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:31:59 -==> Parameters: 1(Long)
2019-04-01 09:31:59 -<==      Total: 46
2019-04-01 09:31:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:31:59 -==> Parameters: 138(Long)
2019-04-01 09:31:59 -<==      Total: 1
2019-04-01 09:31:59 -耗时 : 22
2019-04-01 09:31:59 -返回值 : index_v1
2019-04-01 09:31:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:31:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:31:59.782(Timestamp)
2019-04-01 09:31:59 -请求地址 : http://localhost:8081/main
2019-04-01 09:31:59 -HTTP METHOD : GET
2019-04-01 09:31:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:31:59 -参数 : []
2019-04-01 09:31:59 -耗时 : 0
2019-04-01 09:31:59 -返回值 : main
2019-04-01 09:31:59 -<==    Updates: 1
2019-04-01 09:32:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:32:00 -HTTP METHOD : GET
2019-04-01 09:32:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:32:00 -参数 : []
2019-04-01 09:32:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:32:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:32:00 -<==      Total: 0
2019-04-01 09:32:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:32:00 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:32:00 -<==      Total: 1
2019-04-01 09:32:00 -耗时 : 18
2019-04-01 09:32:00 -返回值 : com.bootdo.common.utils.PageUtils@6f44f701
2019-04-01 09:32:00 -请求地址 : http://localhost:8081/main
2019-04-01 09:32:00 -HTTP METHOD : GET
2019-04-01 09:32:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:32:00 -参数 : []
2019-04-01 09:32:00 -耗时 : 1
2019-04-01 09:32:00 -返回值 : main
2019-04-01 09:32:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 09:32:04 -==> Parameters: 1(Long)
2019-04-01 09:32:04 -<==      Total: 90
2019-04-01 09:32:04 -请求地址 : http://localhost:8081/charts/countDD
2019-04-01 09:32:04 -HTTP METHOD : GET
2019-04-01 09:32:04 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-01 09:32:04 -参数 : []
2019-04-01 09:32:04 -耗时 : 1
2019-04-01 09:32:04 -返回值 : charts/countDD
2019-04-01 09:32:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:32:04 -HTTP METHOD : GET
2019-04-01 09:32:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:32:04 -参数 : [userType]
2019-04-01 09:32:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:32:04 -==> Parameters: userType(String)
2019-04-01 09:32:04 -<==      Total: 2
2019-04-01 09:32:04 -耗时 : 6
2019-04-01 09:32:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:32:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 09:32:28 -HTTP METHOD : GET
2019-04-01 09:32:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 09:32:28 -参数 : []
2019-04-01 09:32:28 -耗时 : 1
2019-04-01 09:32:28 -返回值 : system/dept/deptTree
2019-04-01 09:32:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 09:32:28 -HTTP METHOD : GET
2019-04-01 09:32:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 09:32:28 -参数 : []
2019-04-01 09:32:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 09:32:28 -==> Parameters: 
2019-04-01 09:32:28 -<==      Total: 3
2019-04-01 09:32:28 -耗时 : 6
2019-04-01 09:32:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 09:32:32 -请求地址 : http://localhost:8081/charts/countDD/exportCountDD
2019-04-01 09:32:32 -HTTP METHOD : GET
2019-04-01 09:32:32 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exprotExcel
2019-04-01 09:32:32 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@267764e6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@595732af]
2019-04-01 09:32:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and create_time = ? 
2019-04-01 09:32:32 -==> Parameters: A(String), 2(String), 2019-03-19(String)
2019-04-01 09:32:32 -<==      Total: 0
2019-04-01 09:32:32 -耗时 : 9
2019-04-01 09:32:32 -返回值 : null
2019-04-01 09:33:56 -请求地址 : http://localhost:8081/print/print
2019-04-01 09:33:56 -HTTP METHOD : GET
2019-04-01 09:33:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 09:33:56 -参数 : []
2019-04-01 09:33:56 -耗时 : 2
2019-04-01 09:33:56 -返回值 : print/print/print
2019-04-01 09:33:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:33:57 -HTTP METHOD : GET
2019-04-01 09:33:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:33:57 -参数 : [userType]
2019-04-01 09:33:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:33:57 -==> Parameters: userType(String)
2019-04-01 09:33:57 -<==      Total: 2
2019-04-01 09:33:57 -耗时 : 5
2019-04-01 09:33:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:33:57 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:33:57 -HTTP METHOD : GET
2019-04-01 09:33:57 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:33:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-04-01 09:33:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 09:33:57 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 09:33:57 -<==      Total: 3
2019-04-01 09:33:57 -==>  Preparing: select count(*) from print 
2019-04-01 09:33:57 -==> Parameters: 
2019-04-01 09:33:57 -<==      Total: 1
2019-04-01 09:33:57 -耗时 : 322
2019-04-01 09:33:57 -返回值 : com.bootdo.common.utils.PageUtils@390eb191
2019-04-01 09:34:07 -请求地址 : http://localhost:8081/print/print/edit/3
2019-04-01 09:34:07 -HTTP METHOD : GET
2019-04-01 09:34:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-01 09:34:07 -参数 : [3, {}]
2019-04-01 09:34:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-01 09:34:07 -==> Parameters: 3(Long)
2019-04-01 09:34:07 -<==      Total: 1
2019-04-01 09:34:07 -耗时 : 5
2019-04-01 09:34:07 -返回值 : print/print/edit
2019-04-01 09:34:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:34:07 -HTTP METHOD : GET
2019-04-01 09:34:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:34:07 -参数 : [userType]
2019-04-01 09:34:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:34:07 -==> Parameters: userType(String)
2019-04-01 09:34:07 -<==      Total: 2
2019-04-01 09:34:07 -耗时 : 4
2019-04-01 09:34:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:37:23 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:37:23 -HTTP METHOD : GET
2019-04-01 09:37:23 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:37:23 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-26, type=A}]
2019-04-01 09:37:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:37:23 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:37:23 -<==      Total: 0
2019-04-01 09:37:23 -==>  Preparing: select count(*) from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:37:23 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 09:37:23 -<==      Total: 1
2019-04-01 09:37:23 -耗时 : 88
2019-04-01 09:37:23 -返回值 : com.bootdo.common.utils.PageUtils@411dcedb
2019-04-01 09:37:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 09:37:24 -HTTP METHOD : GET
2019-04-01 09:37:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 09:37:24 -参数 : []
2019-04-01 09:37:24 -耗时 : 1
2019-04-01 09:37:24 -返回值 : system/dept/deptTree
2019-04-01 09:37:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 09:37:25 -HTTP METHOD : GET
2019-04-01 09:37:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 09:37:25 -参数 : []
2019-04-01 09:37:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 09:37:25 -==> Parameters: 
2019-04-01 09:37:25 -<==      Total: 3
2019-04-01 09:37:25 -耗时 : 3
2019-04-01 09:37:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 09:37:27 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:37:27 -HTTP METHOD : GET
2019-04-01 09:37:27 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:37:27 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-26}]
2019-04-01 09:37:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:37:27 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:37:27 -<==      Total: 0
2019-04-01 09:37:27 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:37:27 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 09:37:27 -<==      Total: 1
2019-04-01 09:37:27 -耗时 : 12
2019-04-01 09:37:27 -返回值 : com.bootdo.common.utils.PageUtils@67d9fa10
2019-04-01 09:37:28 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:37:28 -HTTP METHOD : GET
2019-04-01 09:37:28 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:37:28 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-26}]
2019-04-01 09:37:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:37:28 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:37:28 -<==      Total: 0
2019-04-01 09:37:28 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:37:28 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 09:37:28 -<==      Total: 1
2019-04-01 09:37:28 -耗时 : 6
2019-04-01 09:37:28 -返回值 : com.bootdo.common.utils.PageUtils@78f7cb38
2019-04-01 09:37:28 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:37:28 -HTTP METHOD : GET
2019-04-01 09:37:28 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:37:28 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-26}]
2019-04-01 09:37:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:37:28 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:37:28 -<==      Total: 0
2019-04-01 09:37:28 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:37:28 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 09:37:28 -<==      Total: 1
2019-04-01 09:37:28 -耗时 : 7
2019-04-01 09:37:28 -返回值 : com.bootdo.common.utils.PageUtils@5e665f75
2019-04-01 09:37:28 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:37:28 -HTTP METHOD : GET
2019-04-01 09:37:28 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:37:28 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-26}]
2019-04-01 09:37:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:37:28 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:37:28 -<==      Total: 0
2019-04-01 09:37:28 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:37:28 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 09:37:28 -<==      Total: 1
2019-04-01 09:37:28 -耗时 : 7
2019-04-01 09:37:28 -返回值 : com.bootdo.common.utils.PageUtils@24f3b027
2019-04-01 09:37:30 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:37:30 -HTTP METHOD : GET
2019-04-01 09:37:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:37:30 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-26}]
2019-04-01 09:37:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:37:30 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:37:30 -<==      Total: 0
2019-04-01 09:37:30 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:37:30 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 09:37:30 -<==      Total: 1
2019-04-01 09:37:30 -耗时 : 8
2019-04-01 09:37:30 -返回值 : com.bootdo.common.utils.PageUtils@43bd0eca
2019-04-01 09:37:30 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:37:30 -HTTP METHOD : GET
2019-04-01 09:37:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:37:30 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-26}]
2019-04-01 09:37:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:37:30 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:37:30 -<==      Total: 0
2019-04-01 09:37:30 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:37:30 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 09:37:30 -<==      Total: 1
2019-04-01 09:37:30 -耗时 : 8
2019-04-01 09:37:30 -返回值 : com.bootdo.common.utils.PageUtils@37f0f569
2019-04-01 09:37:30 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:37:30 -HTTP METHOD : GET
2019-04-01 09:37:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:37:30 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-26}]
2019-04-01 09:37:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:37:30 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:37:30 -<==      Total: 0
2019-04-01 09:37:30 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:37:30 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 09:37:30 -<==      Total: 1
2019-04-01 09:37:30 -耗时 : 8
2019-04-01 09:37:30 -返回值 : com.bootdo.common.utils.PageUtils@75ac570d
2019-04-01 09:37:31 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:37:31 -HTTP METHOD : GET
2019-04-01 09:37:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:37:31 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-26}]
2019-04-01 09:37:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:37:31 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:37:31 -<==      Total: 0
2019-04-01 09:37:31 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:37:31 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 09:37:31 -<==      Total: 1
2019-04-01 09:37:31 -耗时 : 7
2019-04-01 09:37:31 -返回值 : com.bootdo.common.utils.PageUtils@6de46d0c
2019-04-01 09:38:16 -请求地址 : http://localhost:8081/index
2019-04-01 09:38:16 -HTTP METHOD : GET
2019-04-01 09:38:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:38:16 -参数 : [{}]
2019-04-01 09:38:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:38:16 -==> Parameters: 1(Long)
2019-04-01 09:38:16 -<==      Total: 46
2019-04-01 09:38:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:38:16 -==> Parameters: 138(Long)
2019-04-01 09:38:16 -<==      Total: 1
2019-04-01 09:38:16 -耗时 : 82
2019-04-01 09:38:16 -返回值 : index_v1
2019-04-01 09:38:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:38:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 82(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:38:16.826(Timestamp)
2019-04-01 09:38:16 -<==    Updates: 1
2019-04-01 09:38:16 -请求地址 : http://localhost:8081/main
2019-04-01 09:38:16 -HTTP METHOD : GET
2019-04-01 09:38:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:38:16 -参数 : []
2019-04-01 09:38:16 -耗时 : 1
2019-04-01 09:38:16 -返回值 : main
2019-04-01 09:38:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:38:17 -HTTP METHOD : GET
2019-04-01 09:38:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:38:17 -参数 : []
2019-04-01 09:38:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:38:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:38:17 -<==      Total: 0
2019-04-01 09:38:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:38:17 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:38:17 -<==      Total: 1
2019-04-01 09:38:17 -耗时 : 22
2019-04-01 09:38:17 -返回值 : com.bootdo.common.utils.PageUtils@5f5fc5b0
2019-04-01 09:38:17 -请求地址 : http://localhost:8081/main
2019-04-01 09:38:17 -HTTP METHOD : GET
2019-04-01 09:38:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:38:17 -参数 : []
2019-04-01 09:38:17 -耗时 : 1
2019-04-01 09:38:17 -返回值 : main
2019-04-01 09:38:19 -请求地址 : http://localhost:8081/print/print
2019-04-01 09:38:19 -HTTP METHOD : GET
2019-04-01 09:38:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 09:38:19 -参数 : []
2019-04-01 09:38:19 -耗时 : 1
2019-04-01 09:38:19 -返回值 : print/print/print
2019-04-01 09:38:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:38:19 -HTTP METHOD : GET
2019-04-01 09:38:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:38:19 -参数 : [userType]
2019-04-01 09:38:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:38:19 -==> Parameters: userType(String)
2019-04-01 09:38:19 -<==      Total: 2
2019-04-01 09:38:19 -耗时 : 4
2019-04-01 09:38:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:38:19 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:38:19 -HTTP METHOD : GET
2019-04-01 09:38:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:38:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-04-01 09:38:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 09:38:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 09:38:19 -<==      Total: 3
2019-04-01 09:38:19 -==>  Preparing: select count(*) from print 
2019-04-01 09:38:19 -==> Parameters: 
2019-04-01 09:38:19 -<==      Total: 1
2019-04-01 09:38:19 -耗时 : 11
2019-04-01 09:38:19 -返回值 : com.bootdo.common.utils.PageUtils@71c90fe5
2019-04-01 09:51:06 -Starting BootdoApplication on ZJZL-20180906VX with PID 1204 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-01 09:51:06 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-01 09:51:06 -The following profiles are active: dev
2019-04-01 09:51:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56a4479a: startup date [Mon Apr 01 09:51:09 CST 2019]; root of context hierarchy
2019-04-01 09:51:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-01 09:51:22 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1baac735] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:51:22 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e03f5dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:51:23 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:51:24 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:51:24 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:51:24 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-01 09:51:24 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-01 09:51:24 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:51:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:51:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:51:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:51:26 -Tomcat initialized with port(s): 8081 (http)
2019-04-01 09:51:26 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-01 09:51:26 -Starting service [Tomcat]
2019-04-01 09:51:26 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-01 09:51:26 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-01 09:51:26 -Initializing Spring embedded WebApplicationContext
2019-04-01 09:51:26 -Root WebApplicationContext: initialization completed in 17884 ms
2019-04-01 09:51:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-01 09:51:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-01 09:51:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-01 09:51:27 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-01 09:51:27 -Filter xssFilter was not registered (disabled)
2019-04-01 09:51:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-01 09:51:27 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-01 09:51:27 -Servlet statViewServlet mapped to [/druid/*]
2019-04-01 09:51:27 -Servlet dispatcherServlet mapped to [/]
2019-04-01 09:51:32 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56a4479a: startup date [Mon Apr 01 09:51:09 CST 2019]; root of context hierarchy
2019-04-01 09:51:32 -Using default implementation for ThreadExecutor
2019-04-01 09:51:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-01 09:51:32 -Quartz Scheduler v.2.2.1 created.
2019-04-01 09:51:32 -RAMJobStore initialized.
2019-04-01 09:51:32 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-01 09:51:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-01 09:51:32 -Quartz scheduler version: 2.2.1
2019-04-01 09:51:32 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7131d668
2019-04-01 09:51:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-01 09:51:33 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-01 09:51:37 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-01 09:51:37 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-01 09:51:37 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:51:37 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-01 09:51:37 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-01 09:51:37 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-01 09:51:37 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-01 09:51:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-01 09:51:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-01 09:51:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-01 09:51:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-01 09:51:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-01 09:51:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-01 09:51:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-01 09:51:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-01 09:51:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-01 09:51:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-01 09:51:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-01 09:51:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-01 09:51:37 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-01 09:51:37 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:37 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-01 09:51:37 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-01 09:51:37 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-01 09:51:37 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-01 09:51:37 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:37 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:37 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-01 09:51:37 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 09:51:37 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-01 09:51:37 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 09:51:37 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-01 09:51:37 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-01 09:51:37 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-01 09:51:37 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-01 09:51:37 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-01 09:51:37 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:37 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-01 09:51:37 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-01 09:51:37 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-01 09:51:37 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:37 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-01 09:51:37 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-01 09:51:37 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-01 09:51:37 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:37 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-01 09:51:37 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-01 09:51:37 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-01 09:51:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 09:51:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 09:51:37 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-01 09:51:37 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-01 09:51:37 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-01 09:51:37 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-01 09:51:37 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-01 09:51:37 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-01 09:51:37 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:37 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-01 09:51:37 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:51:37 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-01 09:51:37 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:51:37 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-01 09:51:37 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-01 09:51:37 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-01 09:51:37 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-01 09:51:37 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-01 09:51:37 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:37 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-01 09:51:37 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:37 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-01 09:51:37 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-01 09:51:37 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-01 09:51:37 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-01 09:51:37 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-01 09:51:37 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-01 09:51:37 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-01 09:51:37 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:37 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-01 09:51:37 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-01 09:51:37 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:51:37 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-01 09:51:37 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:51:37 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-01 09:51:38 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-01 09:51:38 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-01 09:51:38 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 09:51:38 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 09:51:38 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-01 09:51:38 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:51:38 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-01 09:51:38 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-01 09:51:38 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 09:51:38 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-01 09:51:38 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-01 09:51:38 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-01 09:51:38 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-01 09:51:38 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-01 09:51:38 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-01 09:51:38 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-01 09:51:38 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-01 09:51:38 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-01 09:51:38 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-01 09:51:38 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-01 09:51:38 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:51:38 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-01 09:51:38 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-01 09:51:38 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-01 09:51:38 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-01 09:51:38 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-01 09:51:38 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-01 09:51:38 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-01 09:51:38 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-01 09:51:38 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-01 09:51:38 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-01 09:51:38 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-04-01 09:51:38 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:51:38 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-01 09:51:38 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-01 09:51:38 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-01 09:51:38 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-01 09:51:38 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-01 09:51:38 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-01 09:51:38 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-01 09:51:38 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-01 09:51:38 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-01 09:51:38 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-01 09:51:38 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 09:51:38 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 09:51:38 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-01 09:51:38 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-01 09:51:38 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-01 09:51:38 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-01 09:51:38 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-01 09:51:38 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-01 09:51:38 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-01 09:51:38 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-01 09:51:38 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-01 09:51:38 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-01 09:51:38 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-01 09:51:38 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-01 09:51:38 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-01 09:51:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-01 09:51:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-01 09:51:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-01 09:51:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-01 09:51:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-01 09:51:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-01 09:51:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 09:51:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 09:51:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 09:51:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-01 09:51:38 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-01 09:51:38 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-01 09:51:38 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-01 09:51:38 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-01 09:51:38 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:51:38 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-01 09:51:38 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:51:38 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-01 09:51:38 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-01 09:51:38 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-01 09:51:38 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-01 09:51:38 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 09:51:38 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:51:38 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 09:51:38 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:51:38 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-01 09:51:38 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:51:38 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 09:51:38 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-01 09:51:38 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-01 09:51:38 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 09:51:38 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-01 09:51:38 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-01 09:51:38 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-01 09:51:38 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-01 09:51:39 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-01 09:51:39 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-01 09:51:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 09:51:40 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56a4479a: startup date [Mon Apr 01 09:51:09 CST 2019]; root of context hierarchy
2019-04-01 09:51:40 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 09:51:40 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 09:51:40 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 09:51:40 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-01 09:51:40 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-01 09:51:43 -Registering beans for JMX exposure on startup
2019-04-01 09:51:43 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-01 09:51:43 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-01 09:51:43 -Starting beans in phase 2147483647
2019-04-01 09:51:43 -Context refreshed
2019-04-01 09:51:43 -Found 1 custom documentation plugin(s)
2019-04-01 09:51:43 -Scanning for api listing references
2019-04-01 09:51:44 -Generating unique operation named: removeUsingPOST_1
2019-04-01 09:51:44 -Generating unique operation named: addUsingGET_1
2019-04-01 09:51:44 -Generating unique operation named: editUsingGET_1
2019-04-01 09:51:44 -Generating unique operation named: listUsingGET_1
2019-04-01 09:51:44 -Generating unique operation named: removeUsingPOST_2
2019-04-01 09:51:44 -Generating unique operation named: removeUsingPOST_3
2019-04-01 09:51:44 -Generating unique operation named: saveUsingPOST_1
2019-04-01 09:51:44 -Generating unique operation named: updateUsingGET_1
2019-04-01 09:51:44 -Generating unique operation named: updateUsingHEAD_1
2019-04-01 09:51:44 -Generating unique operation named: updateUsingPOST_1
2019-04-01 09:51:44 -Generating unique operation named: updateUsingPUT_1
2019-04-01 09:51:44 -Generating unique operation named: updateUsingPATCH_1
2019-04-01 09:51:44 -Generating unique operation named: updateUsingDELETE_1
2019-04-01 09:51:44 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-01 09:51:44 -Generating unique operation named: updateUsingTRACE_1
2019-04-01 09:51:44 -Generating unique operation named: addUsingGET_2
2019-04-01 09:51:44 -Generating unique operation named: editUsingGET_2
2019-04-01 09:51:44 -Generating unique operation named: listUsingGET_2
2019-04-01 09:51:44 -Generating unique operation named: removeUsingPOST_4
2019-04-01 09:51:44 -Generating unique operation named: removeUsingPOST_5
2019-04-01 09:51:44 -Generating unique operation named: saveUsingPOST_2
2019-04-01 09:51:44 -Generating unique operation named: updateUsingPOST_2
2019-04-01 09:51:44 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-01 09:51:44 -Generating unique operation named: addUsingGET_3
2019-04-01 09:51:44 -Generating unique operation named: editUsingGET_3
2019-04-01 09:51:44 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-01 09:51:44 -Generating unique operation named: listUsingGET_3
2019-04-01 09:51:44 -Generating unique operation named: removeUsingPOST_6
2019-04-01 09:51:44 -Generating unique operation named: removeUsingPOST_7
2019-04-01 09:51:44 -Generating unique operation named: saveUsingPOST_3
2019-04-01 09:51:44 -Generating unique operation named: updateUsingGET_2
2019-04-01 09:51:44 -Generating unique operation named: updateUsingHEAD_2
2019-04-01 09:51:44 -Generating unique operation named: updateUsingPOST_3
2019-04-01 09:51:44 -Generating unique operation named: updateUsingPUT_2
2019-04-01 09:51:44 -Generating unique operation named: updateUsingPATCH_2
2019-04-01 09:51:44 -Generating unique operation named: updateUsingDELETE_2
2019-04-01 09:51:44 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-01 09:51:44 -Generating unique operation named: updateUsingTRACE_2
2019-04-01 09:51:44 -Generating unique operation named: addUsingGET_4
2019-04-01 09:51:44 -Generating unique operation named: editUsingGET_4
2019-04-01 09:51:44 -Generating unique operation named: listUsingGET_4
2019-04-01 09:51:44 -Generating unique operation named: removeUsingPOST_8
2019-04-01 09:51:44 -Generating unique operation named: removeUsingPOST_9
2019-04-01 09:51:44 -Generating unique operation named: saveUsingPOST_4
2019-04-01 09:51:44 -Generating unique operation named: updateUsingGET_3
2019-04-01 09:51:44 -Generating unique operation named: updateUsingHEAD_3
2019-04-01 09:51:44 -Generating unique operation named: updateUsingPOST_4
2019-04-01 09:51:44 -Generating unique operation named: updateUsingPUT_3
2019-04-01 09:51:44 -Generating unique operation named: updateUsingPATCH_3
2019-04-01 09:51:44 -Generating unique operation named: updateUsingDELETE_3
2019-04-01 09:51:44 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-01 09:51:44 -Generating unique operation named: updateUsingTRACE_3
2019-04-01 09:51:44 -Generating unique operation named: ElecUsingGET_1
2019-04-01 09:51:44 -Generating unique operation named: addUsingGET_5
2019-04-01 09:51:44 -Generating unique operation named: editUsingGET_5
2019-04-01 09:51:44 -Generating unique operation named: listUsingGET_5
2019-04-01 09:51:44 -Generating unique operation named: removeUsingPOST_10
2019-04-01 09:51:44 -Generating unique operation named: removeUsingPOST_11
2019-04-01 09:51:45 -Generating unique operation named: saveUsingPOST_5
2019-04-01 09:51:45 -Generating unique operation named: updateUsingGET_4
2019-04-01 09:51:45 -Generating unique operation named: updateUsingHEAD_4
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPOST_5
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPUT_4
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPATCH_4
2019-04-01 09:51:45 -Generating unique operation named: updateUsingDELETE_4
2019-04-01 09:51:45 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-01 09:51:45 -Generating unique operation named: updateUsingTRACE_4
2019-04-01 09:51:45 -Generating unique operation named: editUsingGET_6
2019-04-01 09:51:45 -Generating unique operation named: listUsingGET_6
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPOST_6
2019-04-01 09:51:45 -Generating unique operation named: addUsingGET_6
2019-04-01 09:51:45 -Generating unique operation named: editUsingGET_7
2019-04-01 09:51:45 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-01 09:51:45 -Generating unique operation named: listUsingGET_7
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_12
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_13
2019-04-01 09:51:45 -Generating unique operation named: saveUsingPOST_6
2019-04-01 09:51:45 -Generating unique operation named: updateUsingGET_5
2019-04-01 09:51:45 -Generating unique operation named: updateUsingHEAD_5
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPOST_7
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPUT_5
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPATCH_5
2019-04-01 09:51:45 -Generating unique operation named: updateUsingDELETE_5
2019-04-01 09:51:45 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-01 09:51:45 -Generating unique operation named: updateUsingTRACE_5
2019-04-01 09:51:45 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-01 09:51:45 -Generating unique operation named: addUsingGET_7
2019-04-01 09:51:45 -Generating unique operation named: editUsingGET_8
2019-04-01 09:51:45 -Generating unique operation named: listUsingGET_8
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_14
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_15
2019-04-01 09:51:45 -Generating unique operation named: saveUsingPOST_7
2019-04-01 09:51:45 -Generating unique operation named: updateUsingGET_6
2019-04-01 09:51:45 -Generating unique operation named: updateUsingHEAD_6
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPOST_8
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPUT_6
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPATCH_6
2019-04-01 09:51:45 -Generating unique operation named: updateUsingDELETE_6
2019-04-01 09:51:45 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-01 09:51:45 -Generating unique operation named: updateUsingTRACE_6
2019-04-01 09:51:45 -Generating unique operation named: addUsingGET_8
2019-04-01 09:51:45 -Generating unique operation named: editUsingGET_9
2019-04-01 09:51:45 -Generating unique operation named: listUsingGET_9
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_16
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_17
2019-04-01 09:51:45 -Generating unique operation named: saveUsingPOST_8
2019-04-01 09:51:45 -Generating unique operation named: updateUsingGET_7
2019-04-01 09:51:45 -Generating unique operation named: updateUsingHEAD_7
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPOST_9
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPUT_7
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPATCH_7
2019-04-01 09:51:45 -Generating unique operation named: updateUsingDELETE_7
2019-04-01 09:51:45 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-01 09:51:45 -Generating unique operation named: updateUsingTRACE_7
2019-04-01 09:51:45 -Generating unique operation named: addUsingGET_9
2019-04-01 09:51:45 -Generating unique operation named: editUsingGET_10
2019-04-01 09:51:45 -Generating unique operation named: infoUsingGET_1
2019-04-01 09:51:45 -Generating unique operation named: infoUsingHEAD_1
2019-04-01 09:51:45 -Generating unique operation named: infoUsingPOST_1
2019-04-01 09:51:45 -Generating unique operation named: infoUsingPUT_1
2019-04-01 09:51:45 -Generating unique operation named: infoUsingPATCH_1
2019-04-01 09:51:45 -Generating unique operation named: infoUsingDELETE_1
2019-04-01 09:51:45 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-01 09:51:45 -Generating unique operation named: infoUsingTRACE_1
2019-04-01 09:51:45 -Generating unique operation named: listUsingGET_10
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_18
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_19
2019-04-01 09:51:45 -Generating unique operation named: saveUsingPOST_9
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPOST_10
2019-04-01 09:51:45 -Generating unique operation named: listUsingGET_11
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_20
2019-04-01 09:51:45 -Generating unique operation named: welcomeUsingGET_1
2019-04-01 09:51:45 -Generating unique operation named: addUsingGET_10
2019-04-01 09:51:45 -Generating unique operation named: editUsingGET_11
2019-04-01 09:51:45 -Generating unique operation named: listUsingGET_12
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_21
2019-04-01 09:51:45 -Generating unique operation named: saveUsingPOST_10
2019-04-01 09:51:45 -Generating unique operation named: treeUsingGET_1
2019-04-01 09:51:45 -Generating unique operation named: treeUsingGET_2
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPOST_11
2019-04-01 09:51:45 -Generating unique operation named: addUsingGET_11
2019-04-01 09:51:45 -Generating unique operation named: editUsingGET_12
2019-04-01 09:51:45 -Generating unique operation named: listUsingGET_13
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_22
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_23
2019-04-01 09:51:45 -Generating unique operation named: saveUsingPOST_11
2019-04-01 09:51:45 -Generating unique operation named: updateUsingGET_8
2019-04-01 09:51:45 -Generating unique operation named: updateUsingHEAD_8
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPOST_12
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPUT_8
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPATCH_8
2019-04-01 09:51:45 -Generating unique operation named: updateUsingDELETE_8
2019-04-01 09:51:45 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-01 09:51:45 -Generating unique operation named: updateUsingTRACE_8
2019-04-01 09:51:45 -Generating unique operation named: addUsingGET_12
2019-04-01 09:51:45 -Generating unique operation named: editUsingGET_13
2019-04-01 09:51:45 -Generating unique operation named: listUsingGET_14
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_24
2019-04-01 09:51:45 -Generating unique operation named: removeUsingPOST_25
2019-04-01 09:51:45 -Generating unique operation named: saveUsingPOST_12
2019-04-01 09:51:45 -Generating unique operation named: updateUsingGET_9
2019-04-01 09:51:45 -Generating unique operation named: updateUsingHEAD_9
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPOST_13
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPUT_9
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPATCH_9
2019-04-01 09:51:45 -Generating unique operation named: updateUsingDELETE_9
2019-04-01 09:51:45 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-01 09:51:45 -Generating unique operation named: updateUsingTRACE_9
2019-04-01 09:51:45 -Generating unique operation named: addUsingGET_13
2019-04-01 09:51:45 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-01 09:51:45 -Generating unique operation named: editUsingGET_14
2019-04-01 09:51:45 -Generating unique operation named: listUsingGET_15
2019-04-01 09:51:45 -Generating unique operation named: saveUsingPOST_13
2019-04-01 09:51:45 -Generating unique operation named: saveUsingPOST_14
2019-04-01 09:51:45 -Generating unique operation named: updateUsingPOST_14
2019-04-01 09:51:46 -Generating unique operation named: listUsingGET_16
2019-04-01 09:51:46 -Generating unique operation named: listUsingHEAD_1
2019-04-01 09:51:46 -Generating unique operation named: listUsingPOST_1
2019-04-01 09:51:46 -Generating unique operation named: listUsingPUT_1
2019-04-01 09:51:46 -Generating unique operation named: listUsingPATCH_1
2019-04-01 09:51:46 -Generating unique operation named: listUsingDELETE_1
2019-04-01 09:51:46 -Generating unique operation named: listUsingOPTIONS_1
2019-04-01 09:51:46 -Generating unique operation named: listUsingTRACE_1
2019-04-01 09:51:46 -Generating unique operation named: addUsingGET_14
2019-04-01 09:51:46 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-01 09:51:46 -Generating unique operation named: editUsingGET_15
2019-04-01 09:51:46 -Generating unique operation named: listUsingGET_17
2019-04-01 09:51:46 -Generating unique operation named: removeUsingPOST_26
2019-04-01 09:51:46 -Generating unique operation named: saveUsingPOST_15
2019-04-01 09:51:46 -Generating unique operation named: treeUsingGET_3
2019-04-01 09:51:46 -Generating unique operation named: treeViewUsingGET_1
2019-04-01 09:51:46 -Generating unique operation named: updateUsingPOST_15
2019-04-01 09:51:46 -Generating unique operation named: addUsingGET_15
2019-04-01 09:51:46 -Generating unique operation named: editUsingGET_16
2019-04-01 09:51:46 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-01 09:51:46 -Generating unique operation named: listUsingGET_18
2019-04-01 09:51:46 -Generating unique operation named: removeUsingPOST_27
2019-04-01 09:51:46 -Generating unique operation named: removeUsingPOST_28
2019-04-01 09:51:46 -Generating unique operation named: saveUsingPOST_16
2019-04-01 09:51:46 -Generating unique operation named: updateUsingGET_10
2019-04-01 09:51:46 -Generating unique operation named: updateUsingHEAD_10
2019-04-01 09:51:46 -Generating unique operation named: updateUsingPOST_16
2019-04-01 09:51:46 -Generating unique operation named: updateUsingPUT_10
2019-04-01 09:51:46 -Generating unique operation named: updateUsingPATCH_10
2019-04-01 09:51:46 -Generating unique operation named: updateUsingDELETE_10
2019-04-01 09:51:46 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-01 09:51:46 -Generating unique operation named: updateUsingTRACE_10
2019-04-01 09:51:46 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-01 09:51:46 -Generating unique operation named: addUsingGET_16
2019-04-01 09:51:46 -Generating unique operation named: editUsingGET_17
2019-04-01 09:51:46 -Generating unique operation named: listUsingGET_19
2019-04-01 09:51:46 -Generating unique operation named: removeUsingPOST_29
2019-04-01 09:51:46 -Generating unique operation named: removeUsingPOST_30
2019-04-01 09:51:46 -Generating unique operation named: saveUsingPOST_17
2019-04-01 09:51:46 -Generating unique operation named: updateUsingGET_11
2019-04-01 09:51:46 -Generating unique operation named: updateUsingHEAD_11
2019-04-01 09:51:46 -Generating unique operation named: updateUsingPOST_17
2019-04-01 09:51:46 -Generating unique operation named: updateUsingPUT_11
2019-04-01 09:51:46 -Generating unique operation named: updateUsingPATCH_11
2019-04-01 09:51:46 -Generating unique operation named: updateUsingDELETE_11
2019-04-01 09:51:46 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-01 09:51:46 -Generating unique operation named: updateUsingTRACE_11
2019-04-01 09:51:46 -Generating unique operation named: addUsingGET_17
2019-04-01 09:51:46 -Generating unique operation named: editUsingGET_18
2019-04-01 09:51:46 -Generating unique operation named: listUsingGET_20
2019-04-01 09:51:46 -Generating unique operation named: removeUsingPOST_31
2019-04-01 09:51:46 -Generating unique operation named: removeUsingPOST_32
2019-04-01 09:51:46 -Generating unique operation named: saveUsingPOST_18
2019-04-01 09:51:46 -Generating unique operation named: updateUsingGET_12
2019-04-01 09:51:46 -Generating unique operation named: updateUsingHEAD_12
2019-04-01 09:51:46 -Generating unique operation named: updateUsingPOST_18
2019-04-01 09:51:46 -Generating unique operation named: updateUsingPUT_12
2019-04-01 09:51:46 -Generating unique operation named: updateUsingPATCH_12
2019-04-01 09:51:46 -Generating unique operation named: updateUsingDELETE_12
2019-04-01 09:51:46 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-01 09:51:46 -Generating unique operation named: updateUsingTRACE_12
2019-04-01 09:51:46 -Starting Quartz Scheduler now
2019-04-01 09:51:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-01 09:51:46 -Starting...
2019-04-01 09:51:46 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 09:51:46 -Started.
2019-04-01 09:51:46 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-01 09:51:46 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-04-01 09:51:46 -Pausing ProtocolHandler ["http-nio-8081"]
2019-04-01 09:51:46 -Stopping service [Tomcat]
2019-04-01 09:51:46 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-04-01 09:51:46 -Stopping ProtocolHandler ["http-nio-8081"]
2019-04-01 09:51:46 -Destroying ProtocolHandler ["http-nio-8081"]
2019-04-01 09:51:46 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-01 09:51:46 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-04-01 09:51:46 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56a4479a: startup date [Mon Apr 01 09:51:09 CST 2019]; root of context hierarchy
2019-04-01 09:51:46 -Stopping beans in phase 2147483647
2019-04-01 09:51:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-01 09:51:46 -Stopping...
2019-04-01 09:51:46 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 09:51:46 -Stopped.
2019-04-01 09:51:46 -Unregistering JMX-exposed beans on shutdown
2019-04-01 09:51:46 -Unregistering JMX-exposed beans
2019-04-01 09:51:46 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-04-01 09:51:46 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-04-01 09:51:46 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-04-01 09:51:46 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-04-01 09:51:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-04-01 09:51:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-01 09:51:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-04-01 09:51:46 -Shutting down Quartz Scheduler
2019-04-01 09:52:23 -Starting BootdoApplication on ZJZL-20180906VX with PID 1916 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-01 09:52:23 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-01 09:52:23 -The following profiles are active: dev
2019-04-01 09:52:23 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61bcd567: startup date [Mon Apr 01 09:52:23 CST 2019]; root of context hierarchy
2019-04-01 09:52:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-01 09:52:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a3829de7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:52:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$95dbcc8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:52:31 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:52:31 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:52:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:52:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-01 09:52:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-01 09:52:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:52:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:52:32 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:52:32 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:52:33 -Tomcat initialized with port(s): 8081 (http)
2019-04-01 09:52:33 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-01 09:52:33 -Starting service [Tomcat]
2019-04-01 09:52:33 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-01 09:52:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-01 09:52:33 -Initializing Spring embedded WebApplicationContext
2019-04-01 09:52:33 -Root WebApplicationContext: initialization completed in 9994 ms
2019-04-01 09:52:34 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-01 09:52:34 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-01 09:52:34 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-01 09:52:34 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-01 09:52:34 -Filter xssFilter was not registered (disabled)
2019-04-01 09:52:34 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-01 09:52:34 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-01 09:52:34 -Servlet statViewServlet mapped to [/druid/*]
2019-04-01 09:52:34 -Servlet dispatcherServlet mapped to [/]
2019-04-01 09:52:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61bcd567: startup date [Mon Apr 01 09:52:23 CST 2019]; root of context hierarchy
2019-04-01 09:52:37 -Using default implementation for ThreadExecutor
2019-04-01 09:52:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-01 09:52:37 -Quartz Scheduler v.2.2.1 created.
2019-04-01 09:52:37 -RAMJobStore initialized.
2019-04-01 09:52:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-01 09:52:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-01 09:52:37 -Quartz scheduler version: 2.2.1
2019-04-01 09:52:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@72288480
2019-04-01 09:52:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-01 09:52:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-01 09:52:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-01 09:52:41 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-01 09:52:41 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:52:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-01 09:52:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-01 09:52:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-01 09:52:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-01 09:52:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-01 09:52:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-01 09:52:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-01 09:52:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-01 09:52:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-01 09:52:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-01 09:52:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-01 09:52:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-01 09:52:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-01 09:52:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-01 09:52:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-01 09:52:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-01 09:52:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-01 09:52:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 09:52:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-01 09:52:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 09:52:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-01 09:52:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-01 09:52:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-01 09:52:41 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-01 09:52:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-01 09:52:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-01 09:52:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-01 09:52:41 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-01 09:52:41 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 09:52:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 09:52:41 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-01 09:52:41 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-01 09:52:41 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-01 09:52:41 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-01 09:52:41 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:52:41 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-01 09:52:41 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:52:41 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-01 09:52:41 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-01 09:52:41 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-01 09:52:41 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-01 09:52:41 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-01 09:52:41 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-01 09:52:41 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-01 09:52:41 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-01 09:52:41 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-01 09:52:41 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-01 09:52:41 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-01 09:52:41 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-01 09:52:41 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-01 09:52:41 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:52:41 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-01 09:52:41 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:52:41 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-01 09:52:41 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-01 09:52:41 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 09:52:41 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 09:52:41 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-01 09:52:41 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-01 09:52:41 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-01 09:52:41 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:52:41 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 09:52:41 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-01 09:52:41 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-01 09:52:41 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-01 09:52:41 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-01 09:52:41 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-01 09:52:41 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-01 09:52:41 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-01 09:52:41 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:52:41 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-01 09:52:41 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-01 09:52:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-01 09:52:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-01 09:52:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-01 09:52:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-01 09:52:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-01 09:52:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-01 09:52:41 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-01 09:52:41 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-04-01 09:52:41 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:52:41 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-01 09:52:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-01 09:52:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-01 09:52:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-01 09:52:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-01 09:52:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-01 09:52:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-01 09:52:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-01 09:52:41 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 09:52:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 09:52:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-01 09:52:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-01 09:52:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-01 09:52:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-01 09:52:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-01 09:52:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-01 09:52:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-01 09:52:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-01 09:52:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-01 09:52:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-01 09:52:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-01 09:52:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-01 09:52:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-01 09:52:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-01 09:52:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-01 09:52:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-01 09:52:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-01 09:52:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-01 09:52:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 09:52:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 09:52:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 09:52:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-01 09:52:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-01 09:52:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-01 09:52:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-01 09:52:41 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:52:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-01 09:52:41 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:52:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-01 09:52:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-01 09:52:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-01 09:52:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-01 09:52:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 09:52:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:52:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 09:52:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:52:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-01 09:52:41 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-01 09:52:41 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 09:52:41 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:52:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-01 09:52:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 09:52:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-01 09:52:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-01 09:52:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-01 09:52:42 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-01 09:52:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-01 09:52:42 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-01 09:52:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 09:52:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61bcd567: startup date [Mon Apr 01 09:52:23 CST 2019]; root of context hierarchy
2019-04-01 09:52:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 09:52:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 09:52:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 09:52:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-01 09:52:43 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-01 09:52:45 -Registering beans for JMX exposure on startup
2019-04-01 09:52:46 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-01 09:52:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-01 09:52:46 -Starting beans in phase 2147483647
2019-04-01 09:52:46 -Context refreshed
2019-04-01 09:52:46 -Found 1 custom documentation plugin(s)
2019-04-01 09:52:46 -Scanning for api listing references
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_1
2019-04-01 09:52:47 -Generating unique operation named: addUsingGET_1
2019-04-01 09:52:47 -Generating unique operation named: editUsingGET_1
2019-04-01 09:52:47 -Generating unique operation named: listUsingGET_1
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_2
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_3
2019-04-01 09:52:47 -Generating unique operation named: saveUsingPOST_1
2019-04-01 09:52:47 -Generating unique operation named: updateUsingGET_1
2019-04-01 09:52:47 -Generating unique operation named: updateUsingHEAD_1
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPOST_1
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPUT_1
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPATCH_1
2019-04-01 09:52:47 -Generating unique operation named: updateUsingDELETE_1
2019-04-01 09:52:47 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-01 09:52:47 -Generating unique operation named: updateUsingTRACE_1
2019-04-01 09:52:47 -Generating unique operation named: addUsingGET_2
2019-04-01 09:52:47 -Generating unique operation named: editUsingGET_2
2019-04-01 09:52:47 -Generating unique operation named: listUsingGET_2
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_4
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_5
2019-04-01 09:52:47 -Generating unique operation named: saveUsingPOST_2
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPOST_2
2019-04-01 09:52:47 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-01 09:52:47 -Generating unique operation named: addUsingGET_3
2019-04-01 09:52:47 -Generating unique operation named: editUsingGET_3
2019-04-01 09:52:47 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-01 09:52:47 -Generating unique operation named: listUsingGET_3
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_6
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_7
2019-04-01 09:52:47 -Generating unique operation named: saveUsingPOST_3
2019-04-01 09:52:47 -Generating unique operation named: updateUsingGET_2
2019-04-01 09:52:47 -Generating unique operation named: updateUsingHEAD_2
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPOST_3
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPUT_2
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPATCH_2
2019-04-01 09:52:47 -Generating unique operation named: updateUsingDELETE_2
2019-04-01 09:52:47 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-01 09:52:47 -Generating unique operation named: updateUsingTRACE_2
2019-04-01 09:52:47 -Generating unique operation named: addUsingGET_4
2019-04-01 09:52:47 -Generating unique operation named: editUsingGET_4
2019-04-01 09:52:47 -Generating unique operation named: listUsingGET_4
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_8
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_9
2019-04-01 09:52:47 -Generating unique operation named: saveUsingPOST_4
2019-04-01 09:52:47 -Generating unique operation named: updateUsingGET_3
2019-04-01 09:52:47 -Generating unique operation named: updateUsingHEAD_3
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPOST_4
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPUT_3
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPATCH_3
2019-04-01 09:52:47 -Generating unique operation named: updateUsingDELETE_3
2019-04-01 09:52:47 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-01 09:52:47 -Generating unique operation named: updateUsingTRACE_3
2019-04-01 09:52:47 -Generating unique operation named: ElecUsingGET_1
2019-04-01 09:52:47 -Generating unique operation named: addUsingGET_5
2019-04-01 09:52:47 -Generating unique operation named: editUsingGET_5
2019-04-01 09:52:47 -Generating unique operation named: listUsingGET_5
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_10
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_11
2019-04-01 09:52:47 -Generating unique operation named: saveUsingPOST_5
2019-04-01 09:52:47 -Generating unique operation named: updateUsingGET_4
2019-04-01 09:52:47 -Generating unique operation named: updateUsingHEAD_4
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPOST_5
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPUT_4
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPATCH_4
2019-04-01 09:52:47 -Generating unique operation named: updateUsingDELETE_4
2019-04-01 09:52:47 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-01 09:52:47 -Generating unique operation named: updateUsingTRACE_4
2019-04-01 09:52:47 -Generating unique operation named: editUsingGET_6
2019-04-01 09:52:47 -Generating unique operation named: listUsingGET_6
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPOST_6
2019-04-01 09:52:47 -Generating unique operation named: addUsingGET_6
2019-04-01 09:52:47 -Generating unique operation named: editUsingGET_7
2019-04-01 09:52:47 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-01 09:52:47 -Generating unique operation named: listUsingGET_7
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_12
2019-04-01 09:52:47 -Generating unique operation named: removeUsingPOST_13
2019-04-01 09:52:47 -Generating unique operation named: saveUsingPOST_6
2019-04-01 09:52:47 -Generating unique operation named: updateUsingGET_5
2019-04-01 09:52:47 -Generating unique operation named: updateUsingHEAD_5
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPOST_7
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPUT_5
2019-04-01 09:52:47 -Generating unique operation named: updateUsingPATCH_5
2019-04-01 09:52:47 -Generating unique operation named: updateUsingDELETE_5
2019-04-01 09:52:47 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-01 09:52:47 -Generating unique operation named: updateUsingTRACE_5
2019-04-01 09:52:47 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-01 09:52:47 -Generating unique operation named: addUsingGET_7
2019-04-01 09:52:47 -Generating unique operation named: editUsingGET_8
2019-04-01 09:52:48 -Generating unique operation named: listUsingGET_8
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_14
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_15
2019-04-01 09:52:48 -Generating unique operation named: saveUsingPOST_7
2019-04-01 09:52:48 -Generating unique operation named: updateUsingGET_6
2019-04-01 09:52:48 -Generating unique operation named: updateUsingHEAD_6
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPOST_8
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPUT_6
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPATCH_6
2019-04-01 09:52:48 -Generating unique operation named: updateUsingDELETE_6
2019-04-01 09:52:48 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-01 09:52:48 -Generating unique operation named: updateUsingTRACE_6
2019-04-01 09:52:48 -Generating unique operation named: addUsingGET_8
2019-04-01 09:52:48 -Generating unique operation named: editUsingGET_9
2019-04-01 09:52:48 -Generating unique operation named: listUsingGET_9
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_16
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_17
2019-04-01 09:52:48 -Generating unique operation named: saveUsingPOST_8
2019-04-01 09:52:48 -Generating unique operation named: updateUsingGET_7
2019-04-01 09:52:48 -Generating unique operation named: updateUsingHEAD_7
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPOST_9
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPUT_7
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPATCH_7
2019-04-01 09:52:48 -Generating unique operation named: updateUsingDELETE_7
2019-04-01 09:52:48 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-01 09:52:48 -Generating unique operation named: updateUsingTRACE_7
2019-04-01 09:52:48 -Generating unique operation named: addUsingGET_9
2019-04-01 09:52:48 -Generating unique operation named: editUsingGET_10
2019-04-01 09:52:48 -Generating unique operation named: infoUsingGET_1
2019-04-01 09:52:48 -Generating unique operation named: infoUsingHEAD_1
2019-04-01 09:52:48 -Generating unique operation named: infoUsingPOST_1
2019-04-01 09:52:48 -Generating unique operation named: infoUsingPUT_1
2019-04-01 09:52:48 -Generating unique operation named: infoUsingPATCH_1
2019-04-01 09:52:48 -Generating unique operation named: infoUsingDELETE_1
2019-04-01 09:52:48 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-01 09:52:48 -Generating unique operation named: infoUsingTRACE_1
2019-04-01 09:52:48 -Generating unique operation named: listUsingGET_10
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_18
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_19
2019-04-01 09:52:48 -Generating unique operation named: saveUsingPOST_9
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPOST_10
2019-04-01 09:52:48 -Generating unique operation named: listUsingGET_11
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_20
2019-04-01 09:52:48 -Generating unique operation named: welcomeUsingGET_1
2019-04-01 09:52:48 -Generating unique operation named: addUsingGET_10
2019-04-01 09:52:48 -Generating unique operation named: editUsingGET_11
2019-04-01 09:52:48 -Generating unique operation named: listUsingGET_12
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_21
2019-04-01 09:52:48 -Generating unique operation named: saveUsingPOST_10
2019-04-01 09:52:48 -Generating unique operation named: treeUsingGET_1
2019-04-01 09:52:48 -Generating unique operation named: treeUsingGET_2
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPOST_11
2019-04-01 09:52:48 -Generating unique operation named: addUsingGET_11
2019-04-01 09:52:48 -Generating unique operation named: editUsingGET_12
2019-04-01 09:52:48 -Generating unique operation named: listUsingGET_13
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_22
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_23
2019-04-01 09:52:48 -Generating unique operation named: saveUsingPOST_11
2019-04-01 09:52:48 -Generating unique operation named: updateUsingGET_8
2019-04-01 09:52:48 -Generating unique operation named: updateUsingHEAD_8
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPOST_12
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPUT_8
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPATCH_8
2019-04-01 09:52:48 -Generating unique operation named: updateUsingDELETE_8
2019-04-01 09:52:48 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-01 09:52:48 -Generating unique operation named: updateUsingTRACE_8
2019-04-01 09:52:48 -Generating unique operation named: addUsingGET_12
2019-04-01 09:52:48 -Generating unique operation named: editUsingGET_13
2019-04-01 09:52:48 -Generating unique operation named: listUsingGET_14
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_24
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_25
2019-04-01 09:52:48 -Generating unique operation named: saveUsingPOST_12
2019-04-01 09:52:48 -Generating unique operation named: updateUsingGET_9
2019-04-01 09:52:48 -Generating unique operation named: updateUsingHEAD_9
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPOST_13
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPUT_9
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPATCH_9
2019-04-01 09:52:48 -Generating unique operation named: updateUsingDELETE_9
2019-04-01 09:52:48 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-01 09:52:48 -Generating unique operation named: updateUsingTRACE_9
2019-04-01 09:52:48 -Generating unique operation named: addUsingGET_13
2019-04-01 09:52:48 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-01 09:52:48 -Generating unique operation named: editUsingGET_14
2019-04-01 09:52:48 -Generating unique operation named: listUsingGET_15
2019-04-01 09:52:48 -Generating unique operation named: saveUsingPOST_13
2019-04-01 09:52:48 -Generating unique operation named: saveUsingPOST_14
2019-04-01 09:52:48 -Generating unique operation named: updateUsingPOST_14
2019-04-01 09:52:48 -Generating unique operation named: listUsingGET_16
2019-04-01 09:52:48 -Generating unique operation named: listUsingHEAD_1
2019-04-01 09:52:48 -Generating unique operation named: listUsingPOST_1
2019-04-01 09:52:48 -Generating unique operation named: listUsingPUT_1
2019-04-01 09:52:48 -Generating unique operation named: listUsingPATCH_1
2019-04-01 09:52:48 -Generating unique operation named: listUsingDELETE_1
2019-04-01 09:52:48 -Generating unique operation named: listUsingOPTIONS_1
2019-04-01 09:52:48 -Generating unique operation named: listUsingTRACE_1
2019-04-01 09:52:48 -Generating unique operation named: addUsingGET_14
2019-04-01 09:52:48 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-01 09:52:48 -Generating unique operation named: editUsingGET_15
2019-04-01 09:52:48 -Generating unique operation named: listUsingGET_17
2019-04-01 09:52:48 -Generating unique operation named: removeUsingPOST_26
2019-04-01 09:52:49 -Generating unique operation named: saveUsingPOST_15
2019-04-01 09:52:49 -Generating unique operation named: treeUsingGET_3
2019-04-01 09:52:49 -Generating unique operation named: treeViewUsingGET_1
2019-04-01 09:52:49 -Generating unique operation named: updateUsingPOST_15
2019-04-01 09:52:49 -Generating unique operation named: addUsingGET_15
2019-04-01 09:52:49 -Generating unique operation named: editUsingGET_16
2019-04-01 09:52:49 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-01 09:52:49 -Generating unique operation named: listUsingGET_18
2019-04-01 09:52:49 -Generating unique operation named: removeUsingPOST_27
2019-04-01 09:52:49 -Generating unique operation named: removeUsingPOST_28
2019-04-01 09:52:49 -Generating unique operation named: saveUsingPOST_16
2019-04-01 09:52:49 -Generating unique operation named: updateUsingGET_10
2019-04-01 09:52:49 -Generating unique operation named: updateUsingHEAD_10
2019-04-01 09:52:49 -Generating unique operation named: updateUsingPOST_16
2019-04-01 09:52:49 -Generating unique operation named: updateUsingPUT_10
2019-04-01 09:52:49 -Generating unique operation named: updateUsingPATCH_10
2019-04-01 09:52:49 -Generating unique operation named: updateUsingDELETE_10
2019-04-01 09:52:49 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-01 09:52:49 -Generating unique operation named: updateUsingTRACE_10
2019-04-01 09:52:49 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-01 09:52:49 -Generating unique operation named: addUsingGET_16
2019-04-01 09:52:49 -Generating unique operation named: editUsingGET_17
2019-04-01 09:52:49 -Generating unique operation named: listUsingGET_19
2019-04-01 09:52:49 -Generating unique operation named: removeUsingPOST_29
2019-04-01 09:52:49 -Generating unique operation named: removeUsingPOST_30
2019-04-01 09:52:49 -Generating unique operation named: saveUsingPOST_17
2019-04-01 09:52:49 -Generating unique operation named: updateUsingGET_11
2019-04-01 09:52:49 -Generating unique operation named: updateUsingHEAD_11
2019-04-01 09:52:49 -Generating unique operation named: updateUsingPOST_17
2019-04-01 09:52:49 -Generating unique operation named: updateUsingPUT_11
2019-04-01 09:52:49 -Generating unique operation named: updateUsingPATCH_11
2019-04-01 09:52:49 -Generating unique operation named: updateUsingDELETE_11
2019-04-01 09:52:49 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-01 09:52:49 -Generating unique operation named: updateUsingTRACE_11
2019-04-01 09:52:49 -Generating unique operation named: addUsingGET_17
2019-04-01 09:52:49 -Generating unique operation named: editUsingGET_18
2019-04-01 09:52:49 -Generating unique operation named: listUsingGET_20
2019-04-01 09:52:49 -Generating unique operation named: removeUsingPOST_31
2019-04-01 09:52:49 -Generating unique operation named: removeUsingPOST_32
2019-04-01 09:52:49 -Generating unique operation named: saveUsingPOST_18
2019-04-01 09:52:49 -Generating unique operation named: updateUsingGET_12
2019-04-01 09:52:49 -Generating unique operation named: updateUsingHEAD_12
2019-04-01 09:52:49 -Generating unique operation named: updateUsingPOST_18
2019-04-01 09:52:49 -Generating unique operation named: updateUsingPUT_12
2019-04-01 09:52:49 -Generating unique operation named: updateUsingPATCH_12
2019-04-01 09:52:49 -Generating unique operation named: updateUsingDELETE_12
2019-04-01 09:52:49 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-01 09:52:49 -Generating unique operation named: updateUsingTRACE_12
2019-04-01 09:52:49 -Starting Quartz Scheduler now
2019-04-01 09:52:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-01 09:52:49 -Starting...
2019-04-01 09:52:49 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 09:52:49 -Started.
2019-04-01 09:52:49 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-01 09:52:49 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-04-01 09:52:49 -Pausing ProtocolHandler ["http-nio-8081"]
2019-04-01 09:52:49 -Stopping service [Tomcat]
2019-04-01 09:52:49 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-04-01 09:52:49 -Stopping ProtocolHandler ["http-nio-8081"]
2019-04-01 09:52:49 -Destroying ProtocolHandler ["http-nio-8081"]
2019-04-01 09:52:49 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-01 09:52:49 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-04-01 09:52:49 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61bcd567: startup date [Mon Apr 01 09:52:23 CST 2019]; root of context hierarchy
2019-04-01 09:52:49 -Stopping beans in phase 2147483647
2019-04-01 09:52:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-01 09:52:49 -Stopping...
2019-04-01 09:52:49 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 09:52:49 -Stopped.
2019-04-01 09:52:49 -Unregistering JMX-exposed beans on shutdown
2019-04-01 09:52:49 -Unregistering JMX-exposed beans
2019-04-01 09:52:49 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-04-01 09:52:49 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-04-01 09:52:49 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-04-01 09:52:49 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-04-01 09:52:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-04-01 09:52:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-01 09:52:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-04-01 09:52:49 -Shutting down Quartz Scheduler
2019-04-01 09:53:11 -请求地址 : http://localhost:8081/index
2019-04-01 09:53:11 -HTTP METHOD : GET
2019-04-01 09:53:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:53:11 -参数 : [{}]
2019-04-01 09:53:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:53:11 -==> Parameters: 1(Long)
2019-04-01 09:53:11 -<==      Total: 46
2019-04-01 09:53:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:53:11 -==> Parameters: 138(Long)
2019-04-01 09:53:11 -<==      Total: 1
2019-04-01 09:53:11 -耗时 : 98
2019-04-01 09:53:11 -返回值 : index_v1
2019-04-01 09:53:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:53:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 98(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:53:11.504(Timestamp)
2019-04-01 09:53:11 -<==    Updates: 1
2019-04-01 09:53:12 -请求地址 : http://localhost:8081/main
2019-04-01 09:53:12 -HTTP METHOD : GET
2019-04-01 09:53:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:53:12 -参数 : []
2019-04-01 09:53:12 -耗时 : 125
2019-04-01 09:53:12 -返回值 : main
2019-04-01 09:53:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:53:13 -HTTP METHOD : GET
2019-04-01 09:53:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:53:13 -参数 : []
2019-04-01 09:53:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:53:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:53:13 -<==      Total: 0
2019-04-01 09:53:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:53:13 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:53:13 -<==      Total: 1
2019-04-01 09:53:13 -耗时 : 31
2019-04-01 09:53:13 -返回值 : com.bootdo.common.utils.PageUtils@19ee16fe
2019-04-01 09:53:13 -请求地址 : http://localhost:8081/main
2019-04-01 09:53:13 -HTTP METHOD : GET
2019-04-01 09:53:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:53:13 -参数 : []
2019-04-01 09:53:13 -耗时 : 1
2019-04-01 09:53:13 -返回值 : main
2019-04-01 09:53:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 09:53:16 -==> Parameters: 1(Long)
2019-04-01 09:53:16 -<==      Total: 90
2019-04-01 09:53:16 -请求地址 : http://localhost:8081/print/print
2019-04-01 09:53:16 -HTTP METHOD : GET
2019-04-01 09:53:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 09:53:16 -参数 : []
2019-04-01 09:53:16 -耗时 : 0
2019-04-01 09:53:16 -返回值 : print/print/print
2019-04-01 09:53:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:53:17 -HTTP METHOD : GET
2019-04-01 09:53:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:53:17 -参数 : [userType]
2019-04-01 09:53:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:53:17 -==> Parameters: userType(String)
2019-04-01 09:53:17 -<==      Total: 2
2019-04-01 09:53:17 -耗时 : 28
2019-04-01 09:53:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:53:17 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:53:17 -HTTP METHOD : GET
2019-04-01 09:53:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:53:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-04-01 09:53:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 09:53:17 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 09:53:17 -<==      Total: 3
2019-04-01 09:53:17 -==>  Preparing: select count(*) from print 
2019-04-01 09:53:17 -==> Parameters: 
2019-04-01 09:53:17 -<==      Total: 1
2019-04-01 09:53:17 -耗时 : 76
2019-04-01 09:53:17 -返回值 : com.bootdo.common.utils.PageUtils@6f1d85d3
2019-04-01 09:53:26 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:53:26 -HTTP METHOD : GET
2019-04-01 09:53:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:53:26 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-02-26, type=A}]
2019-04-01 09:53:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:53:26 -==> Parameters: A(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:53:26 -<==      Total: 0
2019-04-01 09:53:26 -==>  Preparing: select count(*) from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:53:26 -==> Parameters: A(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 09:53:26 -<==      Total: 1
2019-04-01 09:53:26 -耗时 : 5
2019-04-01 09:53:26 -返回值 : com.bootdo.common.utils.PageUtils@713cc25b
2019-04-01 09:53:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 09:53:27 -HTTP METHOD : GET
2019-04-01 09:53:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 09:53:27 -参数 : []
2019-04-01 09:53:27 -耗时 : 0
2019-04-01 09:53:27 -返回值 : system/dept/deptTree
2019-04-01 09:53:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 09:53:27 -HTTP METHOD : GET
2019-04-01 09:53:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 09:53:27 -参数 : []
2019-04-01 09:53:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 09:53:27 -==> Parameters: 
2019-04-01 09:53:27 -<==      Total: 3
2019-04-01 09:53:27 -耗时 : 38
2019-04-01 09:53:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 09:53:29 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:53:29 -HTTP METHOD : GET
2019-04-01 09:53:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:53:29 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-02-26}]
2019-04-01 09:53:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:53:29 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:53:29 -<==      Total: 0
2019-04-01 09:53:29 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:53:29 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 09:53:29 -<==      Total: 1
2019-04-01 09:53:29 -耗时 : 4
2019-04-01 09:53:29 -返回值 : com.bootdo.common.utils.PageUtils@73ebd492
2019-04-01 09:53:29 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:53:29 -HTTP METHOD : GET
2019-04-01 09:53:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:53:29 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-02-26}]
2019-04-01 09:53:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:53:29 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:53:29 -<==      Total: 0
2019-04-01 09:53:29 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:53:29 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 09:53:29 -<==      Total: 1
2019-04-01 09:53:29 -耗时 : 7
2019-04-01 09:53:29 -返回值 : com.bootdo.common.utils.PageUtils@6a70a3e5
2019-04-01 09:53:30 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:53:30 -HTTP METHOD : GET
2019-04-01 09:53:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:53:30 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-02-26}]
2019-04-01 09:53:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:53:30 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:53:30 -<==      Total: 0
2019-04-01 09:53:30 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:53:30 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 09:53:30 -<==      Total: 1
2019-04-01 09:53:30 -耗时 : 8
2019-04-01 09:53:30 -返回值 : com.bootdo.common.utils.PageUtils@e5e1e71
2019-04-01 09:53:30 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:53:30 -HTTP METHOD : GET
2019-04-01 09:53:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:53:30 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-02-26}]
2019-04-01 09:53:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:53:30 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:53:30 -<==      Total: 0
2019-04-01 09:53:30 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:53:30 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 09:53:30 -<==      Total: 1
2019-04-01 09:53:30 -耗时 : 36
2019-04-01 09:53:30 -返回值 : com.bootdo.common.utils.PageUtils@4c5686fa
2019-04-01 09:53:30 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:53:30 -HTTP METHOD : GET
2019-04-01 09:53:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:53:30 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-02-26}]
2019-04-01 09:53:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:53:30 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:53:30 -<==      Total: 0
2019-04-01 09:53:30 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:53:30 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 09:53:30 -<==      Total: 1
2019-04-01 09:53:30 -耗时 : 27
2019-04-01 09:53:30 -返回值 : com.bootdo.common.utils.PageUtils@68d94fa9
2019-04-01 09:53:30 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:53:30 -HTTP METHOD : GET
2019-04-01 09:53:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:53:30 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-02-26}]
2019-04-01 09:53:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 09:53:30 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 09:53:30 -<==      Total: 0
2019-04-01 09:53:30 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 09:53:30 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 09:53:30 -<==      Total: 1
2019-04-01 09:53:30 -耗时 : 214
2019-04-01 09:53:30 -返回值 : com.bootdo.common.utils.PageUtils@d0bf87
2019-04-01 09:54:17 -Starting BootdoApplication on ZJZL-20180906VX with PID 5168 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-01 09:54:17 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-01 09:54:17 -The following profiles are active: dev
2019-04-01 09:54:17 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a8c1f44: startup date [Mon Apr 01 09:54:17 CST 2019]; root of context hierarchy
2019-04-01 09:54:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-01 09:54:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b55870a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:54:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a7b19f47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:54:28 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:54:28 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:54:28 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:54:28 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-01 09:54:28 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-01 09:54:28 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:54:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:54:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:54:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 09:54:30 -Tomcat initialized with port(s): 8081 (http)
2019-04-01 09:54:30 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-01 09:54:30 -Starting service [Tomcat]
2019-04-01 09:54:30 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-01 09:54:30 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-01 09:54:31 -Initializing Spring embedded WebApplicationContext
2019-04-01 09:54:31 -Root WebApplicationContext: initialization completed in 13519 ms
2019-04-01 09:54:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-01 09:54:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-01 09:54:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-01 09:54:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-01 09:54:32 -Filter xssFilter was not registered (disabled)
2019-04-01 09:54:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-01 09:54:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-01 09:54:32 -Servlet statViewServlet mapped to [/druid/*]
2019-04-01 09:54:32 -Servlet dispatcherServlet mapped to [/]
2019-04-01 09:54:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a8c1f44: startup date [Mon Apr 01 09:54:17 CST 2019]; root of context hierarchy
2019-04-01 09:54:38 -Using default implementation for ThreadExecutor
2019-04-01 09:54:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-01 09:54:38 -Quartz Scheduler v.2.2.1 created.
2019-04-01 09:54:38 -RAMJobStore initialized.
2019-04-01 09:54:38 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-01 09:54:38 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-01 09:54:38 -Quartz scheduler version: 2.2.1
2019-04-01 09:54:38 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@77cf329d
2019-04-01 09:54:39 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-01 09:54:39 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-01 09:54:42 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-01 09:54:42 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:54:42 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-01 09:54:42 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-01 09:54:42 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-01 09:54:42 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-01 09:54:42 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-01 09:54:42 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-01 09:54:42 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-01 09:54:42 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-01 09:54:42 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-01 09:54:42 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:42 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-01 09:54:42 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-01 09:54:42 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-01 09:54:42 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-01 09:54:42 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-01 09:54:42 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:42 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-01 09:54:42 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-01 09:54:42 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-01 09:54:42 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-01 09:54:42 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:42 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-01 09:54:42 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-01 09:54:42 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-01 09:54:42 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-01 09:54:42 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:42 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:42 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-01 09:54:42 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 09:54:42 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-01 09:54:42 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 09:54:42 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-01 09:54:42 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-01 09:54:42 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-01 09:54:42 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-01 09:54:42 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-01 09:54:42 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:42 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-01 09:54:42 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-01 09:54:42 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-01 09:54:42 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-01 09:54:42 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:42 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-01 09:54:42 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-01 09:54:42 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:42 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-01 09:54:42 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-01 09:54:42 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-01 09:54:42 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 09:54:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 09:54:42 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-01 09:54:42 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-01 09:54:42 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-01 09:54:42 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-01 09:54:42 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-01 09:54:42 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-01 09:54:42 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:54:42 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-01 09:54:42 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:42 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:54:42 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-01 09:54:42 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-01 09:54:42 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-01 09:54:42 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-01 09:54:42 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-01 09:54:42 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-01 09:54:42 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:42 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-01 09:54:42 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-01 09:54:42 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:42 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-01 09:54:42 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-01 09:54:42 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-01 09:54:42 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-01 09:54:42 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-01 09:54:42 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-01 09:54:42 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:42 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-01 09:54:42 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:54:42 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-01 09:54:42 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-01 09:54:42 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:54:42 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-01 09:54:42 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-01 09:54:42 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-01 09:54:42 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-01 09:54:42 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 09:54:42 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:42 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 09:54:42 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-01 09:54:42 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-01 09:54:43 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-01 09:54:43 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 09:54:43 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:54:43 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-01 09:54:43 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-01 09:54:43 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-01 09:54:43 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-01 09:54:43 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-01 09:54:43 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-01 09:54:43 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-01 09:54:43 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-01 09:54:43 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-01 09:54:43 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-01 09:54:43 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-01 09:54:43 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:54:43 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-01 09:54:43 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-01 09:54:43 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-01 09:54:43 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:43 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-01 09:54:43 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-01 09:54:43 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-01 09:54:43 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-01 09:54:43 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:43 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-01 09:54:43 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-01 09:54:43 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-01 09:54:43 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:43 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-04-01 09:54:43 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-01 09:54:43 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 09:54:43 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-01 09:54:43 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-01 09:54:43 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-01 09:54:43 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-01 09:54:43 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-01 09:54:43 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-01 09:54:43 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-01 09:54:43 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-01 09:54:43 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-01 09:54:43 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 09:54:43 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 09:54:43 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-01 09:54:43 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:43 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-01 09:54:43 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-01 09:54:43 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-01 09:54:43 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-01 09:54:43 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-01 09:54:43 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-01 09:54:43 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-01 09:54:43 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-01 09:54:43 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-01 09:54:43 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-01 09:54:43 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-01 09:54:43 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-01 09:54:43 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:43 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-01 09:54:43 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:43 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-01 09:54:43 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-01 09:54:43 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-01 09:54:43 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-01 09:54:43 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 09:54:43 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 09:54:43 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-01 09:54:43 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 09:54:43 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-01 09:54:43 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-01 09:54:43 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-01 09:54:43 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-01 09:54:43 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:43 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-01 09:54:43 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:54:43 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:43 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-01 09:54:43 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:54:43 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-01 09:54:43 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-01 09:54:43 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-01 09:54:43 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-01 09:54:43 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 09:54:43 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 09:54:43 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 09:54:43 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-01 09:54:43 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 09:54:43 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 09:54:43 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-01 09:54:43 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 09:54:43 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-01 09:54:43 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 09:54:43 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-01 09:54:43 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-01 09:54:43 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-01 09:54:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-01 09:54:44 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-01 09:54:44 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-01 09:54:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 09:54:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a8c1f44: startup date [Mon Apr 01 09:54:17 CST 2019]; root of context hierarchy
2019-04-01 09:54:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 09:54:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 09:54:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 09:54:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-01 09:54:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-01 09:54:48 -Registering beans for JMX exposure on startup
2019-04-01 09:54:48 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-01 09:54:48 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-01 09:54:48 -Starting beans in phase 2147483647
2019-04-01 09:54:48 -Context refreshed
2019-04-01 09:54:48 -Found 1 custom documentation plugin(s)
2019-04-01 09:54:48 -Scanning for api listing references
2019-04-01 09:54:50 -Generating unique operation named: removeUsingPOST_1
2019-04-01 09:54:50 -Generating unique operation named: addUsingGET_1
2019-04-01 09:54:50 -Generating unique operation named: editUsingGET_1
2019-04-01 09:54:50 -Generating unique operation named: listUsingGET_1
2019-04-01 09:54:50 -Generating unique operation named: removeUsingPOST_2
2019-04-01 09:54:50 -Generating unique operation named: removeUsingPOST_3
2019-04-01 09:54:50 -Generating unique operation named: saveUsingPOST_1
2019-04-01 09:54:50 -Generating unique operation named: updateUsingGET_1
2019-04-01 09:54:50 -Generating unique operation named: updateUsingHEAD_1
2019-04-01 09:54:50 -Generating unique operation named: updateUsingPOST_1
2019-04-01 09:54:50 -Generating unique operation named: updateUsingPUT_1
2019-04-01 09:54:50 -Generating unique operation named: updateUsingPATCH_1
2019-04-01 09:54:50 -Generating unique operation named: updateUsingDELETE_1
2019-04-01 09:54:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-01 09:54:50 -Generating unique operation named: updateUsingTRACE_1
2019-04-01 09:54:50 -Generating unique operation named: addUsingGET_2
2019-04-01 09:54:50 -Generating unique operation named: editUsingGET_2
2019-04-01 09:54:50 -Generating unique operation named: listUsingGET_2
2019-04-01 09:54:50 -Generating unique operation named: removeUsingPOST_4
2019-04-01 09:54:50 -Generating unique operation named: removeUsingPOST_5
2019-04-01 09:54:50 -Generating unique operation named: saveUsingPOST_2
2019-04-01 09:54:50 -Generating unique operation named: updateUsingPOST_2
2019-04-01 09:54:50 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-01 09:54:50 -Generating unique operation named: addUsingGET_3
2019-04-01 09:54:50 -Generating unique operation named: editUsingGET_3
2019-04-01 09:54:50 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-01 09:54:50 -Generating unique operation named: listUsingGET_3
2019-04-01 09:54:50 -Generating unique operation named: removeUsingPOST_6
2019-04-01 09:54:50 -Generating unique operation named: removeUsingPOST_7
2019-04-01 09:54:50 -Generating unique operation named: saveUsingPOST_3
2019-04-01 09:54:50 -Generating unique operation named: updateUsingGET_2
2019-04-01 09:54:50 -Generating unique operation named: updateUsingHEAD_2
2019-04-01 09:54:50 -Generating unique operation named: updateUsingPOST_3
2019-04-01 09:54:50 -Generating unique operation named: updateUsingPUT_2
2019-04-01 09:54:50 -Generating unique operation named: updateUsingPATCH_2
2019-04-01 09:54:50 -Generating unique operation named: updateUsingDELETE_2
2019-04-01 09:54:50 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-01 09:54:50 -Generating unique operation named: updateUsingTRACE_2
2019-04-01 09:54:50 -Generating unique operation named: addUsingGET_4
2019-04-01 09:54:50 -Generating unique operation named: editUsingGET_4
2019-04-01 09:54:50 -Generating unique operation named: listUsingGET_4
2019-04-01 09:54:50 -Generating unique operation named: removeUsingPOST_8
2019-04-01 09:54:50 -Generating unique operation named: removeUsingPOST_9
2019-04-01 09:54:50 -Generating unique operation named: saveUsingPOST_4
2019-04-01 09:54:50 -Generating unique operation named: updateUsingGET_3
2019-04-01 09:54:50 -Generating unique operation named: updateUsingHEAD_3
2019-04-01 09:54:50 -Generating unique operation named: updateUsingPOST_4
2019-04-01 09:54:50 -Generating unique operation named: updateUsingPUT_3
2019-04-01 09:54:50 -Generating unique operation named: updateUsingPATCH_3
2019-04-01 09:54:50 -Generating unique operation named: updateUsingDELETE_3
2019-04-01 09:54:50 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-01 09:54:50 -Generating unique operation named: updateUsingTRACE_3
2019-04-01 09:54:50 -Generating unique operation named: ElecUsingGET_1
2019-04-01 09:54:50 -Generating unique operation named: addUsingGET_5
2019-04-01 09:54:50 -Generating unique operation named: editUsingGET_5
2019-04-01 09:54:50 -Generating unique operation named: listUsingGET_5
2019-04-01 09:54:50 -Generating unique operation named: removeUsingPOST_10
2019-04-01 09:54:50 -Generating unique operation named: removeUsingPOST_11
2019-04-01 09:54:50 -Generating unique operation named: saveUsingPOST_5
2019-04-01 09:54:50 -Generating unique operation named: updateUsingGET_4
2019-04-01 09:54:50 -Generating unique operation named: updateUsingHEAD_4
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPOST_5
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPUT_4
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPATCH_4
2019-04-01 09:54:51 -Generating unique operation named: updateUsingDELETE_4
2019-04-01 09:54:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-01 09:54:51 -Generating unique operation named: updateUsingTRACE_4
2019-04-01 09:54:51 -Generating unique operation named: editUsingGET_6
2019-04-01 09:54:51 -Generating unique operation named: listUsingGET_6
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPOST_6
2019-04-01 09:54:51 -Generating unique operation named: addUsingGET_6
2019-04-01 09:54:51 -Generating unique operation named: editUsingGET_7
2019-04-01 09:54:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-01 09:54:51 -Generating unique operation named: listUsingGET_7
2019-04-01 09:54:51 -Generating unique operation named: removeUsingPOST_12
2019-04-01 09:54:51 -Generating unique operation named: removeUsingPOST_13
2019-04-01 09:54:51 -Generating unique operation named: saveUsingPOST_6
2019-04-01 09:54:51 -Generating unique operation named: updateUsingGET_5
2019-04-01 09:54:51 -Generating unique operation named: updateUsingHEAD_5
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPOST_7
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPUT_5
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPATCH_5
2019-04-01 09:54:51 -Generating unique operation named: updateUsingDELETE_5
2019-04-01 09:54:51 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-01 09:54:51 -Generating unique operation named: updateUsingTRACE_5
2019-04-01 09:54:51 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-01 09:54:51 -Generating unique operation named: addUsingGET_7
2019-04-01 09:54:51 -Generating unique operation named: editUsingGET_8
2019-04-01 09:54:51 -Generating unique operation named: listUsingGET_8
2019-04-01 09:54:51 -Generating unique operation named: removeUsingPOST_14
2019-04-01 09:54:51 -Generating unique operation named: removeUsingPOST_15
2019-04-01 09:54:51 -Generating unique operation named: saveUsingPOST_7
2019-04-01 09:54:51 -Generating unique operation named: updateUsingGET_6
2019-04-01 09:54:51 -Generating unique operation named: updateUsingHEAD_6
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPOST_8
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPUT_6
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPATCH_6
2019-04-01 09:54:51 -Generating unique operation named: updateUsingDELETE_6
2019-04-01 09:54:51 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-01 09:54:51 -Generating unique operation named: updateUsingTRACE_6
2019-04-01 09:54:51 -Generating unique operation named: addUsingGET_8
2019-04-01 09:54:51 -Generating unique operation named: editUsingGET_9
2019-04-01 09:54:51 -Generating unique operation named: listUsingGET_9
2019-04-01 09:54:51 -Generating unique operation named: removeUsingPOST_16
2019-04-01 09:54:51 -Generating unique operation named: removeUsingPOST_17
2019-04-01 09:54:51 -Generating unique operation named: saveUsingPOST_8
2019-04-01 09:54:51 -Generating unique operation named: updateUsingGET_7
2019-04-01 09:54:51 -Generating unique operation named: updateUsingHEAD_7
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPOST_9
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPUT_7
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPATCH_7
2019-04-01 09:54:51 -Generating unique operation named: updateUsingDELETE_7
2019-04-01 09:54:51 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-01 09:54:51 -Generating unique operation named: updateUsingTRACE_7
2019-04-01 09:54:51 -Generating unique operation named: addUsingGET_9
2019-04-01 09:54:51 -Generating unique operation named: editUsingGET_10
2019-04-01 09:54:51 -Generating unique operation named: infoUsingGET_1
2019-04-01 09:54:51 -Generating unique operation named: infoUsingHEAD_1
2019-04-01 09:54:51 -Generating unique operation named: infoUsingPOST_1
2019-04-01 09:54:51 -Generating unique operation named: infoUsingPUT_1
2019-04-01 09:54:51 -Generating unique operation named: infoUsingPATCH_1
2019-04-01 09:54:51 -Generating unique operation named: infoUsingDELETE_1
2019-04-01 09:54:51 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-01 09:54:51 -Generating unique operation named: infoUsingTRACE_1
2019-04-01 09:54:51 -Generating unique operation named: listUsingGET_10
2019-04-01 09:54:51 -Generating unique operation named: removeUsingPOST_18
2019-04-01 09:54:51 -Generating unique operation named: removeUsingPOST_19
2019-04-01 09:54:51 -Generating unique operation named: saveUsingPOST_9
2019-04-01 09:54:51 -Generating unique operation named: updateUsingPOST_10
2019-04-01 09:54:51 -Generating unique operation named: listUsingGET_11
2019-04-01 09:54:51 -Generating unique operation named: removeUsingPOST_20
2019-04-01 09:54:51 -Generating unique operation named: welcomeUsingGET_1
2019-04-01 09:54:51 -Generating unique operation named: addUsingGET_10
2019-04-01 09:54:51 -Generating unique operation named: editUsingGET_11
2019-04-01 09:54:51 -Generating unique operation named: listUsingGET_12
2019-04-01 09:54:52 -Generating unique operation named: removeUsingPOST_21
2019-04-01 09:54:52 -Generating unique operation named: saveUsingPOST_10
2019-04-01 09:54:52 -Generating unique operation named: treeUsingGET_1
2019-04-01 09:54:52 -Generating unique operation named: treeUsingGET_2
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPOST_11
2019-04-01 09:54:52 -Generating unique operation named: addUsingGET_11
2019-04-01 09:54:52 -Generating unique operation named: editUsingGET_12
2019-04-01 09:54:52 -Generating unique operation named: listUsingGET_13
2019-04-01 09:54:52 -Generating unique operation named: removeUsingPOST_22
2019-04-01 09:54:52 -Generating unique operation named: removeUsingPOST_23
2019-04-01 09:54:52 -Generating unique operation named: saveUsingPOST_11
2019-04-01 09:54:52 -Generating unique operation named: updateUsingGET_8
2019-04-01 09:54:52 -Generating unique operation named: updateUsingHEAD_8
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPOST_12
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPUT_8
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPATCH_8
2019-04-01 09:54:52 -Generating unique operation named: updateUsingDELETE_8
2019-04-01 09:54:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-01 09:54:52 -Generating unique operation named: updateUsingTRACE_8
2019-04-01 09:54:52 -Generating unique operation named: addUsingGET_12
2019-04-01 09:54:52 -Generating unique operation named: editUsingGET_13
2019-04-01 09:54:52 -Generating unique operation named: listUsingGET_14
2019-04-01 09:54:52 -Generating unique operation named: removeUsingPOST_24
2019-04-01 09:54:52 -Generating unique operation named: removeUsingPOST_25
2019-04-01 09:54:52 -Generating unique operation named: saveUsingPOST_12
2019-04-01 09:54:52 -Generating unique operation named: updateUsingGET_9
2019-04-01 09:54:52 -Generating unique operation named: updateUsingHEAD_9
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPOST_13
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPUT_9
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPATCH_9
2019-04-01 09:54:52 -Generating unique operation named: updateUsingDELETE_9
2019-04-01 09:54:52 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-01 09:54:52 -Generating unique operation named: updateUsingTRACE_9
2019-04-01 09:54:52 -Generating unique operation named: addUsingGET_13
2019-04-01 09:54:52 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-01 09:54:52 -Generating unique operation named: editUsingGET_14
2019-04-01 09:54:52 -Generating unique operation named: listUsingGET_15
2019-04-01 09:54:52 -Generating unique operation named: saveUsingPOST_13
2019-04-01 09:54:52 -Generating unique operation named: saveUsingPOST_14
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPOST_14
2019-04-01 09:54:52 -Generating unique operation named: listUsingGET_16
2019-04-01 09:54:52 -Generating unique operation named: listUsingHEAD_1
2019-04-01 09:54:52 -Generating unique operation named: listUsingPOST_1
2019-04-01 09:54:52 -Generating unique operation named: listUsingPUT_1
2019-04-01 09:54:52 -Generating unique operation named: listUsingPATCH_1
2019-04-01 09:54:52 -Generating unique operation named: listUsingDELETE_1
2019-04-01 09:54:52 -Generating unique operation named: listUsingOPTIONS_1
2019-04-01 09:54:52 -Generating unique operation named: listUsingTRACE_1
2019-04-01 09:54:52 -Generating unique operation named: addUsingGET_14
2019-04-01 09:54:52 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-01 09:54:52 -Generating unique operation named: editUsingGET_15
2019-04-01 09:54:52 -Generating unique operation named: listUsingGET_17
2019-04-01 09:54:52 -Generating unique operation named: removeUsingPOST_26
2019-04-01 09:54:52 -Generating unique operation named: saveUsingPOST_15
2019-04-01 09:54:52 -Generating unique operation named: treeUsingGET_3
2019-04-01 09:54:52 -Generating unique operation named: treeViewUsingGET_1
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPOST_15
2019-04-01 09:54:52 -Generating unique operation named: addUsingGET_15
2019-04-01 09:54:52 -Generating unique operation named: editUsingGET_16
2019-04-01 09:54:52 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-01 09:54:52 -Generating unique operation named: listUsingGET_18
2019-04-01 09:54:52 -Generating unique operation named: removeUsingPOST_27
2019-04-01 09:54:52 -Generating unique operation named: removeUsingPOST_28
2019-04-01 09:54:52 -Generating unique operation named: saveUsingPOST_16
2019-04-01 09:54:52 -Generating unique operation named: updateUsingGET_10
2019-04-01 09:54:52 -Generating unique operation named: updateUsingHEAD_10
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPOST_16
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPUT_10
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPATCH_10
2019-04-01 09:54:52 -Generating unique operation named: updateUsingDELETE_10
2019-04-01 09:54:52 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-01 09:54:52 -Generating unique operation named: updateUsingTRACE_10
2019-04-01 09:54:52 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-01 09:54:52 -Generating unique operation named: addUsingGET_16
2019-04-01 09:54:52 -Generating unique operation named: editUsingGET_17
2019-04-01 09:54:52 -Generating unique operation named: listUsingGET_19
2019-04-01 09:54:52 -Generating unique operation named: removeUsingPOST_29
2019-04-01 09:54:52 -Generating unique operation named: removeUsingPOST_30
2019-04-01 09:54:52 -Generating unique operation named: saveUsingPOST_17
2019-04-01 09:54:52 -Generating unique operation named: updateUsingGET_11
2019-04-01 09:54:52 -Generating unique operation named: updateUsingHEAD_11
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPOST_17
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPUT_11
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPATCH_11
2019-04-01 09:54:52 -Generating unique operation named: updateUsingDELETE_11
2019-04-01 09:54:52 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-01 09:54:52 -Generating unique operation named: updateUsingTRACE_11
2019-04-01 09:54:52 -Generating unique operation named: addUsingGET_17
2019-04-01 09:54:52 -Generating unique operation named: editUsingGET_18
2019-04-01 09:54:52 -Generating unique operation named: listUsingGET_20
2019-04-01 09:54:52 -Generating unique operation named: removeUsingPOST_31
2019-04-01 09:54:52 -Generating unique operation named: removeUsingPOST_32
2019-04-01 09:54:52 -Generating unique operation named: saveUsingPOST_18
2019-04-01 09:54:52 -Generating unique operation named: updateUsingGET_12
2019-04-01 09:54:52 -Generating unique operation named: updateUsingHEAD_12
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPOST_18
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPUT_12
2019-04-01 09:54:52 -Generating unique operation named: updateUsingPATCH_12
2019-04-01 09:54:53 -Generating unique operation named: updateUsingDELETE_12
2019-04-01 09:54:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-01 09:54:53 -Generating unique operation named: updateUsingTRACE_12
2019-04-01 09:54:53 -Starting Quartz Scheduler now
2019-04-01 09:54:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-01 09:54:53 -Starting...
2019-04-01 09:54:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 09:54:53 -Started.
2019-04-01 09:54:53 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-01 09:54:53 -Using a shared selector for servlet write/read
2019-04-01 09:54:53 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-01 09:54:53 -Started BootdoApplication in 38.502 seconds (JVM running for 40.185)
2019-04-01 09:54:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-01 09:54:54 -==> Parameters: 
2019-04-01 09:54:54 -<==      Total: 1
2019-04-01 09:54:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-01 09:54:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-01 09:54:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 75 ms
2019-04-01 09:54:59 -Enabling session validation scheduler...
2019-04-01 09:55:00 -请求地址 : http://localhost:8081/login;JSESSIONID=e06f2470-d696-4e66-9d56-471583b19778
2019-04-01 09:55:00 -HTTP METHOD : GET
2019-04-01 09:55:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 09:55:00 -参数 : [{}]
2019-04-01 09:55:00 -耗时 : 8
2019-04-01 09:55:00 -返回值 : login
2019-04-01 09:55:03 -请求地址 : http://localhost:8081/getVerify
2019-04-01 09:55:03 -HTTP METHOD : GET
2019-04-01 09:55:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 09:55:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c9a292c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@825a49d]
2019-04-01 09:55:18 -7181
2019-04-01 09:55:18 -耗时 : 15855
2019-04-01 09:55:18 -返回值 : null
2019-04-01 09:55:26 -请求地址 : http://localhost:8081/login
2019-04-01 09:55:26 -HTTP METHOD : POST
2019-04-01 09:55:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-01 09:55:26 -参数 : [admin, 111111, 7181, org.apache.shiro.web.servlet.ShiroHttpServletRequest@e6e0dc7]
2019-04-01 09:55:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-01 09:55:27 -==> Parameters: admin(String)
2019-04-01 09:55:27 -<==      Total: 1
2019-04-01 09:55:27 -耗时 : 766
2019-04-01 09:55:27 -返回值 : {msg=操作成功, code=0}
2019-04-01 09:55:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-01 09:55:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:55:27 -==> Parameters: 1(Long), admin(String), 登录(String), 766(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-01 09:55:27.893(Timestamp)
2019-04-01 09:55:28 -请求地址 : http://localhost:8081/index
2019-04-01 09:55:28 -HTTP METHOD : GET
2019-04-01 09:55:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:55:28 -参数 : [{}]
2019-04-01 09:55:28 -<==    Updates: 1
2019-04-01 09:55:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:55:29 -==> Parameters: 1(Long)
2019-04-01 09:55:29 -<==      Total: 46
2019-04-01 09:55:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:55:29 -==> Parameters: 138(Long)
2019-04-01 09:55:29 -<==      Total: 1
2019-04-01 09:55:29 -耗时 : 1358
2019-04-01 09:55:29 -返回值 : index_v1
2019-04-01 09:55:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:55:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1358(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:55:29.646(Timestamp)
2019-04-01 09:55:29 -<==    Updates: 1
2019-04-01 09:55:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:55:30 -HTTP METHOD : GET
2019-04-01 09:55:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:55:30 -参数 : []
2019-04-01 09:55:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:55:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:55:30 -请求地址 : http://localhost:8081/main
2019-04-01 09:55:30 -HTTP METHOD : GET
2019-04-01 09:55:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:55:30 -参数 : []
2019-04-01 09:55:30 -耗时 : 0
2019-04-01 09:55:30 -返回值 : main
2019-04-01 09:55:30 -请求地址 : http://localhost:8081/main
2019-04-01 09:55:30 -HTTP METHOD : GET
2019-04-01 09:55:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:55:30 -参数 : []
2019-04-01 09:55:30 -耗时 : 1
2019-04-01 09:55:30 -返回值 : main
2019-04-01 09:55:30 -<==      Total: 0
2019-04-01 09:55:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:55:30 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:55:30 -<==      Total: 1
2019-04-01 09:55:30 -耗时 : 497
2019-04-01 09:55:30 -返回值 : com.bootdo.common.utils.PageUtils@557c1409
2019-04-01 09:55:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 09:55:43 -==> Parameters: 1(Long)
2019-04-01 09:55:43 -<==      Total: 90
2019-04-01 09:55:43 -请求地址 : http://localhost:8081/charts/countDD
2019-04-01 09:55:43 -HTTP METHOD : GET
2019-04-01 09:55:43 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-01 09:55:43 -参数 : []
2019-04-01 09:55:43 -耗时 : 0
2019-04-01 09:55:43 -返回值 : charts/countDD
2019-04-01 09:55:44 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-04-01 09:55:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:55:44 -HTTP METHOD : GET
2019-04-01 09:55:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:55:44 -参数 : [userType]
2019-04-01 09:55:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:55:44 -==> Parameters: userType(String)
2019-04-01 09:55:44 -<==      Total: 2
2019-04-01 09:55:44 -耗时 : 97
2019-04-01 09:55:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:55:46 -请求地址 : http://localhost:8081/print/print
2019-04-01 09:55:46 -HTTP METHOD : GET
2019-04-01 09:55:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 09:55:46 -参数 : []
2019-04-01 09:55:46 -耗时 : 1
2019-04-01 09:55:46 -返回值 : print/print/print
2019-04-01 09:55:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:55:47 -HTTP METHOD : GET
2019-04-01 09:55:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:55:47 -参数 : [userType]
2019-04-01 09:55:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:55:47 -==> Parameters: userType(String)
2019-04-01 09:55:47 -<==      Total: 2
2019-04-01 09:55:47 -耗时 : 5
2019-04-01 09:55:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:55:47 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:55:47 -HTTP METHOD : GET
2019-04-01 09:55:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:55:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-04-01 09:58:13 -请求地址 : http://localhost:8081/index
2019-04-01 09:58:13 -HTTP METHOD : GET
2019-04-01 09:58:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:58:13 -参数 : [{}]
2019-04-01 09:58:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:58:13 -==> Parameters: 1(Long)
2019-04-01 09:58:13 -<==      Total: 46
2019-04-01 09:58:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:58:13 -==> Parameters: 138(Long)
2019-04-01 09:58:13 -<==      Total: 1
2019-04-01 09:58:13 -耗时 : 103
2019-04-01 09:58:13 -返回值 : index_v1
2019-04-01 09:58:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:58:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 103(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:58:13.813(Timestamp)
2019-04-01 09:58:13 -<==    Updates: 1
2019-04-01 09:58:14 -请求地址 : http://localhost:8081/main
2019-04-01 09:58:14 -HTTP METHOD : GET
2019-04-01 09:58:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:58:14 -参数 : []
2019-04-01 09:58:14 -耗时 : 1
2019-04-01 09:58:14 -返回值 : main
2019-04-01 09:58:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:58:14 -HTTP METHOD : GET
2019-04-01 09:58:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:58:14 -参数 : []
2019-04-01 09:58:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:58:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:58:14 -<==      Total: 0
2019-04-01 09:58:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:58:14 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:58:14 -<==      Total: 1
2019-04-01 09:58:14 -耗时 : 12
2019-04-01 09:58:14 -返回值 : com.bootdo.common.utils.PageUtils@51edffb2
2019-04-01 09:58:14 -请求地址 : http://localhost:8081/main
2019-04-01 09:58:14 -HTTP METHOD : GET
2019-04-01 09:58:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:58:14 -参数 : []
2019-04-01 09:58:14 -耗时 : 1
2019-04-01 09:58:14 -返回值 : main
2019-04-01 09:58:16 -请求地址 : http://localhost:8081/print/print
2019-04-01 09:58:16 -HTTP METHOD : GET
2019-04-01 09:58:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 09:58:16 -参数 : []
2019-04-01 09:58:16 -耗时 : 1
2019-04-01 09:58:16 -返回值 : print/print/print
2019-04-01 09:58:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:58:16 -HTTP METHOD : GET
2019-04-01 09:58:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:58:16 -参数 : [userType]
2019-04-01 09:58:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:58:16 -==> Parameters: userType(String)
2019-04-01 09:58:16 -<==      Total: 2
2019-04-01 09:58:16 -耗时 : 6
2019-04-01 09:58:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:58:16 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:58:16 -HTTP METHOD : GET
2019-04-01 09:58:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:58:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-04-01 09:58:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 09:58:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 09:58:25 -<==      Total: 3
2019-04-01 09:58:30 -==>  Preparing: select count(*) from print 
2019-04-01 09:58:30 -==> Parameters: 
2019-04-01 09:58:30 -<==      Total: 1
2019-04-01 09:58:48 -请求地址 : http://localhost:8081/index
2019-04-01 09:58:48 -HTTP METHOD : GET
2019-04-01 09:58:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:58:48 -参数 : [{}]
2019-04-01 09:58:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:58:48 -==> Parameters: 1(Long)
2019-04-01 09:58:48 -<==      Total: 46
2019-04-01 09:58:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:58:48 -==> Parameters: 138(Long)
2019-04-01 09:58:48 -<==      Total: 1
2019-04-01 09:58:48 -耗时 : 32
2019-04-01 09:58:48 -返回值 : index_v1
2019-04-01 09:58:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:58:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:58:48.495(Timestamp)
2019-04-01 09:58:48 -请求地址 : http://localhost:8081/main
2019-04-01 09:58:48 -HTTP METHOD : GET
2019-04-01 09:58:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:58:48 -参数 : []
2019-04-01 09:58:48 -耗时 : 0
2019-04-01 09:58:48 -返回值 : main
2019-04-01 09:58:48 -<==    Updates: 1
2019-04-01 09:58:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:58:49 -HTTP METHOD : GET
2019-04-01 09:58:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:58:49 -参数 : []
2019-04-01 09:58:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:58:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:58:49 -<==      Total: 0
2019-04-01 09:58:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:58:49 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:58:49 -<==      Total: 1
2019-04-01 09:58:49 -耗时 : 19
2019-04-01 09:58:49 -返回值 : com.bootdo.common.utils.PageUtils@4cf442dc
2019-04-01 09:58:49 -请求地址 : http://localhost:8081/main
2019-04-01 09:58:49 -HTTP METHOD : GET
2019-04-01 09:58:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:58:49 -参数 : []
2019-04-01 09:58:49 -耗时 : 1
2019-04-01 09:58:49 -返回值 : main
2019-04-01 09:58:51 -请求地址 : http://localhost:8081/print/print
2019-04-01 09:58:51 -HTTP METHOD : GET
2019-04-01 09:58:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 09:58:51 -参数 : []
2019-04-01 09:58:51 -耗时 : 0
2019-04-01 09:58:51 -返回值 : print/print/print
2019-04-01 09:58:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:58:51 -HTTP METHOD : GET
2019-04-01 09:58:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:58:51 -参数 : [userType]
2019-04-01 09:58:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:58:51 -==> Parameters: userType(String)
2019-04-01 09:58:51 -<==      Total: 2
2019-04-01 09:58:51 -耗时 : 5
2019-04-01 09:58:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:58:51 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:58:51 -HTTP METHOD : GET
2019-04-01 09:58:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:58:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-04-01 09:59:03 -耗时 : 196439
2019-04-01 09:59:03 -返回值 : com.bootdo.common.utils.PageUtils@773f10cb
2019-04-01 09:59:16 -请求地址 : http://localhost:8081/index
2019-04-01 09:59:16 -HTTP METHOD : GET
2019-04-01 09:59:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 09:59:16 -参数 : [{}]
2019-04-01 09:59:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 09:59:16 -==> Parameters: 1(Long)
2019-04-01 09:59:16 -<==      Total: 46
2019-04-01 09:59:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 09:59:16 -==> Parameters: 138(Long)
2019-04-01 09:59:16 -<==      Total: 1
2019-04-01 09:59:16 -耗时 : 33
2019-04-01 09:59:16 -返回值 : index_v1
2019-04-01 09:59:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 09:59:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 09:59:16.495(Timestamp)
2019-04-01 09:59:16 -请求地址 : http://localhost:8081/main
2019-04-01 09:59:16 -HTTP METHOD : GET
2019-04-01 09:59:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:59:16 -参数 : []
2019-04-01 09:59:16 -耗时 : 0
2019-04-01 09:59:16 -返回值 : main
2019-04-01 09:59:16 -<==    Updates: 1
2019-04-01 09:59:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 09:59:16 -HTTP METHOD : GET
2019-04-01 09:59:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 09:59:16 -参数 : []
2019-04-01 09:59:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 09:59:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 09:59:16 -<==      Total: 0
2019-04-01 09:59:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 09:59:16 -==> Parameters: 1(Long), 0(String)
2019-04-01 09:59:16 -<==      Total: 1
2019-04-01 09:59:16 -耗时 : 10
2019-04-01 09:59:16 -返回值 : com.bootdo.common.utils.PageUtils@46b05f32
2019-04-01 09:59:16 -请求地址 : http://localhost:8081/main
2019-04-01 09:59:16 -HTTP METHOD : GET
2019-04-01 09:59:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 09:59:16 -参数 : []
2019-04-01 09:59:16 -耗时 : 1
2019-04-01 09:59:16 -返回值 : main
2019-04-01 09:59:19 -请求地址 : http://localhost:8081/print/print
2019-04-01 09:59:19 -HTTP METHOD : GET
2019-04-01 09:59:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 09:59:19 -参数 : []
2019-04-01 09:59:19 -耗时 : 0
2019-04-01 09:59:19 -返回值 : print/print/print
2019-04-01 09:59:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 09:59:20 -HTTP METHOD : GET
2019-04-01 09:59:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 09:59:20 -参数 : [userType]
2019-04-01 09:59:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 09:59:20 -==> Parameters: userType(String)
2019-04-01 09:59:20 -<==      Total: 2
2019-04-01 09:59:20 -耗时 : 4
2019-04-01 09:59:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 09:59:20 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:59:20 -HTTP METHOD : GET
2019-04-01 09:59:20 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:59:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-04-01 09:59:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 09:59:20 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 09:59:20 -<==      Total: 3
2019-04-01 09:59:20 -==>  Preparing: select count(*) from print 
2019-04-01 09:59:20 -==> Parameters: 
2019-04-01 09:59:20 -<==      Total: 1
2019-04-01 09:59:20 -耗时 : 15
2019-04-01 09:59:20 -返回值 : com.bootdo.common.utils.PageUtils@402e080
2019-04-01 09:59:40 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 09:59:40 -HTTP METHOD : GET
2019-04-01 09:59:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 09:59:40 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-02-26, type=A}]
2019-04-01 10:03:59 -请求地址 : http://localhost:8081/index
2019-04-01 10:03:59 -HTTP METHOD : GET
2019-04-01 10:03:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 10:03:59 -参数 : [{}]
2019-04-01 10:03:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 10:03:59 -==> Parameters: 1(Long)
2019-04-01 10:03:59 -<==      Total: 46
2019-04-01 10:03:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 10:03:59 -==> Parameters: 138(Long)
2019-04-01 10:03:59 -<==      Total: 1
2019-04-01 10:03:59 -耗时 : 33
2019-04-01 10:03:59 -返回值 : index_v1
2019-04-01 10:03:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 10:03:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 10:03:59.669(Timestamp)
2019-04-01 10:03:59 -请求地址 : http://localhost:8081/main
2019-04-01 10:03:59 -HTTP METHOD : GET
2019-04-01 10:03:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:03:59 -参数 : []
2019-04-01 10:03:59 -耗时 : 1
2019-04-01 10:03:59 -返回值 : main
2019-04-01 10:03:59 -<==    Updates: 1
2019-04-01 10:03:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 10:03:59 -HTTP METHOD : GET
2019-04-01 10:03:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 10:03:59 -参数 : []
2019-04-01 10:03:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 10:03:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 10:03:59 -<==      Total: 0
2019-04-01 10:03:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 10:03:59 -==> Parameters: 1(Long), 0(String)
2019-04-01 10:03:59 -<==      Total: 1
2019-04-01 10:03:59 -耗时 : 18
2019-04-01 10:03:59 -返回值 : com.bootdo.common.utils.PageUtils@ae3c8fa
2019-04-01 10:04:00 -请求地址 : http://localhost:8081/main
2019-04-01 10:04:00 -HTTP METHOD : GET
2019-04-01 10:04:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:04:00 -参数 : []
2019-04-01 10:04:00 -耗时 : 1
2019-04-01 10:04:00 -返回值 : main
2019-04-01 10:04:05 -请求地址 : http://localhost:8081/print/print
2019-04-01 10:04:05 -HTTP METHOD : GET
2019-04-01 10:04:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 10:04:05 -参数 : []
2019-04-01 10:04:05 -耗时 : 1
2019-04-01 10:04:05 -返回值 : print/print/print
2019-04-01 10:04:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 10:04:05 -HTTP METHOD : GET
2019-04-01 10:04:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 10:04:05 -参数 : [userType]
2019-04-01 10:04:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 10:04:05 -==> Parameters: userType(String)
2019-04-01 10:04:05 -<==      Total: 2
2019-04-01 10:04:05 -耗时 : 4
2019-04-01 10:04:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 10:04:05 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:04:05 -HTTP METHOD : GET
2019-04-01 10:04:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:04:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-04-01 10:04:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 10:04:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 10:04:05 -<==      Total: 3
2019-04-01 10:04:05 -==>  Preparing: select count(*) from print 
2019-04-01 10:04:05 -==> Parameters: 
2019-04-01 10:04:05 -<==      Total: 1
2019-04-01 10:04:05 -耗时 : 11
2019-04-01 10:04:05 -返回值 : com.bootdo.common.utils.PageUtils@36034e31
2019-04-01 10:04:39 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-04-01 10:04:39 -HTTP METHOD : GET
2019-04-01 10:04:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-04-01 10:04:39 -参数 : [1, {}]
2019-04-01 10:04:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-01 10:04:39 -==> Parameters: 1(Long)
2019-04-01 10:04:39 -<==      Total: 1
2019-04-01 10:04:39 -耗时 : 9
2019-04-01 10:04:39 -返回值 : print/print/printEdit
2019-04-01 10:06:26 -请求地址 : http://localhost:8081/index
2019-04-01 10:06:26 -HTTP METHOD : GET
2019-04-01 10:06:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 10:06:26 -参数 : [{}]
2019-04-01 10:06:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 10:06:26 -==> Parameters: 1(Long)
2019-04-01 10:06:26 -<==      Total: 46
2019-04-01 10:06:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 10:06:26 -==> Parameters: 138(Long)
2019-04-01 10:06:26 -<==      Total: 1
2019-04-01 10:06:26 -耗时 : 101
2019-04-01 10:06:26 -返回值 : index_v1
2019-04-01 10:06:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 10:06:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 101(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 10:06:26.751(Timestamp)
2019-04-01 10:06:27 -<==    Updates: 1
2019-04-01 10:06:27 -请求地址 : http://localhost:8081/main
2019-04-01 10:06:27 -HTTP METHOD : GET
2019-04-01 10:06:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:06:27 -参数 : []
2019-04-01 10:06:27 -耗时 : 1
2019-04-01 10:06:27 -返回值 : main
2019-04-01 10:06:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 10:06:27 -HTTP METHOD : GET
2019-04-01 10:06:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 10:06:27 -参数 : []
2019-04-01 10:06:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 10:06:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 10:06:27 -<==      Total: 0
2019-04-01 10:06:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 10:06:27 -==> Parameters: 1(Long), 0(String)
2019-04-01 10:06:27 -<==      Total: 1
2019-04-01 10:06:27 -耗时 : 9
2019-04-01 10:06:27 -返回值 : com.bootdo.common.utils.PageUtils@5ba56531
2019-04-01 10:06:27 -请求地址 : http://localhost:8081/main
2019-04-01 10:06:27 -HTTP METHOD : GET
2019-04-01 10:06:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:06:27 -参数 : []
2019-04-01 10:06:27 -耗时 : 2
2019-04-01 10:06:27 -返回值 : main
2019-04-01 10:06:30 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 10:06:30 -==> Parameters: 1(Long)
2019-04-01 10:06:30 -<==      Total: 90
2019-04-01 10:06:30 -请求地址 : http://localhost:8081/print/print
2019-04-01 10:06:30 -HTTP METHOD : GET
2019-04-01 10:06:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 10:06:30 -参数 : []
2019-04-01 10:06:30 -耗时 : 0
2019-04-01 10:06:30 -返回值 : print/print/print
2019-04-01 10:06:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 10:06:30 -HTTP METHOD : GET
2019-04-01 10:06:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 10:06:30 -参数 : [userType]
2019-04-01 10:06:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 10:06:30 -==> Parameters: userType(String)
2019-04-01 10:06:30 -<==      Total: 2
2019-04-01 10:06:30 -耗时 : 4
2019-04-01 10:06:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 10:06:30 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:06:30 -HTTP METHOD : GET
2019-04-01 10:06:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:06:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-04-01 10:06:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 10:06:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 10:06:30 -<==      Total: 3
2019-04-01 10:06:30 -==>  Preparing: select count(*) from print 
2019-04-01 10:06:30 -==> Parameters: 
2019-04-01 10:06:30 -<==      Total: 1
2019-04-01 10:06:30 -耗时 : 11
2019-04-01 10:06:30 -返回值 : com.bootdo.common.utils.PageUtils@2300aa85
2019-04-01 10:06:32 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-04-01 10:06:32 -HTTP METHOD : GET
2019-04-01 10:06:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-04-01 10:06:32 -参数 : [1, {}]
2019-04-01 10:06:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-01 10:06:32 -==> Parameters: 1(Long)
2019-04-01 10:06:32 -<==      Total: 1
2019-04-01 10:06:32 -耗时 : 6
2019-04-01 10:06:32 -返回值 : print/print/printEdit
2019-04-01 10:07:31 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:07:31 -HTTP METHOD : GET
2019-04-01 10:07:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:07:31 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-04-10, type=A}]
2019-04-01 10:07:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 10:07:31 -==> Parameters: A(String), 2019-04-10(String), 2019-04-10 00:00:00(String), 2019-04-10 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 10:07:31 -<==      Total: 0
2019-04-01 10:07:31 -==>  Preparing: select count(*) from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 10:07:31 -==> Parameters: A(String), 2019-04-10(String), 2019-04-10 00:00:00(String), 2019-04-10 23:59:59(String)
2019-04-01 10:07:31 -<==      Total: 1
2019-04-01 10:07:31 -耗时 : 27
2019-04-01 10:07:31 -返回值 : com.bootdo.common.utils.PageUtils@751687b4
2019-04-01 10:07:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 10:07:31 -HTTP METHOD : GET
2019-04-01 10:07:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 10:07:31 -参数 : []
2019-04-01 10:07:31 -耗时 : 0
2019-04-01 10:07:31 -返回值 : system/dept/deptTree
2019-04-01 10:07:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 10:07:32 -HTTP METHOD : GET
2019-04-01 10:07:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 10:07:32 -参数 : []
2019-04-01 10:07:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 10:07:32 -==> Parameters: 
2019-04-01 10:07:32 -<==      Total: 3
2019-04-01 10:07:32 -耗时 : 74
2019-04-01 10:07:32 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 10:07:36 -请求地址 : http://localhost:8081/index
2019-04-01 10:07:36 -HTTP METHOD : GET
2019-04-01 10:07:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 10:07:36 -参数 : [{}]
2019-04-01 10:07:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 10:07:36 -==> Parameters: 1(Long)
2019-04-01 10:07:36 -<==      Total: 46
2019-04-01 10:07:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 10:07:36 -==> Parameters: 138(Long)
2019-04-01 10:07:36 -<==      Total: 1
2019-04-01 10:07:36 -耗时 : 24
2019-04-01 10:07:36 -返回值 : index_v1
2019-04-01 10:07:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 10:07:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 10:07:36.218(Timestamp)
2019-04-01 10:07:36 -请求地址 : http://localhost:8081/main
2019-04-01 10:07:36 -HTTP METHOD : GET
2019-04-01 10:07:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:07:36 -参数 : []
2019-04-01 10:07:36 -耗时 : 1
2019-04-01 10:07:36 -返回值 : main
2019-04-01 10:07:36 -<==    Updates: 1
2019-04-01 10:07:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 10:07:36 -HTTP METHOD : GET
2019-04-01 10:07:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 10:07:36 -参数 : []
2019-04-01 10:07:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 10:07:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 10:07:36 -<==      Total: 0
2019-04-01 10:07:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 10:07:36 -==> Parameters: 1(Long), 0(String)
2019-04-01 10:07:36 -<==      Total: 1
2019-04-01 10:07:36 -耗时 : 28
2019-04-01 10:07:36 -返回值 : com.bootdo.common.utils.PageUtils@4d3d9e1a
2019-04-01 10:07:36 -请求地址 : http://localhost:8081/main
2019-04-01 10:07:36 -HTTP METHOD : GET
2019-04-01 10:07:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:07:36 -参数 : []
2019-04-01 10:07:36 -耗时 : 1
2019-04-01 10:07:36 -返回值 : main
2019-04-01 10:07:39 -请求地址 : http://localhost:8081/print/print
2019-04-01 10:07:39 -HTTP METHOD : GET
2019-04-01 10:07:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 10:07:39 -参数 : []
2019-04-01 10:07:39 -耗时 : 0
2019-04-01 10:07:39 -返回值 : print/print/print
2019-04-01 10:07:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 10:07:39 -HTTP METHOD : GET
2019-04-01 10:07:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 10:07:39 -参数 : [userType]
2019-04-01 10:07:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 10:07:39 -==> Parameters: userType(String)
2019-04-01 10:07:39 -<==      Total: 2
2019-04-01 10:07:39 -耗时 : 10
2019-04-01 10:07:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 10:07:39 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:07:39 -HTTP METHOD : GET
2019-04-01 10:07:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:07:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-04-01 10:07:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 10:07:39 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 10:07:39 -<==      Total: 3
2019-04-01 10:07:39 -==>  Preparing: select count(*) from print 
2019-04-01 10:07:39 -==> Parameters: 
2019-04-01 10:07:39 -<==      Total: 1
2019-04-01 10:07:39 -耗时 : 25
2019-04-01 10:07:39 -返回值 : com.bootdo.common.utils.PageUtils@14a81f56
2019-04-01 10:07:41 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:07:41 -HTTP METHOD : GET
2019-04-01 10:07:41 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:07:41 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=, type=A}]
2019-04-01 10:07:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? order by id asc limit ?, ? 
2019-04-01 10:07:41 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-04-01 10:07:41 -<==      Total: 2
2019-04-01 10:07:41 -==>  Preparing: select count(*) from print WHERE user_type = ? 
2019-04-01 10:07:41 -==> Parameters: A(String)
2019-04-01 10:07:41 -<==      Total: 1
2019-04-01 10:07:41 -耗时 : 48
2019-04-01 10:07:41 -返回值 : com.bootdo.common.utils.PageUtils@36cb74d7
2019-04-01 10:07:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 10:07:46 -HTTP METHOD : GET
2019-04-01 10:07:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 10:07:46 -参数 : []
2019-04-01 10:07:46 -耗时 : 2
2019-04-01 10:07:46 -返回值 : system/dept/deptTree
2019-04-01 10:07:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 10:07:46 -HTTP METHOD : GET
2019-04-01 10:07:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 10:07:46 -参数 : []
2019-04-01 10:07:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 10:07:46 -==> Parameters: 
2019-04-01 10:07:46 -<==      Total: 3
2019-04-01 10:07:46 -耗时 : 7
2019-04-01 10:07:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 10:07:48 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:07:48 -HTTP METHOD : GET
2019-04-01 10:07:48 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:07:48 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=}]
2019-04-01 10:07:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-04-01 10:07:48 -==> Parameters: A(String), 2(String), 0(Integer), 10(Integer)
2019-04-01 10:07:48 -<==      Total: 2
2019-04-01 10:07:48 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? 
2019-04-01 10:07:48 -==> Parameters: A(String), 2(String)
2019-04-01 10:07:48 -<==      Total: 1
2019-04-01 10:07:48 -耗时 : 15
2019-04-01 10:07:48 -返回值 : com.bootdo.common.utils.PageUtils@69dcd34
2019-04-01 10:07:49 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:07:49 -HTTP METHOD : GET
2019-04-01 10:07:49 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:07:49 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=}]
2019-04-01 10:07:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-04-01 10:07:49 -==> Parameters: A(String), 2(String), 0(Integer), 10(Integer)
2019-04-01 10:07:49 -<==      Total: 2
2019-04-01 10:07:49 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? 
2019-04-01 10:07:49 -==> Parameters: A(String), 2(String)
2019-04-01 10:07:49 -<==      Total: 1
2019-04-01 10:07:49 -耗时 : 9
2019-04-01 10:07:49 -返回值 : com.bootdo.common.utils.PageUtils@31856456
2019-04-01 10:07:50 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:07:50 -HTTP METHOD : GET
2019-04-01 10:07:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:07:50 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=}]
2019-04-01 10:07:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-04-01 10:07:50 -==> Parameters: A(String), 2(String), 0(Integer), 10(Integer)
2019-04-01 10:07:50 -<==      Total: 2
2019-04-01 10:07:50 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? 
2019-04-01 10:07:50 -==> Parameters: A(String), 2(String)
2019-04-01 10:07:50 -<==      Total: 1
2019-04-01 10:07:50 -耗时 : 8
2019-04-01 10:07:50 -返回值 : com.bootdo.common.utils.PageUtils@51d41316
2019-04-01 10:07:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 10:07:50 -HTTP METHOD : GET
2019-04-01 10:07:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 10:07:50 -参数 : []
2019-04-01 10:07:50 -耗时 : 1
2019-04-01 10:07:50 -返回值 : system/dept/deptTree
2019-04-01 10:07:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 10:07:51 -HTTP METHOD : GET
2019-04-01 10:07:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 10:07:51 -参数 : []
2019-04-01 10:07:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 10:07:51 -==> Parameters: 
2019-04-01 10:07:51 -<==      Total: 3
2019-04-01 10:07:51 -耗时 : 6
2019-04-01 10:07:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 10:07:52 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:07:52 -HTTP METHOD : GET
2019-04-01 10:07:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:07:52 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, createTime=}]
2019-04-01 10:07:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-04-01 10:07:52 -==> Parameters: A(String), 3(String), 0(Integer), 10(Integer)
2019-04-01 10:07:52 -<==      Total: 0
2019-04-01 10:07:52 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? 
2019-04-01 10:07:52 -==> Parameters: A(String), 3(String)
2019-04-01 10:07:52 -<==      Total: 1
2019-04-01 10:07:52 -耗时 : 7
2019-04-01 10:07:52 -返回值 : com.bootdo.common.utils.PageUtils@643b832
2019-04-01 10:07:53 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:07:53 -HTTP METHOD : GET
2019-04-01 10:07:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:07:53 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, createTime=}]
2019-04-01 10:07:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-04-01 10:07:53 -==> Parameters: A(String), 3(String), 0(Integer), 10(Integer)
2019-04-01 10:07:53 -<==      Total: 0
2019-04-01 10:07:53 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? 
2019-04-01 10:07:53 -==> Parameters: A(String), 3(String)
2019-04-01 10:07:53 -<==      Total: 1
2019-04-01 10:07:53 -耗时 : 6
2019-04-01 10:07:53 -返回值 : com.bootdo.common.utils.PageUtils@1e506b71
2019-04-01 10:07:54 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:07:54 -HTTP METHOD : GET
2019-04-01 10:07:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:07:54 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, createTime=}]
2019-04-01 10:07:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-04-01 10:07:54 -==> Parameters: A(String), 3(String), 0(Integer), 10(Integer)
2019-04-01 10:07:54 -<==      Total: 0
2019-04-01 10:07:54 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? 
2019-04-01 10:07:54 -==> Parameters: A(String), 3(String)
2019-04-01 10:07:54 -<==      Total: 1
2019-04-01 10:07:54 -耗时 : 8
2019-04-01 10:07:54 -返回值 : com.bootdo.common.utils.PageUtils@7940665c
2019-04-01 10:07:54 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:07:54 -HTTP METHOD : GET
2019-04-01 10:07:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:07:54 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, createTime=}]
2019-04-01 10:07:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-04-01 10:07:54 -==> Parameters: A(String), 3(String), 0(Integer), 10(Integer)
2019-04-01 10:07:54 -<==      Total: 0
2019-04-01 10:07:54 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? 
2019-04-01 10:07:54 -==> Parameters: A(String), 3(String)
2019-04-01 10:07:54 -<==      Total: 1
2019-04-01 10:07:54 -耗时 : 12
2019-04-01 10:07:54 -返回值 : com.bootdo.common.utils.PageUtils@285e3edb
2019-04-01 10:07:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 10:07:55 -HTTP METHOD : GET
2019-04-01 10:07:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 10:07:55 -参数 : []
2019-04-01 10:07:55 -耗时 : 1
2019-04-01 10:07:55 -返回值 : system/dept/deptTree
2019-04-01 10:07:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 10:07:55 -HTTP METHOD : GET
2019-04-01 10:07:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 10:07:55 -参数 : []
2019-04-01 10:07:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 10:07:55 -==> Parameters: 
2019-04-01 10:07:55 -<==      Total: 3
2019-04-01 10:07:55 -耗时 : 3
2019-04-01 10:07:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 10:07:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 10:07:57 -HTTP METHOD : GET
2019-04-01 10:07:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 10:07:57 -参数 : []
2019-04-01 10:07:57 -耗时 : 0
2019-04-01 10:07:57 -返回值 : system/dept/deptTree
2019-04-01 10:07:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 10:07:57 -HTTP METHOD : GET
2019-04-01 10:07:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 10:07:57 -参数 : []
2019-04-01 10:07:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 10:07:57 -==> Parameters: 
2019-04-01 10:07:57 -<==      Total: 3
2019-04-01 10:07:57 -耗时 : 3
2019-04-01 10:07:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 10:07:59 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:07:59 -HTTP METHOD : GET
2019-04-01 10:07:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:07:59 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=}]
2019-04-01 10:07:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-04-01 10:07:59 -==> Parameters: A(String), 2(String), 0(Integer), 10(Integer)
2019-04-01 10:07:59 -<==      Total: 2
2019-04-01 10:07:59 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? 
2019-04-01 10:07:59 -==> Parameters: A(String), 2(String)
2019-04-01 10:07:59 -<==      Total: 1
2019-04-01 10:07:59 -耗时 : 8
2019-04-01 10:07:59 -返回值 : com.bootdo.common.utils.PageUtils@159db180
2019-04-01 10:08:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 10:08:15 -HTTP METHOD : GET
2019-04-01 10:08:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 10:08:15 -参数 : []
2019-04-01 10:08:15 -耗时 : 1
2019-04-01 10:08:15 -返回值 : system/dept/deptTree
2019-04-01 10:08:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 10:08:15 -HTTP METHOD : GET
2019-04-01 10:08:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 10:08:15 -参数 : []
2019-04-01 10:08:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 10:08:15 -==> Parameters: 
2019-04-01 10:08:15 -<==      Total: 3
2019-04-01 10:08:15 -耗时 : 6
2019-04-01 10:08:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 10:21:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 10:21:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 10:21:05 -<==      Total: 3
2019-04-01 10:21:05 -==>  Preparing: select count(*) from print 
2019-04-01 10:21:05 -==> Parameters: 
2019-04-01 10:21:05 -<==      Total: 1
2019-04-01 10:21:05 -耗时 : 1369599
2019-04-01 10:21:05 -返回值 : com.bootdo.common.utils.PageUtils@d7807c2
2019-04-01 10:22:43 -请求地址 : http://localhost:8081/index
2019-04-01 10:22:43 -HTTP METHOD : GET
2019-04-01 10:22:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 10:22:43 -参数 : [{}]
2019-04-01 10:22:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 10:22:43 -==> Parameters: 1(Long)
2019-04-01 10:22:43 -<==      Total: 46
2019-04-01 10:22:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 10:22:43 -==> Parameters: 138(Long)
2019-04-01 10:22:43 -<==      Total: 1
2019-04-01 10:22:43 -耗时 : 19
2019-04-01 10:22:43 -返回值 : index_v1
2019-04-01 10:22:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 10:22:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 10:22:43.726(Timestamp)
2019-04-01 10:22:43 -<==    Updates: 1
2019-04-01 10:22:43 -请求地址 : http://localhost:8081/main
2019-04-01 10:22:43 -HTTP METHOD : GET
2019-04-01 10:22:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:22:43 -参数 : []
2019-04-01 10:22:43 -耗时 : 0
2019-04-01 10:22:43 -返回值 : main
2019-04-01 10:22:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 10:22:44 -HTTP METHOD : GET
2019-04-01 10:22:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 10:22:44 -参数 : []
2019-04-01 10:22:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 10:22:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 10:22:44 -<==      Total: 0
2019-04-01 10:22:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 10:22:44 -==> Parameters: 1(Long), 0(String)
2019-04-01 10:22:44 -<==      Total: 1
2019-04-01 10:22:44 -耗时 : 8
2019-04-01 10:22:44 -返回值 : com.bootdo.common.utils.PageUtils@4c19f9ec
2019-04-01 10:22:44 -请求地址 : http://localhost:8081/main
2019-04-01 10:22:44 -HTTP METHOD : GET
2019-04-01 10:22:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:22:44 -参数 : []
2019-04-01 10:22:44 -耗时 : 1
2019-04-01 10:22:44 -返回值 : main
2019-04-01 10:22:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 10:22:45 -==> Parameters: 1(Long)
2019-04-01 10:22:45 -<==      Total: 90
2019-04-01 10:22:45 -请求地址 : http://localhost:8081/print/print
2019-04-01 10:22:45 -HTTP METHOD : GET
2019-04-01 10:22:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 10:22:45 -参数 : []
2019-04-01 10:22:45 -耗时 : 2
2019-04-01 10:22:45 -返回值 : print/print/print
2019-04-01 10:22:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 10:22:46 -HTTP METHOD : GET
2019-04-01 10:22:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 10:22:46 -参数 : [userType]
2019-04-01 10:22:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 10:22:46 -==> Parameters: userType(String)
2019-04-01 10:22:46 -<==      Total: 2
2019-04-01 10:22:46 -耗时 : 4
2019-04-01 10:22:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 10:22:46 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:22:46 -HTTP METHOD : GET
2019-04-01 10:22:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:22:46 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 10:22:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 10:22:46 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 10:22:46 -<==      Total: 3
2019-04-01 10:22:46 -==>  Preparing: select count(*) from print 
2019-04-01 10:22:46 -==> Parameters: 
2019-04-01 10:22:46 -<==      Total: 1
2019-04-01 10:22:46 -耗时 : 12
2019-04-01 10:22:46 -返回值 : com.bootdo.common.utils.PageUtils@5c595d9f
2019-04-01 10:23:00 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:23:00 -HTTP METHOD : GET
2019-04-01 10:23:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:23:00 -参数 : [{limit=10, offset=0, createTime=2019-02-26, userType=A, userOrg=, userId=, type=A}]
2019-04-01 10:23:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 10:23:00 -==> Parameters: A(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 10:23:00 -<==      Total: 0
2019-04-01 10:23:00 -==>  Preparing: select count(*) from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 10:23:00 -==> Parameters: A(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 10:23:00 -<==      Total: 1
2019-04-01 10:23:00 -耗时 : 15
2019-04-01 10:23:00 -返回值 : com.bootdo.common.utils.PageUtils@2d13f82e
2019-04-01 10:23:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 10:23:02 -HTTP METHOD : GET
2019-04-01 10:23:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 10:23:02 -参数 : []
2019-04-01 10:23:02 -耗时 : 1
2019-04-01 10:23:02 -返回值 : system/dept/deptTree
2019-04-01 10:23:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 10:23:02 -HTTP METHOD : GET
2019-04-01 10:23:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 10:23:02 -参数 : []
2019-04-01 10:23:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 10:23:02 -==> Parameters: 
2019-04-01 10:23:02 -<==      Total: 3
2019-04-01 10:23:02 -耗时 : 3
2019-04-01 10:23:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 10:23:04 -请求地址 : http://localhost:8081/print/print/exprotPrint
2019-04-01 10:23:04 -HTTP METHOD : GET
2019-04-01 10:23:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.exprotPrint
2019-04-01 10:23:04 -参数 : [com.bootdo.print.vo.PrintVo@60a67fb8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5cc77357, org.apache.shiro.web.servlet.ShiroHttpServletRequest@314d84bb]
2019-04-01 10:24:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 10:24:55 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 10:24:56 -<==      Total: 3
2019-04-01 10:24:56 -==>  Preparing: select count(*) from print 
2019-04-01 10:24:56 -==> Parameters: 
2019-04-01 10:24:56 -<==      Total: 1
2019-04-01 10:25:03 -耗时 : 1571719
2019-04-01 10:25:10 -返回值 : com.bootdo.common.utils.PageUtils@1894b072
2019-04-01 10:25:23 -请求地址 : http://localhost:8081/print/print/exprotPrint
2019-04-01 10:25:23 -HTTP METHOD : GET
2019-04-01 10:25:23 -CLASS_METHOD : com.bootdo.print.controller.PrintController.exprotPrint
2019-04-01 10:25:23 -参数 : [com.bootdo.print.vo.PrintVo@12a3ef41, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1a9dfcc0, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3be1e2e5]
2019-04-01 10:25:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 10:25:27 -==> Parameters: A(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 10:25:27 -<==      Total: 0
2019-04-01 10:25:27 -==>  Preparing: select count(*) from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 10:25:27 -==> Parameters: A(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 10:25:27 -<==      Total: 1
2019-04-01 10:25:27 -耗时 : 1546945
2019-04-01 10:25:27 -返回值 : com.bootdo.common.utils.PageUtils@579c6a36
2019-04-01 10:25:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 10:25:29 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 10:25:29 -<==      Total: 0
2019-04-01 10:25:30 -耗时 : 145891
2019-04-01 10:25:30 -返回值 : null
2019-04-01 10:25:44 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(8)-CONNECTED(8)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 96], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 16], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 435]
2019-04-01 10:27:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 10:27:42 -==> Parameters: A(String), 2(String), 2019-02-26(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 10:27:42 -<==      Total: 0
2019-04-01 10:27:53 -耗时 : 150232
2019-04-01 10:28:07 -返回值 : null
2019-04-01 10:35:31 -请求地址 : http://localhost:8081/index
2019-04-01 10:35:31 -HTTP METHOD : GET
2019-04-01 10:35:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 10:35:31 -参数 : [{}]
2019-04-01 10:35:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 10:35:31 -==> Parameters: 1(Long)
2019-04-01 10:35:31 -<==      Total: 46
2019-04-01 10:35:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 10:35:31 -==> Parameters: 138(Long)
2019-04-01 10:35:31 -<==      Total: 1
2019-04-01 10:35:31 -耗时 : 34
2019-04-01 10:35:31 -返回值 : index_v1
2019-04-01 10:35:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 10:35:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 10:35:31.678(Timestamp)
2019-04-01 10:35:31 -请求地址 : http://localhost:8081/main
2019-04-01 10:35:31 -HTTP METHOD : GET
2019-04-01 10:35:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:35:31 -参数 : []
2019-04-01 10:35:31 -耗时 : 1
2019-04-01 10:35:31 -返回值 : main
2019-04-01 10:35:31 -<==    Updates: 1
2019-04-01 10:35:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 10:35:32 -HTTP METHOD : GET
2019-04-01 10:35:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 10:35:32 -参数 : []
2019-04-01 10:35:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 10:35:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 10:35:32 -<==      Total: 0
2019-04-01 10:35:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 10:35:32 -==> Parameters: 1(Long), 0(String)
2019-04-01 10:35:32 -<==      Total: 1
2019-04-01 10:35:32 -耗时 : 6
2019-04-01 10:35:32 -返回值 : com.bootdo.common.utils.PageUtils@3255c758
2019-04-01 10:35:32 -请求地址 : http://localhost:8081/main
2019-04-01 10:35:32 -HTTP METHOD : GET
2019-04-01 10:35:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:35:32 -参数 : []
2019-04-01 10:35:32 -耗时 : 2
2019-04-01 10:35:32 -返回值 : main
2019-04-01 10:35:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 10:35:34 -==> Parameters: 1(Long)
2019-04-01 10:35:34 -<==      Total: 90
2019-04-01 10:35:34 -请求地址 : http://localhost:8081/print/print
2019-04-01 10:35:34 -HTTP METHOD : GET
2019-04-01 10:35:34 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 10:35:34 -参数 : []
2019-04-01 10:35:34 -耗时 : 0
2019-04-01 10:35:34 -返回值 : print/print/print
2019-04-01 10:35:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 10:35:35 -HTTP METHOD : GET
2019-04-01 10:35:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 10:35:35 -参数 : [userType]
2019-04-01 10:35:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 10:35:35 -==> Parameters: userType(String)
2019-04-01 10:35:35 -<==      Total: 2
2019-04-01 10:35:35 -耗时 : 5
2019-04-01 10:35:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 10:35:35 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:35:35 -HTTP METHOD : GET
2019-04-01 10:35:35 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:35:35 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 10:35:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 10:35:35 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 10:35:35 -<==      Total: 3
2019-04-01 10:35:35 -==>  Preparing: select count(*) from print 
2019-04-01 10:35:35 -==> Parameters: 
2019-04-01 10:35:35 -<==      Total: 1
2019-04-01 10:35:35 -耗时 : 8
2019-04-01 10:35:35 -返回值 : com.bootdo.common.utils.PageUtils@654e2f1f
2019-04-01 10:41:59 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 10:41:59 -HTTP METHOD : GET
2019-04-01 10:41:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 10:41:59 -参数 : []
2019-04-01 10:41:59 -耗时 : 1
2019-04-01 10:41:59 -返回值 : print/print/add
2019-04-01 10:42:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 10:42:00 -HTTP METHOD : GET
2019-04-01 10:42:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 10:42:00 -参数 : [userType]
2019-04-01 10:42:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 10:42:00 -==> Parameters: userType(String)
2019-04-01 10:42:00 -<==      Total: 2
2019-04-01 10:42:00 -耗时 : 5
2019-04-01 10:42:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 10:42:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 10:42:26 -HTTP METHOD : GET
2019-04-01 10:42:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 10:42:26 -参数 : []
2019-04-01 10:42:26 -耗时 : 1
2019-04-01 10:42:26 -返回值 : system/dept/deptTree
2019-04-01 10:42:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 10:42:26 -HTTP METHOD : GET
2019-04-01 10:42:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 10:42:26 -参数 : []
2019-04-01 10:42:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 10:42:26 -==> Parameters: 
2019-04-01 10:42:26 -<==      Total: 3
2019-04-01 10:42:26 -耗时 : 3
2019-04-01 10:42:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 10:52:27 -请求地址 : http://localhost:8081/index
2019-04-01 10:52:27 -HTTP METHOD : GET
2019-04-01 10:52:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 10:52:27 -参数 : [{}]
2019-04-01 10:52:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 10:52:27 -==> Parameters: 1(Long)
2019-04-01 10:52:27 -<==      Total: 46
2019-04-01 10:52:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 10:52:27 -==> Parameters: 138(Long)
2019-04-01 10:52:27 -<==      Total: 1
2019-04-01 10:52:27 -耗时 : 26
2019-04-01 10:52:27 -返回值 : index_v1
2019-04-01 10:52:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 10:52:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 10:52:27.46(Timestamp)
2019-04-01 10:52:27 -<==    Updates: 1
2019-04-01 10:52:27 -请求地址 : http://localhost:8081/main
2019-04-01 10:52:27 -HTTP METHOD : GET
2019-04-01 10:52:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:52:27 -参数 : []
2019-04-01 10:52:27 -耗时 : 1
2019-04-01 10:52:27 -返回值 : main
2019-04-01 10:52:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 10:52:27 -HTTP METHOD : GET
2019-04-01 10:52:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 10:52:27 -参数 : []
2019-04-01 10:52:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 10:52:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 10:52:27 -<==      Total: 0
2019-04-01 10:52:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 10:52:27 -==> Parameters: 1(Long), 0(String)
2019-04-01 10:52:27 -<==      Total: 1
2019-04-01 10:52:27 -耗时 : 8
2019-04-01 10:52:27 -返回值 : com.bootdo.common.utils.PageUtils@4430d99e
2019-04-01 10:52:28 -请求地址 : http://localhost:8081/main
2019-04-01 10:52:28 -HTTP METHOD : GET
2019-04-01 10:52:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:52:28 -参数 : []
2019-04-01 10:52:28 -耗时 : 0
2019-04-01 10:52:28 -返回值 : main
2019-04-01 10:52:30 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 10:52:30 -==> Parameters: 1(Long)
2019-04-01 10:52:30 -<==      Total: 90
2019-04-01 10:52:30 -请求地址 : http://localhost:8081/print/print
2019-04-01 10:52:30 -HTTP METHOD : GET
2019-04-01 10:52:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 10:52:30 -参数 : []
2019-04-01 10:52:30 -耗时 : 1
2019-04-01 10:52:30 -返回值 : print/print/print
2019-04-01 10:52:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 10:52:31 -HTTP METHOD : GET
2019-04-01 10:52:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 10:52:31 -参数 : [userType]
2019-04-01 10:52:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 10:52:31 -==> Parameters: userType(String)
2019-04-01 10:52:31 -<==      Total: 2
2019-04-01 10:52:31 -耗时 : 4
2019-04-01 10:52:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 10:52:31 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:52:31 -HTTP METHOD : GET
2019-04-01 10:52:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:52:31 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 10:52:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 10:52:31 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 10:52:31 -<==      Total: 3
2019-04-01 10:52:31 -==>  Preparing: select count(*) from print 
2019-04-01 10:52:31 -==> Parameters: 
2019-04-01 10:52:31 -<==      Total: 1
2019-04-01 10:52:31 -耗时 : 8
2019-04-01 10:52:31 -返回值 : com.bootdo.common.utils.PageUtils@569337a9
2019-04-01 10:52:32 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 10:52:32 -HTTP METHOD : GET
2019-04-01 10:52:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 10:52:32 -参数 : []
2019-04-01 10:52:32 -耗时 : 1
2019-04-01 10:52:32 -返回值 : print/print/add
2019-04-01 10:52:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 10:52:32 -HTTP METHOD : GET
2019-04-01 10:52:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 10:52:32 -参数 : [userType]
2019-04-01 10:52:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 10:52:32 -==> Parameters: userType(String)
2019-04-01 10:52:32 -<==      Total: 2
2019-04-01 10:52:32 -耗时 : 9
2019-04-01 10:52:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 10:52:51 -请求地址 : http://localhost:8081/index
2019-04-01 10:52:51 -HTTP METHOD : GET
2019-04-01 10:52:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 10:52:51 -参数 : [{}]
2019-04-01 10:52:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 10:52:51 -==> Parameters: 1(Long)
2019-04-01 10:52:51 -<==      Total: 46
2019-04-01 10:52:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 10:52:51 -==> Parameters: 138(Long)
2019-04-01 10:52:51 -<==      Total: 1
2019-04-01 10:52:51 -耗时 : 43
2019-04-01 10:52:51 -返回值 : index_v1
2019-04-01 10:52:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 10:52:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 43(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 10:52:51.343(Timestamp)
2019-04-01 10:52:51 -请求地址 : http://localhost:8081/main
2019-04-01 10:52:51 -HTTP METHOD : GET
2019-04-01 10:52:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:52:51 -参数 : []
2019-04-01 10:52:51 -耗时 : 0
2019-04-01 10:52:51 -返回值 : main
2019-04-01 10:52:51 -<==    Updates: 1
2019-04-01 10:52:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 10:52:51 -HTTP METHOD : GET
2019-04-01 10:52:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 10:52:51 -参数 : []
2019-04-01 10:52:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 10:52:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 10:52:51 -<==      Total: 0
2019-04-01 10:52:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 10:52:51 -==> Parameters: 1(Long), 0(String)
2019-04-01 10:52:51 -<==      Total: 1
2019-04-01 10:52:51 -耗时 : 55
2019-04-01 10:52:51 -返回值 : com.bootdo.common.utils.PageUtils@39a8ec72
2019-04-01 10:52:51 -请求地址 : http://localhost:8081/main
2019-04-01 10:52:51 -HTTP METHOD : GET
2019-04-01 10:52:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:52:51 -参数 : []
2019-04-01 10:52:51 -耗时 : 0
2019-04-01 10:52:51 -返回值 : main
2019-04-01 10:55:00 -Validating all active sessions...
2019-04-01 10:55:00 -Finished session validation.  No sessions were stopped.
2019-04-01 10:55:44 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 12 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 132], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 22], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 865]
2019-04-01 10:59:17 -请求地址 : http://localhost:8081/index
2019-04-01 10:59:17 -HTTP METHOD : GET
2019-04-01 10:59:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 10:59:17 -参数 : [{}]
2019-04-01 10:59:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 10:59:17 -==> Parameters: 1(Long)
2019-04-01 10:59:17 -<==      Total: 46
2019-04-01 10:59:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 10:59:17 -==> Parameters: 138(Long)
2019-04-01 10:59:17 -<==      Total: 1
2019-04-01 10:59:17 -耗时 : 22
2019-04-01 10:59:17 -返回值 : index_v1
2019-04-01 10:59:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 10:59:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 10:59:17.416(Timestamp)
2019-04-01 10:59:17 -请求地址 : http://localhost:8081/main
2019-04-01 10:59:17 -HTTP METHOD : GET
2019-04-01 10:59:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:59:17 -参数 : []
2019-04-01 10:59:17 -耗时 : 0
2019-04-01 10:59:17 -返回值 : main
2019-04-01 10:59:17 -<==    Updates: 1
2019-04-01 10:59:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 10:59:17 -HTTP METHOD : GET
2019-04-01 10:59:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 10:59:17 -参数 : []
2019-04-01 10:59:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 10:59:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 10:59:17 -<==      Total: 0
2019-04-01 10:59:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 10:59:17 -==> Parameters: 1(Long), 0(String)
2019-04-01 10:59:17 -<==      Total: 1
2019-04-01 10:59:17 -耗时 : 5
2019-04-01 10:59:17 -返回值 : com.bootdo.common.utils.PageUtils@4e2c8dd8
2019-04-01 10:59:18 -请求地址 : http://localhost:8081/main
2019-04-01 10:59:18 -HTTP METHOD : GET
2019-04-01 10:59:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 10:59:18 -参数 : []
2019-04-01 10:59:18 -耗时 : 1
2019-04-01 10:59:18 -返回值 : main
2019-04-01 10:59:24 -请求地址 : http://localhost:8081/print/print
2019-04-01 10:59:24 -HTTP METHOD : GET
2019-04-01 10:59:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 10:59:24 -参数 : []
2019-04-01 10:59:24 -耗时 : 0
2019-04-01 10:59:24 -返回值 : print/print/print
2019-04-01 10:59:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 10:59:24 -HTTP METHOD : GET
2019-04-01 10:59:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 10:59:24 -参数 : [userType]
2019-04-01 10:59:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 10:59:24 -==> Parameters: userType(String)
2019-04-01 10:59:24 -<==      Total: 2
2019-04-01 10:59:24 -耗时 : 4
2019-04-01 10:59:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 10:59:25 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 10:59:25 -HTTP METHOD : GET
2019-04-01 10:59:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 10:59:25 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 10:59:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 10:59:25 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 10:59:25 -<==      Total: 3
2019-04-01 10:59:25 -==>  Preparing: select count(*) from print 
2019-04-01 10:59:25 -==> Parameters: 
2019-04-01 10:59:25 -<==      Total: 1
2019-04-01 10:59:25 -耗时 : 8
2019-04-01 10:59:25 -返回值 : com.bootdo.common.utils.PageUtils@26d5adeb
2019-04-01 10:59:26 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 10:59:26 -HTTP METHOD : GET
2019-04-01 10:59:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 10:59:26 -参数 : []
2019-04-01 10:59:26 -耗时 : 1
2019-04-01 10:59:26 -返回值 : print/print/add
2019-04-01 10:59:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 10:59:26 -HTTP METHOD : GET
2019-04-01 10:59:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 10:59:26 -参数 : [userType]
2019-04-01 10:59:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 10:59:26 -==> Parameters: userType(String)
2019-04-01 10:59:26 -<==      Total: 2
2019-04-01 10:59:26 -耗时 : 6
2019-04-01 10:59:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:00:15 -请求地址 : http://localhost:8081/index
2019-04-01 11:00:15 -HTTP METHOD : GET
2019-04-01 11:00:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 11:00:15 -参数 : [{}]
2019-04-01 11:00:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 11:00:15 -==> Parameters: 1(Long)
2019-04-01 11:00:15 -<==      Total: 46
2019-04-01 11:00:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 11:00:15 -==> Parameters: 138(Long)
2019-04-01 11:00:15 -<==      Total: 1
2019-04-01 11:00:15 -耗时 : 22
2019-04-01 11:00:15 -返回值 : index_v1
2019-04-01 11:00:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:00:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 11:00:15.27(Timestamp)
2019-04-01 11:00:15 -请求地址 : http://localhost:8081/main
2019-04-01 11:00:15 -HTTP METHOD : GET
2019-04-01 11:00:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:00:15 -参数 : []
2019-04-01 11:00:15 -耗时 : 1
2019-04-01 11:00:15 -返回值 : main
2019-04-01 11:00:15 -<==    Updates: 1
2019-04-01 11:00:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 11:00:15 -HTTP METHOD : GET
2019-04-01 11:00:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 11:00:15 -参数 : []
2019-04-01 11:00:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 11:00:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 11:00:15 -<==      Total: 0
2019-04-01 11:00:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 11:00:15 -==> Parameters: 1(Long), 0(String)
2019-04-01 11:00:15 -<==      Total: 1
2019-04-01 11:00:15 -耗时 : 57
2019-04-01 11:00:15 -返回值 : com.bootdo.common.utils.PageUtils@2b937e68
2019-04-01 11:00:15 -请求地址 : http://localhost:8081/main
2019-04-01 11:00:15 -HTTP METHOD : GET
2019-04-01 11:00:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:00:15 -参数 : []
2019-04-01 11:00:15 -耗时 : 5
2019-04-01 11:00:15 -返回值 : main
2019-04-01 11:00:17 -请求地址 : http://localhost:8081/print/print
2019-04-01 11:00:17 -HTTP METHOD : GET
2019-04-01 11:00:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 11:00:17 -参数 : []
2019-04-01 11:00:17 -耗时 : 1
2019-04-01 11:00:17 -返回值 : print/print/print
2019-04-01 11:00:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:00:17 -HTTP METHOD : GET
2019-04-01 11:00:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:00:17 -参数 : [userType]
2019-04-01 11:00:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:00:17 -==> Parameters: userType(String)
2019-04-01 11:00:17 -<==      Total: 2
2019-04-01 11:00:17 -耗时 : 5
2019-04-01 11:00:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:00:17 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 11:00:17 -HTTP METHOD : GET
2019-04-01 11:00:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 11:00:17 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 11:00:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 11:00:17 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 11:00:17 -<==      Total: 3
2019-04-01 11:00:17 -==>  Preparing: select count(*) from print 
2019-04-01 11:00:17 -==> Parameters: 
2019-04-01 11:00:17 -<==      Total: 1
2019-04-01 11:00:17 -耗时 : 6
2019-04-01 11:00:17 -返回值 : com.bootdo.common.utils.PageUtils@64ffb44e
2019-04-01 11:00:18 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 11:00:18 -HTTP METHOD : GET
2019-04-01 11:00:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 11:00:18 -参数 : []
2019-04-01 11:00:18 -耗时 : 0
2019-04-01 11:00:18 -返回值 : print/print/add
2019-04-01 11:00:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:00:18 -HTTP METHOD : GET
2019-04-01 11:00:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:00:18 -参数 : [userType]
2019-04-01 11:00:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:00:18 -==> Parameters: userType(String)
2019-04-01 11:00:18 -<==      Total: 2
2019-04-01 11:00:18 -耗时 : 3
2019-04-01 11:00:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:00:55 -请求地址 : http://localhost:8081/index
2019-04-01 11:00:55 -HTTP METHOD : GET
2019-04-01 11:00:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 11:00:55 -参数 : [{}]
2019-04-01 11:00:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 11:00:55 -==> Parameters: 1(Long)
2019-04-01 11:00:55 -<==      Total: 46
2019-04-01 11:00:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 11:00:55 -==> Parameters: 138(Long)
2019-04-01 11:00:55 -<==      Total: 1
2019-04-01 11:00:55 -耗时 : 25
2019-04-01 11:00:55 -返回值 : index_v1
2019-04-01 11:00:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:00:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 11:00:55.733(Timestamp)
2019-04-01 11:00:55 -<==    Updates: 1
2019-04-01 11:00:56 -请求地址 : http://localhost:8081/main
2019-04-01 11:00:56 -HTTP METHOD : GET
2019-04-01 11:00:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:00:56 -参数 : []
2019-04-01 11:00:56 -耗时 : 0
2019-04-01 11:00:56 -返回值 : main
2019-04-01 11:00:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 11:00:56 -HTTP METHOD : GET
2019-04-01 11:00:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 11:00:56 -参数 : []
2019-04-01 11:00:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 11:00:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 11:00:56 -<==      Total: 0
2019-04-01 11:00:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 11:00:56 -==> Parameters: 1(Long), 0(String)
2019-04-01 11:00:56 -<==      Total: 1
2019-04-01 11:00:56 -耗时 : 8
2019-04-01 11:00:56 -返回值 : com.bootdo.common.utils.PageUtils@715b4cf7
2019-04-01 11:00:56 -请求地址 : http://localhost:8081/main
2019-04-01 11:00:56 -HTTP METHOD : GET
2019-04-01 11:00:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:00:56 -参数 : []
2019-04-01 11:00:56 -耗时 : 0
2019-04-01 11:00:56 -返回值 : main
2019-04-01 11:01:13 -请求地址 : http://localhost:8081/print/print
2019-04-01 11:01:13 -HTTP METHOD : GET
2019-04-01 11:01:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 11:01:13 -参数 : []
2019-04-01 11:01:13 -耗时 : 3
2019-04-01 11:01:13 -返回值 : print/print/print
2019-04-01 11:01:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:01:13 -HTTP METHOD : GET
2019-04-01 11:01:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:01:13 -参数 : [userType]
2019-04-01 11:01:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:01:13 -==> Parameters: userType(String)
2019-04-01 11:01:13 -<==      Total: 2
2019-04-01 11:01:13 -耗时 : 5
2019-04-01 11:01:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:01:13 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 11:01:13 -HTTP METHOD : GET
2019-04-01 11:01:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 11:01:13 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 11:01:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 11:01:13 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 11:01:13 -<==      Total: 3
2019-04-01 11:01:13 -==>  Preparing: select count(*) from print 
2019-04-01 11:01:13 -==> Parameters: 
2019-04-01 11:01:13 -<==      Total: 1
2019-04-01 11:01:13 -耗时 : 8
2019-04-01 11:01:13 -返回值 : com.bootdo.common.utils.PageUtils@59fc70a2
2019-04-01 11:01:14 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 11:01:14 -HTTP METHOD : GET
2019-04-01 11:01:14 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 11:01:14 -参数 : []
2019-04-01 11:01:14 -耗时 : 0
2019-04-01 11:01:14 -返回值 : print/print/add
2019-04-01 11:01:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:01:14 -HTTP METHOD : GET
2019-04-01 11:01:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:01:14 -参数 : [userType]
2019-04-01 11:01:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:01:14 -==> Parameters: userType(String)
2019-04-01 11:01:14 -<==      Total: 2
2019-04-01 11:01:14 -耗时 : 4
2019-04-01 11:01:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:14:40 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 11:14:40 -==> Parameters: 1(Long)
2019-04-01 11:14:40 -<==      Total: 90
2019-04-01 11:14:40 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 11:14:40 -HTTP METHOD : GET
2019-04-01 11:14:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 11:14:40 -参数 : []
2019-04-01 11:14:40 -耗时 : 0
2019-04-01 11:14:40 -返回值 : print/print/add
2019-04-01 11:14:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:14:41 -HTTP METHOD : GET
2019-04-01 11:14:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:14:41 -参数 : [userType]
2019-04-01 11:14:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:14:41 -==> Parameters: userType(String)
2019-04-01 11:14:41 -<==      Total: 2
2019-04-01 11:14:41 -耗时 : 4
2019-04-01 11:14:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:15:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 11:15:06 -HTTP METHOD : GET
2019-04-01 11:15:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 11:15:06 -参数 : []
2019-04-01 11:15:06 -耗时 : 0
2019-04-01 11:15:06 -返回值 : system/dept/deptTree
2019-04-01 11:15:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 11:15:06 -HTTP METHOD : GET
2019-04-01 11:15:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 11:15:06 -参数 : []
2019-04-01 11:15:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 11:15:06 -==> Parameters: 
2019-04-01 11:15:06 -<==      Total: 3
2019-04-01 11:15:06 -耗时 : 3
2019-04-01 11:15:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 11:17:33 -请求地址 : http://localhost:8081/index
2019-04-01 11:17:33 -HTTP METHOD : GET
2019-04-01 11:17:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 11:17:33 -参数 : [{}]
2019-04-01 11:17:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 11:17:33 -==> Parameters: 1(Long)
2019-04-01 11:17:33 -<==      Total: 46
2019-04-01 11:17:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 11:17:33 -==> Parameters: 138(Long)
2019-04-01 11:17:33 -<==      Total: 1
2019-04-01 11:17:33 -耗时 : 20
2019-04-01 11:17:33 -返回值 : index_v1
2019-04-01 11:17:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:17:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 11:17:33.321(Timestamp)
2019-04-01 11:17:33 -请求地址 : http://localhost:8081/main
2019-04-01 11:17:33 -HTTP METHOD : GET
2019-04-01 11:17:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:17:33 -参数 : []
2019-04-01 11:17:33 -耗时 : 0
2019-04-01 11:17:33 -返回值 : main
2019-04-01 11:17:33 -<==    Updates: 1
2019-04-01 11:17:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 11:17:33 -HTTP METHOD : GET
2019-04-01 11:17:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 11:17:33 -参数 : []
2019-04-01 11:17:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 11:17:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 11:17:33 -<==      Total: 0
2019-04-01 11:17:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 11:17:33 -==> Parameters: 1(Long), 0(String)
2019-04-01 11:17:33 -<==      Total: 1
2019-04-01 11:17:33 -耗时 : 6
2019-04-01 11:17:33 -返回值 : com.bootdo.common.utils.PageUtils@12bb3eb9
2019-04-01 11:17:33 -请求地址 : http://localhost:8081/main
2019-04-01 11:17:33 -HTTP METHOD : GET
2019-04-01 11:17:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:17:33 -参数 : []
2019-04-01 11:17:33 -耗时 : 1
2019-04-01 11:17:33 -返回值 : main
2019-04-01 11:17:38 -请求地址 : http://localhost:8081/print/print
2019-04-01 11:17:38 -HTTP METHOD : GET
2019-04-01 11:17:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 11:17:38 -参数 : []
2019-04-01 11:17:38 -耗时 : 0
2019-04-01 11:17:38 -返回值 : print/print/print
2019-04-01 11:17:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:17:38 -HTTP METHOD : GET
2019-04-01 11:17:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:17:38 -参数 : [userType]
2019-04-01 11:17:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:17:38 -==> Parameters: userType(String)
2019-04-01 11:17:38 -<==      Total: 2
2019-04-01 11:17:38 -耗时 : 4
2019-04-01 11:17:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:17:38 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 11:17:38 -HTTP METHOD : GET
2019-04-01 11:17:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 11:17:38 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 11:17:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 11:17:38 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 11:17:38 -<==      Total: 3
2019-04-01 11:17:38 -==>  Preparing: select count(*) from print 
2019-04-01 11:17:38 -==> Parameters: 
2019-04-01 11:17:38 -<==      Total: 1
2019-04-01 11:17:38 -耗时 : 7
2019-04-01 11:17:38 -返回值 : com.bootdo.common.utils.PageUtils@45445298
2019-04-01 11:17:40 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 11:17:40 -HTTP METHOD : GET
2019-04-01 11:17:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 11:17:40 -参数 : []
2019-04-01 11:17:40 -耗时 : 0
2019-04-01 11:17:40 -返回值 : print/print/add
2019-04-01 11:17:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:17:40 -HTTP METHOD : GET
2019-04-01 11:17:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:17:40 -参数 : [userType]
2019-04-01 11:17:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:17:40 -==> Parameters: userType(String)
2019-04-01 11:17:40 -<==      Total: 2
2019-04-01 11:17:40 -耗时 : 4
2019-04-01 11:17:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:18:01 -请求地址 : http://localhost:8081/index
2019-04-01 11:18:01 -HTTP METHOD : GET
2019-04-01 11:18:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 11:18:01 -参数 : [{}]
2019-04-01 11:18:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 11:18:01 -==> Parameters: 1(Long)
2019-04-01 11:18:01 -<==      Total: 46
2019-04-01 11:18:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 11:18:01 -==> Parameters: 138(Long)
2019-04-01 11:18:01 -<==      Total: 1
2019-04-01 11:18:01 -耗时 : 24
2019-04-01 11:18:01 -返回值 : index_v1
2019-04-01 11:18:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:18:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 11:18:01.861(Timestamp)
2019-04-01 11:18:01 -请求地址 : http://localhost:8081/main
2019-04-01 11:18:01 -HTTP METHOD : GET
2019-04-01 11:18:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:18:01 -参数 : []
2019-04-01 11:18:01 -耗时 : 1
2019-04-01 11:18:01 -返回值 : main
2019-04-01 11:18:02 -<==    Updates: 1
2019-04-01 11:18:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 11:18:02 -HTTP METHOD : GET
2019-04-01 11:18:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 11:18:02 -参数 : []
2019-04-01 11:18:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 11:18:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 11:18:02 -<==      Total: 0
2019-04-01 11:18:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 11:18:02 -==> Parameters: 1(Long), 0(String)
2019-04-01 11:18:02 -<==      Total: 1
2019-04-01 11:18:02 -耗时 : 6
2019-04-01 11:18:02 -返回值 : com.bootdo.common.utils.PageUtils@54465967
2019-04-01 11:18:02 -请求地址 : http://localhost:8081/main
2019-04-01 11:18:02 -HTTP METHOD : GET
2019-04-01 11:18:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:18:02 -参数 : []
2019-04-01 11:18:02 -耗时 : 1
2019-04-01 11:18:02 -返回值 : main
2019-04-01 11:18:06 -请求地址 : http://localhost:8081/print/print
2019-04-01 11:18:06 -HTTP METHOD : GET
2019-04-01 11:18:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 11:18:06 -参数 : []
2019-04-01 11:18:06 -耗时 : 0
2019-04-01 11:18:06 -返回值 : print/print/print
2019-04-01 11:18:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:18:06 -HTTP METHOD : GET
2019-04-01 11:18:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:18:06 -参数 : [userType]
2019-04-01 11:18:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:18:06 -==> Parameters: userType(String)
2019-04-01 11:18:06 -<==      Total: 2
2019-04-01 11:18:06 -耗时 : 3
2019-04-01 11:18:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:18:06 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 11:18:06 -HTTP METHOD : GET
2019-04-01 11:18:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 11:18:06 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 11:18:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 11:18:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 11:18:06 -<==      Total: 3
2019-04-01 11:18:06 -==>  Preparing: select count(*) from print 
2019-04-01 11:18:06 -==> Parameters: 
2019-04-01 11:18:06 -<==      Total: 1
2019-04-01 11:18:06 -耗时 : 7
2019-04-01 11:18:06 -返回值 : com.bootdo.common.utils.PageUtils@7ff08b16
2019-04-01 11:18:07 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 11:18:07 -HTTP METHOD : GET
2019-04-01 11:18:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 11:18:07 -参数 : []
2019-04-01 11:18:07 -耗时 : 1
2019-04-01 11:18:07 -返回值 : print/print/add
2019-04-01 11:18:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:18:07 -HTTP METHOD : GET
2019-04-01 11:18:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:18:07 -参数 : [userType]
2019-04-01 11:18:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:18:07 -==> Parameters: userType(String)
2019-04-01 11:18:07 -<==      Total: 2
2019-04-01 11:18:07 -耗时 : 6
2019-04-01 11:18:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:18:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 11:18:32 -HTTP METHOD : GET
2019-04-01 11:18:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 11:18:32 -参数 : []
2019-04-01 11:18:32 -耗时 : 1
2019-04-01 11:18:32 -返回值 : system/dept/deptTree
2019-04-01 11:18:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 11:18:32 -HTTP METHOD : GET
2019-04-01 11:18:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 11:18:32 -参数 : []
2019-04-01 11:18:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 11:18:32 -==> Parameters: 
2019-04-01 11:18:32 -<==      Total: 3
2019-04-01 11:18:32 -耗时 : 3
2019-04-01 11:18:32 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 11:19:39 -请求地址 : http://localhost:8081/index
2019-04-01 11:19:39 -HTTP METHOD : GET
2019-04-01 11:19:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 11:19:39 -参数 : [{}]
2019-04-01 11:19:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 11:19:39 -==> Parameters: 1(Long)
2019-04-01 11:19:39 -<==      Total: 46
2019-04-01 11:19:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 11:19:39 -==> Parameters: 138(Long)
2019-04-01 11:19:39 -<==      Total: 1
2019-04-01 11:19:39 -耗时 : 23
2019-04-01 11:19:39 -返回值 : index_v1
2019-04-01 11:19:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:19:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 11:19:39.247(Timestamp)
2019-04-01 11:19:39 -<==    Updates: 1
2019-04-01 11:19:39 -请求地址 : http://localhost:8081/main
2019-04-01 11:19:39 -HTTP METHOD : GET
2019-04-01 11:19:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:19:39 -参数 : []
2019-04-01 11:19:39 -耗时 : 0
2019-04-01 11:19:39 -返回值 : main
2019-04-01 11:19:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 11:19:39 -HTTP METHOD : GET
2019-04-01 11:19:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 11:19:39 -参数 : []
2019-04-01 11:19:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 11:19:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 11:19:39 -<==      Total: 0
2019-04-01 11:19:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 11:19:39 -==> Parameters: 1(Long), 0(String)
2019-04-01 11:19:39 -<==      Total: 1
2019-04-01 11:19:39 -耗时 : 7
2019-04-01 11:19:39 -返回值 : com.bootdo.common.utils.PageUtils@6a0d5ea2
2019-04-01 11:19:39 -请求地址 : http://localhost:8081/main
2019-04-01 11:19:39 -HTTP METHOD : GET
2019-04-01 11:19:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:19:39 -参数 : []
2019-04-01 11:19:39 -耗时 : 3
2019-04-01 11:19:39 -返回值 : main
2019-04-01 11:19:42 -请求地址 : http://localhost:8081/print/print
2019-04-01 11:19:42 -HTTP METHOD : GET
2019-04-01 11:19:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 11:19:42 -参数 : []
2019-04-01 11:19:42 -耗时 : 0
2019-04-01 11:19:42 -返回值 : print/print/print
2019-04-01 11:19:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:19:42 -HTTP METHOD : GET
2019-04-01 11:19:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:19:42 -参数 : [userType]
2019-04-01 11:19:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:19:42 -==> Parameters: userType(String)
2019-04-01 11:19:42 -<==      Total: 2
2019-04-01 11:19:42 -耗时 : 3
2019-04-01 11:19:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:19:42 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 11:19:42 -HTTP METHOD : GET
2019-04-01 11:19:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 11:19:42 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 11:19:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 11:19:42 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 11:19:42 -<==      Total: 3
2019-04-01 11:19:42 -==>  Preparing: select count(*) from print 
2019-04-01 11:19:42 -==> Parameters: 
2019-04-01 11:19:42 -<==      Total: 1
2019-04-01 11:19:42 -耗时 : 10
2019-04-01 11:19:42 -返回值 : com.bootdo.common.utils.PageUtils@66276be2
2019-04-01 11:19:44 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 11:19:44 -HTTP METHOD : GET
2019-04-01 11:19:44 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 11:19:44 -参数 : []
2019-04-01 11:19:44 -耗时 : 0
2019-04-01 11:19:44 -返回值 : print/print/add
2019-04-01 11:19:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:19:44 -HTTP METHOD : GET
2019-04-01 11:19:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:19:44 -参数 : [userType]
2019-04-01 11:19:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:19:44 -==> Parameters: userType(String)
2019-04-01 11:19:44 -<==      Total: 2
2019-04-01 11:19:44 -耗时 : 6
2019-04-01 11:19:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:19:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 11:19:55 -HTTP METHOD : GET
2019-04-01 11:19:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 11:19:55 -参数 : []
2019-04-01 11:19:55 -耗时 : 3
2019-04-01 11:19:55 -返回值 : system/dept/deptTree
2019-04-01 11:19:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 11:19:55 -HTTP METHOD : GET
2019-04-01 11:19:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 11:19:55 -参数 : []
2019-04-01 11:19:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 11:19:55 -==> Parameters: 
2019-04-01 11:19:55 -<==      Total: 3
2019-04-01 11:19:55 -耗时 : 3
2019-04-01 11:19:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 11:20:33 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 11:20:33 -HTTP METHOD : POST
2019-04-01 11:20:33 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 11:20:33 -参数 : [com.bootdo.print.domain.PrintDO@c0703bf]
2019-04-01 11:20:33 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:20:33 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1(String), 1(Integer), 1111111111(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), null, 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 11:20:33.137(Timestamp), 1(Long), 1(String)
2019-04-01 11:20:33 -{conn-10001, pstmt-20020} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3974)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 11:20:33 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-04-01 11:20:33 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-04-01 11:20:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:20:33 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
; ]; Data truncation: Out of range value for column 'elec_price' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1(String), null, 2019-04-01 11:20:33.551(Timestamp)
2019-04-01 11:20:33 -
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
; ]; Data truncation: Out of range value for column 'elec_price' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
; ]; Data truncation: Out of range value for column 'elec_price' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3974)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 11:20:33 -<==    Updates: 1
2019-04-01 11:20:45 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 11:20:45 -HTTP METHOD : POST
2019-04-01 11:20:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 11:20:45 -参数 : [com.bootdo.print.domain.PrintDO@4124f770]
2019-04-01 11:20:45 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:20:45 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1(String), 1(Integer), 1111111111(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), null, 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 11:20:45.445(Timestamp), 1(Long), 1(String)
2019-04-01 11:20:45 -{conn-10001, pstmt-20021} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3974)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 11:20:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:20:45 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
; ]; Data truncation: Out of range value for column 'elec_price' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1(String), null, 2019-04-01 11:20:45.458(Timestamp)
2019-04-01 11:20:45 -
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
; ]; Data truncation: Out of range value for column 'elec_price' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
; ]; Data truncation: Out of range value for column 'elec_price' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3974)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 11:20:45 -<==    Updates: 1
2019-04-01 11:20:47 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 11:20:47 -HTTP METHOD : POST
2019-04-01 11:20:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 11:20:47 -参数 : [com.bootdo.print.domain.PrintDO@1f5fc843]
2019-04-01 11:20:47 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:20:47 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1(String), 1(Integer), 1111111111(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), null, 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 11:20:47.442(Timestamp), 1(Long), 1(String)
2019-04-01 11:20:47 -{conn-10001, pstmt-20022} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3974)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 11:20:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:20:47 -
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
; ]; Data truncation: Out of range value for column 'elec_price' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
; ]; Data truncation: Out of range value for column 'elec_price' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3974)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 11:20:47 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1
; ]; Data truncation: Out of range value for column 'elec_price' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Out of range value for column 'elec_price' at row 1(String), null, 2019-04-01 11:20:47.45(Timestamp)
2019-04-01 11:20:47 -<==    Updates: 1
2019-04-01 11:23:15 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 11:23:15 -HTTP METHOD : POST
2019-04-01 11:23:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 11:23:15 -参数 : [com.bootdo.print.domain.PrintDO@18b7f6b6]
2019-04-01 11:23:15 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:23:15 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), null, 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 11:23:15.946(Timestamp), 1(Long), 1(String)
2019-04-01 11:23:16 -{conn-10001, pstmt-20023} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'water_cost' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 11:23:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:23:16 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'water_cost' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'water_cost' cannot be null
; ]; Column 'water_cost' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'water_cost' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'water_cost' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'water_cost' cannot be null
; ]; Column 'water_cost' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'water_cost' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'water_cost' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 11:23:16 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'water_cost' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'water_cost' cannot be null
; ]; Column 'water_cost' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'water_cost' cannot be null(String), null, 2019-04-01 11:23:16.026(Timestamp)
2019-04-01 11:23:16 -<==    Updates: 1
2019-04-01 11:25:44 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 18 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(17)-CONNECTED(17)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 204], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 34], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1295]
2019-04-01 11:30:57 -请求地址 : http://localhost:8081/index
2019-04-01 11:30:57 -HTTP METHOD : GET
2019-04-01 11:30:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 11:30:57 -参数 : [{}]
2019-04-01 11:30:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 11:30:57 -==> Parameters: 1(Long)
2019-04-01 11:30:57 -<==      Total: 46
2019-04-01 11:30:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 11:30:57 -==> Parameters: 138(Long)
2019-04-01 11:30:57 -<==      Total: 1
2019-04-01 11:30:57 -耗时 : 18
2019-04-01 11:30:57 -返回值 : index_v1
2019-04-01 11:30:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:30:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 11:30:57.021(Timestamp)
2019-04-01 11:30:57 -<==    Updates: 1
2019-04-01 11:30:57 -请求地址 : http://localhost:8081/main
2019-04-01 11:30:57 -HTTP METHOD : GET
2019-04-01 11:30:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:30:57 -参数 : []
2019-04-01 11:30:57 -耗时 : 0
2019-04-01 11:30:57 -返回值 : main
2019-04-01 11:30:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 11:30:57 -HTTP METHOD : GET
2019-04-01 11:30:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 11:30:57 -参数 : []
2019-04-01 11:30:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 11:30:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 11:30:57 -<==      Total: 0
2019-04-01 11:30:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 11:30:57 -==> Parameters: 1(Long), 0(String)
2019-04-01 11:30:57 -<==      Total: 1
2019-04-01 11:30:57 -耗时 : 6
2019-04-01 11:30:57 -返回值 : com.bootdo.common.utils.PageUtils@1145d343
2019-04-01 11:30:57 -请求地址 : http://localhost:8081/main
2019-04-01 11:30:57 -HTTP METHOD : GET
2019-04-01 11:30:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:30:57 -参数 : []
2019-04-01 11:30:57 -耗时 : 0
2019-04-01 11:30:57 -返回值 : main
2019-04-01 11:30:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 11:30:59 -==> Parameters: 1(Long)
2019-04-01 11:30:59 -<==      Total: 90
2019-04-01 11:30:59 -请求地址 : http://localhost:8081/print/print
2019-04-01 11:30:59 -HTTP METHOD : GET
2019-04-01 11:30:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 11:30:59 -参数 : []
2019-04-01 11:30:59 -耗时 : 1
2019-04-01 11:30:59 -返回值 : print/print/print
2019-04-01 11:31:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:31:00 -HTTP METHOD : GET
2019-04-01 11:31:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:31:00 -参数 : [userType]
2019-04-01 11:31:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:31:00 -==> Parameters: userType(String)
2019-04-01 11:31:00 -<==      Total: 2
2019-04-01 11:31:00 -耗时 : 3
2019-04-01 11:31:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:31:00 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 11:31:00 -HTTP METHOD : GET
2019-04-01 11:31:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 11:31:00 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 11:31:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 11:31:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 11:31:00 -<==      Total: 3
2019-04-01 11:31:00 -==>  Preparing: select count(*) from print 
2019-04-01 11:31:00 -==> Parameters: 
2019-04-01 11:31:00 -<==      Total: 1
2019-04-01 11:31:00 -耗时 : 8
2019-04-01 11:31:00 -返回值 : com.bootdo.common.utils.PageUtils@5f7eb0b1
2019-04-01 11:31:01 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 11:31:01 -HTTP METHOD : GET
2019-04-01 11:31:01 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 11:31:01 -参数 : []
2019-04-01 11:31:01 -耗时 : 0
2019-04-01 11:31:01 -返回值 : print/print/add
2019-04-01 11:31:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:31:01 -HTTP METHOD : GET
2019-04-01 11:31:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:31:01 -参数 : [userType]
2019-04-01 11:31:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:31:01 -==> Parameters: userType(String)
2019-04-01 11:31:01 -<==      Total: 2
2019-04-01 11:31:01 -耗时 : 3
2019-04-01 11:31:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:31:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 11:31:12 -HTTP METHOD : GET
2019-04-01 11:31:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 11:31:12 -参数 : []
2019-04-01 11:31:12 -耗时 : 0
2019-04-01 11:31:12 -返回值 : system/dept/deptTree
2019-04-01 11:31:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 11:31:13 -HTTP METHOD : GET
2019-04-01 11:31:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 11:31:13 -参数 : []
2019-04-01 11:31:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 11:31:13 -==> Parameters: 
2019-04-01 11:31:13 -<==      Total: 3
2019-04-01 11:31:13 -耗时 : 5
2019-04-01 11:31:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 11:31:51 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 11:31:51 -HTTP METHOD : POST
2019-04-01 11:31:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 11:31:51 -参数 : [com.bootdo.print.domain.PrintDO@24d7ffb5]
2019-04-01 11:31:51 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:31:51 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1111111(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 11:31:51.724(Timestamp), 1(Long), 1(String)
2019-04-01 11:31:51 -{conn-10001, pstmt-20024} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 11:31:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:31:51 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null(String), null, 2019-04-01 11:31:51.731(Timestamp)
2019-04-01 11:31:51 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 11:31:51 -<==    Updates: 1
2019-04-01 11:35:26 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 11:35:26 -HTTP METHOD : POST
2019-04-01 11:35:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 11:35:26 -参数 : [com.bootdo.print.domain.PrintDO@39d625d]
2019-04-01 11:35:26 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:35:26 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1111111(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 11:35:26.219(Timestamp), 1(Long), 1(String)
2019-04-01 11:35:26 -{conn-10001, pstmt-20025} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 11:35:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:35:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null(String), null, 2019-04-01 11:35:26.237(Timestamp)
2019-04-01 11:35:26 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 11:35:26 -<==    Updates: 1
2019-04-01 11:38:16 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 11:38:16 -HTTP METHOD : POST
2019-04-01 11:38:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 11:38:16 -参数 : [com.bootdo.print.domain.PrintDO@34949018]
2019-04-01 11:38:16 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:38:16 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1111111(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 11:38:16.839(Timestamp), 1(Long), 1(String)
2019-04-01 11:38:16 -{conn-10001, pstmt-20026} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 11:38:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:38:16 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 11:38:16 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null(String), null, 2019-04-01 11:38:16.848(Timestamp)
2019-04-01 11:38:16 -<==    Updates: 1
2019-04-01 11:38:21 -请求地址 : http://localhost:8081/index
2019-04-01 11:38:21 -HTTP METHOD : GET
2019-04-01 11:38:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 11:38:21 -参数 : [{}]
2019-04-01 11:38:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 11:38:21 -==> Parameters: 1(Long)
2019-04-01 11:38:21 -<==      Total: 46
2019-04-01 11:38:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 11:38:21 -==> Parameters: 138(Long)
2019-04-01 11:38:21 -<==      Total: 1
2019-04-01 11:38:21 -耗时 : 18
2019-04-01 11:38:21 -返回值 : index_v1
2019-04-01 11:38:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:38:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 11:38:21.272(Timestamp)
2019-04-01 11:38:21 -<==    Updates: 1
2019-04-01 11:38:21 -请求地址 : http://localhost:8081/main
2019-04-01 11:38:21 -HTTP METHOD : GET
2019-04-01 11:38:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:38:21 -参数 : []
2019-04-01 11:38:21 -耗时 : 1
2019-04-01 11:38:21 -返回值 : main
2019-04-01 11:38:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 11:38:21 -HTTP METHOD : GET
2019-04-01 11:38:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 11:38:21 -参数 : []
2019-04-01 11:38:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 11:38:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 11:38:21 -<==      Total: 0
2019-04-01 11:38:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 11:38:21 -==> Parameters: 1(Long), 0(String)
2019-04-01 11:38:21 -<==      Total: 1
2019-04-01 11:38:21 -耗时 : 11
2019-04-01 11:38:21 -返回值 : com.bootdo.common.utils.PageUtils@9c39578
2019-04-01 11:38:21 -请求地址 : http://localhost:8081/main
2019-04-01 11:38:21 -HTTP METHOD : GET
2019-04-01 11:38:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:38:21 -参数 : []
2019-04-01 11:38:21 -耗时 : 0
2019-04-01 11:38:21 -返回值 : main
2019-04-01 11:38:24 -请求地址 : http://localhost:8081/print/print
2019-04-01 11:38:24 -HTTP METHOD : GET
2019-04-01 11:38:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 11:38:24 -参数 : []
2019-04-01 11:38:24 -耗时 : 0
2019-04-01 11:38:24 -返回值 : print/print/print
2019-04-01 11:38:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:38:24 -HTTP METHOD : GET
2019-04-01 11:38:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:38:24 -参数 : [userType]
2019-04-01 11:38:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:38:24 -==> Parameters: userType(String)
2019-04-01 11:38:24 -<==      Total: 2
2019-04-01 11:38:24 -耗时 : 3
2019-04-01 11:38:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:38:24 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 11:38:24 -HTTP METHOD : GET
2019-04-01 11:38:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 11:38:24 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 11:38:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 11:38:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 11:38:24 -<==      Total: 3
2019-04-01 11:38:24 -==>  Preparing: select count(*) from print 
2019-04-01 11:38:24 -==> Parameters: 
2019-04-01 11:38:24 -<==      Total: 1
2019-04-01 11:38:24 -耗时 : 7
2019-04-01 11:38:24 -返回值 : com.bootdo.common.utils.PageUtils@fe42ad9
2019-04-01 11:38:25 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 11:38:25 -HTTP METHOD : GET
2019-04-01 11:38:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 11:38:25 -参数 : []
2019-04-01 11:38:25 -耗时 : 1
2019-04-01 11:38:25 -返回值 : print/print/add
2019-04-01 11:38:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:38:25 -HTTP METHOD : GET
2019-04-01 11:38:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:38:25 -参数 : [userType]
2019-04-01 11:38:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:38:25 -==> Parameters: userType(String)
2019-04-01 11:38:25 -<==      Total: 2
2019-04-01 11:38:25 -耗时 : 3
2019-04-01 11:38:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:42:17 -请求地址 : http://localhost:8081/index
2019-04-01 11:42:17 -HTTP METHOD : GET
2019-04-01 11:42:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 11:42:17 -参数 : [{}]
2019-04-01 11:42:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 11:42:17 -==> Parameters: 1(Long)
2019-04-01 11:42:17 -<==      Total: 46
2019-04-01 11:42:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 11:42:17 -==> Parameters: 138(Long)
2019-04-01 11:42:17 -<==      Total: 1
2019-04-01 11:42:17 -耗时 : 23
2019-04-01 11:42:17 -返回值 : index_v1
2019-04-01 11:42:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 11:42:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 11:42:17.268(Timestamp)
2019-04-01 11:42:17 -请求地址 : http://localhost:8081/main
2019-04-01 11:42:17 -HTTP METHOD : GET
2019-04-01 11:42:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:42:17 -参数 : []
2019-04-01 11:42:17 -耗时 : 1
2019-04-01 11:42:17 -返回值 : main
2019-04-01 11:42:17 -<==    Updates: 1
2019-04-01 11:42:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 11:42:17 -HTTP METHOD : GET
2019-04-01 11:42:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 11:42:17 -参数 : []
2019-04-01 11:42:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 11:42:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 11:42:17 -<==      Total: 0
2019-04-01 11:42:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 11:42:17 -==> Parameters: 1(Long), 0(String)
2019-04-01 11:42:17 -<==      Total: 1
2019-04-01 11:42:17 -耗时 : 7
2019-04-01 11:42:17 -返回值 : com.bootdo.common.utils.PageUtils@68b354b1
2019-04-01 11:42:17 -请求地址 : http://localhost:8081/main
2019-04-01 11:42:17 -HTTP METHOD : GET
2019-04-01 11:42:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 11:42:17 -参数 : []
2019-04-01 11:42:17 -耗时 : 1
2019-04-01 11:42:17 -返回值 : main
2019-04-01 11:42:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 11:42:19 -==> Parameters: 1(Long)
2019-04-01 11:42:19 -<==      Total: 90
2019-04-01 11:42:19 -请求地址 : http://localhost:8081/print/print
2019-04-01 11:42:19 -HTTP METHOD : GET
2019-04-01 11:42:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 11:42:19 -参数 : []
2019-04-01 11:42:19 -耗时 : 0
2019-04-01 11:42:19 -返回值 : print/print/print
2019-04-01 11:42:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:42:19 -HTTP METHOD : GET
2019-04-01 11:42:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:42:19 -参数 : [userType]
2019-04-01 11:42:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:42:19 -==> Parameters: userType(String)
2019-04-01 11:42:19 -<==      Total: 2
2019-04-01 11:42:19 -耗时 : 3
2019-04-01 11:42:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:42:19 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 11:42:19 -HTTP METHOD : GET
2019-04-01 11:42:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 11:42:19 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 11:42:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 11:42:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 11:42:19 -<==      Total: 3
2019-04-01 11:42:19 -==>  Preparing: select count(*) from print 
2019-04-01 11:42:19 -==> Parameters: 
2019-04-01 11:42:19 -<==      Total: 1
2019-04-01 11:42:19 -耗时 : 7
2019-04-01 11:42:19 -返回值 : com.bootdo.common.utils.PageUtils@7dbd8690
2019-04-01 11:42:20 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 11:42:20 -HTTP METHOD : GET
2019-04-01 11:42:20 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 11:42:20 -参数 : []
2019-04-01 11:42:20 -耗时 : 1
2019-04-01 11:42:20 -返回值 : print/print/add
2019-04-01 11:42:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 11:42:20 -HTTP METHOD : GET
2019-04-01 11:42:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 11:42:20 -参数 : [userType]
2019-04-01 11:42:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 11:42:20 -==> Parameters: userType(String)
2019-04-01 11:42:20 -<==      Total: 2
2019-04-01 11:42:20 -耗时 : 3
2019-04-01 11:42:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 11:55:00 -Validating all active sessions...
2019-04-01 11:55:00 -Finished session validation.  No sessions were stopped.
2019-04-01 11:55:44 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 21 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(20)-CONNECTED(20)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 240], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1727]
2019-04-01 13:46:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 21 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(20)-CONNECTED(20)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 240], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 0, completed tasks = 2023]
2019-04-01 13:46:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 21 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(20)-CONNECTED(20)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 240], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 1, completed tasks = 2098]
2019-04-01 13:46:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 21 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(20)-CONNECTED(20)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 240], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 2114]
2019-04-01 13:55:44 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 21 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(20)-CONNECTED(20)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 240], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3241]
2019-04-01 14:04:33 -请求地址 : http://localhost:8081/login;JSESSIONID=2c828911-858c-46a7-89d0-ab8d837f756d
2019-04-01 14:04:33 -HTTP METHOD : GET
2019-04-01 14:04:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 14:04:33 -参数 : [{}]
2019-04-01 14:04:33 -耗时 : 2
2019-04-01 14:04:33 -返回值 : login
2019-04-01 14:04:34 -请求地址 : http://localhost:8081/getVerify
2019-04-01 14:04:34 -HTTP METHOD : GET
2019-04-01 14:04:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 14:04:34 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2dedf1af, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3234b8f7]
2019-04-01 14:04:35 -8944
2019-04-01 14:04:35 -耗时 : 1231
2019-04-01 14:04:35 -返回值 : null
2019-04-01 14:04:35 -请求地址 : http://localhost:8081/login
2019-04-01 14:04:35 -HTTP METHOD : GET
2019-04-01 14:04:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 14:04:35 -参数 : [{}]
2019-04-01 14:04:35 -耗时 : 0
2019-04-01 14:04:35 -返回值 : login
2019-04-01 14:04:42 -请求地址 : http://localhost:8081/login
2019-04-01 14:04:42 -HTTP METHOD : POST
2019-04-01 14:04:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-01 14:04:42 -参数 : [admin, 111111, 8944, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2e93e1e]
2019-04-01 14:04:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-01 14:04:42 -==> Parameters: admin(String)
2019-04-01 14:04:42 -<==      Total: 1
2019-04-01 14:04:42 -耗时 : 348
2019-04-01 14:04:42 -返回值 : {msg=操作成功, code=0}
2019-04-01 14:04:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:04:42 -请求地址 : http://localhost:8081/index
2019-04-01 14:04:42 -HTTP METHOD : GET
2019-04-01 14:04:42 -==> Parameters: 1(Long), admin(String), 登录(String), 348(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-01 14:04:42.6(Timestamp)
2019-04-01 14:04:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:04:42 -参数 : [{}]
2019-04-01 14:04:43 -<==    Updates: 1
2019-04-01 14:04:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:04:43 -==> Parameters: 1(Long)
2019-04-01 14:04:43 -<==      Total: 46
2019-04-01 14:04:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:04:43 -==> Parameters: 138(Long)
2019-04-01 14:04:43 -<==      Total: 1
2019-04-01 14:04:43 -耗时 : 769
2019-04-01 14:04:43 -返回值 : index_v1
2019-04-01 14:04:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:04:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 769(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:04:43.443(Timestamp)
2019-04-01 14:04:43 -请求地址 : http://localhost:8081/main
2019-04-01 14:04:43 -HTTP METHOD : GET
2019-04-01 14:04:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:04:43 -参数 : []
2019-04-01 14:04:43 -耗时 : 1
2019-04-01 14:04:43 -返回值 : main
2019-04-01 14:04:44 -<==    Updates: 1
2019-04-01 14:04:45 -请求地址 : http://localhost:8081/main
2019-04-01 14:04:45 -HTTP METHOD : GET
2019-04-01 14:04:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:04:45 -参数 : []
2019-04-01 14:04:45 -耗时 : 0
2019-04-01 14:04:45 -返回值 : main
2019-04-01 14:04:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:04:45 -HTTP METHOD : GET
2019-04-01 14:04:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:04:45 -参数 : []
2019-04-01 14:04:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:04:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:04:46 -<==      Total: 0
2019-04-01 14:04:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:04:46 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:04:46 -<==      Total: 1
2019-04-01 14:04:46 -耗时 : 799
2019-04-01 14:04:46 -返回值 : com.bootdo.common.utils.PageUtils@4797ebb4
2019-04-01 14:04:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 14:04:47 -==> Parameters: 1(Long)
2019-04-01 14:04:47 -<==      Total: 90
2019-04-01 14:04:47 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:04:47 -HTTP METHOD : GET
2019-04-01 14:04:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:04:47 -参数 : []
2019-04-01 14:04:47 -耗时 : 1
2019-04-01 14:04:47 -返回值 : print/print/print
2019-04-01 14:04:49 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:04:49 -HTTP METHOD : GET
2019-04-01 14:04:49 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:04:49 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:04:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:04:49 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:04:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:04:49 -HTTP METHOD : GET
2019-04-01 14:04:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:04:49 -参数 : [userType]
2019-04-01 14:04:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:04:49 -==> Parameters: userType(String)
2019-04-01 14:04:49 -<==      Total: 2
2019-04-01 14:04:49 -耗时 : 4
2019-04-01 14:04:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:04:50 -<==      Total: 3
2019-04-01 14:04:50 -==>  Preparing: select count(*) from print 
2019-04-01 14:04:50 -==> Parameters: 
2019-04-01 14:04:50 -<==      Total: 1
2019-04-01 14:04:50 -耗时 : 478
2019-04-01 14:04:50 -返回值 : com.bootdo.common.utils.PageUtils@7e5744c4
2019-04-01 14:04:51 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:04:51 -HTTP METHOD : GET
2019-04-01 14:04:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:04:51 -参数 : []
2019-04-01 14:04:51 -耗时 : 1
2019-04-01 14:04:51 -返回值 : print/print/add
2019-04-01 14:04:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:04:52 -HTTP METHOD : GET
2019-04-01 14:04:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:04:52 -参数 : [userType]
2019-04-01 14:04:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:04:52 -==> Parameters: userType(String)
2019-04-01 14:04:52 -<==      Total: 2
2019-04-01 14:04:52 -耗时 : 111
2019-04-01 14:04:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:05:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 14:05:17 -HTTP METHOD : GET
2019-04-01 14:05:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 14:05:17 -参数 : []
2019-04-01 14:05:17 -耗时 : 1
2019-04-01 14:05:17 -返回值 : system/dept/deptTree
2019-04-01 14:05:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 14:05:17 -HTTP METHOD : GET
2019-04-01 14:05:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 14:05:17 -参数 : []
2019-04-01 14:05:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 14:05:17 -==> Parameters: 
2019-04-01 14:05:17 -<==      Total: 3
2019-04-01 14:05:17 -耗时 : 21
2019-04-01 14:05:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 14:09:11 -请求地址 : http://localhost:8081/index
2019-04-01 14:09:11 -HTTP METHOD : GET
2019-04-01 14:09:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:09:11 -参数 : [{}]
2019-04-01 14:09:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:09:11 -==> Parameters: 1(Long)
2019-04-01 14:09:11 -<==      Total: 46
2019-04-01 14:09:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:09:11 -==> Parameters: 138(Long)
2019-04-01 14:09:11 -<==      Total: 1
2019-04-01 14:09:11 -耗时 : 12
2019-04-01 14:09:11 -返回值 : index_v1
2019-04-01 14:09:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:09:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:09:11.033(Timestamp)
2019-04-01 14:09:11 -<==    Updates: 1
2019-04-01 14:09:11 -请求地址 : http://localhost:8081/main
2019-04-01 14:09:11 -HTTP METHOD : GET
2019-04-01 14:09:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:09:11 -参数 : []
2019-04-01 14:09:11 -耗时 : 47
2019-04-01 14:09:11 -返回值 : main
2019-04-01 14:09:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:09:11 -HTTP METHOD : GET
2019-04-01 14:09:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:09:11 -参数 : []
2019-04-01 14:09:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:09:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:09:11 -<==      Total: 0
2019-04-01 14:09:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:09:11 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:09:11 -<==      Total: 1
2019-04-01 14:09:11 -耗时 : 9
2019-04-01 14:09:11 -返回值 : com.bootdo.common.utils.PageUtils@70f07f30
2019-04-01 14:09:11 -请求地址 : http://localhost:8081/main
2019-04-01 14:09:11 -HTTP METHOD : GET
2019-04-01 14:09:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:09:11 -参数 : []
2019-04-01 14:09:11 -耗时 : 1
2019-04-01 14:09:11 -返回值 : main
2019-04-01 14:09:13 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:09:13 -HTTP METHOD : GET
2019-04-01 14:09:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:09:13 -参数 : []
2019-04-01 14:09:13 -耗时 : 0
2019-04-01 14:09:13 -返回值 : print/print/print
2019-04-01 14:09:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:09:13 -HTTP METHOD : GET
2019-04-01 14:09:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:09:13 -参数 : [userType]
2019-04-01 14:09:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:09:13 -==> Parameters: userType(String)
2019-04-01 14:09:13 -<==      Total: 2
2019-04-01 14:09:13 -耗时 : 4
2019-04-01 14:09:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:09:13 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:09:13 -HTTP METHOD : GET
2019-04-01 14:09:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:09:13 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:09:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:09:13 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:09:13 -<==      Total: 3
2019-04-01 14:09:13 -==>  Preparing: select count(*) from print 
2019-04-01 14:09:13 -==> Parameters: 
2019-04-01 14:09:13 -<==      Total: 1
2019-04-01 14:09:13 -耗时 : 7
2019-04-01 14:09:13 -返回值 : com.bootdo.common.utils.PageUtils@13484e7
2019-04-01 14:09:14 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:09:14 -HTTP METHOD : GET
2019-04-01 14:09:14 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:09:14 -参数 : []
2019-04-01 14:09:14 -耗时 : 1
2019-04-01 14:09:14 -返回值 : print/print/add
2019-04-01 14:09:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:09:15 -HTTP METHOD : GET
2019-04-01 14:09:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:09:15 -参数 : [userType]
2019-04-01 14:09:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:09:15 -==> Parameters: userType(String)
2019-04-01 14:09:15 -<==      Total: 2
2019-04-01 14:09:15 -耗时 : 4
2019-04-01 14:09:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:10:21 -请求地址 : http://localhost:8081/login;JSESSIONID=406a86c7-a5c0-4530-8652-ffeda0cd6c29
2019-04-01 14:10:21 -HTTP METHOD : GET
2019-04-01 14:10:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 14:10:21 -参数 : [{}]
2019-04-01 14:10:21 -耗时 : 0
2019-04-01 14:10:21 -返回值 : login
2019-04-01 14:10:21 -请求地址 : http://localhost:8081/getVerify
2019-04-01 14:10:21 -HTTP METHOD : GET
2019-04-01 14:10:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 14:10:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5072a998, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1e7f60de]
2019-04-01 14:10:21 -6196
2019-04-01 14:10:21 -耗时 : 60
2019-04-01 14:10:21 -返回值 : null
2019-04-01 14:10:21 -请求地址 : http://localhost:8081/login
2019-04-01 14:10:21 -HTTP METHOD : GET
2019-04-01 14:10:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 14:10:21 -参数 : [{}]
2019-04-01 14:10:21 -耗时 : 30
2019-04-01 14:10:21 -返回值 : login
2019-04-01 14:10:27 -请求地址 : http://localhost:8081/login
2019-04-01 14:10:27 -HTTP METHOD : POST
2019-04-01 14:10:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-01 14:10:27 -参数 : [admin, 111111, 6196, org.apache.shiro.web.servlet.ShiroHttpServletRequest@39420468]
2019-04-01 14:10:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-01 14:10:27 -==> Parameters: admin(String)
2019-04-01 14:10:28 -<==      Total: 1
2019-04-01 14:10:28 -耗时 : 108
2019-04-01 14:10:28 -返回值 : {msg=操作成功, code=0}
2019-04-01 14:10:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:10:28 -==> Parameters: 1(Long), admin(String), 登录(String), 121(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-01 14:10:28.051(Timestamp)
2019-04-01 14:10:28 -<==    Updates: 1
2019-04-01 14:10:28 -请求地址 : http://localhost:8081/index
2019-04-01 14:10:28 -HTTP METHOD : GET
2019-04-01 14:10:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:10:28 -参数 : [{}]
2019-04-01 14:10:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:10:28 -==> Parameters: 1(Long)
2019-04-01 14:10:28 -<==      Total: 46
2019-04-01 14:10:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:10:28 -==> Parameters: 138(Long)
2019-04-01 14:10:28 -<==      Total: 1
2019-04-01 14:10:28 -耗时 : 54
2019-04-01 14:10:28 -返回值 : index_v1
2019-04-01 14:10:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:10:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 54(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:10:28.417(Timestamp)
2019-04-01 14:10:32 -请求地址 : http://localhost:8081/main
2019-04-01 14:10:32 -HTTP METHOD : GET
2019-04-01 14:10:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:10:32 -参数 : []
2019-04-01 14:10:32 -耗时 : 0
2019-04-01 14:10:32 -返回值 : main
2019-04-01 14:10:33 -<==    Updates: 1
2019-04-01 14:10:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:10:34 -HTTP METHOD : GET
2019-04-01 14:10:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:10:34 -参数 : []
2019-04-01 14:10:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:10:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:10:34 -<==      Total: 0
2019-04-01 14:10:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:10:34 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:10:34 -<==      Total: 1
2019-04-01 14:10:34 -耗时 : 9
2019-04-01 14:10:34 -返回值 : com.bootdo.common.utils.PageUtils@4f632249
2019-04-01 14:10:34 -请求地址 : http://localhost:8081/main
2019-04-01 14:10:34 -HTTP METHOD : GET
2019-04-01 14:10:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:10:34 -参数 : []
2019-04-01 14:10:34 -耗时 : 0
2019-04-01 14:10:34 -返回值 : main
2019-04-01 14:10:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 14:10:44 -==> Parameters: 1(Long)
2019-04-01 14:10:44 -<==      Total: 90
2019-04-01 14:10:44 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:10:44 -HTTP METHOD : GET
2019-04-01 14:10:44 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:10:44 -参数 : []
2019-04-01 14:10:44 -耗时 : 1
2019-04-01 14:10:44 -返回值 : print/print/print
2019-04-01 14:10:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:10:45 -HTTP METHOD : GET
2019-04-01 14:10:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:10:45 -参数 : [userType]
2019-04-01 14:10:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:10:45 -==> Parameters: userType(String)
2019-04-01 14:10:45 -<==      Total: 2
2019-04-01 14:10:45 -耗时 : 2
2019-04-01 14:10:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:10:45 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:10:45 -HTTP METHOD : GET
2019-04-01 14:10:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:10:45 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:10:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:10:45 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:10:45 -<==      Total: 3
2019-04-01 14:10:45 -==>  Preparing: select count(*) from print 
2019-04-01 14:10:45 -==> Parameters: 
2019-04-01 14:10:45 -<==      Total: 1
2019-04-01 14:10:45 -耗时 : 5
2019-04-01 14:10:45 -返回值 : com.bootdo.common.utils.PageUtils@61775332
2019-04-01 14:10:46 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:10:46 -HTTP METHOD : GET
2019-04-01 14:10:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:10:46 -参数 : []
2019-04-01 14:10:46 -耗时 : 0
2019-04-01 14:10:46 -返回值 : print/print/add
2019-04-01 14:11:58 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:11:58 -HTTP METHOD : GET
2019-04-01 14:11:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:11:58 -参数 : []
2019-04-01 14:11:58 -耗时 : 2
2019-04-01 14:11:58 -返回值 : print/print/add
2019-04-01 14:12:04 -请求地址 : http://localhost:8081/print/print/edit/1
2019-04-01 14:12:04 -HTTP METHOD : GET
2019-04-01 14:12:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-01 14:12:04 -参数 : [1, {}]
2019-04-01 14:12:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-01 14:12:04 -==> Parameters: 1(Long)
2019-04-01 14:12:04 -<==      Total: 1
2019-04-01 14:12:04 -耗时 : 34
2019-04-01 14:12:04 -返回值 : print/print/edit
2019-04-01 14:12:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:12:05 -HTTP METHOD : GET
2019-04-01 14:12:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:12:05 -参数 : [userType]
2019-04-01 14:12:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:12:05 -==> Parameters: userType(String)
2019-04-01 14:12:05 -<==      Total: 2
2019-04-01 14:12:05 -耗时 : 4
2019-04-01 14:12:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:12:10 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:12:10 -HTTP METHOD : GET
2019-04-01 14:12:10 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:12:10 -参数 : []
2019-04-01 14:12:10 -耗时 : 1
2019-04-01 14:12:10 -返回值 : print/print/add
2019-04-01 14:12:12 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:12:13 -HTTP METHOD : GET
2019-04-01 14:12:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:12:13 -参数 : []
2019-04-01 14:12:13 -耗时 : 181
2019-04-01 14:12:13 -返回值 : print/print/add
2019-04-01 14:12:17 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:12:17 -HTTP METHOD : GET
2019-04-01 14:12:17 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:12:17 -参数 : []
2019-04-01 14:12:17 -耗时 : 0
2019-04-01 14:12:17 -返回值 : print/print/add
2019-04-01 14:13:24 -请求地址 : http://localhost:8081/index
2019-04-01 14:13:24 -HTTP METHOD : GET
2019-04-01 14:13:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:13:24 -参数 : [{}]
2019-04-01 14:13:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:13:24 -==> Parameters: 1(Long)
2019-04-01 14:13:24 -<==      Total: 46
2019-04-01 14:13:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:13:24 -==> Parameters: 138(Long)
2019-04-01 14:13:24 -<==      Total: 1
2019-04-01 14:13:24 -耗时 : 76
2019-04-01 14:13:24 -返回值 : index_v1
2019-04-01 14:13:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:13:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 76(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:13:24.229(Timestamp)
2019-04-01 14:13:24 -<==    Updates: 1
2019-04-01 14:13:24 -请求地址 : http://localhost:8081/main
2019-04-01 14:13:24 -HTTP METHOD : GET
2019-04-01 14:13:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:13:24 -参数 : []
2019-04-01 14:13:24 -耗时 : 0
2019-04-01 14:13:24 -返回值 : main
2019-04-01 14:13:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:13:25 -HTTP METHOD : GET
2019-04-01 14:13:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:13:25 -参数 : []
2019-04-01 14:13:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:13:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:13:25 -<==      Total: 0
2019-04-01 14:13:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:13:25 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:13:25 -<==      Total: 1
2019-04-01 14:13:25 -耗时 : 6
2019-04-01 14:13:25 -返回值 : com.bootdo.common.utils.PageUtils@662bbf8f
2019-04-01 14:13:25 -请求地址 : http://localhost:8081/main
2019-04-01 14:13:25 -HTTP METHOD : GET
2019-04-01 14:13:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:13:25 -参数 : []
2019-04-01 14:13:25 -耗时 : 1
2019-04-01 14:13:25 -返回值 : main
2019-04-01 14:13:30 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:13:30 -HTTP METHOD : GET
2019-04-01 14:13:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:13:30 -参数 : []
2019-04-01 14:13:30 -耗时 : 0
2019-04-01 14:13:30 -返回值 : print/print/print
2019-04-01 14:13:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:13:30 -HTTP METHOD : GET
2019-04-01 14:13:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:13:30 -参数 : [userType]
2019-04-01 14:13:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:13:30 -==> Parameters: userType(String)
2019-04-01 14:13:30 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:13:30 -HTTP METHOD : GET
2019-04-01 14:13:30 -<==      Total: 2
2019-04-01 14:13:30 -耗时 : 6
2019-04-01 14:13:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:13:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:13:30 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:13:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:13:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:13:31 -<==      Total: 3
2019-04-01 14:13:31 -==>  Preparing: select count(*) from print 
2019-04-01 14:13:31 -==> Parameters: 
2019-04-01 14:13:31 -<==      Total: 1
2019-04-01 14:13:31 -耗时 : 107
2019-04-01 14:13:31 -返回值 : com.bootdo.common.utils.PageUtils@639e4445
2019-04-01 14:13:32 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:13:32 -HTTP METHOD : GET
2019-04-01 14:13:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:13:32 -参数 : []
2019-04-01 14:13:32 -耗时 : 1
2019-04-01 14:13:32 -返回值 : print/print/add
2019-04-01 14:13:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:13:32 -HTTP METHOD : GET
2019-04-01 14:13:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:13:32 -参数 : [userType]
2019-04-01 14:13:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:13:32 -==> Parameters: userType(String)
2019-04-01 14:13:32 -<==      Total: 2
2019-04-01 14:13:32 -耗时 : 4
2019-04-01 14:13:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:13:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 14:13:34 -HTTP METHOD : GET
2019-04-01 14:13:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 14:13:34 -参数 : []
2019-04-01 14:13:34 -耗时 : 0
2019-04-01 14:13:34 -返回值 : system/dept/deptTree
2019-04-01 14:13:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 14:13:34 -HTTP METHOD : GET
2019-04-01 14:13:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 14:13:34 -参数 : []
2019-04-01 14:13:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 14:13:34 -==> Parameters: 
2019-04-01 14:13:34 -<==      Total: 3
2019-04-01 14:13:34 -耗时 : 3
2019-04-01 14:13:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 14:13:42 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:13:42 -HTTP METHOD : GET
2019-04-01 14:13:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:13:42 -参数 : []
2019-04-01 14:13:42 -耗时 : 1
2019-04-01 14:13:42 -返回值 : print/print/add
2019-04-01 14:13:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:13:42 -HTTP METHOD : GET
2019-04-01 14:13:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:13:42 -参数 : [userType]
2019-04-01 14:13:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:13:42 -==> Parameters: userType(String)
2019-04-01 14:13:42 -<==      Total: 2
2019-04-01 14:13:42 -耗时 : 3
2019-04-01 14:13:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:15:48 -请求地址 : http://localhost:8081/index
2019-04-01 14:15:48 -HTTP METHOD : GET
2019-04-01 14:15:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:15:48 -参数 : [{}]
2019-04-01 14:15:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:15:49 -==> Parameters: 1(Long)
2019-04-01 14:15:49 -<==      Total: 46
2019-04-01 14:15:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:15:49 -==> Parameters: 138(Long)
2019-04-01 14:15:49 -<==      Total: 1
2019-04-01 14:15:49 -耗时 : 30
2019-04-01 14:15:49 -返回值 : index_v1
2019-04-01 14:15:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:15:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:15:49.026(Timestamp)
2019-04-01 14:15:49 -<==    Updates: 1
2019-04-01 14:15:49 -请求地址 : http://localhost:8081/main
2019-04-01 14:15:49 -HTTP METHOD : GET
2019-04-01 14:15:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:15:49 -参数 : []
2019-04-01 14:15:49 -耗时 : 4
2019-04-01 14:15:49 -返回值 : main
2019-04-01 14:15:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:15:49 -HTTP METHOD : GET
2019-04-01 14:15:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:15:49 -参数 : []
2019-04-01 14:15:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:15:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:15:49 -<==      Total: 0
2019-04-01 14:15:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:15:49 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:15:49 -<==      Total: 1
2019-04-01 14:15:49 -耗时 : 7
2019-04-01 14:15:49 -返回值 : com.bootdo.common.utils.PageUtils@5a0b2875
2019-04-01 14:15:50 -请求地址 : http://localhost:8081/main
2019-04-01 14:15:50 -HTTP METHOD : GET
2019-04-01 14:15:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:15:50 -参数 : []
2019-04-01 14:15:50 -耗时 : 1
2019-04-01 14:15:50 -返回值 : main
2019-04-01 14:15:53 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:15:53 -HTTP METHOD : GET
2019-04-01 14:15:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:15:53 -参数 : []
2019-04-01 14:15:53 -耗时 : 1
2019-04-01 14:15:53 -返回值 : print/print/print
2019-04-01 14:15:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:15:54 -HTTP METHOD : GET
2019-04-01 14:15:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:15:54 -参数 : [userType]
2019-04-01 14:15:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:15:54 -==> Parameters: userType(String)
2019-04-01 14:15:54 -<==      Total: 2
2019-04-01 14:15:54 -耗时 : 3
2019-04-01 14:15:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:15:54 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:15:54 -HTTP METHOD : GET
2019-04-01 14:15:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:15:54 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:15:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:15:54 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:15:54 -<==      Total: 3
2019-04-01 14:15:54 -==>  Preparing: select count(*) from print 
2019-04-01 14:15:54 -==> Parameters: 
2019-04-01 14:15:54 -<==      Total: 1
2019-04-01 14:15:54 -耗时 : 45
2019-04-01 14:15:54 -返回值 : com.bootdo.common.utils.PageUtils@315a1db8
2019-04-01 14:15:55 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:15:55 -HTTP METHOD : GET
2019-04-01 14:15:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:15:55 -参数 : []
2019-04-01 14:15:55 -耗时 : 1
2019-04-01 14:15:55 -返回值 : print/print/add
2019-04-01 14:15:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:15:55 -HTTP METHOD : GET
2019-04-01 14:15:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:15:55 -参数 : [userType]
2019-04-01 14:15:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:15:55 -==> Parameters: userType(String)
2019-04-01 14:15:55 -<==      Total: 2
2019-04-01 14:15:55 -耗时 : 4
2019-04-01 14:15:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:15:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 14:15:58 -HTTP METHOD : GET
2019-04-01 14:15:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 14:15:58 -参数 : []
2019-04-01 14:15:58 -耗时 : 1
2019-04-01 14:15:58 -返回值 : system/dept/deptTree
2019-04-01 14:15:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 14:15:59 -HTTP METHOD : GET
2019-04-01 14:15:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 14:15:59 -参数 : []
2019-04-01 14:15:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 14:15:59 -==> Parameters: 
2019-04-01 14:15:59 -<==      Total: 3
2019-04-01 14:15:59 -耗时 : 3
2019-04-01 14:15:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 14:18:08 -请求地址 : http://localhost:8081/index
2019-04-01 14:18:08 -HTTP METHOD : GET
2019-04-01 14:18:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:18:08 -参数 : [{}]
2019-04-01 14:18:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:18:08 -==> Parameters: 1(Long)
2019-04-01 14:18:08 -<==      Total: 46
2019-04-01 14:18:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:18:08 -==> Parameters: 138(Long)
2019-04-01 14:18:08 -<==      Total: 1
2019-04-01 14:18:08 -耗时 : 119
2019-04-01 14:18:08 -返回值 : index_v1
2019-04-01 14:18:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:18:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 119(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:18:08.485(Timestamp)
2019-04-01 14:18:08 -<==    Updates: 1
2019-04-01 14:18:08 -请求地址 : http://localhost:8081/main
2019-04-01 14:18:08 -HTTP METHOD : GET
2019-04-01 14:18:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:18:08 -参数 : []
2019-04-01 14:18:08 -耗时 : 0
2019-04-01 14:18:08 -返回值 : main
2019-04-01 14:18:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:18:09 -HTTP METHOD : GET
2019-04-01 14:18:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:18:09 -参数 : []
2019-04-01 14:18:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:18:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:18:09 -<==      Total: 0
2019-04-01 14:18:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:18:09 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:18:09 -<==      Total: 1
2019-04-01 14:18:09 -耗时 : 9
2019-04-01 14:18:09 -返回值 : com.bootdo.common.utils.PageUtils@3e65639e
2019-04-01 14:18:09 -请求地址 : http://localhost:8081/main
2019-04-01 14:18:09 -HTTP METHOD : GET
2019-04-01 14:18:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:18:09 -参数 : []
2019-04-01 14:18:09 -耗时 : 0
2019-04-01 14:18:09 -返回值 : main
2019-04-01 14:18:11 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:18:11 -HTTP METHOD : GET
2019-04-01 14:18:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:18:11 -参数 : []
2019-04-01 14:18:11 -耗时 : 0
2019-04-01 14:18:11 -返回值 : print/print/print
2019-04-01 14:18:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:18:11 -HTTP METHOD : GET
2019-04-01 14:18:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:18:11 -参数 : [userType]
2019-04-01 14:18:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:18:11 -==> Parameters: userType(String)
2019-04-01 14:18:11 -<==      Total: 2
2019-04-01 14:18:11 -耗时 : 4
2019-04-01 14:18:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:18:11 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:18:11 -HTTP METHOD : GET
2019-04-01 14:18:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:18:11 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:18:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:18:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:18:11 -<==      Total: 3
2019-04-01 14:18:11 -==>  Preparing: select count(*) from print 
2019-04-01 14:18:11 -==> Parameters: 
2019-04-01 14:18:11 -<==      Total: 1
2019-04-01 14:18:11 -耗时 : 8
2019-04-01 14:18:11 -返回值 : com.bootdo.common.utils.PageUtils@1e5bb3
2019-04-01 14:18:12 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:18:12 -HTTP METHOD : GET
2019-04-01 14:18:12 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:18:12 -参数 : []
2019-04-01 14:18:12 -耗时 : 0
2019-04-01 14:18:12 -返回值 : print/print/add
2019-04-01 14:18:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:18:13 -HTTP METHOD : GET
2019-04-01 14:18:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:18:13 -参数 : [userType]
2019-04-01 14:18:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:18:13 -==> Parameters: userType(String)
2019-04-01 14:18:13 -<==      Total: 2
2019-04-01 14:18:13 -耗时 : 3
2019-04-01 14:18:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:19:24 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:19:24 -HTTP METHOD : GET
2019-04-01 14:19:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:19:24 -参数 : []
2019-04-01 14:19:24 -耗时 : 0
2019-04-01 14:19:24 -返回值 : print/print/add
2019-04-01 14:19:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:19:25 -HTTP METHOD : GET
2019-04-01 14:19:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:19:25 -参数 : [userType]
2019-04-01 14:19:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:19:25 -==> Parameters: userType(String)
2019-04-01 14:19:25 -<==      Total: 2
2019-04-01 14:19:25 -耗时 : 4
2019-04-01 14:19:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:19:52 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 14:19:52 -HTTP METHOD : POST
2019-04-01 14:19:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 14:19:52 -参数 : [com.bootdo.print.domain.PrintDO@13463409]
2019-04-01 14:19:52 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:19:52 -==> Parameters: 1(String), 1(String), (String), (String), 1(String), 1(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 14:19:52.387(Timestamp), 1(Long), 1(String)
2019-04-01 14:19:52 -{conn-10002, pstmt-20039} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 14:19:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:19:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null(String), null, 2019-04-01 14:19:52.511(Timestamp)
2019-04-01 14:19:52 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 14:19:52 -<==    Updates: 1
2019-04-01 14:19:59 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 14:19:59 -HTTP METHOD : POST
2019-04-01 14:19:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 14:19:59 -参数 : [com.bootdo.print.domain.PrintDO@304d8540]
2019-04-01 14:19:59 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:19:59 -==> Parameters: 1(String), 1(String), (String), (String), 1(String), 1(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 14:19:59.676(Timestamp), 1(Long), 1(String)
2019-04-01 14:19:59 -{conn-10002, pstmt-20040} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 14:19:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:19:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null(String), null, 2019-04-01 14:19:59.7(Timestamp)
2019-04-01 14:19:59 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:221)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 14:19:59 -<==    Updates: 1
2019-04-01 14:22:40 -请求地址 : http://localhost:8081/index
2019-04-01 14:22:40 -HTTP METHOD : GET
2019-04-01 14:22:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:22:40 -参数 : [{}]
2019-04-01 14:22:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:22:40 -==> Parameters: 1(Long)
2019-04-01 14:22:40 -<==      Total: 46
2019-04-01 14:22:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:22:40 -==> Parameters: 138(Long)
2019-04-01 14:22:40 -<==      Total: 1
2019-04-01 14:22:40 -耗时 : 32
2019-04-01 14:22:40 -返回值 : index_v1
2019-04-01 14:22:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:22:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:22:40.55(Timestamp)
2019-04-01 14:22:40 -请求地址 : http://localhost:8081/main
2019-04-01 14:22:40 -HTTP METHOD : GET
2019-04-01 14:22:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:22:40 -参数 : []
2019-04-01 14:22:40 -耗时 : 1
2019-04-01 14:22:40 -返回值 : main
2019-04-01 14:22:41 -<==    Updates: 1
2019-04-01 14:22:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:22:41 -HTTP METHOD : GET
2019-04-01 14:22:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:22:41 -参数 : []
2019-04-01 14:22:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:22:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:22:41 -<==      Total: 0
2019-04-01 14:22:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:22:41 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:22:41 -<==      Total: 1
2019-04-01 14:22:41 -耗时 : 28
2019-04-01 14:22:41 -返回值 : com.bootdo.common.utils.PageUtils@51289dd9
2019-04-01 14:22:41 -请求地址 : http://localhost:8081/main
2019-04-01 14:22:41 -HTTP METHOD : GET
2019-04-01 14:22:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:22:41 -参数 : []
2019-04-01 14:22:41 -耗时 : 1
2019-04-01 14:22:41 -返回值 : main
2019-04-01 14:23:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 14:23:18 -==> Parameters: 1(Long)
2019-04-01 14:23:18 -<==      Total: 90
2019-04-01 14:23:18 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:23:18 -HTTP METHOD : GET
2019-04-01 14:23:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:23:18 -参数 : []
2019-04-01 14:23:18 -耗时 : 0
2019-04-01 14:23:18 -返回值 : print/print/print
2019-04-01 14:23:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:23:18 -HTTP METHOD : GET
2019-04-01 14:23:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:23:18 -参数 : [userType]
2019-04-01 14:23:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:23:18 -==> Parameters: userType(String)
2019-04-01 14:23:18 -<==      Total: 2
2019-04-01 14:23:18 -耗时 : 6
2019-04-01 14:23:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:23:18 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:23:18 -HTTP METHOD : GET
2019-04-01 14:23:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:23:18 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:23:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:23:18 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:23:18 -<==      Total: 3
2019-04-01 14:23:18 -==>  Preparing: select count(*) from print 
2019-04-01 14:23:18 -==> Parameters: 
2019-04-01 14:23:18 -<==      Total: 1
2019-04-01 14:23:18 -耗时 : 8
2019-04-01 14:23:18 -返回值 : com.bootdo.common.utils.PageUtils@546bdc0f
2019-04-01 14:23:20 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:23:20 -HTTP METHOD : GET
2019-04-01 14:23:20 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:23:20 -参数 : []
2019-04-01 14:23:20 -耗时 : 1
2019-04-01 14:23:20 -返回值 : print/print/add
2019-04-01 14:23:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:23:20 -HTTP METHOD : GET
2019-04-01 14:23:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:23:20 -参数 : [userType]
2019-04-01 14:23:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:23:20 -==> Parameters: userType(String)
2019-04-01 14:23:20 -<==      Total: 2
2019-04-01 14:23:20 -耗时 : 3
2019-04-01 14:23:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:25:18 -请求地址 : http://localhost:8081/index
2019-04-01 14:25:18 -HTTP METHOD : GET
2019-04-01 14:25:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:25:18 -参数 : [{}]
2019-04-01 14:25:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:25:18 -==> Parameters: 1(Long)
2019-04-01 14:25:18 -<==      Total: 46
2019-04-01 14:25:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:25:18 -==> Parameters: 138(Long)
2019-04-01 14:25:18 -<==      Total: 1
2019-04-01 14:25:18 -耗时 : 97
2019-04-01 14:25:18 -返回值 : index_v1
2019-04-01 14:25:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:25:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 97(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:25:18.41(Timestamp)
2019-04-01 14:25:18 -<==    Updates: 1
2019-04-01 14:25:18 -请求地址 : http://localhost:8081/main
2019-04-01 14:25:18 -HTTP METHOD : GET
2019-04-01 14:25:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:25:18 -参数 : []
2019-04-01 14:25:18 -耗时 : 0
2019-04-01 14:25:18 -返回值 : main
2019-04-01 14:25:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:25:19 -HTTP METHOD : GET
2019-04-01 14:25:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:25:19 -参数 : []
2019-04-01 14:25:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:25:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:25:19 -<==      Total: 0
2019-04-01 14:25:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:25:19 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:25:19 -<==      Total: 1
2019-04-01 14:25:19 -耗时 : 8
2019-04-01 14:25:19 -返回值 : com.bootdo.common.utils.PageUtils@49817567
2019-04-01 14:25:19 -请求地址 : http://localhost:8081/main
2019-04-01 14:25:19 -HTTP METHOD : GET
2019-04-01 14:25:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:25:19 -参数 : []
2019-04-01 14:25:19 -耗时 : 2
2019-04-01 14:25:19 -返回值 : main
2019-04-01 14:25:23 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:25:23 -HTTP METHOD : GET
2019-04-01 14:25:23 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:25:23 -参数 : []
2019-04-01 14:25:23 -耗时 : 0
2019-04-01 14:25:23 -返回值 : print/print/print
2019-04-01 14:25:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:25:23 -HTTP METHOD : GET
2019-04-01 14:25:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:25:23 -参数 : [userType]
2019-04-01 14:25:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:25:23 -==> Parameters: userType(String)
2019-04-01 14:25:23 -<==      Total: 2
2019-04-01 14:25:23 -耗时 : 4
2019-04-01 14:25:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:25:23 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:25:23 -HTTP METHOD : GET
2019-04-01 14:25:23 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:25:23 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:25:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:25:23 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:25:23 -<==      Total: 3
2019-04-01 14:25:23 -==>  Preparing: select count(*) from print 
2019-04-01 14:25:23 -==> Parameters: 
2019-04-01 14:25:23 -<==      Total: 1
2019-04-01 14:25:23 -耗时 : 91
2019-04-01 14:25:23 -返回值 : com.bootdo.common.utils.PageUtils@34e34878
2019-04-01 14:25:24 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:25:24 -HTTP METHOD : GET
2019-04-01 14:25:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:25:24 -参数 : []
2019-04-01 14:25:24 -耗时 : 0
2019-04-01 14:25:24 -返回值 : print/print/add
2019-04-01 14:25:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:25:24 -HTTP METHOD : GET
2019-04-01 14:25:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:25:24 -参数 : [userType]
2019-04-01 14:25:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:25:24 -==> Parameters: userType(String)
2019-04-01 14:25:24 -<==      Total: 2
2019-04-01 14:25:24 -耗时 : 5
2019-04-01 14:25:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:25:44 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 29 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(28)-CONNECTED(28)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 336], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 56], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3667]
2019-04-01 14:25:52 -请求地址 : http://localhost:8081/login;JSESSIONID=638456a5-a231-488b-b56d-176bf1575f97
2019-04-01 14:25:52 -HTTP METHOD : GET
2019-04-01 14:25:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 14:25:52 -参数 : [{}]
2019-04-01 14:25:52 -耗时 : 1
2019-04-01 14:25:52 -返回值 : login
2019-04-01 14:25:52 -请求地址 : http://localhost:8081/getVerify
2019-04-01 14:25:52 -HTTP METHOD : GET
2019-04-01 14:25:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 14:25:52 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5a9bb1f4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5e362a66]
2019-04-01 14:25:52 -9760
2019-04-01 14:25:52 -耗时 : 45
2019-04-01 14:25:52 -返回值 : null
2019-04-01 14:25:52 -请求地址 : http://localhost:8081/login
2019-04-01 14:25:52 -HTTP METHOD : GET
2019-04-01 14:25:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 14:25:52 -参数 : [{}]
2019-04-01 14:25:52 -耗时 : 1
2019-04-01 14:25:52 -返回值 : login
2019-04-01 14:25:56 -Validating all active sessions...
2019-04-01 14:25:56 -Finished session validation.  [1] sessions were stopped.
2019-04-01 14:25:56 -Validating all active sessions...
2019-04-01 14:25:56 -Finished session validation.  No sessions were stopped.
2019-04-01 14:25:59 -请求地址 : http://localhost:8081/login
2019-04-01 14:25:59 -HTTP METHOD : POST
2019-04-01 14:25:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-01 14:25:59 -参数 : [admin, 111111, 9760, org.apache.shiro.web.servlet.ShiroHttpServletRequest@31a7ea6a]
2019-04-01 14:25:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-01 14:25:59 -==> Parameters: admin(String)
2019-04-01 14:25:59 -<==      Total: 1
2019-04-01 14:25:59 -耗时 : 22
2019-04-01 14:25:59 -返回值 : {msg=操作成功, code=0}
2019-04-01 14:25:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:25:59 -==> Parameters: 1(Long), admin(String), 登录(String), 23(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-01 14:25:59.242(Timestamp)
2019-04-01 14:25:59 -<==    Updates: 1
2019-04-01 14:25:59 -请求地址 : http://localhost:8081/index
2019-04-01 14:25:59 -HTTP METHOD : GET
2019-04-01 14:25:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:25:59 -参数 : [{}]
2019-04-01 14:25:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:25:59 -==> Parameters: 1(Long)
2019-04-01 14:25:59 -<==      Total: 46
2019-04-01 14:25:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:25:59 -==> Parameters: 138(Long)
2019-04-01 14:25:59 -<==      Total: 1
2019-04-01 14:25:59 -耗时 : 48
2019-04-01 14:25:59 -返回值 : index_v1
2019-04-01 14:25:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:25:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 48(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:25:59.532(Timestamp)
2019-04-01 14:25:59 -<==    Updates: 1
2019-04-01 14:25:59 -请求地址 : http://localhost:8081/main
2019-04-01 14:25:59 -HTTP METHOD : GET
2019-04-01 14:25:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:25:59 -参数 : []
2019-04-01 14:25:59 -耗时 : 0
2019-04-01 14:25:59 -返回值 : main
2019-04-01 14:26:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:26:00 -HTTP METHOD : GET
2019-04-01 14:26:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:26:00 -参数 : []
2019-04-01 14:26:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:26:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:26:00 -<==      Total: 0
2019-04-01 14:26:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:26:00 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:26:00 -<==      Total: 1
2019-04-01 14:26:00 -耗时 : 33
2019-04-01 14:26:00 -返回值 : com.bootdo.common.utils.PageUtils@31a1b0cf
2019-04-01 14:26:00 -请求地址 : http://localhost:8081/main
2019-04-01 14:26:00 -HTTP METHOD : GET
2019-04-01 14:26:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:26:00 -参数 : []
2019-04-01 14:26:00 -耗时 : 1
2019-04-01 14:26:00 -返回值 : main
2019-04-01 14:26:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 14:26:01 -==> Parameters: 1(Long)
2019-04-01 14:26:01 -<==      Total: 90
2019-04-01 14:26:01 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:26:01 -HTTP METHOD : GET
2019-04-01 14:26:01 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:26:01 -参数 : []
2019-04-01 14:26:01 -耗时 : 0
2019-04-01 14:26:01 -返回值 : print/print/print
2019-04-01 14:26:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:26:03 -HTTP METHOD : GET
2019-04-01 14:26:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:26:03 -参数 : [userType]
2019-04-01 14:26:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:26:03 -==> Parameters: userType(String)
2019-04-01 14:26:03 -<==      Total: 2
2019-04-01 14:26:03 -耗时 : 3
2019-04-01 14:26:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:26:03 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:26:03 -HTTP METHOD : GET
2019-04-01 14:26:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:26:03 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:26:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:26:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:26:03 -<==      Total: 3
2019-04-01 14:26:03 -==>  Preparing: select count(*) from print 
2019-04-01 14:26:03 -==> Parameters: 
2019-04-01 14:26:03 -<==      Total: 1
2019-04-01 14:26:03 -耗时 : 5
2019-04-01 14:26:03 -返回值 : com.bootdo.common.utils.PageUtils@53d79dd6
2019-04-01 14:26:05 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:26:05 -HTTP METHOD : GET
2019-04-01 14:26:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:26:05 -参数 : []
2019-04-01 14:26:05 -耗时 : 0
2019-04-01 14:26:05 -返回值 : print/print/add
2019-04-01 14:26:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:26:05 -HTTP METHOD : GET
2019-04-01 14:26:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:26:05 -参数 : [userType]
2019-04-01 14:26:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:26:05 -==> Parameters: userType(String)
2019-04-01 14:26:05 -<==      Total: 2
2019-04-01 14:26:05 -耗时 : 3
2019-04-01 14:26:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:26:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 14:26:31 -HTTP METHOD : GET
2019-04-01 14:26:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 14:26:31 -参数 : []
2019-04-01 14:26:31 -耗时 : 0
2019-04-01 14:26:31 -返回值 : system/dept/deptTree
2019-04-01 14:26:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 14:26:32 -HTTP METHOD : GET
2019-04-01 14:26:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 14:26:32 -参数 : []
2019-04-01 14:26:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 14:26:32 -==> Parameters: 
2019-04-01 14:26:32 -<==      Total: 3
2019-04-01 14:26:32 -耗时 : 6
2019-04-01 14:26:32 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 14:28:36 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 14:28:36 -HTTP METHOD : POST
2019-04-01 14:28:36 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 14:28:36 -参数 : [com.bootdo.print.domain.PrintDO@6f496ba]
2019-04-01 14:28:36 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:28:36 -==> Parameters: 1(String), 1(String), A(String), 2(String), 111(String), 1(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 14:28:36.051(Timestamp), 1(Long), (String)
2019-04-01 14:28:36 -{conn-10002, pstmt-20041} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:223)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 14:28:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:28:36 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:223)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 14:28:36 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null(String), null, 2019-04-01 14:28:36.061(Timestamp)
2019-04-01 14:28:36 -<==    Updates: 1
2019-04-01 14:32:40 -请求地址 : http://localhost:8081/index
2019-04-01 14:32:40 -HTTP METHOD : GET
2019-04-01 14:32:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:32:40 -参数 : [{}]
2019-04-01 14:32:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:32:40 -==> Parameters: 1(Long)
2019-04-01 14:32:40 -<==      Total: 46
2019-04-01 14:32:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:32:40 -==> Parameters: 138(Long)
2019-04-01 14:32:40 -<==      Total: 1
2019-04-01 14:32:40 -耗时 : 14
2019-04-01 14:32:40 -返回值 : index_v1
2019-04-01 14:32:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:32:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:32:40.318(Timestamp)
2019-04-01 14:32:40 -<==    Updates: 1
2019-04-01 14:32:40 -请求地址 : http://localhost:8081/main
2019-04-01 14:32:40 -HTTP METHOD : GET
2019-04-01 14:32:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:32:40 -参数 : []
2019-04-01 14:32:40 -耗时 : 0
2019-04-01 14:32:40 -返回值 : main
2019-04-01 14:32:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:32:40 -HTTP METHOD : GET
2019-04-01 14:32:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:32:40 -参数 : []
2019-04-01 14:32:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:32:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:32:40 -<==      Total: 0
2019-04-01 14:32:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:32:40 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:32:40 -<==      Total: 1
2019-04-01 14:32:40 -耗时 : 7
2019-04-01 14:32:40 -返回值 : com.bootdo.common.utils.PageUtils@63ac5ae5
2019-04-01 14:32:41 -请求地址 : http://localhost:8081/main
2019-04-01 14:32:41 -HTTP METHOD : GET
2019-04-01 14:32:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:32:41 -参数 : []
2019-04-01 14:32:41 -耗时 : 0
2019-04-01 14:32:41 -返回值 : main
2019-04-01 14:32:43 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:32:43 -HTTP METHOD : GET
2019-04-01 14:32:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:32:43 -参数 : []
2019-04-01 14:32:43 -耗时 : 1
2019-04-01 14:32:43 -返回值 : print/print/print
2019-04-01 14:32:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:32:44 -HTTP METHOD : GET
2019-04-01 14:32:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:32:44 -参数 : [userType]
2019-04-01 14:32:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:32:44 -==> Parameters: userType(String)
2019-04-01 14:32:44 -<==      Total: 2
2019-04-01 14:32:44 -耗时 : 5
2019-04-01 14:32:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:32:44 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:32:44 -HTTP METHOD : GET
2019-04-01 14:32:44 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:32:44 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:32:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:32:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:32:44 -<==      Total: 3
2019-04-01 14:32:44 -==>  Preparing: select count(*) from print 
2019-04-01 14:32:44 -==> Parameters: 
2019-04-01 14:32:44 -<==      Total: 1
2019-04-01 14:32:44 -耗时 : 7
2019-04-01 14:32:44 -返回值 : com.bootdo.common.utils.PageUtils@16d51220
2019-04-01 14:32:45 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:32:45 -HTTP METHOD : GET
2019-04-01 14:32:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:32:45 -参数 : []
2019-04-01 14:32:45 -耗时 : 0
2019-04-01 14:32:45 -返回值 : print/print/add
2019-04-01 14:32:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:32:46 -HTTP METHOD : GET
2019-04-01 14:32:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:32:46 -参数 : [userType]
2019-04-01 14:32:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:32:46 -==> Parameters: userType(String)
2019-04-01 14:32:46 -<==      Total: 2
2019-04-01 14:32:46 -耗时 : 3
2019-04-01 14:32:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:36:29 -请求地址 : http://localhost:8081/index
2019-04-01 14:36:29 -HTTP METHOD : GET
2019-04-01 14:36:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:36:29 -参数 : [{}]
2019-04-01 14:36:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:36:29 -==> Parameters: 1(Long)
2019-04-01 14:36:29 -<==      Total: 46
2019-04-01 14:36:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:36:29 -==> Parameters: 138(Long)
2019-04-01 14:36:29 -<==      Total: 1
2019-04-01 14:36:29 -耗时 : 30
2019-04-01 14:36:29 -返回值 : index_v1
2019-04-01 14:36:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:36:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:36:29.971(Timestamp)
2019-04-01 14:36:30 -<==    Updates: 1
2019-04-01 14:36:30 -请求地址 : http://localhost:8081/main
2019-04-01 14:36:30 -HTTP METHOD : GET
2019-04-01 14:36:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:36:30 -参数 : []
2019-04-01 14:36:30 -耗时 : 0
2019-04-01 14:36:30 -返回值 : main
2019-04-01 14:36:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:36:30 -HTTP METHOD : GET
2019-04-01 14:36:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:36:30 -参数 : []
2019-04-01 14:36:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:36:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:36:30 -<==      Total: 0
2019-04-01 14:36:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:36:30 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:36:30 -<==      Total: 1
2019-04-01 14:36:30 -耗时 : 8
2019-04-01 14:36:30 -返回值 : com.bootdo.common.utils.PageUtils@7c78606a
2019-04-01 14:36:30 -请求地址 : http://localhost:8081/main
2019-04-01 14:36:30 -HTTP METHOD : GET
2019-04-01 14:36:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:36:30 -参数 : []
2019-04-01 14:36:30 -耗时 : 1
2019-04-01 14:36:30 -返回值 : main
2019-04-01 14:36:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 14:36:32 -==> Parameters: 1(Long)
2019-04-01 14:36:32 -<==      Total: 90
2019-04-01 14:36:32 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:36:32 -HTTP METHOD : GET
2019-04-01 14:36:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:36:32 -参数 : []
2019-04-01 14:36:32 -耗时 : 1
2019-04-01 14:36:32 -返回值 : print/print/print
2019-04-01 14:36:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:36:33 -HTTP METHOD : GET
2019-04-01 14:36:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:36:33 -参数 : [userType]
2019-04-01 14:36:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:36:33 -==> Parameters: userType(String)
2019-04-01 14:36:33 -<==      Total: 2
2019-04-01 14:36:33 -耗时 : 4
2019-04-01 14:36:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:36:33 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:36:33 -HTTP METHOD : GET
2019-04-01 14:36:33 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:36:33 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:36:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:36:33 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:36:33 -<==      Total: 3
2019-04-01 14:36:33 -==>  Preparing: select count(*) from print 
2019-04-01 14:36:33 -==> Parameters: 
2019-04-01 14:36:33 -<==      Total: 1
2019-04-01 14:36:33 -耗时 : 6
2019-04-01 14:36:33 -返回值 : com.bootdo.common.utils.PageUtils@13438a5d
2019-04-01 14:36:34 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:36:34 -HTTP METHOD : GET
2019-04-01 14:36:34 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:36:34 -参数 : []
2019-04-01 14:36:34 -耗时 : 1
2019-04-01 14:36:34 -返回值 : print/print/add
2019-04-01 14:36:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:36:34 -HTTP METHOD : GET
2019-04-01 14:36:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:36:34 -参数 : [userType]
2019-04-01 14:36:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:36:34 -==> Parameters: userType(String)
2019-04-01 14:36:34 -<==      Total: 2
2019-04-01 14:36:34 -耗时 : 3
2019-04-01 14:36:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:37:14 -请求地址 : http://localhost:8081/login;JSESSIONID=d54009ae-bca3-4b77-b1c7-83303ac98a0c
2019-04-01 14:37:14 -HTTP METHOD : GET
2019-04-01 14:37:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 14:37:14 -参数 : [{}]
2019-04-01 14:37:14 -耗时 : 239
2019-04-01 14:37:14 -返回值 : login
2019-04-01 14:37:16 -请求地址 : http://localhost:8081/getVerify
2019-04-01 14:37:16 -HTTP METHOD : GET
2019-04-01 14:37:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 14:37:16 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@62fb44d0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3aadaca8]
2019-04-01 14:37:16 -0307
2019-04-01 14:37:16 -耗时 : 13
2019-04-01 14:37:16 -返回值 : null
2019-04-01 14:37:16 -请求地址 : http://localhost:8081/login
2019-04-01 14:37:16 -HTTP METHOD : GET
2019-04-01 14:37:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 14:37:16 -参数 : [{}]
2019-04-01 14:37:16 -耗时 : 0
2019-04-01 14:37:16 -返回值 : login
2019-04-01 14:37:22 -请求地址 : http://localhost:8081/login
2019-04-01 14:37:22 -HTTP METHOD : POST
2019-04-01 14:37:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-01 14:37:22 -参数 : [admin, 111111, 0307, org.apache.shiro.web.servlet.ShiroHttpServletRequest@469d1559]
2019-04-01 14:37:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-01 14:37:22 -==> Parameters: admin(String)
2019-04-01 14:37:22 -<==      Total: 1
2019-04-01 14:37:22 -耗时 : 4
2019-04-01 14:37:22 -返回值 : {msg=操作成功, code=0}
2019-04-01 14:37:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:37:22 -==> Parameters: 1(Long), admin(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-01 14:37:22.16(Timestamp)
2019-04-01 14:37:22 -请求地址 : http://localhost:8081/index
2019-04-01 14:37:22 -HTTP METHOD : GET
2019-04-01 14:37:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:37:22 -参数 : [{}]
2019-04-01 14:37:22 -<==    Updates: 1
2019-04-01 14:37:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:37:22 -==> Parameters: 1(Long)
2019-04-01 14:37:22 -<==      Total: 46
2019-04-01 14:37:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:37:22 -==> Parameters: 138(Long)
2019-04-01 14:37:22 -<==      Total: 1
2019-04-01 14:37:22 -耗时 : 467
2019-04-01 14:37:22 -返回值 : index_v1
2019-04-01 14:37:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:37:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 468(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:37:22.678(Timestamp)
2019-04-01 14:37:22 -请求地址 : http://localhost:8081/main
2019-04-01 14:37:22 -HTTP METHOD : GET
2019-04-01 14:37:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:37:22 -参数 : []
2019-04-01 14:37:22 -耗时 : 1
2019-04-01 14:37:22 -返回值 : main
2019-04-01 14:37:22 -<==    Updates: 1
2019-04-01 14:37:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:37:23 -HTTP METHOD : GET
2019-04-01 14:37:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:37:23 -参数 : []
2019-04-01 14:37:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:37:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:37:23 -请求地址 : http://localhost:8081/main
2019-04-01 14:37:23 -HTTP METHOD : GET
2019-04-01 14:37:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:37:23 -参数 : []
2019-04-01 14:37:23 -耗时 : 1
2019-04-01 14:37:23 -返回值 : main
2019-04-01 14:37:23 -<==      Total: 0
2019-04-01 14:37:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:37:23 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:37:23 -<==      Total: 1
2019-04-01 14:37:23 -耗时 : 117
2019-04-01 14:37:23 -返回值 : com.bootdo.common.utils.PageUtils@39335d3c
2019-04-01 14:37:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 14:37:29 -==> Parameters: 1(Long)
2019-04-01 14:37:29 -<==      Total: 90
2019-04-01 14:37:29 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:37:29 -HTTP METHOD : GET
2019-04-01 14:37:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:37:29 -参数 : []
2019-04-01 14:37:29 -耗时 : 1
2019-04-01 14:37:29 -返回值 : print/print/print
2019-04-01 14:37:31 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:37:31 -HTTP METHOD : GET
2019-04-01 14:37:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:37:31 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:37:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:37:31 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:37:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:37:31 -HTTP METHOD : GET
2019-04-01 14:37:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:37:31 -参数 : [userType]
2019-04-01 14:37:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:37:31 -==> Parameters: userType(String)
2019-04-01 14:37:31 -<==      Total: 3
2019-04-01 14:37:31 -==>  Preparing: select count(*) from print 
2019-04-01 14:37:31 -==> Parameters: 
2019-04-01 14:37:31 -<==      Total: 1
2019-04-01 14:37:31 -耗时 : 43
2019-04-01 14:37:31 -返回值 : com.bootdo.common.utils.PageUtils@7a2b63cf
2019-04-01 14:37:31 -<==      Total: 2
2019-04-01 14:37:31 -耗时 : 67
2019-04-01 14:37:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:37:32 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 14:37:32 -HTTP METHOD : GET
2019-04-01 14:37:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 14:37:32 -参数 : []
2019-04-01 14:37:32 -耗时 : 1
2019-04-01 14:37:32 -返回值 : print/print/add
2019-04-01 14:37:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:37:32 -HTTP METHOD : GET
2019-04-01 14:37:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:37:32 -参数 : [userType]
2019-04-01 14:37:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:37:32 -==> Parameters: userType(String)
2019-04-01 14:37:32 -<==      Total: 2
2019-04-01 14:37:32 -耗时 : 59
2019-04-01 14:37:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:37:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 14:37:52 -HTTP METHOD : GET
2019-04-01 14:37:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 14:37:52 -参数 : []
2019-04-01 14:37:52 -耗时 : 1
2019-04-01 14:37:52 -返回值 : system/dept/deptTree
2019-04-01 14:37:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 14:37:52 -HTTP METHOD : GET
2019-04-01 14:37:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 14:37:52 -参数 : []
2019-04-01 14:37:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 14:37:52 -==> Parameters: 
2019-04-01 14:37:52 -<==      Total: 3
2019-04-01 14:37:52 -耗时 : 4
2019-04-01 14:37:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 14:38:30 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 14:38:30 -HTTP METHOD : POST
2019-04-01 14:38:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 14:38:30 -参数 : [com.bootdo.print.domain.PrintDO@19b14f2f]
2019-04-01 14:38:30 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:38:30 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 14:38:30.21(Timestamp), 1(Long), (String)
2019-04-01 14:38:30 -{conn-10002, pstmt-20042} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:223)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 14:38:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:38:30 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:223)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 14:38:30 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null(String), null, 2019-04-01 14:38:30.243(Timestamp)
2019-04-01 14:38:30 -<==    Updates: 1
2019-04-01 14:44:48 -请求地址 : http://localhost:8081/login;JSESSIONID=4691f345-5598-4688-a764-194c557e9ca3
2019-04-01 14:44:48 -HTTP METHOD : GET
2019-04-01 14:44:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 14:44:48 -参数 : [{}]
2019-04-01 14:44:48 -耗时 : 2
2019-04-01 14:44:48 -返回值 : login
2019-04-01 14:44:52 -请求地址 : http://localhost:8081/getVerify
2019-04-01 14:44:52 -HTTP METHOD : GET
2019-04-01 14:44:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 14:44:52 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6bd44466, org.apache.shiro.web.servlet.ShiroHttpServletResponse@48bd2fcd]
2019-04-01 14:44:53 -5489
2019-04-01 14:44:53 -耗时 : 575
2019-04-01 14:44:53 -返回值 : null
2019-04-01 14:44:53 -请求地址 : http://localhost:8081/login
2019-04-01 14:44:53 -HTTP METHOD : GET
2019-04-01 14:44:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 14:44:53 -参数 : [{}]
2019-04-01 14:44:53 -耗时 : 0
2019-04-01 14:44:53 -返回值 : login
2019-04-01 14:44:58 -请求地址 : http://localhost:8081/login
2019-04-01 14:44:58 -HTTP METHOD : POST
2019-04-01 14:44:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-01 14:44:58 -参数 : [admin, 111111, 5489, org.apache.shiro.web.servlet.ShiroHttpServletRequest@78a998c]
2019-04-01 14:44:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-01 14:44:58 -==> Parameters: admin(String)
2019-04-01 14:44:59 -<==      Total: 1
2019-04-01 14:44:59 -耗时 : 206
2019-04-01 14:44:59 -返回值 : {msg=操作成功, code=0}
2019-04-01 14:44:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:44:59 -==> Parameters: 1(Long), admin(String), 登录(String), 207(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-01 14:44:59.07(Timestamp)
2019-04-01 14:44:59 -请求地址 : http://localhost:8081/index
2019-04-01 14:44:59 -HTTP METHOD : GET
2019-04-01 14:44:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 14:44:59 -参数 : [{}]
2019-04-01 14:44:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 14:44:59 -==> Parameters: 1(Long)
2019-04-01 14:44:59 -<==    Updates: 1
2019-04-01 14:44:59 -<==      Total: 46
2019-04-01 14:44:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 14:44:59 -==> Parameters: 138(Long)
2019-04-01 14:44:59 -<==      Total: 1
2019-04-01 14:44:59 -耗时 : 429
2019-04-01 14:44:59 -返回值 : index_v1
2019-04-01 14:44:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 14:44:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 429(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 14:44:59.551(Timestamp)
2019-04-01 14:44:59 -<==    Updates: 1
2019-04-01 14:44:59 -请求地址 : http://localhost:8081/main
2019-04-01 14:44:59 -HTTP METHOD : GET
2019-04-01 14:44:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:44:59 -参数 : []
2019-04-01 14:44:59 -耗时 : 1
2019-04-01 14:44:59 -返回值 : main
2019-04-01 14:45:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 14:45:01 -HTTP METHOD : GET
2019-04-01 14:45:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 14:45:01 -参数 : []
2019-04-01 14:45:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 14:45:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 14:45:02 -请求地址 : http://localhost:8081/main
2019-04-01 14:45:02 -HTTP METHOD : GET
2019-04-01 14:45:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 14:45:02 -参数 : []
2019-04-01 14:45:02 -耗时 : 0
2019-04-01 14:45:02 -返回值 : main
2019-04-01 14:45:02 -<==      Total: 0
2019-04-01 14:45:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 14:45:02 -==> Parameters: 1(Long), 0(String)
2019-04-01 14:45:02 -<==      Total: 1
2019-04-01 14:45:02 -耗时 : 531
2019-04-01 14:45:02 -返回值 : com.bootdo.common.utils.PageUtils@f94a351
2019-04-01 14:45:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 14:45:11 -==> Parameters: 1(Long)
2019-04-01 14:45:11 -<==      Total: 90
2019-04-01 14:45:11 -请求地址 : http://localhost:8081/print/print
2019-04-01 14:45:11 -HTTP METHOD : GET
2019-04-01 14:45:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 14:45:11 -参数 : []
2019-04-01 14:45:11 -耗时 : 0
2019-04-01 14:45:11 -返回值 : print/print/print
2019-04-01 14:45:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 14:45:13 -HTTP METHOD : GET
2019-04-01 14:45:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 14:45:13 -参数 : [userType]
2019-04-01 14:45:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 14:45:13 -==> Parameters: userType(String)
2019-04-01 14:45:13 -<==      Total: 2
2019-04-01 14:45:13 -耗时 : 24
2019-04-01 14:45:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 14:45:13 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:45:13 -HTTP METHOD : GET
2019-04-01 14:45:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:45:13 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 14:45:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 14:45:13 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 14:45:13 -<==      Total: 3
2019-04-01 14:45:13 -==>  Preparing: select count(*) from print 
2019-04-01 14:45:13 -==> Parameters: 
2019-04-01 14:45:13 -<==      Total: 1
2019-04-01 14:45:13 -耗时 : 20
2019-04-01 14:45:13 -返回值 : com.bootdo.common.utils.PageUtils@5ff3b88c
2019-04-01 14:45:27 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 14:45:27 -HTTP METHOD : GET
2019-04-01 14:45:27 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 14:45:27 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=, userId=, type=A}]
2019-04-01 14:45:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 14:45:28 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 14:45:28 -<==      Total: 0
2019-04-01 14:45:28 -==>  Preparing: select count(*) from print WHERE user_type = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 14:45:28 -==> Parameters: A(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 14:45:28 -<==      Total: 1
2019-04-01 14:45:28 -耗时 : 98
2019-04-01 14:45:28 -返回值 : com.bootdo.common.utils.PageUtils@403d9265
2019-04-01 14:45:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 14:45:28 -HTTP METHOD : GET
2019-04-01 14:45:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 14:45:28 -参数 : []
2019-04-01 14:45:28 -耗时 : 0
2019-04-01 14:45:28 -返回值 : system/dept/deptTree
2019-04-01 14:45:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 14:45:29 -HTTP METHOD : GET
2019-04-01 14:45:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 14:45:29 -参数 : []
2019-04-01 14:45:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 14:45:29 -==> Parameters: 
2019-04-01 14:45:29 -<==      Total: 3
2019-04-01 14:45:29 -耗时 : 2
2019-04-01 14:45:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 14:45:32 -请求地址 : http://localhost:8081/print/print/exprotPrint
2019-04-01 14:45:32 -HTTP METHOD : GET
2019-04-01 14:45:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.exprotPrint
2019-04-01 14:45:32 -参数 : [com.bootdo.print.vo.PrintVo@7982bd54, org.apache.shiro.web.servlet.ShiroHttpServletResponse@10d24aa9, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7e268fb2]
2019-04-01 14:46:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and create_time = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 14:46:51 -==> Parameters: A(String), 2(String), 2019-03-26(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 14:46:51 -<==      Total: 0
2019-04-01 14:48:50 -耗时 : 197928
2019-04-01 14:48:50 -返回值 : null
2019-04-01 14:55:00 -Validating all active sessions...
2019-04-01 14:55:00 -Finished session validation.  [1] sessions were stopped.
2019-04-01 14:55:44 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 34 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(33)-CONNECTED(33)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 396], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 66], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4096]
2019-04-01 15:25:44 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 34 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(33)-CONNECTED(33)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 396], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 66], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4529]
2019-04-01 15:31:37 -请求地址 : http://localhost:8081/login;JSESSIONID=154a39e0-70f8-4b0a-b1c8-e39e1a9db160
2019-04-01 15:31:37 -HTTP METHOD : GET
2019-04-01 15:31:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 15:31:37 -参数 : [{}]
2019-04-01 15:31:37 -耗时 : 1
2019-04-01 15:31:37 -返回值 : login
2019-04-01 15:31:39 -请求地址 : http://localhost:8081/getVerify
2019-04-01 15:31:39 -HTTP METHOD : GET
2019-04-01 15:31:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 15:31:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6f60b557, org.apache.shiro.web.servlet.ShiroHttpServletResponse@44e7ce4a]
2019-04-01 15:31:39 -3406
2019-04-01 15:31:39 -耗时 : 147
2019-04-01 15:31:39 -返回值 : null
2019-04-01 15:31:39 -请求地址 : http://localhost:8081/login
2019-04-01 15:31:39 -HTTP METHOD : GET
2019-04-01 15:31:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 15:31:39 -参数 : [{}]
2019-04-01 15:31:39 -耗时 : 1
2019-04-01 15:31:39 -返回值 : login
2019-04-01 15:31:44 -请求地址 : http://localhost:8081/login
2019-04-01 15:31:44 -HTTP METHOD : POST
2019-04-01 15:31:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-01 15:31:44 -参数 : [admin, 111111, 3406, org.apache.shiro.web.servlet.ShiroHttpServletRequest@46cd1fed]
2019-04-01 15:31:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-01 15:31:44 -==> Parameters: admin(String)
2019-04-01 15:31:44 -<==      Total: 1
2019-04-01 15:31:44 -耗时 : 10
2019-04-01 15:31:44 -返回值 : {msg=操作成功, code=0}
2019-04-01 15:31:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:31:44 -请求地址 : http://localhost:8081/index
2019-04-01 15:31:44 -HTTP METHOD : GET
2019-04-01 15:31:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 15:31:44 -参数 : [{}]
2019-04-01 15:31:44 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-01 15:31:44.948(Timestamp)
2019-04-01 15:31:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 15:31:45 -==> Parameters: 1(Long)
2019-04-01 15:31:45 -<==      Total: 46
2019-04-01 15:31:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 15:31:45 -==> Parameters: 138(Long)
2019-04-01 15:31:45 -<==      Total: 1
2019-04-01 15:31:45 -耗时 : 878
2019-04-01 15:31:45 -返回值 : index_v1
2019-04-01 15:31:45 -<==    Updates: 1
2019-04-01 15:31:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:31:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 879(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 15:31:45.848(Timestamp)
2019-04-01 15:31:46 -<==    Updates: 1
2019-04-01 15:31:47 -请求地址 : http://localhost:8081/main
2019-04-01 15:31:47 -HTTP METHOD : GET
2019-04-01 15:31:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 15:31:47 -参数 : []
2019-04-01 15:31:47 -耗时 : 154
2019-04-01 15:31:47 -返回值 : main
2019-04-01 15:31:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 15:31:48 -HTTP METHOD : GET
2019-04-01 15:31:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 15:31:48 -参数 : []
2019-04-01 15:31:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 15:31:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 15:31:48 -请求地址 : http://localhost:8081/main
2019-04-01 15:31:48 -HTTP METHOD : GET
2019-04-01 15:31:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 15:31:48 -参数 : []
2019-04-01 15:31:48 -耗时 : 0
2019-04-01 15:31:48 -返回值 : main
2019-04-01 15:31:48 -<==      Total: 0
2019-04-01 15:31:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 15:31:48 -==> Parameters: 1(Long), 0(String)
2019-04-01 15:31:48 -<==      Total: 1
2019-04-01 15:31:48 -耗时 : 99
2019-04-01 15:31:48 -返回值 : com.bootdo.common.utils.PageUtils@6d9c02c2
2019-04-01 15:31:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 15:31:59 -==> Parameters: 1(Long)
2019-04-01 15:31:59 -<==      Total: 90
2019-04-01 15:31:59 -请求地址 : http://localhost:8081/print/print
2019-04-01 15:31:59 -HTTP METHOD : GET
2019-04-01 15:31:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 15:31:59 -参数 : []
2019-04-01 15:31:59 -耗时 : 13
2019-04-01 15:31:59 -返回值 : print/print/print
2019-04-01 15:32:01 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 15:32:01 -HTTP METHOD : GET
2019-04-01 15:32:01 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 15:32:01 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 15:32:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 15:32:01 -HTTP METHOD : GET
2019-04-01 15:32:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 15:32:01 -参数 : [userType]
2019-04-01 15:32:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 15:32:01 -==> Parameters: userType(String)
2019-04-01 15:32:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 15:32:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 15:32:01 -<==      Total: 2
2019-04-01 15:32:01 -耗时 : 23
2019-04-01 15:32:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 15:32:01 -<==      Total: 3
2019-04-01 15:32:01 -==>  Preparing: select count(*) from print 
2019-04-01 15:32:01 -==> Parameters: 
2019-04-01 15:32:01 -<==      Total: 1
2019-04-01 15:32:01 -耗时 : 48
2019-04-01 15:32:01 -返回值 : com.bootdo.common.utils.PageUtils@146c8435
2019-04-01 15:32:02 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 15:32:02 -HTTP METHOD : GET
2019-04-01 15:32:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 15:32:02 -参数 : []
2019-04-01 15:32:02 -耗时 : 1
2019-04-01 15:32:02 -返回值 : print/print/add
2019-04-01 15:32:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 15:32:03 -HTTP METHOD : GET
2019-04-01 15:32:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 15:32:03 -参数 : [userType]
2019-04-01 15:32:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 15:32:03 -==> Parameters: userType(String)
2019-04-01 15:32:03 -<==      Total: 2
2019-04-01 15:32:03 -耗时 : 73
2019-04-01 15:32:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 15:32:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 15:32:37 -HTTP METHOD : GET
2019-04-01 15:32:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 15:32:37 -参数 : []
2019-04-01 15:32:37 -耗时 : 15
2019-04-01 15:32:37 -返回值 : system/dept/deptTree
2019-04-01 15:32:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 15:32:38 -HTTP METHOD : GET
2019-04-01 15:32:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 15:32:38 -参数 : []
2019-04-01 15:32:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 15:32:38 -==> Parameters: 
2019-04-01 15:32:38 -<==      Total: 3
2019-04-01 15:32:38 -耗时 : 17
2019-04-01 15:32:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 15:32:43 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 15:32:43 -HTTP METHOD : POST
2019-04-01 15:32:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 15:32:43 -参数 : [com.bootdo.print.domain.PrintDO@2d779f12]
2019-04-01 15:32:43 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:32:43 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 15:32:43.744(Timestamp), 1(Long), (String)
2019-04-01 15:32:43 -{conn-10002, pstmt-20043} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:224)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 15:32:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:32:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null(String), null, 2019-04-01 15:32:43.963(Timestamp)
2019-04-01 15:32:43 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:224)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 15:32:44 -<==    Updates: 1
2019-04-01 15:32:46 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 15:32:46 -HTTP METHOD : POST
2019-04-01 15:32:46 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 15:32:46 -参数 : [com.bootdo.print.domain.PrintDO@6ae40fc8]
2019-04-01 15:32:46 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:32:46 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 15:32:46.604(Timestamp), 1(Long), (String)
2019-04-01 15:32:46 -{conn-10002, pstmt-20044} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:224)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 15:32:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:32:46 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null(String), null, 2019-04-01 15:32:46.645(Timestamp)
2019-04-01 15:32:46 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:224)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 15:32:46 -<==    Updates: 1
2019-04-01 15:32:48 -请求地址 : http://localhost:8081/print/print/save
2019-04-01 15:32:48 -HTTP METHOD : POST
2019-04-01 15:32:48 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-01 15:32:48 -参数 : [com.bootdo.print.domain.PrintDO@61d5eb7a]
2019-04-01 15:32:48 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `cost_poper`, `print_state`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:32:48 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(String), 1(String), null, null, 1(Long), 2019-04-01 15:32:48.739(Timestamp), 1(Long), (String)
2019-04-01 15:32:48 -{conn-10002, pstmt-20045} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_cost`, 
			`water_sum`, 
			`water_money`, 
			`cost_poper`, 
			`print_state`, 
			`print_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:224)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 15:32:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:32:49 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null(String), null, 2019-04-01 15:32:49.036(Timestamp)
2019-04-01 15:32:49 -<==    Updates: 1
2019-04-01 15:32:49 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_cost`,     `water_sum`,     `water_money`,     `cost_poper`,     `print_state`,     `print_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
; ]; Column 'print_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:41)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:224)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$7d0ba3a5.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'print_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-01 15:41:38 -Starting BootdoApplication on ZJZL-20180906VX with PID 12180 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-01 15:41:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-01 15:41:38 -The following profiles are active: dev
2019-04-01 15:41:44 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e260766: startup date [Mon Apr 01 15:41:44 CST 2019]; root of context hierarchy
2019-04-01 15:41:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-01 15:42:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e06fc50b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:42:01 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d2c8f3b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:42:04 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:42:05 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:42:05 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:42:05 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-01 15:42:05 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-01 15:42:05 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:42:05 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:42:06 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:42:06 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:42:08 -Tomcat initialized with port(s): 8081 (http)
2019-04-01 15:42:08 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-01 15:42:08 -Starting service [Tomcat]
2019-04-01 15:42:08 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-01 15:42:08 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-01 15:42:09 -Initializing Spring embedded WebApplicationContext
2019-04-01 15:42:09 -Root WebApplicationContext: initialization completed in 24931 ms
2019-04-01 15:42:10 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-01 15:42:10 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-01 15:42:10 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-01 15:42:10 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-01 15:42:10 -Filter xssFilter was not registered (disabled)
2019-04-01 15:42:10 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-01 15:42:10 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-01 15:42:10 -Servlet statViewServlet mapped to [/druid/*]
2019-04-01 15:42:10 -Servlet dispatcherServlet mapped to [/]
2019-04-01 15:42:16 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e260766: startup date [Mon Apr 01 15:41:44 CST 2019]; root of context hierarchy
2019-04-01 15:42:17 -Using default implementation for ThreadExecutor
2019-04-01 15:42:17 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-01 15:42:17 -Quartz Scheduler v.2.2.1 created.
2019-04-01 15:42:17 -RAMJobStore initialized.
2019-04-01 15:42:17 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-01 15:42:17 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-01 15:42:17 -Quartz scheduler version: 2.2.1
2019-04-01 15:42:17 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2bd7f686
2019-04-01 15:42:18 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-01 15:42:18 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-01 15:42:22 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:42:22 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-01 15:42:22 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-01 15:42:22 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-01 15:42:22 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-01 15:42:22 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-01 15:42:22 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-01 15:42:22 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-01 15:42:22 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-01 15:42:22 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-01 15:42:22 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-01 15:42:22 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:22 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-01 15:42:22 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-01 15:42:22 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-01 15:42:22 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:22 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-01 15:42:22 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-01 15:42:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-01 15:42:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-01 15:42:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-01 15:42:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-01 15:42:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-01 15:42:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-01 15:42:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 15:42:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 15:42:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-01 15:42:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-01 15:42:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-01 15:42:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-01 15:42:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-01 15:42:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-01 15:42:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-01 15:42:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-01 15:42:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-01 15:42:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 15:42:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 15:42:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-01 15:42:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-01 15:42:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-01 15:42:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-01 15:42:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:42:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-01 15:42:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-01 15:42:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:42:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-01 15:42:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-01 15:42:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-01 15:42:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-01 15:42:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-01 15:42:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-01 15:42:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-01 15:42:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-01 15:42:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-01 15:42:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-01 15:42:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-01 15:42:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-01 15:42:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:42:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-01 15:42:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:42:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-01 15:42:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-01 15:42:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 15:42:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 15:42:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-01 15:42:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-01 15:42:23 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-01 15:42:23 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 15:42:23 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:42:23 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-01 15:42:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-01 15:42:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-01 15:42:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-01 15:42:23 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-01 15:42:23 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-01 15:42:23 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-01 15:42:23 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:42:23 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-01 15:42:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-01 15:42:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-01 15:42:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-01 15:42:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-01 15:42:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-01 15:42:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-01 15:42:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-01 15:42:23 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-01 15:42:23 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-01 15:42:23 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-01 15:42:23 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:42:23 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-01 15:42:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-01 15:42:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-01 15:42:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-01 15:42:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-01 15:42:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-01 15:42:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-01 15:42:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-01 15:42:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 15:42:23 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 15:42:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-01 15:42:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-01 15:42:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-01 15:42:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-01 15:42:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-01 15:42:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-01 15:42:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-01 15:42:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-01 15:42:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-01 15:42:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-01 15:42:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-01 15:42:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-01 15:42:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-01 15:42:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-01 15:42:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-01 15:42:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-01 15:42:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 15:42:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 15:42:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-01 15:42:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 15:42:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-01 15:42:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-01 15:42:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-01 15:42:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-01 15:42:23 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-01 15:42:23 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:42:23 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-01 15:42:23 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:42:23 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-01 15:42:23 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-01 15:42:23 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-01 15:42:23 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 15:42:23 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:42:23 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 15:42:23 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-01 15:42:23 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:42:23 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-01 15:42:23 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 15:42:23 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:42:23 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-01 15:42:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 15:42:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-01 15:42:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-01 15:42:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-01 15:42:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-01 15:42:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-01 15:42:24 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-01 15:42:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 15:42:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e260766: startup date [Mon Apr 01 15:41:44 CST 2019]; root of context hierarchy
2019-04-01 15:42:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 15:42:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 15:42:26 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 15:42:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-01 15:42:26 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-01 15:42:31 -Registering beans for JMX exposure on startup
2019-04-01 15:42:31 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-01 15:42:31 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-01 15:42:31 -Starting beans in phase 2147483647
2019-04-01 15:42:31 -Context refreshed
2019-04-01 15:42:31 -Found 1 custom documentation plugin(s)
2019-04-01 15:42:31 -Scanning for api listing references
2019-04-01 15:42:32 -Generating unique operation named: removeUsingPOST_1
2019-04-01 15:42:32 -Generating unique operation named: addUsingGET_1
2019-04-01 15:42:32 -Generating unique operation named: editUsingGET_1
2019-04-01 15:42:32 -Generating unique operation named: listUsingGET_1
2019-04-01 15:42:32 -Generating unique operation named: removeUsingPOST_2
2019-04-01 15:42:32 -Generating unique operation named: removeUsingPOST_3
2019-04-01 15:42:32 -Generating unique operation named: saveUsingPOST_1
2019-04-01 15:42:32 -Generating unique operation named: updateUsingGET_1
2019-04-01 15:42:32 -Generating unique operation named: updateUsingHEAD_1
2019-04-01 15:42:32 -Generating unique operation named: updateUsingPOST_1
2019-04-01 15:42:32 -Generating unique operation named: updateUsingPUT_1
2019-04-01 15:42:32 -Generating unique operation named: updateUsingPATCH_1
2019-04-01 15:42:32 -Generating unique operation named: updateUsingDELETE_1
2019-04-01 15:42:32 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-01 15:42:32 -Generating unique operation named: updateUsingTRACE_1
2019-04-01 15:42:32 -Generating unique operation named: addUsingGET_2
2019-04-01 15:42:32 -Generating unique operation named: editUsingGET_2
2019-04-01 15:42:32 -Generating unique operation named: listUsingGET_2
2019-04-01 15:42:32 -Generating unique operation named: removeUsingPOST_4
2019-04-01 15:42:32 -Generating unique operation named: removeUsingPOST_5
2019-04-01 15:42:32 -Generating unique operation named: saveUsingPOST_2
2019-04-01 15:42:32 -Generating unique operation named: updateUsingPOST_2
2019-04-01 15:42:32 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-01 15:42:32 -Generating unique operation named: addUsingGET_3
2019-04-01 15:42:32 -Generating unique operation named: editUsingGET_3
2019-04-01 15:42:32 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-01 15:42:32 -Generating unique operation named: listUsingGET_3
2019-04-01 15:42:32 -Generating unique operation named: removeUsingPOST_6
2019-04-01 15:42:32 -Generating unique operation named: removeUsingPOST_7
2019-04-01 15:42:32 -Generating unique operation named: saveUsingPOST_3
2019-04-01 15:42:32 -Generating unique operation named: updateUsingGET_2
2019-04-01 15:42:32 -Generating unique operation named: updateUsingHEAD_2
2019-04-01 15:42:32 -Generating unique operation named: updateUsingPOST_3
2019-04-01 15:42:32 -Generating unique operation named: updateUsingPUT_2
2019-04-01 15:42:32 -Generating unique operation named: updateUsingPATCH_2
2019-04-01 15:42:32 -Generating unique operation named: updateUsingDELETE_2
2019-04-01 15:42:32 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-01 15:42:32 -Generating unique operation named: updateUsingTRACE_2
2019-04-01 15:42:32 -Generating unique operation named: addUsingGET_4
2019-04-01 15:42:32 -Generating unique operation named: editUsingGET_4
2019-04-01 15:42:32 -Generating unique operation named: listUsingGET_4
2019-04-01 15:42:32 -Generating unique operation named: removeUsingPOST_8
2019-04-01 15:42:32 -Generating unique operation named: removeUsingPOST_9
2019-04-01 15:42:32 -Generating unique operation named: saveUsingPOST_4
2019-04-01 15:42:33 -Generating unique operation named: updateUsingGET_3
2019-04-01 15:42:33 -Generating unique operation named: updateUsingHEAD_3
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPOST_4
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPUT_3
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPATCH_3
2019-04-01 15:42:33 -Generating unique operation named: updateUsingDELETE_3
2019-04-01 15:42:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-01 15:42:33 -Generating unique operation named: updateUsingTRACE_3
2019-04-01 15:42:33 -Generating unique operation named: ElecUsingGET_1
2019-04-01 15:42:33 -Generating unique operation named: addUsingGET_5
2019-04-01 15:42:33 -Generating unique operation named: editUsingGET_5
2019-04-01 15:42:33 -Generating unique operation named: listUsingGET_5
2019-04-01 15:42:33 -Generating unique operation named: removeUsingPOST_10
2019-04-01 15:42:33 -Generating unique operation named: removeUsingPOST_11
2019-04-01 15:42:33 -Generating unique operation named: saveUsingPOST_5
2019-04-01 15:42:33 -Generating unique operation named: updateUsingGET_4
2019-04-01 15:42:33 -Generating unique operation named: updateUsingHEAD_4
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPOST_5
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPUT_4
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPATCH_4
2019-04-01 15:42:33 -Generating unique operation named: updateUsingDELETE_4
2019-04-01 15:42:33 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-01 15:42:33 -Generating unique operation named: updateUsingTRACE_4
2019-04-01 15:42:33 -Generating unique operation named: editUsingGET_6
2019-04-01 15:42:33 -Generating unique operation named: listUsingGET_6
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPOST_6
2019-04-01 15:42:33 -Generating unique operation named: addUsingGET_6
2019-04-01 15:42:33 -Generating unique operation named: editUsingGET_7
2019-04-01 15:42:33 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-01 15:42:33 -Generating unique operation named: listUsingGET_7
2019-04-01 15:42:33 -Generating unique operation named: removeUsingPOST_12
2019-04-01 15:42:33 -Generating unique operation named: removeUsingPOST_13
2019-04-01 15:42:33 -Generating unique operation named: saveUsingPOST_6
2019-04-01 15:42:33 -Generating unique operation named: updateUsingGET_5
2019-04-01 15:42:33 -Generating unique operation named: updateUsingHEAD_5
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPOST_7
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPUT_5
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPATCH_5
2019-04-01 15:42:33 -Generating unique operation named: updateUsingDELETE_5
2019-04-01 15:42:33 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-01 15:42:33 -Generating unique operation named: updateUsingTRACE_5
2019-04-01 15:42:33 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-01 15:42:33 -Generating unique operation named: addUsingGET_7
2019-04-01 15:42:33 -Generating unique operation named: editUsingGET_8
2019-04-01 15:42:33 -Generating unique operation named: listUsingGET_8
2019-04-01 15:42:33 -Generating unique operation named: removeUsingPOST_14
2019-04-01 15:42:33 -Generating unique operation named: removeUsingPOST_15
2019-04-01 15:42:33 -Generating unique operation named: saveUsingPOST_7
2019-04-01 15:42:33 -Generating unique operation named: updateUsingGET_6
2019-04-01 15:42:33 -Generating unique operation named: updateUsingHEAD_6
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPOST_8
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPUT_6
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPATCH_6
2019-04-01 15:42:33 -Generating unique operation named: updateUsingDELETE_6
2019-04-01 15:42:33 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-01 15:42:33 -Generating unique operation named: updateUsingTRACE_6
2019-04-01 15:42:33 -Generating unique operation named: addUsingGET_8
2019-04-01 15:42:33 -Generating unique operation named: editUsingGET_9
2019-04-01 15:42:33 -Generating unique operation named: listUsingGET_9
2019-04-01 15:42:33 -Generating unique operation named: removeUsingPOST_16
2019-04-01 15:42:33 -Generating unique operation named: removeUsingPOST_17
2019-04-01 15:42:33 -Generating unique operation named: saveUsingPOST_8
2019-04-01 15:42:33 -Generating unique operation named: updateUsingGET_7
2019-04-01 15:42:33 -Generating unique operation named: updateUsingHEAD_7
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPOST_9
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPUT_7
2019-04-01 15:42:33 -Generating unique operation named: updateUsingPATCH_7
2019-04-01 15:42:33 -Generating unique operation named: updateUsingDELETE_7
2019-04-01 15:42:33 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-01 15:42:33 -Generating unique operation named: updateUsingTRACE_7
2019-04-01 15:42:34 -Generating unique operation named: addUsingGET_9
2019-04-01 15:42:34 -Generating unique operation named: editUsingGET_10
2019-04-01 15:42:34 -Generating unique operation named: infoUsingGET_1
2019-04-01 15:42:34 -Generating unique operation named: infoUsingHEAD_1
2019-04-01 15:42:34 -Generating unique operation named: infoUsingPOST_1
2019-04-01 15:42:34 -Generating unique operation named: infoUsingPUT_1
2019-04-01 15:42:34 -Generating unique operation named: infoUsingPATCH_1
2019-04-01 15:42:34 -Generating unique operation named: infoUsingDELETE_1
2019-04-01 15:42:34 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-01 15:42:34 -Generating unique operation named: infoUsingTRACE_1
2019-04-01 15:42:34 -Generating unique operation named: listUsingGET_10
2019-04-01 15:42:34 -Generating unique operation named: removeUsingPOST_18
2019-04-01 15:42:34 -Generating unique operation named: removeUsingPOST_19
2019-04-01 15:42:34 -Generating unique operation named: saveUsingPOST_9
2019-04-01 15:42:34 -Generating unique operation named: updateUsingPOST_10
2019-04-01 15:42:34 -Generating unique operation named: listUsingGET_11
2019-04-01 15:42:34 -Generating unique operation named: removeUsingPOST_20
2019-04-01 15:42:34 -Generating unique operation named: welcomeUsingGET_1
2019-04-01 15:42:34 -Generating unique operation named: addUsingGET_10
2019-04-01 15:42:34 -Generating unique operation named: editUsingGET_11
2019-04-01 15:42:34 -Generating unique operation named: listUsingGET_12
2019-04-01 15:42:34 -Generating unique operation named: removeUsingPOST_21
2019-04-01 15:42:34 -Generating unique operation named: saveUsingPOST_10
2019-04-01 15:42:34 -Generating unique operation named: treeUsingGET_1
2019-04-01 15:42:34 -Generating unique operation named: treeUsingGET_2
2019-04-01 15:42:34 -Generating unique operation named: updateUsingPOST_11
2019-04-01 15:42:34 -Generating unique operation named: addUsingGET_11
2019-04-01 15:42:34 -Generating unique operation named: editUsingGET_12
2019-04-01 15:42:34 -Generating unique operation named: listUsingGET_13
2019-04-01 15:42:34 -Generating unique operation named: removeUsingPOST_22
2019-04-01 15:42:34 -Generating unique operation named: removeUsingPOST_23
2019-04-01 15:42:34 -Generating unique operation named: saveUsingPOST_11
2019-04-01 15:42:34 -Generating unique operation named: updateUsingGET_8
2019-04-01 15:42:34 -Generating unique operation named: updateUsingHEAD_8
2019-04-01 15:42:34 -Generating unique operation named: updateUsingPOST_12
2019-04-01 15:42:34 -Generating unique operation named: updateUsingPUT_8
2019-04-01 15:42:34 -Generating unique operation named: updateUsingPATCH_8
2019-04-01 15:42:34 -Generating unique operation named: updateUsingDELETE_8
2019-04-01 15:42:34 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-01 15:42:34 -Generating unique operation named: updateUsingTRACE_8
2019-04-01 15:42:34 -Generating unique operation named: addUsingGET_12
2019-04-01 15:42:34 -Generating unique operation named: editUsingGET_13
2019-04-01 15:42:34 -Generating unique operation named: listUsingGET_14
2019-04-01 15:42:34 -Generating unique operation named: removeUsingPOST_24
2019-04-01 15:42:34 -Generating unique operation named: removeUsingPOST_25
2019-04-01 15:42:34 -Generating unique operation named: saveUsingPOST_12
2019-04-01 15:42:34 -Generating unique operation named: updateUsingGET_9
2019-04-01 15:42:34 -Generating unique operation named: updateUsingHEAD_9
2019-04-01 15:42:34 -Generating unique operation named: updateUsingPOST_13
2019-04-01 15:42:34 -Generating unique operation named: updateUsingPUT_9
2019-04-01 15:42:34 -Generating unique operation named: updateUsingPATCH_9
2019-04-01 15:42:34 -Generating unique operation named: updateUsingDELETE_9
2019-04-01 15:42:34 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-01 15:42:34 -Generating unique operation named: updateUsingTRACE_9
2019-04-01 15:42:34 -Generating unique operation named: addUsingGET_13
2019-04-01 15:42:34 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-01 15:42:34 -Generating unique operation named: editUsingGET_14
2019-04-01 15:42:34 -Generating unique operation named: listUsingGET_15
2019-04-01 15:42:34 -Generating unique operation named: saveUsingPOST_13
2019-04-01 15:42:34 -Generating unique operation named: saveUsingPOST_14
2019-04-01 15:42:34 -Generating unique operation named: updateUsingPOST_14
2019-04-01 15:42:34 -Generating unique operation named: listUsingGET_16
2019-04-01 15:42:34 -Generating unique operation named: listUsingHEAD_1
2019-04-01 15:42:34 -Generating unique operation named: listUsingPOST_1
2019-04-01 15:42:34 -Generating unique operation named: listUsingPUT_1
2019-04-01 15:42:34 -Generating unique operation named: listUsingPATCH_1
2019-04-01 15:42:34 -Generating unique operation named: listUsingDELETE_1
2019-04-01 15:42:34 -Generating unique operation named: listUsingOPTIONS_1
2019-04-01 15:42:34 -Generating unique operation named: listUsingTRACE_1
2019-04-01 15:42:34 -Generating unique operation named: addUsingGET_14
2019-04-01 15:42:35 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-01 15:42:35 -Generating unique operation named: editUsingGET_15
2019-04-01 15:42:35 -Generating unique operation named: listUsingGET_17
2019-04-01 15:42:35 -Generating unique operation named: removeUsingPOST_26
2019-04-01 15:42:35 -Generating unique operation named: saveUsingPOST_15
2019-04-01 15:42:35 -Generating unique operation named: treeUsingGET_3
2019-04-01 15:42:35 -Generating unique operation named: treeViewUsingGET_1
2019-04-01 15:42:35 -Generating unique operation named: updateUsingPOST_15
2019-04-01 15:42:35 -Generating unique operation named: addUsingGET_15
2019-04-01 15:42:35 -Generating unique operation named: editUsingGET_16
2019-04-01 15:42:35 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-01 15:42:35 -Generating unique operation named: listUsingGET_18
2019-04-01 15:42:35 -Generating unique operation named: removeUsingPOST_27
2019-04-01 15:42:35 -Generating unique operation named: removeUsingPOST_28
2019-04-01 15:42:35 -Generating unique operation named: saveUsingPOST_16
2019-04-01 15:42:35 -Generating unique operation named: updateUsingGET_10
2019-04-01 15:42:35 -Generating unique operation named: updateUsingHEAD_10
2019-04-01 15:42:35 -Generating unique operation named: updateUsingPOST_16
2019-04-01 15:42:35 -Generating unique operation named: updateUsingPUT_10
2019-04-01 15:42:35 -Generating unique operation named: updateUsingPATCH_10
2019-04-01 15:42:35 -Generating unique operation named: updateUsingDELETE_10
2019-04-01 15:42:35 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-01 15:42:35 -Generating unique operation named: updateUsingTRACE_10
2019-04-01 15:42:35 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-01 15:42:35 -Generating unique operation named: addUsingGET_16
2019-04-01 15:42:35 -Generating unique operation named: editUsingGET_17
2019-04-01 15:42:35 -Generating unique operation named: listUsingGET_19
2019-04-01 15:42:35 -Generating unique operation named: removeUsingPOST_29
2019-04-01 15:42:35 -Generating unique operation named: removeUsingPOST_30
2019-04-01 15:42:35 -Generating unique operation named: saveUsingPOST_17
2019-04-01 15:42:35 -Generating unique operation named: updateUsingGET_11
2019-04-01 15:42:35 -Generating unique operation named: updateUsingHEAD_11
2019-04-01 15:42:35 -Generating unique operation named: updateUsingPOST_17
2019-04-01 15:42:35 -Generating unique operation named: updateUsingPUT_11
2019-04-01 15:42:35 -Generating unique operation named: updateUsingPATCH_11
2019-04-01 15:42:35 -Generating unique operation named: updateUsingDELETE_11
2019-04-01 15:42:35 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-01 15:42:35 -Generating unique operation named: updateUsingTRACE_11
2019-04-01 15:42:35 -Generating unique operation named: addUsingGET_17
2019-04-01 15:42:35 -Generating unique operation named: editUsingGET_18
2019-04-01 15:42:35 -Generating unique operation named: listUsingGET_20
2019-04-01 15:42:35 -Generating unique operation named: removeUsingPOST_31
2019-04-01 15:42:35 -Generating unique operation named: removeUsingPOST_32
2019-04-01 15:42:35 -Generating unique operation named: saveUsingPOST_18
2019-04-01 15:42:35 -Generating unique operation named: updateUsingGET_12
2019-04-01 15:42:35 -Generating unique operation named: updateUsingHEAD_12
2019-04-01 15:42:35 -Generating unique operation named: updateUsingPOST_18
2019-04-01 15:42:35 -Generating unique operation named: updateUsingPUT_12
2019-04-01 15:42:35 -Generating unique operation named: updateUsingPATCH_12
2019-04-01 15:42:35 -Generating unique operation named: updateUsingDELETE_12
2019-04-01 15:42:35 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-01 15:42:35 -Generating unique operation named: updateUsingTRACE_12
2019-04-01 15:42:35 -Starting Quartz Scheduler now
2019-04-01 15:42:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-01 15:42:35 -Starting...
2019-04-01 15:42:35 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 15:42:35 -Started.
2019-04-01 15:42:35 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-01 15:42:35 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-04-01 15:42:35 -Pausing ProtocolHandler ["http-nio-8081"]
2019-04-01 15:42:35 -Stopping service [Tomcat]
2019-04-01 15:42:35 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-04-01 15:42:35 -Stopping ProtocolHandler ["http-nio-8081"]
2019-04-01 15:42:35 -Destroying ProtocolHandler ["http-nio-8081"]
2019-04-01 15:42:35 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-01 15:42:35 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-04-01 15:42:35 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e260766: startup date [Mon Apr 01 15:41:44 CST 2019]; root of context hierarchy
2019-04-01 15:42:35 -Stopping beans in phase 2147483647
2019-04-01 15:42:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-01 15:42:35 -Stopping...
2019-04-01 15:42:35 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 15:42:35 -Stopped.
2019-04-01 15:42:35 -Unregistering JMX-exposed beans on shutdown
2019-04-01 15:42:35 -Unregistering JMX-exposed beans
2019-04-01 15:42:35 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-04-01 15:42:35 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-04-01 15:42:35 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-04-01 15:42:35 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-04-01 15:42:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-04-01 15:42:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-01 15:42:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-04-01 15:42:35 -Shutting down Quartz Scheduler
2019-04-01 15:43:36 -Starting BootdoApplication on ZJZL-20180906VX with PID 10996 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-01 15:43:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-01 15:43:36 -The following profiles are active: dev
2019-04-01 15:43:36 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e11485: startup date [Mon Apr 01 15:43:36 CST 2019]; root of context hierarchy
2019-04-01 15:43:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-01 15:43:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5b393b11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:43:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4d9269b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:43:45 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:43:46 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:43:46 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:43:46 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-01 15:43:46 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-01 15:43:46 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:43:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:43:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:43:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:43:47 -Tomcat initialized with port(s): 8081 (http)
2019-04-01 15:43:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-01 15:43:47 -Starting service [Tomcat]
2019-04-01 15:43:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-01 15:43:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-01 15:43:48 -Initializing Spring embedded WebApplicationContext
2019-04-01 15:43:48 -Root WebApplicationContext: initialization completed in 11559 ms
2019-04-01 15:43:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-01 15:43:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-01 15:43:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-01 15:43:48 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-01 15:43:48 -Filter xssFilter was not registered (disabled)
2019-04-01 15:43:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-01 15:43:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-01 15:43:48 -Servlet statViewServlet mapped to [/druid/*]
2019-04-01 15:43:48 -Servlet dispatcherServlet mapped to [/]
2019-04-01 15:43:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e11485: startup date [Mon Apr 01 15:43:36 CST 2019]; root of context hierarchy
2019-04-01 15:43:52 -Using default implementation for ThreadExecutor
2019-04-01 15:43:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-01 15:43:52 -Quartz Scheduler v.2.2.1 created.
2019-04-01 15:43:52 -RAMJobStore initialized.
2019-04-01 15:43:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-01 15:43:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-01 15:43:52 -Quartz scheduler version: 2.2.1
2019-04-01 15:43:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5906ebfb
2019-04-01 15:43:53 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-01 15:43:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-01 15:43:57 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-01 15:43:57 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-01 15:43:57 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:43:57 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-01 15:43:57 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-01 15:43:57 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-01 15:43:57 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-01 15:43:57 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-01 15:43:57 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-01 15:43:57 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-01 15:43:57 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-01 15:43:57 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:57 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-01 15:43:57 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-01 15:43:57 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-01 15:43:57 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:57 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-01 15:43:57 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-01 15:43:57 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-01 15:43:57 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-01 15:43:57 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-01 15:43:57 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-01 15:43:57 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:57 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-01 15:43:57 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-01 15:43:57 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:57 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-01 15:43:57 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-01 15:43:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:57 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-01 15:43:57 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 15:43:57 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-01 15:43:57 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-01 15:43:57 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 15:43:57 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-01 15:43:57 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-01 15:43:57 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-01 15:43:57 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-01 15:43:57 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:57 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-01 15:43:57 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-01 15:43:57 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:57 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-01 15:43:57 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-01 15:43:57 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-01 15:43:57 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-01 15:43:57 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:57 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-01 15:43:57 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-01 15:43:57 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-01 15:43:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 15:43:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 15:43:57 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-01 15:43:57 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-01 15:43:57 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-01 15:43:57 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-01 15:43:57 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-01 15:43:57 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-01 15:43:57 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:57 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-01 15:43:57 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:43:57 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-01 15:43:57 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:43:57 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-01 15:43:57 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-01 15:43:57 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-01 15:43:57 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-01 15:43:57 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-01 15:43:57 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:57 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-01 15:43:57 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:57 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-01 15:43:57 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-01 15:43:57 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-01 15:43:57 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-01 15:43:57 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-01 15:43:57 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-01 15:43:57 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-01 15:43:57 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:57 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-01 15:43:57 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-01 15:43:57 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:43:57 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-01 15:43:57 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:43:57 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-01 15:43:57 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-01 15:43:57 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-01 15:43:57 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-01 15:43:57 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 15:43:57 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:57 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 15:43:57 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:57 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-01 15:43:57 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-01 15:43:57 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-01 15:43:57 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 15:43:57 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:43:57 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-01 15:43:57 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-01 15:43:57 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-01 15:43:57 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-01 15:43:57 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-01 15:43:57 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-01 15:43:57 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-01 15:43:58 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-01 15:43:58 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-01 15:43:58 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-01 15:43:58 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-01 15:43:58 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-01 15:43:58 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-01 15:43:58 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:43:58 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-01 15:43:58 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-01 15:43:58 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-01 15:43:58 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:58 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-01 15:43:58 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-01 15:43:58 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-01 15:43:58 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:58 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-01 15:43:58 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-01 15:43:58 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-01 15:43:58 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-01 15:43:58 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:58 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-01 15:43:58 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-01 15:43:58 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:43:58 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-01 15:43:58 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-01 15:43:58 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-01 15:43:58 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-01 15:43:58 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-01 15:43:58 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-01 15:43:58 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-01 15:43:58 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-01 15:43:58 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 15:43:58 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 15:43:58 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-01 15:43:58 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-01 15:43:58 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:58 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-01 15:43:58 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-01 15:43:58 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-01 15:43:58 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-01 15:43:58 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-01 15:43:58 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-01 15:43:58 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-01 15:43:58 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-01 15:43:58 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-01 15:43:58 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-01 15:43:58 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-01 15:43:58 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-01 15:43:58 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:58 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-01 15:43:58 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:58 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-01 15:43:58 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-01 15:43:58 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-01 15:43:58 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-01 15:43:58 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-01 15:43:58 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 15:43:58 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 15:43:58 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 15:43:58 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-01 15:43:58 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-01 15:43:58 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-01 15:43:58 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-01 15:43:58 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:58 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-01 15:43:58 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-01 15:43:58 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:58 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:43:58 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-01 15:43:58 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:43:58 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-01 15:43:58 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-01 15:43:58 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-01 15:43:58 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 15:43:58 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:43:58 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 15:43:58 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-01 15:43:58 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:43:58 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:43:58 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-01 15:43:58 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-01 15:43:58 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 15:43:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 15:43:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-01 15:43:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-01 15:43:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-01 15:43:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-01 15:43:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-01 15:43:59 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-01 15:43:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 15:44:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e11485: startup date [Mon Apr 01 15:43:36 CST 2019]; root of context hierarchy
2019-04-01 15:44:00 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 15:44:00 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 15:44:00 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 15:44:00 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-01 15:44:00 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-01 15:44:03 -Registering beans for JMX exposure on startup
2019-04-01 15:44:03 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-01 15:44:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-01 15:44:03 -Starting beans in phase 2147483647
2019-04-01 15:44:03 -Context refreshed
2019-04-01 15:44:03 -Found 1 custom documentation plugin(s)
2019-04-01 15:44:03 -Scanning for api listing references
2019-04-01 15:44:04 -Generating unique operation named: removeUsingPOST_1
2019-04-01 15:44:04 -Generating unique operation named: addUsingGET_1
2019-04-01 15:44:04 -Generating unique operation named: editUsingGET_1
2019-04-01 15:44:04 -Generating unique operation named: listUsingGET_1
2019-04-01 15:44:04 -Generating unique operation named: removeUsingPOST_2
2019-04-01 15:44:04 -Generating unique operation named: removeUsingPOST_3
2019-04-01 15:44:04 -Generating unique operation named: saveUsingPOST_1
2019-04-01 15:44:04 -Generating unique operation named: updateUsingGET_1
2019-04-01 15:44:04 -Generating unique operation named: updateUsingHEAD_1
2019-04-01 15:44:04 -Generating unique operation named: updateUsingPOST_1
2019-04-01 15:44:04 -Generating unique operation named: updateUsingPUT_1
2019-04-01 15:44:04 -Generating unique operation named: updateUsingPATCH_1
2019-04-01 15:44:04 -Generating unique operation named: updateUsingDELETE_1
2019-04-01 15:44:04 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-01 15:44:04 -Generating unique operation named: updateUsingTRACE_1
2019-04-01 15:44:04 -Generating unique operation named: addUsingGET_2
2019-04-01 15:44:04 -Generating unique operation named: editUsingGET_2
2019-04-01 15:44:04 -Generating unique operation named: listUsingGET_2
2019-04-01 15:44:04 -Generating unique operation named: removeUsingPOST_4
2019-04-01 15:44:04 -Generating unique operation named: removeUsingPOST_5
2019-04-01 15:44:04 -Generating unique operation named: saveUsingPOST_2
2019-04-01 15:44:04 -Generating unique operation named: updateUsingPOST_2
2019-04-01 15:44:04 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-01 15:44:04 -Generating unique operation named: addUsingGET_3
2019-04-01 15:44:04 -Generating unique operation named: editUsingGET_3
2019-04-01 15:44:04 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-01 15:44:04 -Generating unique operation named: listUsingGET_3
2019-04-01 15:44:04 -Generating unique operation named: removeUsingPOST_6
2019-04-01 15:44:04 -Generating unique operation named: removeUsingPOST_7
2019-04-01 15:44:05 -Generating unique operation named: saveUsingPOST_3
2019-04-01 15:44:05 -Generating unique operation named: updateUsingGET_2
2019-04-01 15:44:05 -Generating unique operation named: updateUsingHEAD_2
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPOST_3
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPUT_2
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPATCH_2
2019-04-01 15:44:05 -Generating unique operation named: updateUsingDELETE_2
2019-04-01 15:44:05 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-01 15:44:05 -Generating unique operation named: updateUsingTRACE_2
2019-04-01 15:44:05 -Generating unique operation named: addUsingGET_4
2019-04-01 15:44:05 -Generating unique operation named: editUsingGET_4
2019-04-01 15:44:05 -Generating unique operation named: listUsingGET_4
2019-04-01 15:44:05 -Generating unique operation named: removeUsingPOST_8
2019-04-01 15:44:05 -Generating unique operation named: removeUsingPOST_9
2019-04-01 15:44:05 -Generating unique operation named: saveUsingPOST_4
2019-04-01 15:44:05 -Generating unique operation named: updateUsingGET_3
2019-04-01 15:44:05 -Generating unique operation named: updateUsingHEAD_3
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPOST_4
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPUT_3
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPATCH_3
2019-04-01 15:44:05 -Generating unique operation named: updateUsingDELETE_3
2019-04-01 15:44:05 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-01 15:44:05 -Generating unique operation named: updateUsingTRACE_3
2019-04-01 15:44:05 -Generating unique operation named: ElecUsingGET_1
2019-04-01 15:44:05 -Generating unique operation named: addUsingGET_5
2019-04-01 15:44:05 -Generating unique operation named: editUsingGET_5
2019-04-01 15:44:05 -Generating unique operation named: listUsingGET_5
2019-04-01 15:44:05 -Generating unique operation named: removeUsingPOST_10
2019-04-01 15:44:05 -Generating unique operation named: removeUsingPOST_11
2019-04-01 15:44:05 -Generating unique operation named: saveUsingPOST_5
2019-04-01 15:44:05 -Generating unique operation named: updateUsingGET_4
2019-04-01 15:44:05 -Generating unique operation named: updateUsingHEAD_4
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPOST_5
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPUT_4
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPATCH_4
2019-04-01 15:44:05 -Generating unique operation named: updateUsingDELETE_4
2019-04-01 15:44:05 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-01 15:44:05 -Generating unique operation named: updateUsingTRACE_4
2019-04-01 15:44:05 -Generating unique operation named: editUsingGET_6
2019-04-01 15:44:05 -Generating unique operation named: listUsingGET_6
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPOST_6
2019-04-01 15:44:05 -Generating unique operation named: addUsingGET_6
2019-04-01 15:44:05 -Generating unique operation named: editUsingGET_7
2019-04-01 15:44:05 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-01 15:44:05 -Generating unique operation named: listUsingGET_7
2019-04-01 15:44:05 -Generating unique operation named: removeUsingPOST_12
2019-04-01 15:44:05 -Generating unique operation named: removeUsingPOST_13
2019-04-01 15:44:05 -Generating unique operation named: saveUsingPOST_6
2019-04-01 15:44:05 -Generating unique operation named: updateUsingGET_5
2019-04-01 15:44:05 -Generating unique operation named: updateUsingHEAD_5
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPOST_7
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPUT_5
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPATCH_5
2019-04-01 15:44:05 -Generating unique operation named: updateUsingDELETE_5
2019-04-01 15:44:05 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-01 15:44:05 -Generating unique operation named: updateUsingTRACE_5
2019-04-01 15:44:05 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-01 15:44:05 -Generating unique operation named: addUsingGET_7
2019-04-01 15:44:05 -Generating unique operation named: editUsingGET_8
2019-04-01 15:44:05 -Generating unique operation named: listUsingGET_8
2019-04-01 15:44:05 -Generating unique operation named: removeUsingPOST_14
2019-04-01 15:44:05 -Generating unique operation named: removeUsingPOST_15
2019-04-01 15:44:05 -Generating unique operation named: saveUsingPOST_7
2019-04-01 15:44:05 -Generating unique operation named: updateUsingGET_6
2019-04-01 15:44:05 -Generating unique operation named: updateUsingHEAD_6
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPOST_8
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPUT_6
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPATCH_6
2019-04-01 15:44:05 -Generating unique operation named: updateUsingDELETE_6
2019-04-01 15:44:05 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-01 15:44:05 -Generating unique operation named: updateUsingTRACE_6
2019-04-01 15:44:05 -Generating unique operation named: addUsingGET_8
2019-04-01 15:44:05 -Generating unique operation named: editUsingGET_9
2019-04-01 15:44:05 -Generating unique operation named: listUsingGET_9
2019-04-01 15:44:05 -Generating unique operation named: removeUsingPOST_16
2019-04-01 15:44:05 -Generating unique operation named: removeUsingPOST_17
2019-04-01 15:44:05 -Generating unique operation named: saveUsingPOST_8
2019-04-01 15:44:05 -Generating unique operation named: updateUsingGET_7
2019-04-01 15:44:05 -Generating unique operation named: updateUsingHEAD_7
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPOST_9
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPUT_7
2019-04-01 15:44:05 -Generating unique operation named: updateUsingPATCH_7
2019-04-01 15:44:05 -Generating unique operation named: updateUsingDELETE_7
2019-04-01 15:44:05 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-01 15:44:05 -Generating unique operation named: updateUsingTRACE_7
2019-04-01 15:44:05 -Generating unique operation named: addUsingGET_9
2019-04-01 15:44:05 -Generating unique operation named: editUsingGET_10
2019-04-01 15:44:05 -Generating unique operation named: infoUsingGET_1
2019-04-01 15:44:05 -Generating unique operation named: infoUsingHEAD_1
2019-04-01 15:44:05 -Generating unique operation named: infoUsingPOST_1
2019-04-01 15:44:05 -Generating unique operation named: infoUsingPUT_1
2019-04-01 15:44:05 -Generating unique operation named: infoUsingPATCH_1
2019-04-01 15:44:05 -Generating unique operation named: infoUsingDELETE_1
2019-04-01 15:44:05 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-01 15:44:05 -Generating unique operation named: infoUsingTRACE_1
2019-04-01 15:44:05 -Generating unique operation named: listUsingGET_10
2019-04-01 15:44:06 -Generating unique operation named: removeUsingPOST_18
2019-04-01 15:44:06 -Generating unique operation named: removeUsingPOST_19
2019-04-01 15:44:06 -Generating unique operation named: saveUsingPOST_9
2019-04-01 15:44:06 -Generating unique operation named: updateUsingPOST_10
2019-04-01 15:44:06 -Generating unique operation named: listUsingGET_11
2019-04-01 15:44:06 -Generating unique operation named: removeUsingPOST_20
2019-04-01 15:44:06 -Generating unique operation named: welcomeUsingGET_1
2019-04-01 15:44:06 -Generating unique operation named: addUsingGET_10
2019-04-01 15:44:06 -Generating unique operation named: editUsingGET_11
2019-04-01 15:44:06 -Generating unique operation named: listUsingGET_12
2019-04-01 15:44:06 -Generating unique operation named: removeUsingPOST_21
2019-04-01 15:44:06 -Generating unique operation named: saveUsingPOST_10
2019-04-01 15:44:06 -Generating unique operation named: treeUsingGET_1
2019-04-01 15:44:06 -Generating unique operation named: treeUsingGET_2
2019-04-01 15:44:06 -Generating unique operation named: updateUsingPOST_11
2019-04-01 15:44:06 -Generating unique operation named: addUsingGET_11
2019-04-01 15:44:06 -Generating unique operation named: editUsingGET_12
2019-04-01 15:44:06 -Generating unique operation named: listUsingGET_13
2019-04-01 15:44:06 -Generating unique operation named: removeUsingPOST_22
2019-04-01 15:44:06 -Generating unique operation named: removeUsingPOST_23
2019-04-01 15:44:06 -Generating unique operation named: saveUsingPOST_11
2019-04-01 15:44:06 -Generating unique operation named: updateUsingGET_8
2019-04-01 15:44:06 -Generating unique operation named: updateUsingHEAD_8
2019-04-01 15:44:06 -Generating unique operation named: updateUsingPOST_12
2019-04-01 15:44:06 -Generating unique operation named: updateUsingPUT_8
2019-04-01 15:44:06 -Generating unique operation named: updateUsingPATCH_8
2019-04-01 15:44:06 -Generating unique operation named: updateUsingDELETE_8
2019-04-01 15:44:06 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-01 15:44:06 -Generating unique operation named: updateUsingTRACE_8
2019-04-01 15:44:06 -Generating unique operation named: addUsingGET_12
2019-04-01 15:44:06 -Generating unique operation named: editUsingGET_13
2019-04-01 15:44:06 -Generating unique operation named: listUsingGET_14
2019-04-01 15:44:06 -Generating unique operation named: removeUsingPOST_24
2019-04-01 15:44:06 -Generating unique operation named: removeUsingPOST_25
2019-04-01 15:44:06 -Generating unique operation named: saveUsingPOST_12
2019-04-01 15:44:06 -Generating unique operation named: updateUsingGET_9
2019-04-01 15:44:06 -Generating unique operation named: updateUsingHEAD_9
2019-04-01 15:44:06 -Generating unique operation named: updateUsingPOST_13
2019-04-01 15:44:06 -Generating unique operation named: updateUsingPUT_9
2019-04-01 15:44:06 -Generating unique operation named: updateUsingPATCH_9
2019-04-01 15:44:06 -Generating unique operation named: updateUsingDELETE_9
2019-04-01 15:44:06 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-01 15:44:06 -Generating unique operation named: updateUsingTRACE_9
2019-04-01 15:44:06 -Generating unique operation named: addUsingGET_13
2019-04-01 15:44:06 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-01 15:44:06 -Generating unique operation named: editUsingGET_14
2019-04-01 15:44:06 -Generating unique operation named: listUsingGET_15
2019-04-01 15:44:06 -Generating unique operation named: saveUsingPOST_13
2019-04-01 15:44:06 -Generating unique operation named: saveUsingPOST_14
2019-04-01 15:44:06 -Generating unique operation named: updateUsingPOST_14
2019-04-01 15:44:06 -Generating unique operation named: listUsingGET_16
2019-04-01 15:44:06 -Generating unique operation named: listUsingHEAD_1
2019-04-01 15:44:06 -Generating unique operation named: listUsingPOST_1
2019-04-01 15:44:06 -Generating unique operation named: listUsingPUT_1
2019-04-01 15:44:06 -Generating unique operation named: listUsingPATCH_1
2019-04-01 15:44:06 -Generating unique operation named: listUsingDELETE_1
2019-04-01 15:44:06 -Generating unique operation named: listUsingOPTIONS_1
2019-04-01 15:44:06 -Generating unique operation named: listUsingTRACE_1
2019-04-01 15:44:06 -Generating unique operation named: addUsingGET_14
2019-04-01 15:44:06 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-01 15:44:07 -Generating unique operation named: editUsingGET_15
2019-04-01 15:44:07 -Generating unique operation named: listUsingGET_17
2019-04-01 15:44:07 -Generating unique operation named: removeUsingPOST_26
2019-04-01 15:44:07 -Generating unique operation named: saveUsingPOST_15
2019-04-01 15:44:07 -Generating unique operation named: treeUsingGET_3
2019-04-01 15:44:07 -Generating unique operation named: treeViewUsingGET_1
2019-04-01 15:44:07 -Generating unique operation named: updateUsingPOST_15
2019-04-01 15:44:07 -Generating unique operation named: addUsingGET_15
2019-04-01 15:44:07 -Generating unique operation named: editUsingGET_16
2019-04-01 15:44:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-01 15:44:07 -Generating unique operation named: listUsingGET_18
2019-04-01 15:44:07 -Generating unique operation named: removeUsingPOST_27
2019-04-01 15:44:07 -Generating unique operation named: removeUsingPOST_28
2019-04-01 15:44:07 -Generating unique operation named: saveUsingPOST_16
2019-04-01 15:44:07 -Generating unique operation named: updateUsingGET_10
2019-04-01 15:44:07 -Generating unique operation named: updateUsingHEAD_10
2019-04-01 15:44:07 -Generating unique operation named: updateUsingPOST_16
2019-04-01 15:44:07 -Generating unique operation named: updateUsingPUT_10
2019-04-01 15:44:07 -Generating unique operation named: updateUsingPATCH_10
2019-04-01 15:44:07 -Generating unique operation named: updateUsingDELETE_10
2019-04-01 15:44:07 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-01 15:44:07 -Generating unique operation named: updateUsingTRACE_10
2019-04-01 15:44:07 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-01 15:44:07 -Generating unique operation named: addUsingGET_16
2019-04-01 15:44:07 -Generating unique operation named: editUsingGET_17
2019-04-01 15:44:07 -Generating unique operation named: listUsingGET_19
2019-04-01 15:44:07 -Generating unique operation named: removeUsingPOST_29
2019-04-01 15:44:07 -Generating unique operation named: removeUsingPOST_30
2019-04-01 15:44:07 -Generating unique operation named: saveUsingPOST_17
2019-04-01 15:44:07 -Generating unique operation named: updateUsingGET_11
2019-04-01 15:44:07 -Generating unique operation named: updateUsingHEAD_11
2019-04-01 15:44:07 -Generating unique operation named: updateUsingPOST_17
2019-04-01 15:44:07 -Generating unique operation named: updateUsingPUT_11
2019-04-01 15:44:07 -Generating unique operation named: updateUsingPATCH_11
2019-04-01 15:44:07 -Generating unique operation named: updateUsingDELETE_11
2019-04-01 15:44:07 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-01 15:44:07 -Generating unique operation named: updateUsingTRACE_11
2019-04-01 15:44:07 -Generating unique operation named: addUsingGET_17
2019-04-01 15:44:07 -Generating unique operation named: editUsingGET_18
2019-04-01 15:44:07 -Generating unique operation named: listUsingGET_20
2019-04-01 15:44:07 -Generating unique operation named: removeUsingPOST_31
2019-04-01 15:44:07 -Generating unique operation named: removeUsingPOST_32
2019-04-01 15:44:07 -Generating unique operation named: saveUsingPOST_18
2019-04-01 15:44:07 -Generating unique operation named: updateUsingGET_12
2019-04-01 15:44:07 -Generating unique operation named: updateUsingHEAD_12
2019-04-01 15:44:07 -Generating unique operation named: updateUsingPOST_18
2019-04-01 15:44:07 -Generating unique operation named: updateUsingPUT_12
2019-04-01 15:44:07 -Generating unique operation named: updateUsingPATCH_12
2019-04-01 15:44:07 -Generating unique operation named: updateUsingDELETE_12
2019-04-01 15:44:07 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-01 15:44:07 -Generating unique operation named: updateUsingTRACE_12
2019-04-01 15:44:07 -Starting Quartz Scheduler now
2019-04-01 15:44:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-01 15:44:07 -Starting...
2019-04-01 15:44:07 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 15:44:07 -Started.
2019-04-01 15:44:07 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-01 15:44:07 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-04-01 15:44:07 -Pausing ProtocolHandler ["http-nio-8081"]
2019-04-01 15:44:07 -Stopping service [Tomcat]
2019-04-01 15:44:07 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-04-01 15:44:07 -Stopping ProtocolHandler ["http-nio-8081"]
2019-04-01 15:44:07 -Destroying ProtocolHandler ["http-nio-8081"]
2019-04-01 15:44:07 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-04-01 15:44:07 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-04-01 15:44:07 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e11485: startup date [Mon Apr 01 15:43:36 CST 2019]; root of context hierarchy
2019-04-01 15:44:07 -Stopping beans in phase 2147483647
2019-04-01 15:44:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-01 15:44:07 -Stopping...
2019-04-01 15:44:07 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 15:44:07 -Stopped.
2019-04-01 15:44:07 -Unregistering JMX-exposed beans on shutdown
2019-04-01 15:44:07 -Unregistering JMX-exposed beans
2019-04-01 15:44:07 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-04-01 15:44:07 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-04-01 15:44:07 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-04-01 15:44:07 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-04-01 15:44:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-04-01 15:44:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-04-01 15:44:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-04-01 15:44:07 -Shutting down Quartz Scheduler
2019-04-01 15:49:07 -Starting BootdoApplication on ZJZL-20180906VX with PID 9292 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-01 15:49:07 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-01 15:49:07 -The following profiles are active: dev
2019-04-01 15:49:07 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74cadd41: startup date [Mon Apr 01 15:49:07 CST 2019]; root of context hierarchy
2019-04-01 15:49:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-01 15:49:13 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ca5194ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:49:13 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bcaac371] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:49:14 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:49:15 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:49:15 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:49:15 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-01 15:49:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-01 15:49:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:49:15 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:49:15 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:49:15 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 15:49:16 -Tomcat initialized with port(s): 8081 (http)
2019-04-01 15:49:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-01 15:49:16 -Starting service [Tomcat]
2019-04-01 15:49:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-01 15:49:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-01 15:49:19 -Initializing Spring embedded WebApplicationContext
2019-04-01 15:49:19 -Root WebApplicationContext: initialization completed in 12349 ms
2019-04-01 15:49:20 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-01 15:49:20 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-01 15:49:20 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-01 15:49:20 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-01 15:49:20 -Filter xssFilter was not registered (disabled)
2019-04-01 15:49:20 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-01 15:49:20 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-01 15:49:20 -Servlet statViewServlet mapped to [/druid/*]
2019-04-01 15:49:20 -Servlet dispatcherServlet mapped to [/]
2019-04-01 15:49:24 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74cadd41: startup date [Mon Apr 01 15:49:07 CST 2019]; root of context hierarchy
2019-04-01 15:49:24 -Using default implementation for ThreadExecutor
2019-04-01 15:49:24 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-01 15:49:24 -Quartz Scheduler v.2.2.1 created.
2019-04-01 15:49:24 -RAMJobStore initialized.
2019-04-01 15:49:24 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-01 15:49:24 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-01 15:49:24 -Quartz scheduler version: 2.2.1
2019-04-01 15:49:24 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1324e70a
2019-04-01 15:49:25 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-01 15:49:25 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-01 15:49:28 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:49:28 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-01 15:49:28 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-01 15:49:28 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-01 15:49:28 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-01 15:49:28 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-01 15:49:28 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-01 15:49:28 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-01 15:49:28 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-01 15:49:28 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-01 15:49:28 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-01 15:49:28 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-01 15:49:28 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-01 15:49:28 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-01 15:49:28 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-01 15:49:28 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-01 15:49:28 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-01 15:49:28 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-01 15:49:28 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-01 15:49:28 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-01 15:49:28 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 15:49:28 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-01 15:49:28 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 15:49:28 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-01 15:49:28 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-01 15:49:28 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-01 15:49:28 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-01 15:49:28 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-01 15:49:28 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-01 15:49:28 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-01 15:49:28 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-01 15:49:28 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 15:49:28 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 15:49:28 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-01 15:49:28 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-01 15:49:28 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-01 15:49:28 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-01 15:49:28 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-01 15:49:28 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:49:28 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-01 15:49:28 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:49:28 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-01 15:49:28 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-01 15:49:28 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-01 15:49:28 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-01 15:49:28 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-01 15:49:28 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-01 15:49:28 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-01 15:49:28 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-01 15:49:28 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-01 15:49:28 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-01 15:49:28 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-01 15:49:28 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-01 15:49:28 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:49:28 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-01 15:49:28 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:49:28 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-01 15:49:28 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-01 15:49:28 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 15:49:28 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 15:49:28 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-01 15:49:28 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-01 15:49:28 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-01 15:49:28 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 15:49:28 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:49:28 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-01 15:49:28 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-01 15:49:28 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-01 15:49:28 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-01 15:49:28 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-01 15:49:28 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-01 15:49:28 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-01 15:49:28 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-01 15:49:28 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:49:28 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-01 15:49:28 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-01 15:49:28 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-01 15:49:28 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-01 15:49:28 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-01 15:49:28 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-01 15:49:28 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-01 15:49:28 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-01 15:49:28 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-01 15:49:28 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-01 15:49:28 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 15:49:28 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-01 15:49:28 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-01 15:49:28 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-01 15:49:28 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-01 15:49:28 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-01 15:49:28 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-01 15:49:28 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-01 15:49:28 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-01 15:49:28 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-01 15:49:28 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 15:49:28 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 15:49:28 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-01 15:49:28 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:28 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-01 15:49:28 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-01 15:49:28 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-01 15:49:28 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 15:49:28 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-01 15:49:29 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-01 15:49:29 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-01 15:49:29 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-01 15:49:29 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-01 15:49:29 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-01 15:49:29 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-01 15:49:29 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:29 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-01 15:49:29 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-01 15:49:29 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-01 15:49:29 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-01 15:49:29 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:29 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-01 15:49:29 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-01 15:49:29 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-01 15:49:29 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:29 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-01 15:49:29 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-01 15:49:29 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-01 15:49:29 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-01 15:49:29 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 15:49:29 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-01 15:49:29 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-01 15:49:29 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-01 15:49:29 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 15:49:29 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:29 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 15:49:29 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 15:49:29 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-01 15:49:29 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-01 15:49:29 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-01 15:49:29 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-01 15:49:29 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-01 15:49:29 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:29 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-01 15:49:29 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:29 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:49:29 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-01 15:49:29 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:29 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:49:29 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-01 15:49:29 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-01 15:49:29 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-01 15:49:29 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-01 15:49:29 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 15:49:29 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 15:49:29 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 15:49:29 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 15:49:29 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-01 15:49:29 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 15:49:29 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 15:49:29 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-01 15:49:29 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-01 15:49:29 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 15:49:29 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-01 15:49:29 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-01 15:49:29 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-01 15:49:29 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-01 15:49:29 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-01 15:49:29 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-01 15:49:30 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 15:49:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74cadd41: startup date [Mon Apr 01 15:49:07 CST 2019]; root of context hierarchy
2019-04-01 15:49:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 15:49:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 15:49:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 15:49:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-01 15:49:31 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-01 15:49:33 -Registering beans for JMX exposure on startup
2019-04-01 15:49:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-01 15:49:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-01 15:49:33 -Starting beans in phase 2147483647
2019-04-01 15:49:33 -Context refreshed
2019-04-01 15:49:33 -Found 1 custom documentation plugin(s)
2019-04-01 15:49:33 -Scanning for api listing references
2019-04-01 15:49:34 -Generating unique operation named: removeUsingPOST_1
2019-04-01 15:49:34 -Generating unique operation named: addUsingGET_1
2019-04-01 15:49:34 -Generating unique operation named: editUsingGET_1
2019-04-01 15:49:34 -Generating unique operation named: listUsingGET_1
2019-04-01 15:49:34 -Generating unique operation named: removeUsingPOST_2
2019-04-01 15:49:34 -Generating unique operation named: removeUsingPOST_3
2019-04-01 15:49:34 -Generating unique operation named: saveUsingPOST_1
2019-04-01 15:49:34 -Generating unique operation named: updateUsingGET_1
2019-04-01 15:49:34 -Generating unique operation named: updateUsingHEAD_1
2019-04-01 15:49:34 -Generating unique operation named: updateUsingPOST_1
2019-04-01 15:49:34 -Generating unique operation named: updateUsingPUT_1
2019-04-01 15:49:34 -Generating unique operation named: updateUsingPATCH_1
2019-04-01 15:49:34 -Generating unique operation named: updateUsingDELETE_1
2019-04-01 15:49:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-01 15:49:34 -Generating unique operation named: updateUsingTRACE_1
2019-04-01 15:49:34 -Generating unique operation named: addUsingGET_2
2019-04-01 15:49:34 -Generating unique operation named: editUsingGET_2
2019-04-01 15:49:34 -Generating unique operation named: listUsingGET_2
2019-04-01 15:49:34 -Generating unique operation named: removeUsingPOST_4
2019-04-01 15:49:34 -Generating unique operation named: removeUsingPOST_5
2019-04-01 15:49:34 -Generating unique operation named: saveUsingPOST_2
2019-04-01 15:49:34 -Generating unique operation named: updateUsingPOST_2
2019-04-01 15:49:34 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-01 15:49:34 -Generating unique operation named: addUsingGET_3
2019-04-01 15:49:34 -Generating unique operation named: editUsingGET_3
2019-04-01 15:49:35 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-01 15:49:35 -Generating unique operation named: listUsingGET_3
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_6
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_7
2019-04-01 15:49:35 -Generating unique operation named: saveUsingPOST_3
2019-04-01 15:49:35 -Generating unique operation named: updateUsingGET_2
2019-04-01 15:49:35 -Generating unique operation named: updateUsingHEAD_2
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPOST_3
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPUT_2
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPATCH_2
2019-04-01 15:49:35 -Generating unique operation named: updateUsingDELETE_2
2019-04-01 15:49:35 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-01 15:49:35 -Generating unique operation named: updateUsingTRACE_2
2019-04-01 15:49:35 -Generating unique operation named: addUsingGET_4
2019-04-01 15:49:35 -Generating unique operation named: editUsingGET_4
2019-04-01 15:49:35 -Generating unique operation named: listUsingGET_4
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_8
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_9
2019-04-01 15:49:35 -Generating unique operation named: saveUsingPOST_4
2019-04-01 15:49:35 -Generating unique operation named: updateUsingGET_3
2019-04-01 15:49:35 -Generating unique operation named: updateUsingHEAD_3
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPOST_4
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPUT_3
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPATCH_3
2019-04-01 15:49:35 -Generating unique operation named: updateUsingDELETE_3
2019-04-01 15:49:35 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-01 15:49:35 -Generating unique operation named: updateUsingTRACE_3
2019-04-01 15:49:35 -Generating unique operation named: ElecUsingGET_1
2019-04-01 15:49:35 -Generating unique operation named: addUsingGET_5
2019-04-01 15:49:35 -Generating unique operation named: editUsingGET_5
2019-04-01 15:49:35 -Generating unique operation named: listUsingGET_5
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_10
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_11
2019-04-01 15:49:35 -Generating unique operation named: saveUsingPOST_5
2019-04-01 15:49:35 -Generating unique operation named: updateUsingGET_4
2019-04-01 15:49:35 -Generating unique operation named: updateUsingHEAD_4
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPOST_5
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPUT_4
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPATCH_4
2019-04-01 15:49:35 -Generating unique operation named: updateUsingDELETE_4
2019-04-01 15:49:35 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-01 15:49:35 -Generating unique operation named: updateUsingTRACE_4
2019-04-01 15:49:35 -Generating unique operation named: editUsingGET_6
2019-04-01 15:49:35 -Generating unique operation named: listUsingGET_6
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPOST_6
2019-04-01 15:49:35 -Generating unique operation named: addUsingGET_6
2019-04-01 15:49:35 -Generating unique operation named: editUsingGET_7
2019-04-01 15:49:35 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-01 15:49:35 -Generating unique operation named: listUsingGET_7
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_12
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_13
2019-04-01 15:49:35 -Generating unique operation named: saveUsingPOST_6
2019-04-01 15:49:35 -Generating unique operation named: updateUsingGET_5
2019-04-01 15:49:35 -Generating unique operation named: updateUsingHEAD_5
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPOST_7
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPUT_5
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPATCH_5
2019-04-01 15:49:35 -Generating unique operation named: updateUsingDELETE_5
2019-04-01 15:49:35 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-01 15:49:35 -Generating unique operation named: updateUsingTRACE_5
2019-04-01 15:49:35 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-01 15:49:35 -Generating unique operation named: addUsingGET_7
2019-04-01 15:49:35 -Generating unique operation named: editUsingGET_8
2019-04-01 15:49:35 -Generating unique operation named: listUsingGET_8
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_14
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_15
2019-04-01 15:49:35 -Generating unique operation named: saveUsingPOST_7
2019-04-01 15:49:35 -Generating unique operation named: updateUsingGET_6
2019-04-01 15:49:35 -Generating unique operation named: updateUsingHEAD_6
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPOST_8
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPUT_6
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPATCH_6
2019-04-01 15:49:35 -Generating unique operation named: updateUsingDELETE_6
2019-04-01 15:49:35 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-01 15:49:35 -Generating unique operation named: updateUsingTRACE_6
2019-04-01 15:49:35 -Generating unique operation named: addUsingGET_8
2019-04-01 15:49:35 -Generating unique operation named: editUsingGET_9
2019-04-01 15:49:35 -Generating unique operation named: listUsingGET_9
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_16
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_17
2019-04-01 15:49:35 -Generating unique operation named: saveUsingPOST_8
2019-04-01 15:49:35 -Generating unique operation named: updateUsingGET_7
2019-04-01 15:49:35 -Generating unique operation named: updateUsingHEAD_7
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPOST_9
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPUT_7
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPATCH_7
2019-04-01 15:49:35 -Generating unique operation named: updateUsingDELETE_7
2019-04-01 15:49:35 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-01 15:49:35 -Generating unique operation named: updateUsingTRACE_7
2019-04-01 15:49:35 -Generating unique operation named: addUsingGET_9
2019-04-01 15:49:35 -Generating unique operation named: editUsingGET_10
2019-04-01 15:49:35 -Generating unique operation named: infoUsingGET_1
2019-04-01 15:49:35 -Generating unique operation named: infoUsingHEAD_1
2019-04-01 15:49:35 -Generating unique operation named: infoUsingPOST_1
2019-04-01 15:49:35 -Generating unique operation named: infoUsingPUT_1
2019-04-01 15:49:35 -Generating unique operation named: infoUsingPATCH_1
2019-04-01 15:49:35 -Generating unique operation named: infoUsingDELETE_1
2019-04-01 15:49:35 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-01 15:49:35 -Generating unique operation named: infoUsingTRACE_1
2019-04-01 15:49:35 -Generating unique operation named: listUsingGET_10
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_18
2019-04-01 15:49:35 -Generating unique operation named: removeUsingPOST_19
2019-04-01 15:49:35 -Generating unique operation named: saveUsingPOST_9
2019-04-01 15:49:35 -Generating unique operation named: updateUsingPOST_10
2019-04-01 15:49:35 -Generating unique operation named: listUsingGET_11
2019-04-01 15:49:36 -Generating unique operation named: removeUsingPOST_20
2019-04-01 15:49:36 -Generating unique operation named: welcomeUsingGET_1
2019-04-01 15:49:36 -Generating unique operation named: addUsingGET_10
2019-04-01 15:49:36 -Generating unique operation named: editUsingGET_11
2019-04-01 15:49:36 -Generating unique operation named: listUsingGET_12
2019-04-01 15:49:36 -Generating unique operation named: removeUsingPOST_21
2019-04-01 15:49:36 -Generating unique operation named: saveUsingPOST_10
2019-04-01 15:49:36 -Generating unique operation named: treeUsingGET_1
2019-04-01 15:49:36 -Generating unique operation named: treeUsingGET_2
2019-04-01 15:49:36 -Generating unique operation named: updateUsingPOST_11
2019-04-01 15:49:36 -Generating unique operation named: addUsingGET_11
2019-04-01 15:49:36 -Generating unique operation named: editUsingGET_12
2019-04-01 15:49:36 -Generating unique operation named: listUsingGET_13
2019-04-01 15:49:36 -Generating unique operation named: removeUsingPOST_22
2019-04-01 15:49:36 -Generating unique operation named: removeUsingPOST_23
2019-04-01 15:49:36 -Generating unique operation named: saveUsingPOST_11
2019-04-01 15:49:36 -Generating unique operation named: updateUsingGET_8
2019-04-01 15:49:36 -Generating unique operation named: updateUsingHEAD_8
2019-04-01 15:49:36 -Generating unique operation named: updateUsingPOST_12
2019-04-01 15:49:36 -Generating unique operation named: updateUsingPUT_8
2019-04-01 15:49:36 -Generating unique operation named: updateUsingPATCH_8
2019-04-01 15:49:36 -Generating unique operation named: updateUsingDELETE_8
2019-04-01 15:49:36 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-01 15:49:36 -Generating unique operation named: updateUsingTRACE_8
2019-04-01 15:49:36 -Generating unique operation named: addUsingGET_12
2019-04-01 15:49:36 -Generating unique operation named: editUsingGET_13
2019-04-01 15:49:36 -Generating unique operation named: listUsingGET_14
2019-04-01 15:49:36 -Generating unique operation named: removeUsingPOST_24
2019-04-01 15:49:36 -Generating unique operation named: removeUsingPOST_25
2019-04-01 15:49:36 -Generating unique operation named: saveUsingPOST_12
2019-04-01 15:49:36 -Generating unique operation named: updateUsingGET_9
2019-04-01 15:49:36 -Generating unique operation named: updateUsingHEAD_9
2019-04-01 15:49:36 -Generating unique operation named: updateUsingPOST_13
2019-04-01 15:49:36 -Generating unique operation named: updateUsingPUT_9
2019-04-01 15:49:36 -Generating unique operation named: updateUsingPATCH_9
2019-04-01 15:49:36 -Generating unique operation named: updateUsingDELETE_9
2019-04-01 15:49:36 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-01 15:49:36 -Generating unique operation named: updateUsingTRACE_9
2019-04-01 15:49:36 -Generating unique operation named: addUsingGET_13
2019-04-01 15:49:36 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-01 15:49:36 -Generating unique operation named: editUsingGET_14
2019-04-01 15:49:36 -Generating unique operation named: listUsingGET_15
2019-04-01 15:49:36 -Generating unique operation named: saveUsingPOST_13
2019-04-01 15:49:36 -Generating unique operation named: saveUsingPOST_14
2019-04-01 15:49:36 -Generating unique operation named: updateUsingPOST_14
2019-04-01 15:49:36 -Generating unique operation named: listUsingGET_16
2019-04-01 15:49:36 -Generating unique operation named: listUsingHEAD_1
2019-04-01 15:49:36 -Generating unique operation named: listUsingPOST_1
2019-04-01 15:49:36 -Generating unique operation named: listUsingPUT_1
2019-04-01 15:49:36 -Generating unique operation named: listUsingPATCH_1
2019-04-01 15:49:36 -Generating unique operation named: listUsingDELETE_1
2019-04-01 15:49:36 -Generating unique operation named: listUsingOPTIONS_1
2019-04-01 15:49:36 -Generating unique operation named: listUsingTRACE_1
2019-04-01 15:49:36 -Generating unique operation named: addUsingGET_14
2019-04-01 15:49:36 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-01 15:49:36 -Generating unique operation named: editUsingGET_15
2019-04-01 15:49:36 -Generating unique operation named: listUsingGET_17
2019-04-01 15:49:36 -Generating unique operation named: removeUsingPOST_26
2019-04-01 15:49:36 -Generating unique operation named: saveUsingPOST_15
2019-04-01 15:49:36 -Generating unique operation named: treeUsingGET_3
2019-04-01 15:49:36 -Generating unique operation named: treeViewUsingGET_1
2019-04-01 15:49:36 -Generating unique operation named: updateUsingPOST_15
2019-04-01 15:49:36 -Generating unique operation named: addUsingGET_15
2019-04-01 15:49:36 -Generating unique operation named: editUsingGET_16
2019-04-01 15:49:36 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-01 15:49:36 -Generating unique operation named: listUsingGET_18
2019-04-01 15:49:36 -Generating unique operation named: removeUsingPOST_27
2019-04-01 15:49:36 -Generating unique operation named: removeUsingPOST_28
2019-04-01 15:49:36 -Generating unique operation named: saveUsingPOST_16
2019-04-01 15:49:36 -Generating unique operation named: updateUsingGET_10
2019-04-01 15:49:36 -Generating unique operation named: updateUsingHEAD_10
2019-04-01 15:49:36 -Generating unique operation named: updateUsingPOST_16
2019-04-01 15:49:36 -Generating unique operation named: updateUsingPUT_10
2019-04-01 15:49:36 -Generating unique operation named: updateUsingPATCH_10
2019-04-01 15:49:36 -Generating unique operation named: updateUsingDELETE_10
2019-04-01 15:49:36 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-01 15:49:36 -Generating unique operation named: updateUsingTRACE_10
2019-04-01 15:49:36 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-01 15:49:36 -Generating unique operation named: addUsingGET_16
2019-04-01 15:49:36 -Generating unique operation named: editUsingGET_17
2019-04-01 15:49:37 -Generating unique operation named: listUsingGET_19
2019-04-01 15:49:37 -Generating unique operation named: removeUsingPOST_29
2019-04-01 15:49:37 -Generating unique operation named: removeUsingPOST_30
2019-04-01 15:49:37 -Generating unique operation named: saveUsingPOST_17
2019-04-01 15:49:37 -Generating unique operation named: updateUsingGET_11
2019-04-01 15:49:37 -Generating unique operation named: updateUsingHEAD_11
2019-04-01 15:49:37 -Generating unique operation named: updateUsingPOST_17
2019-04-01 15:49:37 -Generating unique operation named: updateUsingPUT_11
2019-04-01 15:49:37 -Generating unique operation named: updateUsingPATCH_11
2019-04-01 15:49:37 -Generating unique operation named: updateUsingDELETE_11
2019-04-01 15:49:37 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-01 15:49:37 -Generating unique operation named: updateUsingTRACE_11
2019-04-01 15:49:37 -Generating unique operation named: addUsingGET_17
2019-04-01 15:49:37 -Generating unique operation named: editUsingGET_18
2019-04-01 15:49:37 -Generating unique operation named: listUsingGET_20
2019-04-01 15:49:37 -Generating unique operation named: removeUsingPOST_31
2019-04-01 15:49:37 -Generating unique operation named: removeUsingPOST_32
2019-04-01 15:49:37 -Generating unique operation named: saveUsingPOST_18
2019-04-01 15:49:37 -Generating unique operation named: updateUsingGET_12
2019-04-01 15:49:37 -Generating unique operation named: updateUsingHEAD_12
2019-04-01 15:49:37 -Generating unique operation named: updateUsingPOST_18
2019-04-01 15:49:37 -Generating unique operation named: updateUsingPUT_12
2019-04-01 15:49:37 -Generating unique operation named: updateUsingPATCH_12
2019-04-01 15:49:37 -Generating unique operation named: updateUsingDELETE_12
2019-04-01 15:49:37 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-01 15:49:37 -Generating unique operation named: updateUsingTRACE_12
2019-04-01 15:49:37 -Starting Quartz Scheduler now
2019-04-01 15:49:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-01 15:49:37 -Starting...
2019-04-01 15:49:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 15:49:37 -Started.
2019-04-01 15:49:37 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-01 15:49:37 -Using a shared selector for servlet write/read
2019-04-01 15:49:37 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-01 15:49:37 -Started BootdoApplication in 32.521 seconds (JVM running for 34.422)
2019-04-01 15:49:37 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-01 15:49:38 -==> Parameters: 
2019-04-01 15:49:38 -<==      Total: 1
2019-04-01 15:50:29 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-01 15:53:24 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-01 15:53:24 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-01 15:53:24 -FrameworkServlet 'dispatcherServlet': initialization completed in 88 ms
2019-04-01 15:53:24 -Enabling session validation scheduler...
2019-04-01 15:53:24 -请求地址 : http://localhost:8081/login;JSESSIONID=f1502e53-057e-477d-8cf0-5cef51868494
2019-04-01 15:53:24 -HTTP METHOD : GET
2019-04-01 15:53:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 15:53:24 -参数 : [{}]
2019-04-01 15:53:24 -耗时 : 4
2019-04-01 15:53:24 -返回值 : login
2019-04-01 15:53:29 -请求地址 : http://localhost:8081/getVerify
2019-04-01 15:53:29 -HTTP METHOD : GET
2019-04-01 15:53:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 15:53:29 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3cd44ebc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7d839f98]
2019-04-01 15:53:46 -5110
2019-04-01 15:53:46 -耗时 : 17093
2019-04-01 15:53:46 -返回值 : null
2019-04-01 15:53:46 -请求地址 : http://localhost:8081/login
2019-04-01 15:53:46 -HTTP METHOD : GET
2019-04-01 15:53:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 15:53:46 -参数 : [{}]
2019-04-01 15:53:46 -耗时 : 1
2019-04-01 15:53:46 -返回值 : login
2019-04-01 15:53:51 -请求地址 : http://localhost:8081/login
2019-04-01 15:53:51 -HTTP METHOD : POST
2019-04-01 15:53:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-01 15:53:51 -参数 : [admin, 111111, 5110, org.apache.shiro.web.servlet.ShiroHttpServletRequest@51eb9fcb]
2019-04-01 15:53:51 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-01 15:53:51 -==> Parameters: admin(String)
2019-04-01 15:53:51 -<==      Total: 1
2019-04-01 15:53:51 -耗时 : 307
2019-04-01 15:53:51 -返回值 : {msg=操作成功, code=0}
2019-04-01 15:53:52 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-01 15:53:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:53:52 -==> Parameters: 1(Long), admin(String), 登录(String), 307(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-01 15:53:52.083(Timestamp)
2019-04-01 15:53:52 -请求地址 : http://localhost:8081/index
2019-04-01 15:53:52 -HTTP METHOD : GET
2019-04-01 15:53:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 15:53:52 -参数 : [{}]
2019-04-01 15:53:52 -<==    Updates: 1
2019-04-01 15:53:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 15:53:52 -==> Parameters: 1(Long)
2019-04-01 15:53:52 -<==      Total: 46
2019-04-01 15:53:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 15:53:52 -==> Parameters: 138(Long)
2019-04-01 15:53:52 -<==      Total: 1
2019-04-01 15:53:52 -耗时 : 436
2019-04-01 15:53:52 -返回值 : index_v1
2019-04-01 15:53:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:53:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 436(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 15:53:52.982(Timestamp)
2019-04-01 15:53:53 -<==    Updates: 1
2019-04-01 15:53:53 -请求地址 : http://localhost:8081/main
2019-04-01 15:53:53 -HTTP METHOD : GET
2019-04-01 15:53:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 15:53:53 -参数 : []
2019-04-01 15:53:53 -耗时 : 0
2019-04-01 15:53:53 -返回值 : main
2019-04-01 15:53:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 15:53:53 -HTTP METHOD : GET
2019-04-01 15:53:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 15:53:53 -参数 : []
2019-04-01 15:53:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 15:53:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 15:53:54 -<==      Total: 0
2019-04-01 15:53:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 15:53:54 -==> Parameters: 1(Long), 0(String)
2019-04-01 15:53:54 -<==      Total: 1
2019-04-01 15:53:54 -耗时 : 379
2019-04-01 15:53:54 -返回值 : com.bootdo.common.utils.PageUtils@35214a80
2019-04-01 15:53:54 -请求地址 : http://localhost:8081/main
2019-04-01 15:53:54 -HTTP METHOD : GET
2019-04-01 15:53:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 15:53:54 -参数 : []
2019-04-01 15:53:54 -耗时 : 1
2019-04-01 15:53:54 -返回值 : main
2019-04-01 15:54:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 15:54:03 -==> Parameters: 1(Long)
2019-04-01 15:54:03 -<==      Total: 90
2019-04-01 15:54:03 -请求地址 : http://localhost:8081/print/print
2019-04-01 15:54:03 -HTTP METHOD : GET
2019-04-01 15:54:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 15:54:03 -参数 : []
2019-04-01 15:54:03 -耗时 : 0
2019-04-01 15:54:03 -返回值 : print/print/print
2019-04-01 15:54:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 15:54:04 -HTTP METHOD : GET
2019-04-01 15:54:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 15:54:04 -参数 : [userType]
2019-04-01 15:54:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 15:54:04 -==> Parameters: userType(String)
2019-04-01 15:54:04 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 15:54:04 -HTTP METHOD : GET
2019-04-01 15:54:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 15:54:04 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 15:54:04 -<==      Total: 2
2019-04-01 15:54:04 -耗时 : 60
2019-04-01 15:54:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 15:54:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 15:54:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 15:54:05 -<==      Total: 3
2019-04-01 15:54:05 -==>  Preparing: select count(*) from print 
2019-04-01 15:54:05 -==> Parameters: 
2019-04-01 15:54:05 -<==      Total: 1
2019-04-01 15:54:05 -耗时 : 201
2019-04-01 15:54:05 -返回值 : com.bootdo.common.utils.PageUtils@346e29bf
2019-04-01 15:54:06 -请求地址 : http://localhost:8081/print/print/add
2019-04-01 15:54:06 -HTTP METHOD : GET
2019-04-01 15:54:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-01 15:54:06 -参数 : []
2019-04-01 15:54:06 -耗时 : 1
2019-04-01 15:54:06 -返回值 : print/print/add
2019-04-01 15:54:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 15:54:06 -HTTP METHOD : GET
2019-04-01 15:54:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 15:54:06 -参数 : [userType]
2019-04-01 15:54:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 15:54:06 -==> Parameters: userType(String)
2019-04-01 15:54:06 -<==      Total: 2
2019-04-01 15:54:06 -耗时 : 6
2019-04-01 15:54:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 15:54:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 15:54:32 -HTTP METHOD : GET
2019-04-01 15:54:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 15:54:32 -参数 : []
2019-04-01 15:54:32 -耗时 : 1
2019-04-01 15:54:32 -返回值 : system/dept/deptTree
2019-04-01 15:54:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 15:54:32 -HTTP METHOD : GET
2019-04-01 15:54:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 15:54:32 -参数 : []
2019-04-01 15:54:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 15:54:32 -==> Parameters: 
2019-04-01 15:54:32 -<==      Total: 3
2019-04-01 15:54:32 -耗时 : 22
2019-04-01 15:54:32 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 15:54:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:54:54 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'printDate' is not present(String), null, 2019-04-01 15:54:54.197(Timestamp)
2019-04-01 15:54:54 -Required String parameter 'printDate' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'printDate' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 15:54:54 -<==    Updates: 1
2019-04-01 15:56:23 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 15:56:23 -HTTP METHOD : GET
2019-04-01 15:56:23 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 15:56:23 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=, userId=, type=A}]
2019-04-01 15:56:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 15:56:23 -==> Parameters: A(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 15:56:23 -<==      Total: 1
2019-04-01 15:56:23 -==>  Preparing: select count(*) from print WHERE user_type = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 15:56:23 -==> Parameters: A(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 15:56:23 -<==      Total: 1
2019-04-01 15:56:23 -耗时 : 27
2019-04-01 15:56:23 -返回值 : com.bootdo.common.utils.PageUtils@5b0dd8ec
2019-04-01 15:56:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 15:56:24 -HTTP METHOD : GET
2019-04-01 15:56:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 15:56:24 -参数 : []
2019-04-01 15:56:24 -耗时 : 0
2019-04-01 15:56:24 -返回值 : system/dept/deptTree
2019-04-01 15:56:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 15:56:24 -HTTP METHOD : GET
2019-04-01 15:56:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 15:56:24 -参数 : []
2019-04-01 15:56:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 15:56:24 -==> Parameters: 
2019-04-01 15:56:24 -<==      Total: 3
2019-04-01 15:56:24 -耗时 : 4
2019-04-01 15:56:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 15:56:27 -请求地址 : http://localhost:8081/print/print/exprotPrint
2019-04-01 15:56:27 -HTTP METHOD : GET
2019-04-01 15:56:27 -CLASS_METHOD : com.bootdo.print.controller.PrintController.exprotPrint
2019-04-01 15:56:27 -参数 : [com.bootdo.print.vo.PrintVo@607e2cff, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3bcfe2e7, org.apache.shiro.web.servlet.ShiroHttpServletRequest@453dcab2]
2019-04-01 15:56:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 15:56:59 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 15:56:59 -<==      Total: 1
2019-04-01 15:57:51 -耗时 : 83533
2019-04-01 15:57:51 -返回值 : null
2019-04-01 15:58:03 -请求地址 : http://localhost:8081/index
2019-04-01 15:58:03 -HTTP METHOD : GET
2019-04-01 15:58:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 15:58:03 -参数 : [{}]
2019-04-01 15:58:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 15:58:03 -==> Parameters: 1(Long)
2019-04-01 15:58:03 -<==      Total: 46
2019-04-01 15:58:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 15:58:03 -==> Parameters: 138(Long)
2019-04-01 15:58:03 -<==      Total: 1
2019-04-01 15:58:03 -耗时 : 89
2019-04-01 15:58:03 -返回值 : index_v1
2019-04-01 15:58:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:58:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 89(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 15:58:03.195(Timestamp)
2019-04-01 15:58:03 -<==    Updates: 1
2019-04-01 15:58:03 -请求地址 : http://localhost:8081/main
2019-04-01 15:58:03 -HTTP METHOD : GET
2019-04-01 15:58:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 15:58:03 -参数 : []
2019-04-01 15:58:03 -耗时 : 1
2019-04-01 15:58:03 -返回值 : main
2019-04-01 15:58:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 15:58:03 -HTTP METHOD : GET
2019-04-01 15:58:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 15:58:03 -参数 : []
2019-04-01 15:58:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 15:58:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 15:58:03 -<==      Total: 0
2019-04-01 15:58:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 15:58:03 -==> Parameters: 1(Long), 0(String)
2019-04-01 15:58:03 -<==      Total: 1
2019-04-01 15:58:03 -耗时 : 9
2019-04-01 15:58:03 -返回值 : com.bootdo.common.utils.PageUtils@f0db018
2019-04-01 15:58:03 -请求地址 : http://localhost:8081/main
2019-04-01 15:58:03 -HTTP METHOD : GET
2019-04-01 15:58:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 15:58:03 -参数 : []
2019-04-01 15:58:03 -耗时 : 1
2019-04-01 15:58:03 -返回值 : main
2019-04-01 15:58:05 -请求地址 : http://localhost:8081/print/print
2019-04-01 15:58:05 -HTTP METHOD : GET
2019-04-01 15:58:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 15:58:05 -参数 : []
2019-04-01 15:58:05 -耗时 : 1
2019-04-01 15:58:05 -返回值 : print/print/print
2019-04-01 15:58:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 15:58:05 -HTTP METHOD : GET
2019-04-01 15:58:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 15:58:05 -参数 : [userType]
2019-04-01 15:58:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 15:58:05 -==> Parameters: userType(String)
2019-04-01 15:58:05 -<==      Total: 2
2019-04-01 15:58:05 -耗时 : 6
2019-04-01 15:58:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 15:58:05 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 15:58:05 -HTTP METHOD : GET
2019-04-01 15:58:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 15:58:05 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 15:58:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 15:58:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 15:58:05 -<==      Total: 3
2019-04-01 15:58:05 -==>  Preparing: select count(*) from print 
2019-04-01 15:58:05 -==> Parameters: 
2019-04-01 15:58:05 -<==      Total: 1
2019-04-01 15:58:05 -耗时 : 12
2019-04-01 15:58:05 -返回值 : com.bootdo.common.utils.PageUtils@6fbf2683
2019-04-01 15:58:25 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 15:58:25 -HTTP METHOD : GET
2019-04-01 15:58:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 15:58:25 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=, userId=, type=A}]
2019-04-01 15:58:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 15:58:25 -==> Parameters: A(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 15:58:25 -<==      Total: 1
2019-04-01 15:58:25 -==>  Preparing: select count(*) from print WHERE user_type = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 15:58:25 -==> Parameters: A(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 15:58:25 -<==      Total: 1
2019-04-01 15:58:25 -耗时 : 25
2019-04-01 15:58:25 -返回值 : com.bootdo.common.utils.PageUtils@418b27df
2019-04-01 15:58:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 15:58:25 -HTTP METHOD : GET
2019-04-01 15:58:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 15:58:25 -参数 : []
2019-04-01 15:58:25 -耗时 : 0
2019-04-01 15:58:25 -返回值 : system/dept/deptTree
2019-04-01 15:58:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 15:58:26 -HTTP METHOD : GET
2019-04-01 15:58:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 15:58:26 -参数 : []
2019-04-01 15:58:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 15:58:26 -==> Parameters: 
2019-04-01 15:58:26 -<==      Total: 3
2019-04-01 15:58:26 -耗时 : 4
2019-04-01 15:58:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 15:58:31 -请求地址 : http://localhost:8081/print/print/exprotPrint
2019-04-01 15:58:31 -HTTP METHOD : GET
2019-04-01 15:58:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.exprotPrint
2019-04-01 15:58:31 -参数 : [com.bootdo.print.vo.PrintVo@6e85385c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7eb6deb4, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1f72f12e]
2019-04-01 15:58:33 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 15:58:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 15:58:37 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 15:58:37 -<==      Total: 1
2019-04-01 15:58:37 -耗时 : 6668
2019-04-01 15:58:37 -返回值 : null
2019-04-01 15:58:42 -请求地址 : http://localhost:8081/index
2019-04-01 15:58:42 -HTTP METHOD : GET
2019-04-01 15:58:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 15:58:42 -参数 : [{}]
2019-04-01 15:58:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 15:58:42 -==> Parameters: 1(Long)
2019-04-01 15:58:42 -<==      Total: 46
2019-04-01 15:58:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 15:58:42 -==> Parameters: 138(Long)
2019-04-01 15:58:42 -<==      Total: 1
2019-04-01 15:58:42 -耗时 : 32
2019-04-01 15:58:42 -返回值 : index_v1
2019-04-01 15:58:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 15:58:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 15:58:42.042(Timestamp)
2019-04-01 15:58:42 -请求地址 : http://localhost:8081/main
2019-04-01 15:58:42 -HTTP METHOD : GET
2019-04-01 15:58:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 15:58:42 -参数 : []
2019-04-01 15:58:42 -耗时 : 1
2019-04-01 15:58:42 -返回值 : main
2019-04-01 15:58:42 -<==    Updates: 1
2019-04-01 15:58:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 15:58:42 -HTTP METHOD : GET
2019-04-01 15:58:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 15:58:42 -参数 : []
2019-04-01 15:58:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 15:58:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 15:58:42 -<==      Total: 0
2019-04-01 15:58:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 15:58:42 -==> Parameters: 1(Long), 0(String)
2019-04-01 15:58:42 -<==      Total: 1
2019-04-01 15:58:42 -耗时 : 10
2019-04-01 15:58:42 -返回值 : com.bootdo.common.utils.PageUtils@72da2385
2019-04-01 15:58:42 -请求地址 : http://localhost:8081/main
2019-04-01 15:58:42 -HTTP METHOD : GET
2019-04-01 15:58:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 15:58:42 -参数 : []
2019-04-01 15:58:42 -耗时 : 0
2019-04-01 15:58:42 -返回值 : main
2019-04-01 15:58:49 -请求地址 : http://localhost:8081/print/print
2019-04-01 15:58:49 -HTTP METHOD : GET
2019-04-01 15:58:49 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 15:58:49 -参数 : []
2019-04-01 15:58:49 -耗时 : 1
2019-04-01 15:58:49 -返回值 : print/print/print
2019-04-01 15:58:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 15:58:49 -HTTP METHOD : GET
2019-04-01 15:58:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 15:58:49 -参数 : [userType]
2019-04-01 15:58:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 15:58:49 -==> Parameters: userType(String)
2019-04-01 15:58:49 -<==      Total: 2
2019-04-01 15:58:49 -耗时 : 3
2019-04-01 15:58:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 15:58:49 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 15:58:49 -HTTP METHOD : GET
2019-04-01 15:58:49 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 15:58:49 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 15:58:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 15:58:49 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 15:58:49 -<==      Total: 3
2019-04-01 15:58:49 -==>  Preparing: select count(*) from print 
2019-04-01 15:58:49 -==> Parameters: 
2019-04-01 15:58:49 -<==      Total: 1
2019-04-01 15:58:49 -耗时 : 10
2019-04-01 15:58:49 -返回值 : com.bootdo.common.utils.PageUtils@58fdad7d
2019-04-01 15:59:02 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 15:59:02 -HTTP METHOD : GET
2019-04-01 15:59:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 15:59:02 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=, userId=, type=A}]
2019-04-01 15:59:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 15:59:02 -==> Parameters: A(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 15:59:02 -<==      Total: 1
2019-04-01 15:59:02 -==>  Preparing: select count(*) from print WHERE user_type = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 15:59:02 -==> Parameters: A(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 15:59:02 -<==      Total: 1
2019-04-01 15:59:02 -耗时 : 24
2019-04-01 15:59:02 -返回值 : com.bootdo.common.utils.PageUtils@68635828
2019-04-01 15:59:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 15:59:02 -HTTP METHOD : GET
2019-04-01 15:59:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 15:59:02 -参数 : []
2019-04-01 15:59:02 -耗时 : 1
2019-04-01 15:59:02 -返回值 : system/dept/deptTree
2019-04-01 15:59:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 15:59:03 -HTTP METHOD : GET
2019-04-01 15:59:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 15:59:03 -参数 : []
2019-04-01 15:59:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 15:59:03 -==> Parameters: 
2019-04-01 15:59:03 -<==      Total: 3
2019-04-01 15:59:03 -耗时 : 3
2019-04-01 15:59:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 15:59:04 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 15:59:04 -HTTP METHOD : GET
2019-04-01 15:59:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 15:59:04 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=2, userId=}]
2019-04-01 15:59:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 15:59:04 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 15:59:04 -<==      Total: 1
2019-04-01 15:59:04 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 15:59:04 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 15:59:04 -<==      Total: 1
2019-04-01 15:59:04 -耗时 : 17
2019-04-01 15:59:04 -返回值 : com.bootdo.common.utils.PageUtils@55332e2d
2019-04-01 15:59:11 -请求地址 : http://localhost:8081/print/print/exprotPrint
2019-04-01 15:59:11 -HTTP METHOD : GET
2019-04-01 15:59:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.exprotPrint
2019-04-01 15:59:11 -参数 : [com.bootdo.print.vo.PrintVo@279709ee, org.apache.shiro.web.servlet.ShiroHttpServletResponse@534c16f8, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6fc32319]
2019-04-01 15:59:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 15:59:11 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 15:59:11 -<==      Total: 1
2019-04-01 15:59:11 -耗时 : 30
2019-04-01 15:59:11 -返回值 : null
2019-04-01 16:00:34 -请求地址 : http://localhost:8081/index
2019-04-01 16:00:34 -HTTP METHOD : GET
2019-04-01 16:00:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 16:00:34 -参数 : [{}]
2019-04-01 16:00:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 16:00:34 -==> Parameters: 1(Long)
2019-04-01 16:00:34 -<==      Total: 46
2019-04-01 16:00:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 16:00:34 -==> Parameters: 138(Long)
2019-04-01 16:00:34 -<==      Total: 1
2019-04-01 16:00:34 -耗时 : 31
2019-04-01 16:00:34 -返回值 : index_v1
2019-04-01 16:00:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 16:00:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 16:00:34.994(Timestamp)
2019-04-01 16:00:35 -<==    Updates: 1
2019-04-01 16:00:35 -请求地址 : http://localhost:8081/main
2019-04-01 16:00:35 -HTTP METHOD : GET
2019-04-01 16:00:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 16:00:35 -参数 : []
2019-04-01 16:00:35 -耗时 : 2
2019-04-01 16:00:35 -返回值 : main
2019-04-01 16:00:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 16:00:35 -HTTP METHOD : GET
2019-04-01 16:00:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 16:00:35 -参数 : []
2019-04-01 16:00:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 16:00:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 16:00:35 -<==      Total: 0
2019-04-01 16:00:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 16:00:35 -==> Parameters: 1(Long), 0(String)
2019-04-01 16:00:35 -<==      Total: 1
2019-04-01 16:00:35 -耗时 : 7
2019-04-01 16:00:35 -返回值 : com.bootdo.common.utils.PageUtils@770cd53e
2019-04-01 16:00:35 -请求地址 : http://localhost:8081/main
2019-04-01 16:00:35 -HTTP METHOD : GET
2019-04-01 16:00:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 16:00:35 -参数 : []
2019-04-01 16:00:35 -耗时 : 1
2019-04-01 16:00:35 -返回值 : main
2019-04-01 16:00:37 -请求地址 : http://localhost:8081/print/print
2019-04-01 16:00:37 -HTTP METHOD : GET
2019-04-01 16:00:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 16:00:37 -参数 : []
2019-04-01 16:00:37 -耗时 : 1
2019-04-01 16:00:37 -返回值 : print/print/print
2019-04-01 16:00:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 16:00:38 -HTTP METHOD : GET
2019-04-01 16:00:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 16:00:38 -参数 : [userType]
2019-04-01 16:00:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 16:00:38 -==> Parameters: userType(String)
2019-04-01 16:00:38 -<==      Total: 2
2019-04-01 16:00:38 -耗时 : 5
2019-04-01 16:00:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 16:00:38 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:00:38 -HTTP METHOD : GET
2019-04-01 16:00:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:00:38 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 16:00:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 16:00:38 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 16:00:38 -<==      Total: 3
2019-04-01 16:00:38 -==>  Preparing: select count(*) from print 
2019-04-01 16:00:38 -==> Parameters: 
2019-04-01 16:00:38 -<==      Total: 1
2019-04-01 16:00:38 -耗时 : 18
2019-04-01 16:00:38 -返回值 : com.bootdo.common.utils.PageUtils@33b417b2
2019-04-01 16:00:49 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:00:49 -HTTP METHOD : GET
2019-04-01 16:00:49 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:00:49 -参数 : [{limit=10, offset=0, createTime=2019-02-26, userType=A, userOrg=, userId=, type=A}]
2019-04-01 16:00:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:00:49 -==> Parameters: A(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:00:49 -<==      Total: 1
2019-04-01 16:00:49 -==>  Preparing: select count(*) from print WHERE user_type = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:00:49 -==> Parameters: A(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 16:00:49 -<==      Total: 1
2019-04-01 16:00:49 -耗时 : 10
2019-04-01 16:00:49 -返回值 : com.bootdo.common.utils.PageUtils@4c29e66f
2019-04-01 16:00:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 16:00:51 -HTTP METHOD : GET
2019-04-01 16:00:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 16:00:51 -参数 : []
2019-04-01 16:00:51 -耗时 : 1
2019-04-01 16:00:51 -返回值 : system/dept/deptTree
2019-04-01 16:00:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 16:00:51 -HTTP METHOD : GET
2019-04-01 16:00:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 16:00:51 -参数 : []
2019-04-01 16:00:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 16:00:51 -==> Parameters: 
2019-04-01 16:00:51 -<==      Total: 3
2019-04-01 16:00:51 -耗时 : 3
2019-04-01 16:00:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 16:00:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 16:00:57 -HTTP METHOD : GET
2019-04-01 16:00:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 16:00:57 -参数 : []
2019-04-01 16:00:57 -耗时 : 3
2019-04-01 16:00:57 -返回值 : system/dept/deptTree
2019-04-01 16:00:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 16:00:57 -HTTP METHOD : GET
2019-04-01 16:00:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 16:00:57 -参数 : []
2019-04-01 16:00:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 16:00:57 -==> Parameters: 
2019-04-01 16:00:57 -<==      Total: 3
2019-04-01 16:00:57 -耗时 : 8
2019-04-01 16:00:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 16:01:00 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:00 -HTTP METHOD : GET
2019-04-01 16:01:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:00 -参数 : [{limit=10, offset=0, createTime=2019-02-26, userType=A, userOrg=2, userId=}]
2019-04-01 16:01:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:00 -==> Parameters: A(String), 2(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:00 -<==      Total: 1
2019-04-01 16:01:00 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:00 -==> Parameters: A(String), 2(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 16:01:00 -<==      Total: 1
2019-04-01 16:01:00 -耗时 : 8
2019-04-01 16:01:00 -返回值 : com.bootdo.common.utils.PageUtils@79efeb3d
2019-04-01 16:01:00 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:00 -HTTP METHOD : GET
2019-04-01 16:01:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:00 -参数 : [{limit=10, offset=0, createTime=2019-02-26, userType=A, userOrg=2, userId=}]
2019-04-01 16:01:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:00 -==> Parameters: A(String), 2(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:00 -<==      Total: 1
2019-04-01 16:01:00 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:00 -==> Parameters: A(String), 2(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 16:01:00 -<==      Total: 1
2019-04-01 16:01:00 -耗时 : 10
2019-04-01 16:01:00 -返回值 : com.bootdo.common.utils.PageUtils@293fc2e1
2019-04-01 16:01:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 16:01:02 -HTTP METHOD : GET
2019-04-01 16:01:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 16:01:02 -参数 : []
2019-04-01 16:01:02 -耗时 : 0
2019-04-01 16:01:02 -返回值 : system/dept/deptTree
2019-04-01 16:01:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 16:01:02 -HTTP METHOD : GET
2019-04-01 16:01:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 16:01:02 -参数 : []
2019-04-01 16:01:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 16:01:02 -==> Parameters: 
2019-04-01 16:01:02 -<==      Total: 3
2019-04-01 16:01:02 -耗时 : 5
2019-04-01 16:01:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 16:01:03 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:03 -HTTP METHOD : GET
2019-04-01 16:01:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:03 -参数 : [{limit=10, offset=0, createTime=2019-02-26, userType=A, userOrg=3, userId=}]
2019-04-01 16:01:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:03 -==> Parameters: A(String), 3(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:03 -<==      Total: 0
2019-04-01 16:01:03 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:03 -==> Parameters: A(String), 3(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 16:01:03 -<==      Total: 1
2019-04-01 16:01:03 -耗时 : 10
2019-04-01 16:01:03 -返回值 : com.bootdo.common.utils.PageUtils@3d7d5d56
2019-04-01 16:01:04 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:04 -HTTP METHOD : GET
2019-04-01 16:01:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:04 -参数 : [{limit=10, offset=0, createTime=2019-02-26, userType=A, userOrg=3, userId=}]
2019-04-01 16:01:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:04 -==> Parameters: A(String), 3(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:04 -<==      Total: 0
2019-04-01 16:01:04 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:04 -==> Parameters: A(String), 3(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 16:01:04 -<==      Total: 1
2019-04-01 16:01:04 -耗时 : 6
2019-04-01 16:01:04 -返回值 : com.bootdo.common.utils.PageUtils@8186df7
2019-04-01 16:01:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 16:01:05 -HTTP METHOD : GET
2019-04-01 16:01:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 16:01:05 -参数 : []
2019-04-01 16:01:05 -耗时 : 1
2019-04-01 16:01:05 -返回值 : system/dept/deptTree
2019-04-01 16:01:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 16:01:06 -HTTP METHOD : GET
2019-04-01 16:01:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 16:01:06 -参数 : []
2019-04-01 16:01:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 16:01:06 -==> Parameters: 
2019-04-01 16:01:06 -<==      Total: 3
2019-04-01 16:01:06 -耗时 : 3
2019-04-01 16:01:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 16:01:07 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:07 -HTTP METHOD : GET
2019-04-01 16:01:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:07 -参数 : [{limit=10, offset=0, createTime=2019-02-26, userType=A, userOrg=2, userId=}]
2019-04-01 16:01:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:07 -==> Parameters: A(String), 2(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:07 -<==      Total: 1
2019-04-01 16:01:07 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:07 -==> Parameters: A(String), 2(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-01 16:01:07 -<==      Total: 1
2019-04-01 16:01:07 -耗时 : 9
2019-04-01 16:01:07 -返回值 : com.bootdo.common.utils.PageUtils@5888a00f
2019-04-01 16:01:15 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:15 -HTTP METHOD : GET
2019-04-01 16:01:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:15 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=2, userId=}]
2019-04-01 16:01:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:15 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:15 -<==      Total: 1
2019-04-01 16:01:15 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:15 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 16:01:15 -<==      Total: 1
2019-04-01 16:01:15 -耗时 : 10
2019-04-01 16:01:15 -返回值 : com.bootdo.common.utils.PageUtils@f493000
2019-04-01 16:01:16 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:16 -HTTP METHOD : GET
2019-04-01 16:01:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:16 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=2, userId=}]
2019-04-01 16:01:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:16 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:16 -<==      Total: 1
2019-04-01 16:01:16 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:16 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 16:01:16 -<==      Total: 1
2019-04-01 16:01:16 -耗时 : 9
2019-04-01 16:01:16 -返回值 : com.bootdo.common.utils.PageUtils@267b2a99
2019-04-01 16:01:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 16:01:17 -HTTP METHOD : GET
2019-04-01 16:01:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 16:01:17 -参数 : []
2019-04-01 16:01:17 -耗时 : 0
2019-04-01 16:01:17 -返回值 : system/dept/deptTree
2019-04-01 16:01:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 16:01:17 -HTTP METHOD : GET
2019-04-01 16:01:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 16:01:17 -参数 : []
2019-04-01 16:01:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 16:01:17 -==> Parameters: 
2019-04-01 16:01:17 -<==      Total: 3
2019-04-01 16:01:17 -耗时 : 3
2019-04-01 16:01:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 16:01:18 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:18 -HTTP METHOD : GET
2019-04-01 16:01:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:18 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=3, userId=}]
2019-04-01 16:01:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:18 -==> Parameters: A(String), 3(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:18 -<==      Total: 0
2019-04-01 16:01:18 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:18 -==> Parameters: A(String), 3(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 16:01:18 -<==      Total: 1
2019-04-01 16:01:18 -耗时 : 7
2019-04-01 16:01:18 -返回值 : com.bootdo.common.utils.PageUtils@1b40de23
2019-04-01 16:01:19 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:19 -HTTP METHOD : GET
2019-04-01 16:01:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:19 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=3, userId=}]
2019-04-01 16:01:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:19 -==> Parameters: A(String), 3(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:19 -<==      Total: 0
2019-04-01 16:01:19 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:19 -==> Parameters: A(String), 3(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 16:01:19 -<==      Total: 1
2019-04-01 16:01:19 -耗时 : 8
2019-04-01 16:01:19 -返回值 : com.bootdo.common.utils.PageUtils@1ad8de3
2019-04-01 16:01:20 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:20 -HTTP METHOD : GET
2019-04-01 16:01:20 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:20 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=3, userId=}]
2019-04-01 16:01:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:20 -==> Parameters: A(String), 3(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:20 -<==      Total: 0
2019-04-01 16:01:20 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:20 -==> Parameters: A(String), 3(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 16:01:20 -<==      Total: 1
2019-04-01 16:01:20 -耗时 : 8
2019-04-01 16:01:20 -返回值 : com.bootdo.common.utils.PageUtils@41a65728
2019-04-01 16:01:20 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:20 -HTTP METHOD : GET
2019-04-01 16:01:20 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:20 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=3, userId=}]
2019-04-01 16:01:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:20 -==> Parameters: A(String), 3(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:20 -<==      Total: 0
2019-04-01 16:01:20 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:20 -==> Parameters: A(String), 3(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 16:01:20 -<==      Total: 1
2019-04-01 16:01:20 -耗时 : 6
2019-04-01 16:01:20 -返回值 : com.bootdo.common.utils.PageUtils@17bd7628
2019-04-01 16:01:21 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:21 -HTTP METHOD : GET
2019-04-01 16:01:21 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:21 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=3, userId=}]
2019-04-01 16:01:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:21 -==> Parameters: A(String), 3(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:21 -<==      Total: 0
2019-04-01 16:01:21 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:21 -==> Parameters: A(String), 3(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 16:01:21 -<==      Total: 1
2019-04-01 16:01:21 -耗时 : 8
2019-04-01 16:01:21 -返回值 : com.bootdo.common.utils.PageUtils@5579a911
2019-04-01 16:01:21 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:01:21 -HTTP METHOD : GET
2019-04-01 16:01:21 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:01:21 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=3, userId=}]
2019-04-01 16:01:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:01:21 -==> Parameters: A(String), 3(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:01:21 -<==      Total: 0
2019-04-01 16:01:21 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:01:21 -==> Parameters: A(String), 3(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 16:01:21 -<==      Total: 1
2019-04-01 16:01:21 -耗时 : 11
2019-04-01 16:01:21 -返回值 : com.bootdo.common.utils.PageUtils@68ecb225
2019-04-01 16:01:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 16:01:57 -HTTP METHOD : GET
2019-04-01 16:01:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 16:01:57 -参数 : []
2019-04-01 16:01:57 -耗时 : 0
2019-04-01 16:01:57 -返回值 : system/dept/deptTree
2019-04-01 16:01:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 16:01:57 -HTTP METHOD : GET
2019-04-01 16:01:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 16:01:57 -参数 : []
2019-04-01 16:01:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 16:01:57 -==> Parameters: 
2019-04-01 16:01:57 -<==      Total: 3
2019-04-01 16:01:57 -耗时 : 5
2019-04-01 16:01:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 16:02:01 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:02:01 -HTTP METHOD : GET
2019-04-01 16:02:01 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:02:01 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=2, userId=}]
2019-04-01 16:02:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-01 16:02:01 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-01 16:02:01 -<==      Total: 1
2019-04-01 16:02:01 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:02:01 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 16:02:01 -<==      Total: 1
2019-04-01 16:02:01 -耗时 : 33
2019-04-01 16:02:01 -返回值 : com.bootdo.common.utils.PageUtils@37746f31
2019-04-01 16:03:01 -请求地址 : http://localhost:8081/print/print/exprotPrint
2019-04-01 16:03:01 -HTTP METHOD : GET
2019-04-01 16:03:01 -CLASS_METHOD : com.bootdo.print.controller.PrintController.exprotPrint
2019-04-01 16:03:01 -参数 : [com.bootdo.print.vo.PrintVo@323805c5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7040339c, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1228ec16]
2019-04-01 16:03:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-01 16:03:01 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-01 16:03:01 -<==      Total: 1
2019-04-01 16:03:01 -耗时 : 15
2019-04-01 16:03:01 -返回值 : null
2019-04-01 16:20:29 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 383]
2019-04-01 16:36:23 -Starting BootdoApplication on ZJZL-20180906VX with PID 7652 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-01 16:36:23 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-01 16:36:23 -The following profiles are active: dev
2019-04-01 16:36:23 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 01 16:36:23 CST 2019]; root of context hierarchy
2019-04-01 16:36:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-01 16:36:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bbffdbb2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:36:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ae590a59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:36:31 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:36:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:36:32 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:36:32 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-01 16:36:32 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-01 16:36:32 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:36:32 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:36:32 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:36:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:36:34 -Tomcat initialized with port(s): 8081 (http)
2019-04-01 16:36:34 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-01 16:36:34 -Starting service [Tomcat]
2019-04-01 16:36:34 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-01 16:36:34 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-01 16:36:35 -Initializing Spring embedded WebApplicationContext
2019-04-01 16:36:35 -Root WebApplicationContext: initialization completed in 11450 ms
2019-04-01 16:36:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-01 16:36:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-01 16:36:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-01 16:36:35 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-01 16:36:35 -Filter xssFilter was not registered (disabled)
2019-04-01 16:36:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-01 16:36:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-01 16:36:35 -Servlet statViewServlet mapped to [/druid/*]
2019-04-01 16:36:35 -Servlet dispatcherServlet mapped to [/]
2019-04-01 16:36:39 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 01 16:36:23 CST 2019]; root of context hierarchy
2019-04-01 16:36:40 -Using default implementation for ThreadExecutor
2019-04-01 16:36:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-01 16:36:40 -Quartz Scheduler v.2.2.1 created.
2019-04-01 16:36:40 -RAMJobStore initialized.
2019-04-01 16:36:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-01 16:36:40 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-01 16:36:40 -Quartz scheduler version: 2.2.1
2019-04-01 16:36:40 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@53cddaf8
2019-04-01 16:36:40 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-01 16:36:40 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-01 16:36:43 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-01 16:36:43 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-01 16:36:43 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 16:36:43 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-01 16:36:43 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-01 16:36:43 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-01 16:36:43 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-01 16:36:43 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-01 16:36:43 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-01 16:36:43 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-01 16:36:43 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-01 16:36:43 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:43 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-01 16:36:43 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-01 16:36:43 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-01 16:36:43 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:43 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-01 16:36:43 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-01 16:36:43 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-01 16:36:43 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-01 16:36:43 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-01 16:36:43 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-01 16:36:43 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:43 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-01 16:36:43 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-01 16:36:43 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-01 16:36:43 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:43 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-01 16:36:43 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:43 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-01 16:36:43 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 16:36:43 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-01 16:36:43 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-01 16:36:43 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 16:36:43 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-01 16:36:43 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-01 16:36:43 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-01 16:36:43 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-01 16:36:43 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:43 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-01 16:36:43 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-01 16:36:43 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:43 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-01 16:36:43 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-01 16:36:43 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-01 16:36:43 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-01 16:36:43 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:43 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-01 16:36:43 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-01 16:36:43 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-01 16:36:43 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 16:36:43 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 16:36:43 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-01 16:36:43 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-01 16:36:43 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-01 16:36:43 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-01 16:36:43 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-01 16:36:43 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-01 16:36:43 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:36:43 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-01 16:36:43 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:43 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:36:43 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-01 16:36:43 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-01 16:36:43 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-01 16:36:43 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-01 16:36:43 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-01 16:36:43 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-01 16:36:43 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:43 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-01 16:36:43 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-01 16:36:43 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:43 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-01 16:36:43 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-01 16:36:43 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-01 16:36:43 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-01 16:36:43 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-01 16:36:43 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-01 16:36:43 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:43 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-01 16:36:43 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:36:43 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-01 16:36:43 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-01 16:36:43 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:36:43 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-01 16:36:43 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-01 16:36:43 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-01 16:36:43 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-01 16:36:43 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 16:36:43 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:43 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 16:36:43 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-01 16:36:43 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:43 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-01 16:36:43 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-01 16:36:43 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 16:36:43 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:36:43 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-01 16:36:43 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-01 16:36:43 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-01 16:36:43 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-01 16:36:43 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-01 16:36:43 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-01 16:36:43 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 16:36:43 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:43 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 16:36:43 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-01 16:36:43 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 16:36:43 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:43 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-01 16:36:44 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-01 16:36:44 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 16:36:44 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:44 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 16:36:44 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 16:36:44 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-01 16:36:44 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-01 16:36:44 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-01 16:36:44 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 16:36:44 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:44 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 16:36:44 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 16:36:44 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-01 16:36:44 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-01 16:36:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-01 16:36:44 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-01 16:36:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-01 16:36:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-01 16:36:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-01 16:36:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-01 16:36:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-01 16:36:44 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-01 16:36:44 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-01 16:36:44 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:44 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-01 16:36:44 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 16:36:44 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-01 16:36:44 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-01 16:36:44 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-01 16:36:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-01 16:36:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-01 16:36:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-01 16:36:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-01 16:36:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-01 16:36:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-01 16:36:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-01 16:36:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 16:36:44 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 16:36:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-01 16:36:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-01 16:36:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-01 16:36:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-01 16:36:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-01 16:36:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-01 16:36:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-01 16:36:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-01 16:36:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-01 16:36:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-01 16:36:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-01 16:36:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-01 16:36:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-01 16:36:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-01 16:36:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-01 16:36:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-01 16:36:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-01 16:36:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-01 16:36:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-01 16:36:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 16:36:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 16:36:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 16:36:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-01 16:36:44 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-01 16:36:44 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-01 16:36:44 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-01 16:36:44 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:44 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-01 16:36:44 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:36:44 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:44 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-01 16:36:44 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:36:44 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-01 16:36:44 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-01 16:36:44 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-01 16:36:44 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-01 16:36:44 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 16:36:44 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:36:44 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 16:36:44 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:36:44 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-01 16:36:44 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 16:36:44 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:36:44 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-01 16:36:44 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-01 16:36:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 16:36:44 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-01 16:36:44 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-01 16:36:44 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-01 16:36:44 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-01 16:36:45 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-01 16:36:45 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-01 16:36:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 16:36:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 01 16:36:23 CST 2019]; root of context hierarchy
2019-04-01 16:36:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 16:36:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 16:36:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 16:36:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-01 16:36:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-01 16:36:50 -Registering beans for JMX exposure on startup
2019-04-01 16:36:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-01 16:36:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-01 16:36:50 -Starting beans in phase 2147483647
2019-04-01 16:36:50 -Context refreshed
2019-04-01 16:36:51 -Found 1 custom documentation plugin(s)
2019-04-01 16:36:51 -Scanning for api listing references
2019-04-01 16:36:55 -Generating unique operation named: removeUsingPOST_1
2019-04-01 16:36:55 -Generating unique operation named: addUsingGET_1
2019-04-01 16:36:55 -Generating unique operation named: editUsingGET_1
2019-04-01 16:36:55 -Generating unique operation named: listUsingGET_1
2019-04-01 16:36:55 -Generating unique operation named: removeUsingPOST_2
2019-04-01 16:36:55 -Generating unique operation named: removeUsingPOST_3
2019-04-01 16:36:55 -Generating unique operation named: saveUsingPOST_1
2019-04-01 16:36:55 -Generating unique operation named: updateUsingGET_1
2019-04-01 16:36:55 -Generating unique operation named: updateUsingHEAD_1
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPOST_1
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPUT_1
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPATCH_1
2019-04-01 16:36:55 -Generating unique operation named: updateUsingDELETE_1
2019-04-01 16:36:55 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-01 16:36:55 -Generating unique operation named: updateUsingTRACE_1
2019-04-01 16:36:55 -Generating unique operation named: addUsingGET_2
2019-04-01 16:36:55 -Generating unique operation named: editUsingGET_2
2019-04-01 16:36:55 -Generating unique operation named: listUsingGET_2
2019-04-01 16:36:55 -Generating unique operation named: removeUsingPOST_4
2019-04-01 16:36:55 -Generating unique operation named: removeUsingPOST_5
2019-04-01 16:36:55 -Generating unique operation named: saveUsingPOST_2
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPOST_2
2019-04-01 16:36:55 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-01 16:36:55 -Generating unique operation named: addUsingGET_3
2019-04-01 16:36:55 -Generating unique operation named: editUsingGET_3
2019-04-01 16:36:55 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-01 16:36:55 -Generating unique operation named: listUsingGET_3
2019-04-01 16:36:55 -Generating unique operation named: removeUsingPOST_6
2019-04-01 16:36:55 -Generating unique operation named: removeUsingPOST_7
2019-04-01 16:36:55 -Generating unique operation named: saveUsingPOST_3
2019-04-01 16:36:55 -Generating unique operation named: updateUsingGET_2
2019-04-01 16:36:55 -Generating unique operation named: updateUsingHEAD_2
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPOST_3
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPUT_2
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPATCH_2
2019-04-01 16:36:55 -Generating unique operation named: updateUsingDELETE_2
2019-04-01 16:36:55 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-01 16:36:55 -Generating unique operation named: updateUsingTRACE_2
2019-04-01 16:36:55 -Generating unique operation named: addUsingGET_4
2019-04-01 16:36:55 -Generating unique operation named: editUsingGET_4
2019-04-01 16:36:55 -Generating unique operation named: listUsingGET_4
2019-04-01 16:36:55 -Generating unique operation named: removeUsingPOST_8
2019-04-01 16:36:55 -Generating unique operation named: removeUsingPOST_9
2019-04-01 16:36:55 -Generating unique operation named: saveUsingPOST_4
2019-04-01 16:36:55 -Generating unique operation named: updateUsingGET_3
2019-04-01 16:36:55 -Generating unique operation named: updateUsingHEAD_3
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPOST_4
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPUT_3
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPATCH_3
2019-04-01 16:36:55 -Generating unique operation named: updateUsingDELETE_3
2019-04-01 16:36:55 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-01 16:36:55 -Generating unique operation named: updateUsingTRACE_3
2019-04-01 16:36:55 -Generating unique operation named: ElecUsingGET_1
2019-04-01 16:36:55 -Generating unique operation named: addUsingGET_5
2019-04-01 16:36:55 -Generating unique operation named: editUsingGET_5
2019-04-01 16:36:55 -Generating unique operation named: listUsingGET_5
2019-04-01 16:36:55 -Generating unique operation named: removeUsingPOST_10
2019-04-01 16:36:55 -Generating unique operation named: removeUsingPOST_11
2019-04-01 16:36:55 -Generating unique operation named: saveUsingPOST_5
2019-04-01 16:36:55 -Generating unique operation named: updateUsingGET_4
2019-04-01 16:36:55 -Generating unique operation named: updateUsingHEAD_4
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPOST_5
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPUT_4
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPATCH_4
2019-04-01 16:36:55 -Generating unique operation named: updateUsingDELETE_4
2019-04-01 16:36:55 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-01 16:36:55 -Generating unique operation named: updateUsingTRACE_4
2019-04-01 16:36:55 -Generating unique operation named: editUsingGET_6
2019-04-01 16:36:55 -Generating unique operation named: listUsingGET_6
2019-04-01 16:36:55 -Generating unique operation named: updateUsingPOST_6
2019-04-01 16:36:56 -Generating unique operation named: addUsingGET_6
2019-04-01 16:36:56 -Generating unique operation named: editUsingGET_7
2019-04-01 16:36:56 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-01 16:36:56 -Generating unique operation named: listUsingGET_7
2019-04-01 16:36:56 -Generating unique operation named: removeUsingPOST_12
2019-04-01 16:36:56 -Generating unique operation named: removeUsingPOST_13
2019-04-01 16:36:56 -Generating unique operation named: saveUsingPOST_6
2019-04-01 16:36:56 -Generating unique operation named: updateUsingGET_5
2019-04-01 16:36:56 -Generating unique operation named: updateUsingHEAD_5
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPOST_7
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPUT_5
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPATCH_5
2019-04-01 16:36:56 -Generating unique operation named: updateUsingDELETE_5
2019-04-01 16:36:56 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-01 16:36:56 -Generating unique operation named: updateUsingTRACE_5
2019-04-01 16:36:56 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-01 16:36:56 -Generating unique operation named: addUsingGET_7
2019-04-01 16:36:56 -Generating unique operation named: editUsingGET_8
2019-04-01 16:36:56 -Generating unique operation named: listUsingGET_8
2019-04-01 16:36:56 -Generating unique operation named: removeUsingPOST_14
2019-04-01 16:36:56 -Generating unique operation named: removeUsingPOST_15
2019-04-01 16:36:56 -Generating unique operation named: saveUsingPOST_7
2019-04-01 16:36:56 -Generating unique operation named: updateUsingGET_6
2019-04-01 16:36:56 -Generating unique operation named: updateUsingHEAD_6
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPOST_8
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPUT_6
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPATCH_6
2019-04-01 16:36:56 -Generating unique operation named: updateUsingDELETE_6
2019-04-01 16:36:56 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-01 16:36:56 -Generating unique operation named: updateUsingTRACE_6
2019-04-01 16:36:56 -Generating unique operation named: addUsingGET_8
2019-04-01 16:36:56 -Generating unique operation named: editUsingGET_9
2019-04-01 16:36:56 -Generating unique operation named: listUsingGET_9
2019-04-01 16:36:56 -Generating unique operation named: removeUsingPOST_16
2019-04-01 16:36:56 -Generating unique operation named: removeUsingPOST_17
2019-04-01 16:36:56 -Generating unique operation named: saveUsingPOST_8
2019-04-01 16:36:56 -Generating unique operation named: updateUsingGET_7
2019-04-01 16:36:56 -Generating unique operation named: updateUsingHEAD_7
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPOST_9
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPUT_7
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPATCH_7
2019-04-01 16:36:56 -Generating unique operation named: updateUsingDELETE_7
2019-04-01 16:36:56 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-01 16:36:56 -Generating unique operation named: updateUsingTRACE_7
2019-04-01 16:36:56 -Generating unique operation named: addUsingGET_9
2019-04-01 16:36:56 -Generating unique operation named: editUsingGET_10
2019-04-01 16:36:56 -Generating unique operation named: infoUsingGET_1
2019-04-01 16:36:56 -Generating unique operation named: infoUsingHEAD_1
2019-04-01 16:36:56 -Generating unique operation named: infoUsingPOST_1
2019-04-01 16:36:56 -Generating unique operation named: infoUsingPUT_1
2019-04-01 16:36:56 -Generating unique operation named: infoUsingPATCH_1
2019-04-01 16:36:56 -Generating unique operation named: infoUsingDELETE_1
2019-04-01 16:36:56 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-01 16:36:56 -Generating unique operation named: infoUsingTRACE_1
2019-04-01 16:36:56 -Generating unique operation named: listUsingGET_10
2019-04-01 16:36:56 -Generating unique operation named: removeUsingPOST_18
2019-04-01 16:36:56 -Generating unique operation named: removeUsingPOST_19
2019-04-01 16:36:56 -Generating unique operation named: saveUsingPOST_9
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPOST_10
2019-04-01 16:36:56 -Generating unique operation named: listUsingGET_11
2019-04-01 16:36:56 -Generating unique operation named: removeUsingPOST_20
2019-04-01 16:36:56 -Generating unique operation named: welcomeUsingGET_1
2019-04-01 16:36:56 -Generating unique operation named: addUsingGET_10
2019-04-01 16:36:56 -Generating unique operation named: editUsingGET_11
2019-04-01 16:36:56 -Generating unique operation named: listUsingGET_12
2019-04-01 16:36:56 -Generating unique operation named: removeUsingPOST_21
2019-04-01 16:36:56 -Generating unique operation named: saveUsingPOST_10
2019-04-01 16:36:56 -Generating unique operation named: treeUsingGET_1
2019-04-01 16:36:56 -Generating unique operation named: treeUsingGET_2
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPOST_11
2019-04-01 16:36:56 -Generating unique operation named: addUsingGET_11
2019-04-01 16:36:56 -Generating unique operation named: editUsingGET_12
2019-04-01 16:36:56 -Generating unique operation named: listUsingGET_13
2019-04-01 16:36:56 -Generating unique operation named: removeUsingPOST_22
2019-04-01 16:36:56 -Generating unique operation named: removeUsingPOST_23
2019-04-01 16:36:56 -Generating unique operation named: saveUsingPOST_11
2019-04-01 16:36:56 -Generating unique operation named: updateUsingGET_8
2019-04-01 16:36:56 -Generating unique operation named: updateUsingHEAD_8
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPOST_12
2019-04-01 16:36:56 -Generating unique operation named: updateUsingPUT_8
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPATCH_8
2019-04-01 16:36:57 -Generating unique operation named: updateUsingDELETE_8
2019-04-01 16:36:57 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-01 16:36:57 -Generating unique operation named: updateUsingTRACE_8
2019-04-01 16:36:57 -Generating unique operation named: addUsingGET_12
2019-04-01 16:36:57 -Generating unique operation named: editUsingGET_13
2019-04-01 16:36:57 -Generating unique operation named: listUsingGET_14
2019-04-01 16:36:57 -Generating unique operation named: removeUsingPOST_24
2019-04-01 16:36:57 -Generating unique operation named: removeUsingPOST_25
2019-04-01 16:36:57 -Generating unique operation named: saveUsingPOST_12
2019-04-01 16:36:57 -Generating unique operation named: updateUsingGET_9
2019-04-01 16:36:57 -Generating unique operation named: updateUsingHEAD_9
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPOST_13
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPUT_9
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPATCH_9
2019-04-01 16:36:57 -Generating unique operation named: updateUsingDELETE_9
2019-04-01 16:36:57 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-01 16:36:57 -Generating unique operation named: updateUsingTRACE_9
2019-04-01 16:36:57 -Generating unique operation named: addUsingGET_13
2019-04-01 16:36:57 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-01 16:36:57 -Generating unique operation named: editUsingGET_14
2019-04-01 16:36:57 -Generating unique operation named: listUsingGET_15
2019-04-01 16:36:57 -Generating unique operation named: saveUsingPOST_13
2019-04-01 16:36:57 -Generating unique operation named: saveUsingPOST_14
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPOST_14
2019-04-01 16:36:57 -Generating unique operation named: listUsingGET_16
2019-04-01 16:36:57 -Generating unique operation named: listUsingHEAD_1
2019-04-01 16:36:57 -Generating unique operation named: listUsingPOST_1
2019-04-01 16:36:57 -Generating unique operation named: listUsingPUT_1
2019-04-01 16:36:57 -Generating unique operation named: listUsingPATCH_1
2019-04-01 16:36:57 -Generating unique operation named: listUsingDELETE_1
2019-04-01 16:36:57 -Generating unique operation named: listUsingOPTIONS_1
2019-04-01 16:36:57 -Generating unique operation named: listUsingTRACE_1
2019-04-01 16:36:57 -Generating unique operation named: addUsingGET_14
2019-04-01 16:36:57 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-01 16:36:57 -Generating unique operation named: editUsingGET_15
2019-04-01 16:36:57 -Generating unique operation named: listUsingGET_17
2019-04-01 16:36:57 -Generating unique operation named: removeUsingPOST_26
2019-04-01 16:36:57 -Generating unique operation named: saveUsingPOST_15
2019-04-01 16:36:57 -Generating unique operation named: treeUsingGET_3
2019-04-01 16:36:57 -Generating unique operation named: treeViewUsingGET_1
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPOST_15
2019-04-01 16:36:57 -Generating unique operation named: addUsingGET_15
2019-04-01 16:36:57 -Generating unique operation named: editUsingGET_16
2019-04-01 16:36:57 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-01 16:36:57 -Generating unique operation named: listUsingGET_18
2019-04-01 16:36:57 -Generating unique operation named: removeUsingPOST_27
2019-04-01 16:36:57 -Generating unique operation named: removeUsingPOST_28
2019-04-01 16:36:57 -Generating unique operation named: saveUsingPOST_16
2019-04-01 16:36:57 -Generating unique operation named: updateUsingGET_10
2019-04-01 16:36:57 -Generating unique operation named: updateUsingHEAD_10
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPOST_16
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPUT_10
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPATCH_10
2019-04-01 16:36:57 -Generating unique operation named: updateUsingDELETE_10
2019-04-01 16:36:57 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-01 16:36:57 -Generating unique operation named: updateUsingTRACE_10
2019-04-01 16:36:57 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-01 16:36:57 -Generating unique operation named: addUsingGET_16
2019-04-01 16:36:57 -Generating unique operation named: editUsingGET_17
2019-04-01 16:36:57 -Generating unique operation named: listUsingGET_19
2019-04-01 16:36:57 -Generating unique operation named: removeUsingPOST_29
2019-04-01 16:36:57 -Generating unique operation named: removeUsingPOST_30
2019-04-01 16:36:57 -Generating unique operation named: saveUsingPOST_17
2019-04-01 16:36:57 -Generating unique operation named: updateUsingGET_11
2019-04-01 16:36:57 -Generating unique operation named: updateUsingHEAD_11
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPOST_17
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPUT_11
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPATCH_11
2019-04-01 16:36:57 -Generating unique operation named: updateUsingDELETE_11
2019-04-01 16:36:57 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-01 16:36:57 -Generating unique operation named: updateUsingTRACE_11
2019-04-01 16:36:57 -Generating unique operation named: addUsingGET_17
2019-04-01 16:36:57 -Generating unique operation named: editUsingGET_18
2019-04-01 16:36:57 -Generating unique operation named: listUsingGET_20
2019-04-01 16:36:57 -Generating unique operation named: removeUsingPOST_31
2019-04-01 16:36:57 -Generating unique operation named: removeUsingPOST_32
2019-04-01 16:36:57 -Generating unique operation named: saveUsingPOST_18
2019-04-01 16:36:57 -Generating unique operation named: updateUsingGET_12
2019-04-01 16:36:57 -Generating unique operation named: updateUsingHEAD_12
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPOST_18
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPUT_12
2019-04-01 16:36:57 -Generating unique operation named: updateUsingPATCH_12
2019-04-01 16:36:57 -Generating unique operation named: updateUsingDELETE_12
2019-04-01 16:36:57 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-01 16:36:57 -Generating unique operation named: updateUsingTRACE_12
2019-04-01 16:36:57 -Starting Quartz Scheduler now
2019-04-01 16:36:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-01 16:36:57 -Starting...
2019-04-01 16:36:57 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 16:36:57 -Started.
2019-04-01 16:36:57 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-01 16:36:57 -Using a shared selector for servlet write/read
2019-04-01 16:36:57 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-01 16:36:57 -Started BootdoApplication in 35.831 seconds (JVM running for 36.762)
2019-04-01 16:36:58 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-01 16:36:58 -==> Parameters: 
2019-04-01 16:36:58 -<==      Total: 1
2019-04-01 16:37:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-01 16:37:05 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-01 16:37:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2019-04-01 16:37:05 -Enabling session validation scheduler...
2019-04-01 16:37:05 -请求地址 : http://localhost:8081/login;JSESSIONID=a5a0aa02-fc93-4394-9aca-4bde34da7837
2019-04-01 16:37:05 -HTTP METHOD : GET
2019-04-01 16:37:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 16:37:05 -参数 : [{}]
2019-04-01 16:37:05 -耗时 : 4
2019-04-01 16:37:05 -返回值 : login
2019-04-01 16:37:07 -请求地址 : http://localhost:8081/getVerify
2019-04-01 16:37:07 -HTTP METHOD : GET
2019-04-01 16:37:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 16:37:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@51100bb6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6780d790]
2019-04-01 16:37:12 -2410
2019-04-01 16:37:12 -耗时 : 5150
2019-04-01 16:37:12 -返回值 : null
2019-04-01 16:37:12 -请求地址 : http://localhost:8081/login
2019-04-01 16:37:12 -HTTP METHOD : GET
2019-04-01 16:37:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 16:37:12 -参数 : [{}]
2019-04-01 16:37:12 -耗时 : 1
2019-04-01 16:37:12 -返回值 : login
2019-04-01 16:37:18 -请求地址 : http://localhost:8081/login
2019-04-01 16:37:18 -HTTP METHOD : POST
2019-04-01 16:37:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-01 16:37:18 -参数 : [admin, 111111, 2410, org.apache.shiro.web.servlet.ShiroHttpServletRequest@426414dd]
2019-04-01 16:37:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-01 16:37:19 -==> Parameters: admin(String)
2019-04-01 16:37:19 -<==      Total: 1
2019-04-01 16:37:19 -耗时 : 310
2019-04-01 16:37:19 -返回值 : {msg=操作成功, code=0}
2019-04-01 16:37:19 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-01 16:37:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 16:37:19 -==> Parameters: 1(Long), admin(String), 登录(String), 310(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-01 16:37:19.484(Timestamp)
2019-04-01 16:37:19 -请求地址 : http://localhost:8081/index
2019-04-01 16:37:19 -HTTP METHOD : GET
2019-04-01 16:37:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 16:37:19 -参数 : [{}]
2019-04-01 16:37:20 -<==    Updates: 1
2019-04-01 16:37:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 16:37:20 -==> Parameters: 1(Long)
2019-04-01 16:37:20 -<==      Total: 46
2019-04-01 16:37:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 16:37:20 -==> Parameters: 138(Long)
2019-04-01 16:37:20 -<==      Total: 1
2019-04-01 16:37:20 -耗时 : 950
2019-04-01 16:37:20 -返回值 : index_v1
2019-04-01 16:37:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 16:37:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 950(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 16:37:20.781(Timestamp)
2019-04-01 16:37:20 -请求地址 : http://localhost:8081/main
2019-04-01 16:37:20 -HTTP METHOD : GET
2019-04-01 16:37:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 16:37:20 -参数 : []
2019-04-01 16:37:20 -耗时 : 0
2019-04-01 16:37:20 -返回值 : main
2019-04-01 16:37:20 -<==    Updates: 1
2019-04-01 16:37:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 16:37:21 -HTTP METHOD : GET
2019-04-01 16:37:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 16:37:21 -参数 : []
2019-04-01 16:37:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 16:37:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 16:37:21 -请求地址 : http://localhost:8081/main
2019-04-01 16:37:21 -HTTP METHOD : GET
2019-04-01 16:37:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 16:37:21 -参数 : []
2019-04-01 16:37:21 -耗时 : 0
2019-04-01 16:37:21 -返回值 : main
2019-04-01 16:37:22 -<==      Total: 0
2019-04-01 16:37:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 16:37:22 -==> Parameters: 1(Long), 0(String)
2019-04-01 16:37:22 -<==      Total: 1
2019-04-01 16:37:22 -耗时 : 577
2019-04-01 16:37:22 -返回值 : com.bootdo.common.utils.PageUtils@18913725
2019-04-01 16:37:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 16:37:28 -==> Parameters: 1(Long)
2019-04-01 16:37:28 -<==      Total: 90
2019-04-01 16:37:28 -请求地址 : http://localhost:8081/print/print
2019-04-01 16:37:28 -HTTP METHOD : GET
2019-04-01 16:37:28 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-01 16:37:28 -参数 : []
2019-04-01 16:37:28 -耗时 : 1
2019-04-01 16:37:28 -返回值 : print/print/print
2019-04-01 16:37:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 16:37:29 -HTTP METHOD : GET
2019-04-01 16:37:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 16:37:29 -参数 : [userType]
2019-04-01 16:37:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 16:37:29 -==> Parameters: userType(String)
2019-04-01 16:37:29 -请求地址 : http://localhost:8081/print/print/list
2019-04-01 16:37:29 -HTTP METHOD : GET
2019-04-01 16:37:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-01 16:37:29 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-01 16:37:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-01 16:37:29 -==> Parameters: 0(Integer), 10(Integer)
2019-04-01 16:37:30 -<==      Total: 2
2019-04-01 16:37:30 -耗时 : 323
2019-04-01 16:37:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 16:37:30 -<==      Total: 3
2019-04-01 16:37:30 -==>  Preparing: select count(*) from print 
2019-04-01 16:37:30 -==> Parameters: 
2019-04-01 16:37:30 -<==      Total: 1
2019-04-01 16:37:30 -耗时 : 442
2019-04-01 16:37:30 -返回值 : com.bootdo.common.utils.PageUtils@3069e18f
2019-04-01 16:37:33 -请求地址 : http://localhost:8081/charts/countDD
2019-04-01 16:37:33 -HTTP METHOD : GET
2019-04-01 16:37:33 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-01 16:37:33 -参数 : []
2019-04-01 16:37:33 -耗时 : 1
2019-04-01 16:37:33 -返回值 : charts/countDD
2019-04-01 16:37:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 16:37:33 -HTTP METHOD : GET
2019-04-01 16:37:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 16:37:33 -参数 : [userType]
2019-04-01 16:37:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 16:37:33 -==> Parameters: userType(String)
2019-04-01 16:37:33 -<==      Total: 2
2019-04-01 16:37:33 -耗时 : 66
2019-04-01 16:37:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 16:37:45 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-04-01 16:37:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 16:37:46 -HTTP METHOD : GET
2019-04-01 16:37:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 16:37:46 -参数 : []
2019-04-01 16:37:46 -耗时 : 0
2019-04-01 16:37:46 -返回值 : system/dept/deptTree
2019-04-01 16:37:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 16:37:47 -HTTP METHOD : GET
2019-04-01 16:37:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 16:37:47 -参数 : []
2019-04-01 16:37:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 16:37:47 -==> Parameters: 
2019-04-01 16:37:47 -<==      Total: 3
2019-04-01 16:37:47 -耗时 : 48
2019-04-01 16:37:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 16:37:49 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 16:37:49 -HTTP METHOD : POST
2019-04-01 16:37:49 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 16:37:49 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@67c87fde, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@6f881b7a, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@3458d624, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@67c87fde, com.bootdo.moneyLog.vo.WaterLogVo@6f881b7a, com.bootdo.moneyLog.vo.HeatLogVo@3458d624, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@49ca869f]
2019-04-01 16:37:49 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:37:49 -==> Parameters: A(String), 2(String)
2019-04-01 16:37:49 -<==      Total: 1
2019-04-01 16:37:49 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:37:49 -==> Parameters: A(String), 2(String)
2019-04-01 16:37:49 -<==      Total: 1
2019-04-01 16:37:49 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:37:49 -==> Parameters: A(String), 2(String)
2019-04-01 16:37:49 -<==      Total: 1
2019-04-01 16:37:49 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:37:49 -==> Parameters: A(String), 2(String)
2019-04-01 16:37:49 -<==      Total: 1
2019-04-01 16:37:49 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:37:49 -==> Parameters: A(String), 2(String)
2019-04-01 16:37:49 -<==      Total: 1
2019-04-01 16:37:49 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:37:49 -==> Parameters: A(String), 2(String)
2019-04-01 16:37:49 -<==      Total: 1
2019-04-01 16:37:49 -耗时 : 374
2019-04-01 16:37:49 -返回值 : com.bootdo.charts.vo.CountDayVo@71567196
2019-04-01 16:37:51 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 16:37:51 -HTTP METHOD : POST
2019-04-01 16:37:51 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 16:37:51 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@73adf177, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@320d91bd, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@4a956515, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@73adf177, com.bootdo.moneyLog.vo.WaterLogVo@320d91bd, com.bootdo.moneyLog.vo.HeatLogVo@4a956515, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@2fee0396]
2019-04-01 16:37:51 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:37:51 -==> Parameters: A(String), 2(String)
2019-04-01 16:37:51 -<==      Total: 1
2019-04-01 16:37:51 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:37:51 -==> Parameters: A(String), 2(String)
2019-04-01 16:37:51 -<==      Total: 1
2019-04-01 16:37:51 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:37:51 -==> Parameters: A(String), 2(String)
2019-04-01 16:37:51 -<==      Total: 1
2019-04-01 16:37:51 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:37:51 -==> Parameters: A(String), 2(String)
2019-04-01 16:37:51 -<==      Total: 1
2019-04-01 16:37:51 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:37:51 -==> Parameters: A(String), 2(String)
2019-04-01 16:37:51 -<==      Total: 1
2019-04-01 16:37:51 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:37:51 -==> Parameters: A(String), 2(String)
2019-04-01 16:37:51 -<==      Total: 1
2019-04-01 16:37:51 -耗时 : 24
2019-04-01 16:37:51 -返回值 : com.bootdo.charts.vo.CountDayVo@2189ffce
2019-04-01 16:41:45 -Starting BootdoApplication on ZJZL-20180906VX with PID 12972 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-01 16:41:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-01 16:41:45 -The following profiles are active: dev
2019-04-01 16:41:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 01 16:41:45 CST 2019]; root of context hierarchy
2019-04-01 16:41:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-01 16:41:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c90e03ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:41:55 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bb673293] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:41:57 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:41:58 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:41:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:41:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-01 16:41:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-01 16:41:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:41:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:41:58 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:41:58 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-01 16:42:00 -Tomcat initialized with port(s): 8081 (http)
2019-04-01 16:42:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-01 16:42:00 -Starting service [Tomcat]
2019-04-01 16:42:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-01 16:42:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-01 16:42:01 -Initializing Spring embedded WebApplicationContext
2019-04-01 16:42:01 -Root WebApplicationContext: initialization completed in 15632 ms
2019-04-01 16:42:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-01 16:42:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-01 16:42:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-01 16:42:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-01 16:42:02 -Filter xssFilter was not registered (disabled)
2019-04-01 16:42:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-01 16:42:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-01 16:42:02 -Servlet statViewServlet mapped to [/druid/*]
2019-04-01 16:42:02 -Servlet dispatcherServlet mapped to [/]
2019-04-01 16:42:06 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 01 16:41:45 CST 2019]; root of context hierarchy
2019-04-01 16:42:06 -Using default implementation for ThreadExecutor
2019-04-01 16:42:06 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-01 16:42:06 -Quartz Scheduler v.2.2.1 created.
2019-04-01 16:42:06 -RAMJobStore initialized.
2019-04-01 16:42:06 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-01 16:42:06 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-01 16:42:06 -Quartz scheduler version: 2.2.1
2019-04-01 16:42:06 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1e721583
2019-04-01 16:42:07 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-01 16:42:07 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-01 16:42:10 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-01 16:42:10 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-01 16:42:10 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 16:42:10 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-01 16:42:10 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-01 16:42:10 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-01 16:42:10 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-01 16:42:10 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-01 16:42:10 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-01 16:42:10 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-01 16:42:10 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-01 16:42:10 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:10 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-01 16:42:10 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-01 16:42:10 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:10 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-01 16:42:10 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-01 16:42:10 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-01 16:42:10 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-01 16:42:10 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-01 16:42:10 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-01 16:42:10 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-01 16:42:10 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:10 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-01 16:42:10 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-01 16:42:10 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:10 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-01 16:42:10 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-01 16:42:10 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:10 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-01 16:42:10 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 16:42:10 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-01 16:42:10 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-01 16:42:10 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-01 16:42:10 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-01 16:42:10 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-01 16:42:10 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-01 16:42:10 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-01 16:42:10 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:10 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-01 16:42:10 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-01 16:42:10 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:10 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-01 16:42:10 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-01 16:42:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-01 16:42:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-01 16:42:11 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-01 16:42:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 16:42:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 16:42:11 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-01 16:42:11 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-01 16:42:11 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-01 16:42:11 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-01 16:42:11 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-01 16:42:11 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:42:11 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:42:11 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-01 16:42:11 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-01 16:42:11 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-01 16:42:11 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-01 16:42:11 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-01 16:42:11 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-01 16:42:11 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-01 16:42:11 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-01 16:42:11 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-01 16:42:11 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-01 16:42:11 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-01 16:42:11 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-01 16:42:11 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-01 16:42:11 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:42:11 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-01 16:42:11 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:42:11 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-01 16:42:11 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-01 16:42:11 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 16:42:11 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-01 16:42:11 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-01 16:42:11 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-01 16:42:11 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-01 16:42:11 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 16:42:11 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:42:11 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-01 16:42:11 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-01 16:42:11 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-01 16:42:11 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-01 16:42:11 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-01 16:42:11 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-01 16:42:11 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 16:42:11 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-01 16:42:11 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-01 16:42:11 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-01 16:42:11 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-01 16:42:11 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-01 16:42:11 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-01 16:42:11 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-01 16:42:11 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-01 16:42:11 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-01 16:42:11 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-01 16:42:11 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-01 16:42:11 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-01 16:42:11 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-01 16:42:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-01 16:42:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-01 16:42:11 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-01 16:42:11 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-01 16:42:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-01 16:42:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-01 16:42:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-01 16:42:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-01 16:42:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 16:42:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-01 16:42:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-01 16:42:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-01 16:42:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-01 16:42:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-01 16:42:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-01 16:42:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-01 16:42:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-01 16:42:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-01 16:42:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-01 16:42:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-01 16:42:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-01 16:42:11 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-01 16:42:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-01 16:42:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-01 16:42:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-01 16:42:11 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-01 16:42:11 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 16:42:11 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 16:42:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-01 16:42:11 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-01 16:42:11 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-01 16:42:11 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-01 16:42:11 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-01 16:42:11 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:42:11 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-01 16:42:11 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:42:11 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-01 16:42:11 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-01 16:42:11 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-01 16:42:11 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-01 16:42:11 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 16:42:11 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-01 16:42:11 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-01 16:42:11 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-01 16:42:11 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-01 16:42:11 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-01 16:42:11 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-01 16:42:11 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-01 16:42:11 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-01 16:42:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-01 16:42:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-01 16:42:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-01 16:42:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-01 16:42:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-01 16:42:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-01 16:42:12 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-01 16:42:13 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 16:42:13 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 01 16:41:45 CST 2019]; root of context hierarchy
2019-04-01 16:42:14 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 16:42:14 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 16:42:14 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-01 16:42:14 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-01 16:42:14 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-01 16:42:17 -Registering beans for JMX exposure on startup
2019-04-01 16:42:17 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-01 16:42:17 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-01 16:42:17 -Starting beans in phase 2147483647
2019-04-01 16:42:17 -Context refreshed
2019-04-01 16:42:17 -Found 1 custom documentation plugin(s)
2019-04-01 16:42:17 -Scanning for api listing references
2019-04-01 16:42:18 -Generating unique operation named: removeUsingPOST_1
2019-04-01 16:42:18 -Generating unique operation named: addUsingGET_1
2019-04-01 16:42:18 -Generating unique operation named: editUsingGET_1
2019-04-01 16:42:18 -Generating unique operation named: listUsingGET_1
2019-04-01 16:42:18 -Generating unique operation named: removeUsingPOST_2
2019-04-01 16:42:18 -Generating unique operation named: removeUsingPOST_3
2019-04-01 16:42:18 -Generating unique operation named: saveUsingPOST_1
2019-04-01 16:42:18 -Generating unique operation named: updateUsingGET_1
2019-04-01 16:42:18 -Generating unique operation named: updateUsingHEAD_1
2019-04-01 16:42:18 -Generating unique operation named: updateUsingPOST_1
2019-04-01 16:42:18 -Generating unique operation named: updateUsingPUT_1
2019-04-01 16:42:18 -Generating unique operation named: updateUsingPATCH_1
2019-04-01 16:42:18 -Generating unique operation named: updateUsingDELETE_1
2019-04-01 16:42:18 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-01 16:42:18 -Generating unique operation named: updateUsingTRACE_1
2019-04-01 16:42:18 -Generating unique operation named: addUsingGET_2
2019-04-01 16:42:18 -Generating unique operation named: editUsingGET_2
2019-04-01 16:42:18 -Generating unique operation named: listUsingGET_2
2019-04-01 16:42:18 -Generating unique operation named: removeUsingPOST_4
2019-04-01 16:42:18 -Generating unique operation named: removeUsingPOST_5
2019-04-01 16:42:18 -Generating unique operation named: saveUsingPOST_2
2019-04-01 16:42:18 -Generating unique operation named: updateUsingPOST_2
2019-04-01 16:42:18 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-01 16:42:18 -Generating unique operation named: addUsingGET_3
2019-04-01 16:42:18 -Generating unique operation named: editUsingGET_3
2019-04-01 16:42:18 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-01 16:42:18 -Generating unique operation named: listUsingGET_3
2019-04-01 16:42:18 -Generating unique operation named: removeUsingPOST_6
2019-04-01 16:42:18 -Generating unique operation named: removeUsingPOST_7
2019-04-01 16:42:18 -Generating unique operation named: saveUsingPOST_3
2019-04-01 16:42:18 -Generating unique operation named: updateUsingGET_2
2019-04-01 16:42:18 -Generating unique operation named: updateUsingHEAD_2
2019-04-01 16:42:18 -Generating unique operation named: updateUsingPOST_3
2019-04-01 16:42:18 -Generating unique operation named: updateUsingPUT_2
2019-04-01 16:42:18 -Generating unique operation named: updateUsingPATCH_2
2019-04-01 16:42:18 -Generating unique operation named: updateUsingDELETE_2
2019-04-01 16:42:18 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-01 16:42:19 -Generating unique operation named: updateUsingTRACE_2
2019-04-01 16:42:19 -Generating unique operation named: addUsingGET_4
2019-04-01 16:42:19 -Generating unique operation named: editUsingGET_4
2019-04-01 16:42:19 -Generating unique operation named: listUsingGET_4
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_8
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_9
2019-04-01 16:42:19 -Generating unique operation named: saveUsingPOST_4
2019-04-01 16:42:19 -Generating unique operation named: updateUsingGET_3
2019-04-01 16:42:19 -Generating unique operation named: updateUsingHEAD_3
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPOST_4
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPUT_3
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPATCH_3
2019-04-01 16:42:19 -Generating unique operation named: updateUsingDELETE_3
2019-04-01 16:42:19 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-01 16:42:19 -Generating unique operation named: updateUsingTRACE_3
2019-04-01 16:42:19 -Generating unique operation named: ElecUsingGET_1
2019-04-01 16:42:19 -Generating unique operation named: addUsingGET_5
2019-04-01 16:42:19 -Generating unique operation named: editUsingGET_5
2019-04-01 16:42:19 -Generating unique operation named: listUsingGET_5
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_10
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_11
2019-04-01 16:42:19 -Generating unique operation named: saveUsingPOST_5
2019-04-01 16:42:19 -Generating unique operation named: updateUsingGET_4
2019-04-01 16:42:19 -Generating unique operation named: updateUsingHEAD_4
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPOST_5
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPUT_4
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPATCH_4
2019-04-01 16:42:19 -Generating unique operation named: updateUsingDELETE_4
2019-04-01 16:42:19 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-01 16:42:19 -Generating unique operation named: updateUsingTRACE_4
2019-04-01 16:42:19 -Generating unique operation named: editUsingGET_6
2019-04-01 16:42:19 -Generating unique operation named: listUsingGET_6
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPOST_6
2019-04-01 16:42:19 -Generating unique operation named: addUsingGET_6
2019-04-01 16:42:19 -Generating unique operation named: editUsingGET_7
2019-04-01 16:42:19 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-01 16:42:19 -Generating unique operation named: listUsingGET_7
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_12
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_13
2019-04-01 16:42:19 -Generating unique operation named: saveUsingPOST_6
2019-04-01 16:42:19 -Generating unique operation named: updateUsingGET_5
2019-04-01 16:42:19 -Generating unique operation named: updateUsingHEAD_5
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPOST_7
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPUT_5
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPATCH_5
2019-04-01 16:42:19 -Generating unique operation named: updateUsingDELETE_5
2019-04-01 16:42:19 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-01 16:42:19 -Generating unique operation named: updateUsingTRACE_5
2019-04-01 16:42:19 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-01 16:42:19 -Generating unique operation named: addUsingGET_7
2019-04-01 16:42:19 -Generating unique operation named: editUsingGET_8
2019-04-01 16:42:19 -Generating unique operation named: listUsingGET_8
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_14
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_15
2019-04-01 16:42:19 -Generating unique operation named: saveUsingPOST_7
2019-04-01 16:42:19 -Generating unique operation named: updateUsingGET_6
2019-04-01 16:42:19 -Generating unique operation named: updateUsingHEAD_6
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPOST_8
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPUT_6
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPATCH_6
2019-04-01 16:42:19 -Generating unique operation named: updateUsingDELETE_6
2019-04-01 16:42:19 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-01 16:42:19 -Generating unique operation named: updateUsingTRACE_6
2019-04-01 16:42:19 -Generating unique operation named: addUsingGET_8
2019-04-01 16:42:19 -Generating unique operation named: editUsingGET_9
2019-04-01 16:42:19 -Generating unique operation named: listUsingGET_9
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_16
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_17
2019-04-01 16:42:19 -Generating unique operation named: saveUsingPOST_8
2019-04-01 16:42:19 -Generating unique operation named: updateUsingGET_7
2019-04-01 16:42:19 -Generating unique operation named: updateUsingHEAD_7
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPOST_9
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPUT_7
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPATCH_7
2019-04-01 16:42:19 -Generating unique operation named: updateUsingDELETE_7
2019-04-01 16:42:19 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-01 16:42:19 -Generating unique operation named: updateUsingTRACE_7
2019-04-01 16:42:19 -Generating unique operation named: addUsingGET_9
2019-04-01 16:42:19 -Generating unique operation named: editUsingGET_10
2019-04-01 16:42:19 -Generating unique operation named: infoUsingGET_1
2019-04-01 16:42:19 -Generating unique operation named: infoUsingHEAD_1
2019-04-01 16:42:19 -Generating unique operation named: infoUsingPOST_1
2019-04-01 16:42:19 -Generating unique operation named: infoUsingPUT_1
2019-04-01 16:42:19 -Generating unique operation named: infoUsingPATCH_1
2019-04-01 16:42:19 -Generating unique operation named: infoUsingDELETE_1
2019-04-01 16:42:19 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-01 16:42:19 -Generating unique operation named: infoUsingTRACE_1
2019-04-01 16:42:19 -Generating unique operation named: listUsingGET_10
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_18
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_19
2019-04-01 16:42:19 -Generating unique operation named: saveUsingPOST_9
2019-04-01 16:42:19 -Generating unique operation named: updateUsingPOST_10
2019-04-01 16:42:19 -Generating unique operation named: listUsingGET_11
2019-04-01 16:42:19 -Generating unique operation named: removeUsingPOST_20
2019-04-01 16:42:20 -Generating unique operation named: welcomeUsingGET_1
2019-04-01 16:42:20 -Generating unique operation named: addUsingGET_10
2019-04-01 16:42:20 -Generating unique operation named: editUsingGET_11
2019-04-01 16:42:20 -Generating unique operation named: listUsingGET_12
2019-04-01 16:42:20 -Generating unique operation named: removeUsingPOST_21
2019-04-01 16:42:20 -Generating unique operation named: saveUsingPOST_10
2019-04-01 16:42:20 -Generating unique operation named: treeUsingGET_1
2019-04-01 16:42:20 -Generating unique operation named: treeUsingGET_2
2019-04-01 16:42:20 -Generating unique operation named: updateUsingPOST_11
2019-04-01 16:42:20 -Generating unique operation named: addUsingGET_11
2019-04-01 16:42:20 -Generating unique operation named: editUsingGET_12
2019-04-01 16:42:20 -Generating unique operation named: listUsingGET_13
2019-04-01 16:42:20 -Generating unique operation named: removeUsingPOST_22
2019-04-01 16:42:20 -Generating unique operation named: removeUsingPOST_23
2019-04-01 16:42:20 -Generating unique operation named: saveUsingPOST_11
2019-04-01 16:42:20 -Generating unique operation named: updateUsingGET_8
2019-04-01 16:42:20 -Generating unique operation named: updateUsingHEAD_8
2019-04-01 16:42:20 -Generating unique operation named: updateUsingPOST_12
2019-04-01 16:42:20 -Generating unique operation named: updateUsingPUT_8
2019-04-01 16:42:20 -Generating unique operation named: updateUsingPATCH_8
2019-04-01 16:42:20 -Generating unique operation named: updateUsingDELETE_8
2019-04-01 16:42:20 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-01 16:42:20 -Generating unique operation named: updateUsingTRACE_8
2019-04-01 16:42:20 -Generating unique operation named: addUsingGET_12
2019-04-01 16:42:20 -Generating unique operation named: editUsingGET_13
2019-04-01 16:42:20 -Generating unique operation named: listUsingGET_14
2019-04-01 16:42:20 -Generating unique operation named: removeUsingPOST_24
2019-04-01 16:42:20 -Generating unique operation named: removeUsingPOST_25
2019-04-01 16:42:20 -Generating unique operation named: saveUsingPOST_12
2019-04-01 16:42:20 -Generating unique operation named: updateUsingGET_9
2019-04-01 16:42:20 -Generating unique operation named: updateUsingHEAD_9
2019-04-01 16:42:20 -Generating unique operation named: updateUsingPOST_13
2019-04-01 16:42:20 -Generating unique operation named: updateUsingPUT_9
2019-04-01 16:42:20 -Generating unique operation named: updateUsingPATCH_9
2019-04-01 16:42:20 -Generating unique operation named: updateUsingDELETE_9
2019-04-01 16:42:20 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-01 16:42:20 -Generating unique operation named: updateUsingTRACE_9
2019-04-01 16:42:20 -Generating unique operation named: addUsingGET_13
2019-04-01 16:42:20 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-01 16:42:20 -Generating unique operation named: editUsingGET_14
2019-04-01 16:42:20 -Generating unique operation named: listUsingGET_15
2019-04-01 16:42:20 -Generating unique operation named: saveUsingPOST_13
2019-04-01 16:42:20 -Generating unique operation named: saveUsingPOST_14
2019-04-01 16:42:20 -Generating unique operation named: updateUsingPOST_14
2019-04-01 16:42:20 -Generating unique operation named: listUsingGET_16
2019-04-01 16:42:20 -Generating unique operation named: listUsingHEAD_1
2019-04-01 16:42:20 -Generating unique operation named: listUsingPOST_1
2019-04-01 16:42:20 -Generating unique operation named: listUsingPUT_1
2019-04-01 16:42:20 -Generating unique operation named: listUsingPATCH_1
2019-04-01 16:42:20 -Generating unique operation named: listUsingDELETE_1
2019-04-01 16:42:20 -Generating unique operation named: listUsingOPTIONS_1
2019-04-01 16:42:20 -Generating unique operation named: listUsingTRACE_1
2019-04-01 16:42:20 -Generating unique operation named: addUsingGET_14
2019-04-01 16:42:20 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-01 16:42:20 -Generating unique operation named: editUsingGET_15
2019-04-01 16:42:20 -Generating unique operation named: listUsingGET_17
2019-04-01 16:42:20 -Generating unique operation named: removeUsingPOST_26
2019-04-01 16:42:20 -Generating unique operation named: saveUsingPOST_15
2019-04-01 16:42:20 -Generating unique operation named: treeUsingGET_3
2019-04-01 16:42:20 -Generating unique operation named: treeViewUsingGET_1
2019-04-01 16:42:21 -Generating unique operation named: updateUsingPOST_15
2019-04-01 16:42:21 -Generating unique operation named: addUsingGET_15
2019-04-01 16:42:21 -Generating unique operation named: editUsingGET_16
2019-04-01 16:42:21 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-01 16:42:21 -Generating unique operation named: listUsingGET_18
2019-04-01 16:42:21 -Generating unique operation named: removeUsingPOST_27
2019-04-01 16:42:21 -Generating unique operation named: removeUsingPOST_28
2019-04-01 16:42:21 -Generating unique operation named: saveUsingPOST_16
2019-04-01 16:42:21 -Generating unique operation named: updateUsingGET_10
2019-04-01 16:42:21 -Generating unique operation named: updateUsingHEAD_10
2019-04-01 16:42:21 -Generating unique operation named: updateUsingPOST_16
2019-04-01 16:42:21 -Generating unique operation named: updateUsingPUT_10
2019-04-01 16:42:21 -Generating unique operation named: updateUsingPATCH_10
2019-04-01 16:42:21 -Generating unique operation named: updateUsingDELETE_10
2019-04-01 16:42:21 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-01 16:42:21 -Generating unique operation named: updateUsingTRACE_10
2019-04-01 16:42:21 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-01 16:42:21 -Generating unique operation named: addUsingGET_16
2019-04-01 16:42:21 -Generating unique operation named: editUsingGET_17
2019-04-01 16:42:21 -Generating unique operation named: listUsingGET_19
2019-04-01 16:42:21 -Generating unique operation named: removeUsingPOST_29
2019-04-01 16:42:21 -Generating unique operation named: removeUsingPOST_30
2019-04-01 16:42:21 -Generating unique operation named: saveUsingPOST_17
2019-04-01 16:42:21 -Generating unique operation named: updateUsingGET_11
2019-04-01 16:42:21 -Generating unique operation named: updateUsingHEAD_11
2019-04-01 16:42:21 -Generating unique operation named: updateUsingPOST_17
2019-04-01 16:42:21 -Generating unique operation named: updateUsingPUT_11
2019-04-01 16:42:21 -Generating unique operation named: updateUsingPATCH_11
2019-04-01 16:42:21 -Generating unique operation named: updateUsingDELETE_11
2019-04-01 16:42:21 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-01 16:42:21 -Generating unique operation named: updateUsingTRACE_11
2019-04-01 16:42:21 -Generating unique operation named: addUsingGET_17
2019-04-01 16:42:21 -Generating unique operation named: editUsingGET_18
2019-04-01 16:42:21 -Generating unique operation named: listUsingGET_20
2019-04-01 16:42:21 -Generating unique operation named: removeUsingPOST_31
2019-04-01 16:42:21 -Generating unique operation named: removeUsingPOST_32
2019-04-01 16:42:21 -Generating unique operation named: saveUsingPOST_18
2019-04-01 16:42:21 -Generating unique operation named: updateUsingGET_12
2019-04-01 16:42:21 -Generating unique operation named: updateUsingHEAD_12
2019-04-01 16:42:21 -Generating unique operation named: updateUsingPOST_18
2019-04-01 16:42:21 -Generating unique operation named: updateUsingPUT_12
2019-04-01 16:42:21 -Generating unique operation named: updateUsingPATCH_12
2019-04-01 16:42:21 -Generating unique operation named: updateUsingDELETE_12
2019-04-01 16:42:21 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-01 16:42:21 -Generating unique operation named: updateUsingTRACE_12
2019-04-01 16:42:21 -Starting Quartz Scheduler now
2019-04-01 16:42:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-01 16:42:21 -Starting...
2019-04-01 16:42:21 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-01 16:42:21 -Started.
2019-04-01 16:42:21 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-01 16:42:21 -Using a shared selector for servlet write/read
2019-04-01 16:42:21 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-01 16:42:21 -Started BootdoApplication in 37.994 seconds (JVM running for 39.12)
2019-04-01 16:42:22 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-01 16:42:22 -==> Parameters: 
2019-04-01 16:42:22 -<==      Total: 1
2019-04-01 16:43:12 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-01 16:44:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-01 16:44:57 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-01 16:44:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 191 ms
2019-04-01 16:44:57 -Enabling session validation scheduler...
2019-04-01 16:44:58 -请求地址 : http://localhost:8081/login;JSESSIONID=eaed144d-cb19-4a86-92f1-2111d6c8dc33
2019-04-01 16:44:58 -HTTP METHOD : GET
2019-04-01 16:44:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 16:44:58 -参数 : [{}]
2019-04-01 16:44:58 -耗时 : 7
2019-04-01 16:44:58 -返回值 : login
2019-04-01 16:45:00 -请求地址 : http://localhost:8081/getVerify
2019-04-01 16:45:00 -HTTP METHOD : GET
2019-04-01 16:45:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 16:45:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2dc17cd3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@258a53ce]
2019-04-01 16:45:04 -5962
2019-04-01 16:45:04 -耗时 : 4379
2019-04-01 16:45:04 -返回值 : null
2019-04-01 16:45:04 -请求地址 : http://localhost:8081/login
2019-04-01 16:45:04 -HTTP METHOD : GET
2019-04-01 16:45:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 16:45:04 -参数 : [{}]
2019-04-01 16:45:04 -耗时 : 0
2019-04-01 16:45:04 -返回值 : login
2019-04-01 16:45:15 -请求地址 : http://localhost:8081/login
2019-04-01 16:45:15 -HTTP METHOD : POST
2019-04-01 16:45:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-01 16:45:15 -参数 : [admin, 111111, 5962, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2b0c9239]
2019-04-01 16:45:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-01 16:45:15 -==> Parameters: admin(String)
2019-04-01 16:45:15 -<==      Total: 1
2019-04-01 16:45:15 -耗时 : 378
2019-04-01 16:45:15 -返回值 : {msg=操作成功, code=0}
2019-04-01 16:45:15 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-01 16:45:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 16:45:15 -==> Parameters: 1(Long), admin(String), 登录(String), 379(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-01 16:45:15.851(Timestamp)
2019-04-01 16:45:16 -请求地址 : http://localhost:8081/index
2019-04-01 16:45:16 -HTTP METHOD : GET
2019-04-01 16:45:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-01 16:45:16 -参数 : [{}]
2019-04-01 16:45:16 -<==    Updates: 1
2019-04-01 16:45:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-01 16:45:16 -==> Parameters: 1(Long)
2019-04-01 16:45:17 -<==      Total: 46
2019-04-01 16:45:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-01 16:45:17 -==> Parameters: 138(Long)
2019-04-01 16:45:17 -<==      Total: 1
2019-04-01 16:45:17 -耗时 : 1084
2019-04-01 16:45:17 -返回值 : index_v1
2019-04-01 16:45:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-01 16:45:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1085(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-01 16:45:17.323(Timestamp)
2019-04-01 16:45:17 -<==    Updates: 1
2019-04-01 16:45:17 -请求地址 : http://localhost:8081/main
2019-04-01 16:45:17 -HTTP METHOD : GET
2019-04-01 16:45:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 16:45:17 -参数 : []
2019-04-01 16:45:17 -耗时 : 0
2019-04-01 16:45:17 -返回值 : main
2019-04-01 16:45:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-01 16:45:18 -HTTP METHOD : GET
2019-04-01 16:45:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-01 16:45:18 -参数 : []
2019-04-01 16:45:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-01 16:45:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-01 16:45:18 -<==      Total: 0
2019-04-01 16:45:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-01 16:45:18 -==> Parameters: 1(Long), 0(String)
2019-04-01 16:45:18 -<==      Total: 1
2019-04-01 16:45:18 -耗时 : 100
2019-04-01 16:45:18 -返回值 : com.bootdo.common.utils.PageUtils@256807e4
2019-04-01 16:45:18 -请求地址 : http://localhost:8081/main
2019-04-01 16:45:18 -HTTP METHOD : GET
2019-04-01 16:45:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-01 16:45:18 -参数 : []
2019-04-01 16:45:18 -耗时 : 2
2019-04-01 16:45:18 -返回值 : main
2019-04-01 16:45:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-01 16:45:42 -==> Parameters: 1(Long)
2019-04-01 16:45:42 -<==      Total: 90
2019-04-01 16:45:42 -请求地址 : http://localhost:8081/charts/countDD
2019-04-01 16:45:42 -HTTP METHOD : GET
2019-04-01 16:45:42 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-01 16:45:42 -参数 : []
2019-04-01 16:45:42 -耗时 : 0
2019-04-01 16:45:42 -返回值 : charts/countDD
2019-04-01 16:45:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-01 16:45:43 -HTTP METHOD : GET
2019-04-01 16:45:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-01 16:45:43 -参数 : [userType]
2019-04-01 16:45:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-01 16:45:43 -==> Parameters: userType(String)
2019-04-01 16:45:43 -<==      Total: 2
2019-04-01 16:45:43 -耗时 : 57
2019-04-01 16:45:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-01 16:45:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-01 16:45:51 -HTTP METHOD : GET
2019-04-01 16:45:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-01 16:45:51 -参数 : []
2019-04-01 16:45:51 -耗时 : 2
2019-04-01 16:45:51 -返回值 : system/dept/deptTree
2019-04-01 16:45:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-01 16:45:52 -HTTP METHOD : GET
2019-04-01 16:45:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-01 16:45:52 -参数 : []
2019-04-01 16:45:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-01 16:45:52 -==> Parameters: 
2019-04-01 16:45:52 -<==      Total: 3
2019-04-01 16:45:52 -耗时 : 40
2019-04-01 16:45:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-01 16:45:54 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 16:45:54 -HTTP METHOD : POST
2019-04-01 16:45:54 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 16:45:54 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@33c5b3c7, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@4f6d08f4, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@660321d7, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@33c5b3c7, com.bootdo.moneyLog.vo.WaterLogVo@4f6d08f4, com.bootdo.moneyLog.vo.HeatLogVo@660321d7, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@3993f035]
2019-04-01 16:45:54 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:54 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:55 -<==      Total: 1
2019-04-01 16:45:55 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:55 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:55 -<==      Total: 1
2019-04-01 16:45:55 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:55 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:55 -<==      Total: 1
2019-04-01 16:45:55 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:55 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:55 -<==      Total: 1
2019-04-01 16:45:55 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:55 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:55 -<==      Total: 1
2019-04-01 16:45:55 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:55 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:55 -<==      Total: 1
2019-04-01 16:45:55 -耗时 : 421
2019-04-01 16:45:55 -返回值 : com.bootdo.charts.vo.CountDayVo@5aa52931
2019-04-01 16:45:57 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 16:45:57 -HTTP METHOD : POST
2019-04-01 16:45:57 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 16:45:57 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@6ed8b55e, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@45987bcc, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@7488f74f, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@6ed8b55e, com.bootdo.moneyLog.vo.WaterLogVo@45987bcc, com.bootdo.moneyLog.vo.HeatLogVo@7488f74f, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@5863dc22]
2019-04-01 16:45:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:57 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:57 -<==      Total: 1
2019-04-01 16:45:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:57 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:57 -<==      Total: 1
2019-04-01 16:45:57 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:57 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:57 -<==      Total: 1
2019-04-01 16:45:57 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:57 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:57 -<==      Total: 1
2019-04-01 16:45:57 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:57 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:57 -<==      Total: 1
2019-04-01 16:45:57 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:57 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:57 -<==      Total: 1
2019-04-01 16:45:57 -耗时 : 40
2019-04-01 16:45:57 -返回值 : com.bootdo.charts.vo.CountDayVo@68f93ec1
2019-04-01 16:45:57 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 16:45:57 -HTTP METHOD : POST
2019-04-01 16:45:57 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 16:45:57 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@26e88346, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@1e534173, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@73637d8b, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@26e88346, com.bootdo.moneyLog.vo.WaterLogVo@1e534173, com.bootdo.moneyLog.vo.HeatLogVo@73637d8b, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@3300f481]
2019-04-01 16:45:57 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:57 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:57 -<==      Total: 1
2019-04-01 16:45:57 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:57 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:57 -<==      Total: 1
2019-04-01 16:45:57 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:57 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:57 -<==      Total: 1
2019-04-01 16:45:57 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:57 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:57 -<==      Total: 1
2019-04-01 16:45:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:58 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:58 -<==      Total: 1
2019-04-01 16:45:58 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:58 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:58 -<==      Total: 1
2019-04-01 16:45:58 -耗时 : 17
2019-04-01 16:45:58 -返回值 : com.bootdo.charts.vo.CountDayVo@5f83ebfd
2019-04-01 16:45:59 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 16:45:59 -HTTP METHOD : POST
2019-04-01 16:45:59 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 16:45:59 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@5dcdb6e0, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@40fd5a67, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@2da4764a, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@5dcdb6e0, com.bootdo.moneyLog.vo.WaterLogVo@40fd5a67, com.bootdo.moneyLog.vo.HeatLogVo@2da4764a, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@57640253]
2019-04-01 16:45:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:59 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:59 -<==      Total: 1
2019-04-01 16:45:59 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:59 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:59 -<==      Total: 1
2019-04-01 16:45:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:59 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:59 -<==      Total: 1
2019-04-01 16:45:59 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:59 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:59 -<==      Total: 1
2019-04-01 16:45:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:59 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:59 -<==      Total: 1
2019-04-01 16:45:59 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:45:59 -==> Parameters: A(String), 2(String)
2019-04-01 16:45:59 -<==      Total: 1
2019-04-01 16:45:59 -耗时 : 18
2019-04-01 16:45:59 -返回值 : com.bootdo.charts.vo.CountDayVo@3e58f778
2019-04-01 16:46:00 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 16:46:00 -HTTP METHOD : POST
2019-04-01 16:46:00 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 16:46:00 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@30f5f4bc, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@315ef8d2, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@7bd80111, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@30f5f4bc, com.bootdo.moneyLog.vo.WaterLogVo@315ef8d2, com.bootdo.moneyLog.vo.HeatLogVo@7bd80111, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@587dd6a4]
2019-04-01 16:46:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:00 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:00 -<==      Total: 1
2019-04-01 16:46:00 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:00 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:00 -<==      Total: 1
2019-04-01 16:46:00 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:00 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:00 -<==      Total: 1
2019-04-01 16:46:00 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:00 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:00 -<==      Total: 1
2019-04-01 16:46:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:00 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:00 -<==      Total: 1
2019-04-01 16:46:00 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:00 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:00 -<==      Total: 1
2019-04-01 16:46:00 -耗时 : 16
2019-04-01 16:46:00 -返回值 : com.bootdo.charts.vo.CountDayVo@3e97b0f1
2019-04-01 16:46:00 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 16:46:00 -HTTP METHOD : POST
2019-04-01 16:46:00 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 16:46:00 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@401df007, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@5c026465, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@183a5640, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@401df007, com.bootdo.moneyLog.vo.WaterLogVo@5c026465, com.bootdo.moneyLog.vo.HeatLogVo@183a5640, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@2b25a2b]
2019-04-01 16:46:00 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:00 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:00 -<==      Total: 1
2019-04-01 16:46:00 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:00 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:00 -<==      Total: 1
2019-04-01 16:46:00 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:00 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:00 -<==      Total: 1
2019-04-01 16:46:00 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:00 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:00 -<==      Total: 1
2019-04-01 16:46:00 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:00 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:00 -<==      Total: 1
2019-04-01 16:46:00 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:00 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:00 -<==      Total: 1
2019-04-01 16:46:00 -耗时 : 14
2019-04-01 16:46:00 -返回值 : com.bootdo.charts.vo.CountDayVo@4983ec93
2019-04-01 16:46:01 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-01 16:46:01 -HTTP METHOD : POST
2019-04-01 16:46:01 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-01 16:46:01 -参数 : [{elecLogVo=com.bootdo.moneyLog.vo.ElecLogVo@7b837aab, org.springframework.validation.BindingResult.elecLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@3b8e1215, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, heatLogVo=com.bootdo.moneyLog.vo.HeatLogVo@248b2baf, org.springframework.validation.BindingResult.heatLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.ElecLogVo@7b837aab, com.bootdo.moneyLog.vo.WaterLogVo@3b8e1215, com.bootdo.moneyLog.vo.HeatLogVo@248b2baf, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@2398d06f]
2019-04-01 16:46:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:01 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:01 -<==      Total: 1
2019-04-01 16:46:01 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:01 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:01 -<==      Total: 1
2019-04-01 16:46:01 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:01 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:01 -<==      Total: 1
2019-04-01 16:46:01 -==>  Preparing: SELECT SUM(WATER_MONEY) FROM WATER_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:01 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:01 -<==      Total: 1
2019-04-01 16:46:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:01 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:01 -<==      Total: 1
2019-04-01 16:46:01 -==>  Preparing: SELECT SUM(HEAT_MONEY) FROM HEAT_LOG WHERE user_type = ? and user_org = ? 
2019-04-01 16:46:01 -==> Parameters: A(String), 2(String)
2019-04-01 16:46:01 -<==      Total: 1
2019-04-01 16:46:01 -耗时 : 15
2019-04-01 16:46:01 -返回值 : com.bootdo.charts.vo.CountDayVo@79f8f3f
2019-04-01 17:13:12 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 402]
2019-04-01 17:43:12 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 835]
2019-04-01 17:44:58 -Validating all active sessions...
2019-04-01 17:44:58 -Finished session validation.  [1] sessions were stopped.
2019-04-01 18:10:07 -请求地址 : http://localhost:8081/login;JSESSIONID=dcc01f20-8233-4602-8291-82819f7c04f6
2019-04-01 18:10:07 -HTTP METHOD : GET
2019-04-01 18:10:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 18:10:07 -参数 : [{}]
2019-04-01 18:10:07 -耗时 : 69
2019-04-01 18:10:07 -返回值 : login
2019-04-01 18:10:12 -请求地址 : http://localhost:8081/login;JSESSIONID=dcc01f20-8233-4602-8291-82819f7c04f6
2019-04-01 18:10:12 -HTTP METHOD : GET
2019-04-01 18:10:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-01 18:10:12 -参数 : [{}]
2019-04-01 18:10:12 -耗时 : 1
2019-04-01 18:10:12 -返回值 : login
2019-04-01 18:10:14 -请求地址 : http://localhost:8081/getVerify
2019-04-01 18:10:14 -HTTP METHOD : GET
2019-04-01 18:10:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-01 18:10:14 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4baef32, org.apache.shiro.web.servlet.ShiroHttpServletResponse@e638fc9]
2019-04-01 18:10:16 -7177
2019-04-01 18:10:16 -耗时 : 1854
2019-04-01 18:10:16 -返回值 : null
2019-04-01 18:10:49 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-01 18:13:13 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1263]
